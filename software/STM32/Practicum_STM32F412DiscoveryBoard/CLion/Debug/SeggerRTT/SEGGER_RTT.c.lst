ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .arch armv7e-m
   3              	 .fpu fpv4-sp-d16
   4              	 .eabi_attribute 27,1
   5              	 .eabi_attribute 28,1
   6              	 .eabi_attribute 20,1
   7              	 .eabi_attribute 21,1
   8              	 .eabi_attribute 23,3
   9              	 .eabi_attribute 24,1
  10              	 .eabi_attribute 25,1
  11              	 .eabi_attribute 26,1
  12              	 .eabi_attribute 30,6
  13              	 .eabi_attribute 34,0
  14              	 .eabi_attribute 18,4
  15              	 .file "SEGGER_RTT.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .data._ZL12_aTerminalId,"aw"
  20              	 .align 2
  21              	 .type _ZL12_aTerminalId,%object
  22              	 .size _ZL12_aTerminalId,16
  23              	_ZL12_aTerminalId:
  24 0000 30313233 	 .ascii "0123456789ABCDEF"
  24      34353637 
  24      38394142 
  24      43444546 
  25              	 .global _SEGGER_RTT
  26              	 .section .bss._SEGGER_RTT,"aw",%nobits
  27              	 .align 2
  28              	 .type _SEGGER_RTT,%object
  29              	 .size _SEGGER_RTT,168
  30              	_SEGGER_RTT:
  31 0000 00000000 	 .space 168
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              	 .section .bss._ZL11_acUpBuffer,"aw",%nobits
  33              	 .align 2
  34              	 .type _ZL11_acUpBuffer,%object
  35              	 .size _ZL11_acUpBuffer,1024
  36              	_ZL11_acUpBuffer:
  37 0000 00000000 	 .space 1024
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              	 .section .bss._ZL13_acDownBuffer,"aw",%nobits
  39              	 .align 2
  40              	 .type _ZL13_acDownBuffer,%object
  41              	 .size _ZL13_acDownBuffer,16
  42              	_ZL13_acDownBuffer:
  43 0000 00000000 	 .space 16
  43      00000000 
  43      00000000 
  43      00000000 
ARM GAS   			page 2


  44              	 .section .bss._ZL15_ActiveTerminal,"aw",%nobits
  45              	 .type _ZL15_ActiveTerminal,%object
  46              	 .size _ZL15_ActiveTerminal,1
  47              	_ZL15_ActiveTerminal:
  48 0000 00       	 .space 1
  49              	 .section .rodata
  50              	 .align 2
  51              	.LC0:
  52 0000 5465726D 	 .ascii "Terminal\000"
  52      696E616C 
  52      00
  53 0009 000000   	 .align 2
  54              	.LC1:
  55 000c 52545400 	 .ascii "RTT\000"
  56              	 .align 2
  57              	.LC2:
  58 0010 53454747 	 .ascii "SEGGER\000"
  58      455200
  59              	 .section .text._ZL7_DoInitv,"ax",%progbits
  60              	 .align 1
  61              	 .syntax unified
  62              	 .thumb
  63              	 .thumb_func
  64              	 .type _ZL7_DoInitv,%function
  65              	_ZL7_DoInitv:
  66              	 .fnstart
  67              	.LFB7:
  68              	 .file 1 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\Segger\\Segger_RTT\\RTT\\SEGGER_RTT.c"
   1:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
   2:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
   5:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
   6:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *            (c) 1995 - 2018 SEGGER Microcontroller GmbH             *
   7:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
   8:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  10:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
  11:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  12:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  14:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
  15:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  16:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * All rights reserved.                                               *
  17:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  18:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  22:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * conditions are met:                                                *
  25:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  26:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  29:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * o Redistributions in binary form must reproduce the above          *
ARM GAS   			page 3


  30:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   copyright notice, this list of conditions and the following      *
  31:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   with the distribution.                                           *
  33:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  34:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * o Neither the name of SEGGER Microcontroller GmbH         *
  35:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   nor the names of its contributors may be used to endorse or      *
  36:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   promote products derived from this software without specific     *
  37:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *   prior written permission.                                        *
  38:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  39:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  41:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** * DAMAGE.                                                            *
  52:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  53:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
  54:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  55:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       RTT version: 6.34h                                           *
  56:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *                                                                    *
  57:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
  58:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  59:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** File    : SEGGER_RTT.c
  60:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  61:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           allows real-time communication on targets which support
  62:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  63:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** Revision: $Rev: 10887 $
  64:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  65:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** Additional information:
  66:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  67:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           H->T    Host to target communication
  68:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           T->H    Target to host communication
  69:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  70:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  71:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           Name is fixed to "Terminal"
  72:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  73:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  74:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  75:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  76:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  77:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  78:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  79:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  80:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  81:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  82:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  83:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** ----------------------------------------------------------------------
  84:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
  85:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  86:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #include "SEGGER_RTT.h"
ARM GAS   			page 4


  87:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  88:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  89:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  90:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
  91:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
  92:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Configuration, default values
  93:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
  94:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
  95:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
  96:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
  97:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
  98:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
  99:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #endif
 117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            0
 121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     0
 125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   STRLEN
 140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS   			page 5


 144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #ifdef  MEMCPY
 149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #else
 151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #endif
 153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   MIN
 156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef   MAX
 160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** //
 163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** //
 165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #ifndef NULL
 166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define NULL 0
 167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Defines, fixed
 172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
 174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #if (defined __GNUC__)
 181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****                                   Var
 186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #else
 189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #endif
 191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #if (defined __GNUC__)
 197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****                                         Var
ARM GAS   			page 6


 201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #else
 204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #endif
 206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Static const data
 239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
 241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Static data
 248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
 250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** //
 252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** //
 254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]));
 257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]))
ARM GAS   			page 7


 258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static char _ActiveTerminal;
 260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Static functions
 264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
 266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       _DoInit()
 271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Initializes the control block an buffers.
 274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #define INIT()  do {                                            \
 278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****                   if (_SEGGER_RTT.acID[0] == '\0') { _DoInit(); }  \
 279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****                 } while (0)
 280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static void _DoInit(void) {
  69              	 .loc 1 280 27
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 82B0     	 sub sp,sp,#8
  78              	 .cfi_def_cfa_offset 16
  79 0004 00AF     	 add r7,sp,#0
  80              	 .cfi_def_cfa_register 7
 281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_CB* p;
 282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Initialize control block
 284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p = &_SEGGER_RTT;
  81              	 .loc 1 285 5
  82 0006 224B     	 ldr r3,.L2
  83 0008 7B60     	 str r3,[r7,#4]
 286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
  84              	 .loc 1 286 25
  85 000a 7B68     	 ldr r3,[r7,#4]
  86 000c 0322     	 movs r2,#3
  87 000e 1A61     	 str r2,[r3,#16]
 287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
  88              	 .loc 1 287 25
  89 0010 7B68     	 ldr r3,[r7,#4]
  90 0012 0322     	 movs r2,#3
  91 0014 5A61     	 str r2,[r3,#20]
 288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Initialize up buffer 0
 290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
ARM GAS   			page 8


  92              	 .loc 1 291 27
  93 0016 7B68     	 ldr r3,[r7,#4]
  94 0018 1E4A     	 ldr r2,.L2+4
  95 001a 9A61     	 str r2,[r3,#24]
 292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
  96              	 .loc 1 292 27
  97 001c 7B68     	 ldr r3,[r7,#4]
  98 001e 1E4A     	 ldr r2,.L2+8
  99 0020 DA61     	 str r2,[r3,#28]
 293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
 100              	 .loc 1 293 27
 101 0022 7B68     	 ldr r3,[r7,#4]
 102 0024 4FF48062 	 mov r2,#1024
 103 0028 1A62     	 str r2,[r3,#32]
 294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 104              	 .loc 1 294 27
 105 002a 7B68     	 ldr r3,[r7,#4]
 106 002c 0022     	 movs r2,#0
 107 002e 9A62     	 str r2,[r3,#40]
 295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 108              	 .loc 1 295 27
 109 0030 7B68     	 ldr r3,[r7,#4]
 110 0032 0022     	 movs r2,#0
 111 0034 5A62     	 str r2,[r3,#36]
 296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 112              	 .loc 1 296 27
 113 0036 7B68     	 ldr r3,[r7,#4]
 114 0038 0022     	 movs r2,#0
 115 003a DA62     	 str r2,[r3,#44]
 297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Initialize down buffer 0
 299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 116              	 .loc 1 300 29
 117 003c 7B68     	 ldr r3,[r7,#4]
 118 003e 154A     	 ldr r2,.L2+4
 119 0040 1A66     	 str r2,[r3,#96]
 301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 120              	 .loc 1 301 29
 121 0042 7B68     	 ldr r3,[r7,#4]
 122 0044 154A     	 ldr r2,.L2+12
 123 0046 5A66     	 str r2,[r3,#100]
 302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
 124              	 .loc 1 302 29
 125 0048 7B68     	 ldr r3,[r7,#4]
 126 004a 1022     	 movs r2,#16
 127 004c 9A66     	 str r2,[r3,#104]
 303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 128              	 .loc 1 303 29
 129 004e 7B68     	 ldr r3,[r7,#4]
 130 0050 0022     	 movs r2,#0
 131 0052 1A67     	 str r2,[r3,#112]
 304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 132              	 .loc 1 304 29
 133 0054 7B68     	 ldr r3,[r7,#4]
 134 0056 0022     	 movs r2,#0
 135 0058 DA66     	 str r2,[r3,#108]
ARM GAS   			page 9


 305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 136              	 .loc 1 305 29
 137 005a 7B68     	 ldr r3,[r7,#4]
 138 005c 0022     	 movs r2,#0
 139 005e 5A67     	 str r2,[r3,#116]
 306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish initialization of the control block.
 308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Copy Id string in three steps to make sure "SEGGER RTT" is not found
 309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // in initializer memory (usually flash) by J-Link
 310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   strcpy(&p->acID[7], "RTT");
 140              	 .loc 1 311 9
 141 0060 7B68     	 ldr r3,[r7,#4]
 142 0062 0733     	 adds r3,r3,#7
 143 0064 0E4A     	 ldr r2,.L2+16
 144 0066 1846     	 mov r0,r3
 145 0068 1146     	 mov r1,r2
 146 006a 0423     	 movs r3,#4
 147 006c 1A46     	 mov r2,r3
 148 006e FFF7FEFF 	 bl memcpy
 312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   strcpy(&p->acID[0], "SEGGER");
 149              	 .loc 1 312 9
 150 0072 7B68     	 ldr r3,[r7,#4]
 151 0074 0B4A     	 ldr r2,.L2+20
 152 0076 1846     	 mov r0,r3
 153 0078 1146     	 mov r1,r2
 154 007a 0723     	 movs r3,#7
 155 007c 1A46     	 mov r2,r3
 156 007e FFF7FEFF 	 bl memcpy
 313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   p->acID[6] = ' ';
 157              	 .loc 1 313 14
 158 0082 7B68     	 ldr r3,[r7,#4]
 159 0084 2022     	 movs r2,#32
 160 0086 9A71     	 strb r2,[r3,#6]
 314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 161              	 .loc 1 314 1
 162 0088 00BF     	 nop
 163 008a 0837     	 adds r7,r7,#8
 164              	 .cfi_def_cfa_offset 8
 165 008c BD46     	 mov sp,r7
 166              	 .cfi_def_cfa_register 13
 167              	 
 168 008e 80BD     	 pop {r7,pc}
 169              	.L3:
 170              	 .align 2
 171              	.L2:
 172 0090 00000000 	 .word _SEGGER_RTT
 173 0094 00000000 	 .word .LC0
 174 0098 00000000 	 .word _ZL11_acUpBuffer
 175 009c 00000000 	 .word _ZL13_acDownBuffer
 176 00a0 0C000000 	 .word .LC1
 177 00a4 10000000 	 .word .LC2
 178              	 .cfi_endproc
 179              	.LFE7:
 180              	 .cantunwind
 181              	 .fnend
 182              	 .size _ZL7_DoInitv,.-_ZL7_DoInitv
ARM GAS   			page 10


 183              	 .section .text._ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj,"ax",%progbits
 184              	 .align 1
 185              	 .syntax unified
 186              	 .thumb
 187              	 .thumb_func
 188              	 .type _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj,%function
 189              	_ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj:
 190              	 .fnstart
 191              	.LFB8:
 315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       _WriteBlocking()
 319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    read by the host.
 324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 192              	 .loc 1 335 101
 193              	 .cfi_startproc
 194              	 
 195              	 
 196              	 
 197 0000 80B4     	 push {r7}
 198              	 .cfi_def_cfa_offset 4
 199              	 .cfi_offset 7,-4
 200 0002 8BB0     	 sub sp,sp,#44
 201              	 .cfi_def_cfa_offset 48
 202 0004 00AF     	 add r7,sp,#0
 203              	 .cfi_def_cfa_register 7
 204 0006 F860     	 str r0,[r7,#12]
 205 0008 B960     	 str r1,[r7,#8]
 206 000a 7A60     	 str r2,[r7,#4]
 336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned NumBytesWritten;
 338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned RdOff;
 339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned WrOff;
 340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   char*    pDst;
 342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   NumBytesWritten = 0u;
 207              	 .loc 1 346 19
ARM GAS   			page 11


 208 000c 0023     	 movs r3,#0
 209 000e 3B62     	 str r3,[r7,#32]
 347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 210              	 .loc 1 347 9
 211 0010 FB68     	 ldr r3,[r7,#12]
 212 0012 DB68     	 ldr r3,[r3,#12]
 213 0014 FB61     	 str r3,[r7,#28]
 214              	.L13:
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 215              	 .loc 1 349 11
 216 0016 FB68     	 ldr r3,[r7,#12]
 217 0018 1B69     	 ldr r3,[r3,#16]
 218 001a 7B61     	 str r3,[r7,#20]
 350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (RdOff > WrOff) {
 219              	 .loc 1 350 5
 220 001c 7A69     	 ldr r2,[r7,#20]
 221 001e FB69     	 ldr r3,[r7,#28]
 222 0020 9A42     	 cmp r2,r3
 223 0022 05D9     	 bls .L5
 351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 224              	 .loc 1 351 31
 225 0024 7A69     	 ldr r2,[r7,#20]
 226 0026 FB69     	 ldr r3,[r7,#28]
 227 0028 D31A     	 subs r3,r2,r3
 228              	 .loc 1 351 23
 229 002a 013B     	 subs r3,r3,#1
 230 002c 7B62     	 str r3,[r7,#36]
 231 002e 07E0     	 b .L6
 232              	.L5:
 352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     } else {
 353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 233              	 .loc 1 353 32
 234 0030 FB68     	 ldr r3,[r7,#12]
 235 0032 9A68     	 ldr r2,[r3,#8]
 236              	 .loc 1 353 62
 237 0034 7969     	 ldr r1,[r7,#20]
 238 0036 FB69     	 ldr r3,[r7,#28]
 239 0038 CB1A     	 subs r3,r1,r3
 240              	 .loc 1 353 45
 241 003a 1344     	 add r3,r3,r2
 242              	 .loc 1 353 23
 243 003c 013B     	 subs r3,r3,#1
 244 003e 7B62     	 str r3,[r7,#36]
 245              	.L6:
 354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 246              	 .loc 1 355 23
 247 0040 FB68     	 ldr r3,[r7,#12]
 248 0042 9A68     	 ldr r2,[r3,#8]
 249 0044 FB69     	 ldr r3,[r7,#28]
 250 0046 D31A     	 subs r3,r2,r3
 251              	 .loc 1 355 21
 252 0048 7A6A     	 ldr r2,[r7,#36]
 253 004a 9342     	 cmp r3,r2
 254 004c 28BF     	 it cs
 255 004e 1346     	 movcs r3,r2
ARM GAS   			page 12


 256 0050 7B62     	 str r3,[r7,#36]
 356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 257              	 .loc 1 356 23
 258 0052 7A6A     	 ldr r2,[r7,#36]
 259 0054 7B68     	 ldr r3,[r7,#4]
 260 0056 9A42     	 cmp r2,r3
 261 0058 01D2     	 bcs .L7
 262              	 .loc 1 356 23 is_stmt 0 discriminator 1
 263 005a 7B6A     	 ldr r3,[r7,#36]
 264 005c 00E0     	 b .L8
 265              	.L7:
 266              	 .loc 1 356 23 discriminator 2
 267 005e 7B68     	 ldr r3,[r7,#4]
 268              	.L8:
 269              	 .loc 1 356 21 is_stmt 1 discriminator 4
 270 0060 7B62     	 str r3,[r7,#36]
 357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 271              	 .loc 1 358 19 discriminator 4
 272 0062 FB68     	 ldr r3,[r7,#12]
 273 0064 5A68     	 ldr r2,[r3,#4]
 274              	 .loc 1 358 10 discriminator 4
 275 0066 FB69     	 ldr r3,[r7,#28]
 276 0068 1344     	 add r3,r3,r2
 277 006a BB61     	 str r3,[r7,#24]
 359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 278              	 .loc 1 359 21 discriminator 4
 279 006c 3A6A     	 ldr r2,[r7,#32]
 280 006e 7B6A     	 ldr r3,[r7,#36]
 281 0070 1344     	 add r3,r3,r2
 282 0072 3B62     	 str r3,[r7,#32]
 360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 283              	 .loc 1 360 21 discriminator 4
 284 0074 7A68     	 ldr r2,[r7,#4]
 285 0076 7B6A     	 ldr r3,[r7,#36]
 286 0078 D31A     	 subs r3,r2,r3
 287 007a 7B60     	 str r3,[r7,#4]
 361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 288              	 .loc 1 361 21 discriminator 4
 289 007c FA69     	 ldr r2,[r7,#28]
 290 007e 7B6A     	 ldr r3,[r7,#36]
 291 0080 1344     	 add r3,r3,r2
 292 0082 FB61     	 str r3,[r7,#28]
 293              	.L10:
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 294              	 .loc 1 362 27
 295 0084 7B6A     	 ldr r3,[r7,#36]
 296 0086 5A1E     	 subs r2,r3,#1
 297 0088 7A62     	 str r2,[r7,#36]
 298 008a 002B     	 cmp r3,#0
 299 008c 14BF     	 ite ne
 300 008e 0123     	 movne r3,#1
 301 0090 0023     	 moveq r3,#0
 302 0092 DBB2     	 uxtb r3,r3
 303 0094 002B     	 cmp r3,#0
 304 0096 08D0     	 beq .L9
 363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
ARM GAS   			page 13


 305              	 .loc 1 363 25
 306 0098 BA68     	 ldr r2,[r7,#8]
 307 009a 531C     	 adds r3,r2,#1
 308 009c BB60     	 str r3,[r7,#8]
 309              	 .loc 1 363 12
 310 009e BB69     	 ldr r3,[r7,#24]
 311 00a0 591C     	 adds r1,r3,#1
 312 00a2 B961     	 str r1,[r7,#24]
 313              	 .loc 1 363 17
 314 00a4 1278     	 ldrb r2,[r2]
 315              	 .loc 1 363 15
 316 00a6 1A70     	 strb r2,[r3]
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 317              	 .loc 1 362 5
 318 00a8 ECE7     	 b .L10
 319              	.L9:
 364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pBuffer, NumBytesToWrite);
 367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 320              	 .loc 1 372 25
 321 00aa FB68     	 ldr r3,[r7,#12]
 322 00ac 9B68     	 ldr r3,[r3,#8]
 323              	 .loc 1 372 5
 324 00ae FA69     	 ldr r2,[r7,#28]
 325 00b0 9A42     	 cmp r2,r3
 326 00b2 01D1     	 bne .L11
 373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       WrOff = 0u;
 327              	 .loc 1 373 13
 328 00b4 0023     	 movs r3,#0
 329 00b6 FB61     	 str r3,[r7,#28]
 330              	.L11:
 374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 331              	 .loc 1 375 18
 332 00b8 FB68     	 ldr r3,[r7,#12]
 333 00ba FA69     	 ldr r2,[r7,#28]
 334 00bc DA60     	 str r2,[r3,#12]
 376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } while (NumBytes);
 335              	 .loc 1 376 12
 336 00be 7B68     	 ldr r3,[r7,#4]
 337 00c0 002B     	 cmp r3,#0
 338 00c2 00D0     	 beq .L12
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 339              	 .loc 1 348 3
 340 00c4 A7E7     	 b .L13
 341              	.L12:
 377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return NumBytesWritten;
 342              	 .loc 1 378 10
 343 00c6 3B6A     	 ldr r3,[r7,#32]
 379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
ARM GAS   			page 14


 344              	 .loc 1 379 1
 345 00c8 1846     	 mov r0,r3
 346 00ca 2C37     	 adds r7,r7,#44
 347              	 .cfi_def_cfa_offset 4
 348 00cc BD46     	 mov sp,r7
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 00ce 5DF8047B 	 ldr r7,[sp],#4
 352              	 .cfi_restore 7
 353              	 .cfi_def_cfa_offset 0
 354 00d2 7047     	 bx lr
 355              	 .cfi_endproc
 356              	.LFE8:
 357              	 .cantunwind
 358              	 .fnend
 359              	 .size _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj,.-_ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 360              	 .section .text._ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj,"ax",%progbits
 361              	 .align 1
 362              	 .syntax unified
 363              	 .thumb
 364              	 .thumb_func
 365              	 .type _ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj,%function
 366              	_ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj:
 367              	 .fnstart
 368              	.LFB9:
 380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       _WriteNoCheck()
 384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    read by the host.
 389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 369              	 .loc 1 399 94
 370              	 .cfi_startproc
 371              	 
 372              	 
 373              	 
 374 0000 80B4     	 push {r7}
 375              	 .cfi_def_cfa_offset 4
 376              	 .cfi_offset 7,-4
 377 0002 89B0     	 sub sp,sp,#36
 378              	 .cfi_def_cfa_offset 40
 379 0004 00AF     	 add r7,sp,#0
 380              	 .cfi_def_cfa_register 7
ARM GAS   			page 15


 381 0006 F860     	 str r0,[r7,#12]
 382 0008 B960     	 str r1,[r7,#8]
 383 000a 7A60     	 str r2,[r7,#4]
 400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned WrOff;
 402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned Rem;
 403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   char*    pDst;
 405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 384              	 .loc 1 407 9
 385 000c FB68     	 ldr r3,[r7,#12]
 386 000e DB68     	 ldr r3,[r3,#12]
 387 0010 7B61     	 str r3,[r7,#20]
 408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 388              	 .loc 1 408 16
 389 0012 FB68     	 ldr r3,[r7,#12]
 390 0014 9A68     	 ldr r2,[r3,#8]
 391              	 .loc 1 408 7
 392 0016 7B69     	 ldr r3,[r7,#20]
 393 0018 D31A     	 subs r3,r2,r3
 394 001a 3B61     	 str r3,[r7,#16]
 409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (Rem > NumBytes) {
 395              	 .loc 1 409 3
 396 001c 3A69     	 ldr r2,[r7,#16]
 397 001e 7B68     	 ldr r3,[r7,#4]
 398 0020 9A42     	 cmp r2,r3
 399 0022 1FD9     	 bls .L16
 410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // All data fits before wrap around
 412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 400              	 .loc 1 414 19
 401 0024 FB68     	 ldr r3,[r7,#12]
 402 0026 5A68     	 ldr r2,[r3,#4]
 403              	 .loc 1 414 10
 404 0028 7B69     	 ldr r3,[r7,#20]
 405 002a 1344     	 add r3,r3,r2
 406 002c BB61     	 str r3,[r7,#24]
 415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff += NumBytes;
 407              	 .loc 1 415 11
 408 002e 7A69     	 ldr r2,[r7,#20]
 409 0030 7B68     	 ldr r3,[r7,#4]
 410 0032 1344     	 add r3,r3,r2
 411 0034 7B61     	 str r3,[r7,#20]
 412              	.L18:
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytes--) {
 413              	 .loc 1 416 20
 414 0036 7B68     	 ldr r3,[r7,#4]
 415 0038 5A1E     	 subs r2,r3,#1
 416 003a 7A60     	 str r2,[r7,#4]
 417 003c 002B     	 cmp r3,#0
 418 003e 14BF     	 ite ne
 419 0040 0123     	 movne r3,#1
 420 0042 0023     	 moveq r3,#0
ARM GAS   			page 16


 421 0044 DBB2     	 uxtb r3,r3
 422 0046 002B     	 cmp r3,#0
 423 0048 08D0     	 beq .L17
 417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 424              	 .loc 1 417 23
 425 004a BA68     	 ldr r2,[r7,#8]
 426 004c 531C     	 adds r3,r2,#1
 427 004e BB60     	 str r3,[r7,#8]
 428              	 .loc 1 417 12
 429 0050 BB69     	 ldr r3,[r7,#24]
 430 0052 591C     	 adds r1,r3,#1
 431 0054 B961     	 str r1,[r7,#24]
 432              	 .loc 1 417 17
 433 0056 1278     	 ldrb r2,[r2]
 434              	 .loc 1 417 15
 435 0058 1A70     	 strb r2,[r3]
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytes--) {
 436              	 .loc 1 416 5
 437 005a ECE7     	 b .L18
 438              	.L17:
 418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 439              	 .loc 1 419 18
 440 005c FB68     	 ldr r3,[r7,#12]
 441 005e 7A69     	 ldr r2,[r7,#20]
 442 0060 DA60     	 str r2,[r3,#12]
 420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
 422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
 425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pDst = pRing->pBuffer + WrOff;
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pDst = pRing->pBuffer;
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
 443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
 445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 443              	 .loc 1 448 1
 444 0062 38E0     	 b .L24
ARM GAS   			page 17


 445              	.L16:
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 446              	 .loc 1 429 19
 447 0064 FB68     	 ldr r3,[r7,#12]
 448 0066 5A68     	 ldr r2,[r3,#4]
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 449              	 .loc 1 429 10
 450 0068 7B69     	 ldr r3,[r7,#20]
 451 006a 1344     	 add r3,r3,r2
 452 006c BB61     	 str r3,[r7,#24]
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 453              	 .loc 1 430 20
 454 006e 3B69     	 ldr r3,[r7,#16]
 455 0070 FB61     	 str r3,[r7,#28]
 456              	.L21:
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 457              	 .loc 1 431 26
 458 0072 FB69     	 ldr r3,[r7,#28]
 459 0074 5A1E     	 subs r2,r3,#1
 460 0076 FA61     	 str r2,[r7,#28]
 461 0078 002B     	 cmp r3,#0
 462 007a 14BF     	 ite ne
 463 007c 0123     	 movne r3,#1
 464 007e 0023     	 moveq r3,#0
 465 0080 DBB2     	 uxtb r3,r3
 466 0082 002B     	 cmp r3,#0
 467 0084 08D0     	 beq .L20
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 468              	 .loc 1 432 23
 469 0086 BA68     	 ldr r2,[r7,#8]
 470 0088 531C     	 adds r3,r2,#1
 471 008a BB60     	 str r3,[r7,#8]
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 472              	 .loc 1 432 12
 473 008c BB69     	 ldr r3,[r7,#24]
 474 008e 591C     	 adds r1,r3,#1
 475 0090 B961     	 str r1,[r7,#24]
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 476              	 .loc 1 432 17
 477 0092 1278     	 ldrb r2,[r2]
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 478              	 .loc 1 432 15
 479 0094 1A70     	 strb r2,[r3]
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 480              	 .loc 1 431 5
 481 0096 ECE7     	 b .L21
 482              	.L20:
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 483              	 .loc 1 434 10
 484 0098 FB68     	 ldr r3,[r7,#12]
 485 009a 5B68     	 ldr r3,[r3,#4]
 486 009c BB61     	 str r3,[r7,#24]
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 487              	 .loc 1 435 20
 488 009e 7A68     	 ldr r2,[r7,#4]
 489 00a0 3B69     	 ldr r3,[r7,#16]
 490 00a2 D31A     	 subs r3,r2,r3
ARM GAS   			page 18


 491 00a4 FB61     	 str r3,[r7,#28]
 492              	.L23:
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 493              	 .loc 1 436 26
 494 00a6 FB69     	 ldr r3,[r7,#28]
 495 00a8 5A1E     	 subs r2,r3,#1
 496 00aa FA61     	 str r2,[r7,#28]
 497 00ac 002B     	 cmp r3,#0
 498 00ae 14BF     	 ite ne
 499 00b0 0123     	 movne r3,#1
 500 00b2 0023     	 moveq r3,#0
 501 00b4 DBB2     	 uxtb r3,r3
 502 00b6 002B     	 cmp r3,#0
 503 00b8 08D0     	 beq .L22
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 504              	 .loc 1 437 23
 505 00ba BA68     	 ldr r2,[r7,#8]
 506 00bc 531C     	 adds r3,r2,#1
 507 00be BB60     	 str r3,[r7,#8]
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 508              	 .loc 1 437 12
 509 00c0 BB69     	 ldr r3,[r7,#24]
 510 00c2 591C     	 adds r1,r3,#1
 511 00c4 B961     	 str r1,[r7,#24]
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 512              	 .loc 1 437 17
 513 00c6 1278     	 ldrb r2,[r2]
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 514              	 .loc 1 437 15
 515 00c8 1A70     	 strb r2,[r3]
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pDst++ = *pData++;
 516              	 .loc 1 436 5
 517 00ca ECE7     	 b .L23
 518              	.L22:
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 519              	 .loc 1 439 29
 520 00cc 7A68     	 ldr r2,[r7,#4]
 521 00ce 3B69     	 ldr r3,[r7,#16]
 522 00d0 D21A     	 subs r2,r2,r3
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 523              	 .loc 1 439 18
 524 00d2 FB68     	 ldr r3,[r7,#12]
 525 00d4 DA60     	 str r2,[r3,#12]
 526              	.L24:
 527              	 .loc 1 448 1
 528 00d6 00BF     	 nop
 529 00d8 2437     	 adds r7,r7,#36
 530              	 .cfi_def_cfa_offset 4
 531 00da BD46     	 mov sp,r7
 532              	 .cfi_def_cfa_register 13
 533              	 
 534 00dc 5DF8047B 	 ldr r7,[sp],#4
 535              	 .cfi_restore 7
 536              	 .cfi_def_cfa_offset 0
 537 00e0 7047     	 bx lr
 538              	 .cfi_endproc
 539              	.LFE9:
ARM GAS   			page 19


 540              	 .cantunwind
 541              	 .fnend
 542              	 .size _ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj,.-_ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj
 543              	 .section .text._ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh,"ax",%progbits
 544              	 .align 1
 545              	 .syntax unified
 546              	 .thumb
 547              	 .thumb_func
 548              	 .type _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh,%function
 549              	_ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh:
 550              	 .fnstart
 551              	.LFB10:
 449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       _PostTerminalSwitch()
 453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 552              	 .loc 1 463 88
 553              	 .cfi_startproc
 554              	 
 555              	 
 556 0000 80B5     	 push {r7,lr}
 557              	 .cfi_def_cfa_offset 8
 558              	 .cfi_offset 7,-8
 559              	 .cfi_offset 14,-4
 560 0002 84B0     	 sub sp,sp,#16
 561              	 .cfi_def_cfa_offset 24
 562 0004 00AF     	 add r7,sp,#0
 563              	 .cfi_def_cfa_register 7
 564 0006 7860     	 str r0,[r7,#4]
 565 0008 0B46     	 mov r3,r1
 566 000a FB70     	 strb r3,[r7,#3]
 464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned char ac[2];
 465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   ac[0] = 0xFFu;
 567              	 .loc 1 466 9
 568 000c FF23     	 movs r3,#255
 569 000e 3B73     	 strb r3,[r7,#12]
 467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 570              	 .loc 1 467 24
 571 0010 FB78     	 ldrb r3,[r7,#3]
 572              	 .loc 1 467 34
 573 0012 074A     	 ldr r2,.L26
 574 0014 D35C     	 ldrb r3,[r2,r3]
 575              	 .loc 1 467 9
 576 0016 7B73     	 strb r3,[r7,#13]
 468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
ARM GAS   			page 20


 577              	 .loc 1 468 17
 578 0018 07F10C03 	 add r3,r7,#12
 579 001c 0222     	 movs r2,#2
 580 001e 1946     	 mov r1,r3
 581 0020 7868     	 ldr r0,[r7,#4]
 582 0022 FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 583              	 .loc 1 469 1
 584 0026 00BF     	 nop
 585 0028 1037     	 adds r7,r7,#16
 586              	 .cfi_def_cfa_offset 8
 587 002a BD46     	 mov sp,r7
 588              	 .cfi_def_cfa_register 13
 589              	 
 590 002c 80BD     	 pop {r7,pc}
 591              	.L27:
 592 002e 00BF     	 .align 2
 593              	.L26:
 594 0030 00000000 	 .word _ZL12_aTerminalId
 595              	 .cfi_endproc
 596              	.LFE10:
 597              	 .cantunwind
 598              	 .fnend
 599              	 .size _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh,.-_ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
 600              	 .section .text._ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP,"ax",%progbits
 601              	 .align 1
 602              	 .syntax unified
 603              	 .thumb
 604              	 .thumb_func
 605              	 .type _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP,%function
 606              	_ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP:
 607              	 .fnstart
 608              	.LFB11:
 470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    buffer without blocking.
 478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 609              	 .loc 1 485 66
 610              	 .cfi_startproc
 611              	 
 612              	 
 613              	 
 614 0000 80B4     	 push {r7}
 615              	 .cfi_def_cfa_offset 4
 616              	 .cfi_offset 7,-4
ARM GAS   			page 21


 617 0002 87B0     	 sub sp,sp,#28
 618              	 .cfi_def_cfa_offset 32
 619 0004 00AF     	 add r7,sp,#0
 620              	 .cfi_def_cfa_register 7
 621 0006 7860     	 str r0,[r7,#4]
 486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned RdOff;
 487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned WrOff;
 488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned r;
 489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 622              	 .loc 1 493 9
 623 0008 7B68     	 ldr r3,[r7,#4]
 624 000a 1B69     	 ldr r3,[r3,#16]
 625 000c 3B61     	 str r3,[r7,#16]
 494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 626              	 .loc 1 494 9
 627 000e 7B68     	 ldr r3,[r7,#4]
 628 0010 DB68     	 ldr r3,[r3,#12]
 629 0012 FB60     	 str r3,[r7,#12]
 495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 630              	 .loc 1 495 3
 631 0014 3A69     	 ldr r2,[r7,#16]
 632 0016 FB68     	 ldr r3,[r7,#12]
 633 0018 9A42     	 cmp r2,r3
 634 001a 08D8     	 bhi .L29
 496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 635              	 .loc 1 496 16
 636 001c 7B68     	 ldr r3,[r7,#4]
 637 001e 9A68     	 ldr r2,[r3,#8]
 638              	 .loc 1 496 34
 639 0020 FB68     	 ldr r3,[r7,#12]
 640 0022 D21A     	 subs r2,r2,r3
 641              	 .loc 1 496 42
 642 0024 3B69     	 ldr r3,[r7,#16]
 643 0026 1344     	 add r3,r3,r2
 644              	 .loc 1 496 7
 645 0028 013B     	 subs r3,r3,#1
 646 002a 7B61     	 str r3,[r7,#20]
 647 002c 04E0     	 b .L30
 648              	.L29:
 497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
 498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 649              	 .loc 1 498 15
 650 002e 3A69     	 ldr r2,[r7,#16]
 651 0030 FB68     	 ldr r3,[r7,#12]
 652 0032 D31A     	 subs r3,r2,r3
 653              	 .loc 1 498 7
 654 0034 013B     	 subs r3,r3,#1
 655 0036 7B61     	 str r3,[r7,#20]
 656              	.L30:
 499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 657              	 .loc 1 500 10
 658 0038 7B69     	 ldr r3,[r7,#20]
ARM GAS   			page 22


 501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 659              	 .loc 1 501 1
 660 003a 1846     	 mov r0,r3
 661 003c 1C37     	 adds r7,r7,#28
 662              	 .cfi_def_cfa_offset 4
 663 003e BD46     	 mov sp,r7
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 0040 5DF8047B 	 ldr r7,[sp],#4
 667              	 .cfi_restore 7
 668              	 .cfi_def_cfa_offset 0
 669 0044 7047     	 bx lr
 670              	 .cfi_endproc
 671              	.LFE11:
 672              	 .cantunwind
 673              	 .fnend
 674              	 .size _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP,.-_ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP
 675              	 .section .text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 676              	 .align 1
 677              	 .global SEGGER_RTT_ReadNoLock
 678              	 .syntax unified
 679              	 .thumb
 680              	 .thumb_func
 681              	 .type SEGGER_RTT_ReadNoLock,%function
 682              	SEGGER_RTT_ReadNoLock:
 683              	 .fnstart
 684              	.LFB12:
 502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       Public code
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** **********************************************************************
 508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    which have been previously stored by the host.
 516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes that have been read.
 525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 685              	 .loc 1 526 88
 686              	 .cfi_startproc
 687              	 
 688              	 
 689 0000 80B5     	 push {r7,lr}
ARM GAS   			page 23


 690              	 .cfi_def_cfa_offset 8
 691              	 .cfi_offset 7,-8
 692              	 .cfi_offset 14,-4
 693 0002 8CB0     	 sub sp,sp,#48
 694              	 .cfi_def_cfa_offset 56
 695 0004 00AF     	 add r7,sp,#0
 696              	 .cfi_def_cfa_register 7
 697 0006 F860     	 str r0,[r7,#12]
 698 0008 B960     	 str r1,[r7,#8]
 699 000a 7A60     	 str r2,[r7,#4]
 527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                NumBytesRem;
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                NumBytesRead;
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                RdOff;
 530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                WrOff;
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned char*          pBuffer;
 532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   const char*             pSrc;
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 700              	 .loc 1 537 3
 701 000c 494B     	 ldr r3,.L45
 702 000e 1B78     	 ldrb r3,[r3]
 703 0010 002B     	 cmp r3,#0
 704 0012 01D1     	 bne .L33
 705              	 .loc 1 537 3 is_stmt 0 discriminator 1
 706 0014 FFF7FEFF 	 bl _ZL7_DoInitv
 707              	.L33:
 538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 708              	 .loc 1 538 9 is_stmt 1
 709 0018 FA68     	 ldr r2,[r7,#12]
 710 001a 1346     	 mov r3,r2
 711 001c 5B00     	 lsls r3,r3,#1
 712 001e 1344     	 add r3,r3,r2
 713 0020 DB00     	 lsls r3,r3,#3
 714 0022 6033     	 adds r3,r3,#96
 715 0024 434A     	 ldr r2,.L45
 716 0026 1344     	 add r3,r3,r2
 717 0028 BB61     	 str r3,[r7,#24]
 539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 718              	 .loc 1 539 11
 719 002a BB68     	 ldr r3,[r7,#8]
 720 002c 3B62     	 str r3,[r7,#32]
 540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 721              	 .loc 1 540 9
 722 002e BB69     	 ldr r3,[r7,#24]
 723 0030 1B69     	 ldr r3,[r3,#16]
 724 0032 7B62     	 str r3,[r7,#36]
 541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 725              	 .loc 1 541 9
 726 0034 BB69     	 ldr r3,[r7,#24]
 727 0036 DB68     	 ldr r3,[r3,#12]
 728 0038 7B61     	 str r3,[r7,#20]
 542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   NumBytesRead = 0u;
 729              	 .loc 1 542 16
 730 003a 0023     	 movs r3,#0
ARM GAS   			page 24


 731 003c BB62     	 str r3,[r7,#40]
 543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (RdOff > WrOff) {
 732              	 .loc 1 546 3
 733 003e 7A6A     	 ldr r2,[r7,#36]
 734 0040 7B69     	 ldr r3,[r7,#20]
 735 0042 9A42     	 cmp r2,r3
 736 0044 37D9     	 bls .L34
 547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 737              	 .loc 1 547 26
 738 0046 BB69     	 ldr r3,[r7,#24]
 739 0048 9A68     	 ldr r2,[r3,#8]
 740              	 .loc 1 547 17
 741 004a 7B6A     	 ldr r3,[r7,#36]
 742 004c D31A     	 subs r3,r2,r3
 743 004e FB62     	 str r3,[r7,#44]
 548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 744              	 .loc 1 548 19
 745 0050 FA6A     	 ldr r2,[r7,#44]
 746 0052 7B68     	 ldr r3,[r7,#4]
 747 0054 9A42     	 cmp r2,r3
 748 0056 01D2     	 bcs .L35
 749              	 .loc 1 548 19 is_stmt 0 discriminator 1
 750 0058 FB6A     	 ldr r3,[r7,#44]
 751 005a 00E0     	 b .L36
 752              	.L35:
 753              	 .loc 1 548 19 discriminator 2
 754 005c 7B68     	 ldr r3,[r7,#4]
 755              	.L36:
 756              	 .loc 1 548 17 is_stmt 1 discriminator 4
 757 005e FB62     	 str r3,[r7,#44]
 549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pSrc = pRing->pBuffer + RdOff;
 758              	 .loc 1 550 19 discriminator 4
 759 0060 BB69     	 ldr r3,[r7,#24]
 760 0062 5A68     	 ldr r2,[r3,#4]
 761              	 .loc 1 550 10 discriminator 4
 762 0064 7B6A     	 ldr r3,[r7,#36]
 763 0066 1344     	 add r3,r3,r2
 764 0068 FB61     	 str r3,[r7,#28]
 551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 765              	 .loc 1 551 18 discriminator 4
 766 006a BA6A     	 ldr r2,[r7,#40]
 767 006c FB6A     	 ldr r3,[r7,#44]
 768 006e 1344     	 add r3,r3,r2
 769 0070 BB62     	 str r3,[r7,#40]
 552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 770              	 .loc 1 552 18 discriminator 4
 771 0072 7A68     	 ldr r2,[r7,#4]
 772 0074 FB6A     	 ldr r3,[r7,#44]
 773 0076 D31A     	 subs r3,r2,r3
 774 0078 7B60     	 str r3,[r7,#4]
 553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 775              	 .loc 1 553 18 discriminator 4
 776 007a 7A6A     	 ldr r2,[r7,#36]
ARM GAS   			page 25


 777 007c FB6A     	 ldr r3,[r7,#44]
 778 007e 1344     	 add r3,r3,r2
 779 0080 7B62     	 str r3,[r7,#36]
 780              	.L38:
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesRem--) {
 781              	 .loc 1 554 23
 782 0082 FB6A     	 ldr r3,[r7,#44]
 783 0084 5A1E     	 subs r2,r3,#1
 784 0086 FA62     	 str r2,[r7,#44]
 785 0088 002B     	 cmp r3,#0
 786 008a 14BF     	 ite ne
 787 008c 0123     	 movne r3,#1
 788 008e 0023     	 moveq r3,#0
 789 0090 DBB2     	 uxtb r3,r3
 790 0092 002B     	 cmp r3,#0
 791 0094 08D0     	 beq .L37
 555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 792              	 .loc 1 555 25
 793 0096 FA69     	 ldr r2,[r7,#28]
 794 0098 531C     	 adds r3,r2,#1
 795 009a FB61     	 str r3,[r7,#28]
 796              	 .loc 1 555 15
 797 009c 3B6A     	 ldr r3,[r7,#32]
 798 009e 591C     	 adds r1,r3,#1
 799 00a0 3962     	 str r1,[r7,#32]
 800              	 .loc 1 555 20
 801 00a2 1278     	 ldrb r2,[r2]
 802              	 .loc 1 555 18
 803 00a4 1A70     	 strb r2,[r3]
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesRem--) {
 804              	 .loc 1 554 5
 805 00a6 ECE7     	 b .L38
 806              	.L37:
 556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Handle wrap-around of buffer
 566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 807              	 .loc 1 567 25
 808 00a8 BB69     	 ldr r3,[r7,#24]
 809 00aa 9B68     	 ldr r3,[r3,#8]
 810              	 .loc 1 567 5
 811 00ac 7A6A     	 ldr r2,[r7,#36]
 812 00ae 9A42     	 cmp r2,r3
 813 00b0 01D1     	 bne .L34
 568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       RdOff = 0u;
 814              	 .loc 1 568 13
 815 00b2 0023     	 movs r3,#0
 816 00b4 7B62     	 str r3,[r7,#36]
 817              	.L34:
ARM GAS   			page 26


 569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Read remaining items of buffer
 573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 818              	 .loc 1 574 15
 819 00b6 7A69     	 ldr r2,[r7,#20]
 820 00b8 7B6A     	 ldr r3,[r7,#36]
 821 00ba D31A     	 subs r3,r2,r3
 822 00bc FB62     	 str r3,[r7,#44]
 575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 823              	 .loc 1 575 17
 824 00be FA6A     	 ldr r2,[r7,#44]
 825 00c0 7B68     	 ldr r3,[r7,#4]
 826 00c2 9A42     	 cmp r2,r3
 827 00c4 01D2     	 bcs .L39
 828              	 .loc 1 575 17 is_stmt 0 discriminator 1
 829 00c6 FB6A     	 ldr r3,[r7,#44]
 830 00c8 00E0     	 b .L40
 831              	.L39:
 832              	 .loc 1 575 17 discriminator 2
 833 00ca 7B68     	 ldr r3,[r7,#4]
 834              	.L40:
 835              	 .loc 1 575 15 is_stmt 1 discriminator 4
 836 00cc FB62     	 str r3,[r7,#44]
 576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 837              	 .loc 1 576 3 discriminator 4
 838 00ce FB6A     	 ldr r3,[r7,#44]
 839 00d0 002B     	 cmp r3,#0
 840 00d2 23D0     	 beq .L41
 577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pSrc = pRing->pBuffer + RdOff;
 841              	 .loc 1 578 19
 842 00d4 BB69     	 ldr r3,[r7,#24]
 843 00d6 5A68     	 ldr r2,[r3,#4]
 844              	 .loc 1 578 10
 845 00d8 7B6A     	 ldr r3,[r7,#36]
 846 00da 1344     	 add r3,r3,r2
 847 00dc FB61     	 str r3,[r7,#28]
 579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 848              	 .loc 1 579 18
 849 00de BA6A     	 ldr r2,[r7,#40]
 850 00e0 FB6A     	 ldr r3,[r7,#44]
 851 00e2 1344     	 add r3,r3,r2
 852 00e4 BB62     	 str r3,[r7,#40]
 580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 853              	 .loc 1 580 18
 854 00e6 7A68     	 ldr r2,[r7,#4]
 855 00e8 FB6A     	 ldr r3,[r7,#44]
 856 00ea D31A     	 subs r3,r2,r3
 857 00ec 7B60     	 str r3,[r7,#4]
 581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 858              	 .loc 1 581 18
 859 00ee 7A6A     	 ldr r2,[r7,#36]
 860 00f0 FB6A     	 ldr r3,[r7,#44]
 861 00f2 1344     	 add r3,r3,r2
ARM GAS   			page 27


 862 00f4 7B62     	 str r3,[r7,#36]
 863              	.L42:
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesRem--) {
 864              	 .loc 1 582 23
 865 00f6 FB6A     	 ldr r3,[r7,#44]
 866 00f8 5A1E     	 subs r2,r3,#1
 867 00fa FA62     	 str r2,[r7,#44]
 868 00fc 002B     	 cmp r3,#0
 869 00fe 14BF     	 ite ne
 870 0100 0123     	 movne r3,#1
 871 0102 0023     	 moveq r3,#0
 872 0104 DBB2     	 uxtb r3,r3
 873 0106 002B     	 cmp r3,#0
 874 0108 08D0     	 beq .L41
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 875              	 .loc 1 583 25
 876 010a FA69     	 ldr r2,[r7,#28]
 877 010c 531C     	 adds r3,r2,#1
 878 010e FB61     	 str r3,[r7,#28]
 879              	 .loc 1 583 15
 880 0110 3B6A     	 ldr r3,[r7,#32]
 881 0112 591C     	 adds r1,r3,#1
 882 0114 3962     	 str r1,[r7,#32]
 883              	 .loc 1 583 20
 884 0116 1278     	 ldrb r2,[r2]
 885              	 .loc 1 583 18
 886 0118 1A70     	 strb r2,[r3]
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (NumBytesRem--) {
 887              	 .loc 1 582 5
 888 011a ECE7     	 b .L42
 889              	.L41:
 584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     };
 585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (NumBytesRead) {
 890              	 .loc 1 593 3
 891 011c BB6A     	 ldr r3,[r7,#40]
 892 011e 002B     	 cmp r3,#0
 893 0120 02D0     	 beq .L43
 594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 894              	 .loc 1 594 18
 895 0122 BB69     	 ldr r3,[r7,#24]
 896 0124 7A6A     	 ldr r2,[r7,#36]
 897 0126 1A61     	 str r2,[r3,#16]
 898              	.L43:
 595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return NumBytesRead;
 899              	 .loc 1 597 10
 900 0128 BB6A     	 ldr r3,[r7,#40]
 598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
ARM GAS   			page 28


 901              	 .loc 1 598 1
 902 012a 1846     	 mov r0,r3
 903 012c 3037     	 adds r7,r7,#48
 904              	 .cfi_def_cfa_offset 8
 905 012e BD46     	 mov sp,r7
 906              	 .cfi_def_cfa_register 13
 907              	 
 908 0130 80BD     	 pop {r7,pc}
 909              	.L46:
 910 0132 00BF     	 .align 2
 911              	.L45:
 912 0134 00000000 	 .word _SEGGER_RTT
 913              	 .cfi_endproc
 914              	.LFE12:
 915              	 .cantunwind
 916              	 .fnend
 917              	 .size SEGGER_RTT_ReadNoLock,.-SEGGER_RTT_ReadNoLock
 918              	 .section .text.SEGGER_RTT_Read,"ax",%progbits
 919              	 .align 1
 920              	 .global SEGGER_RTT_Read
 921              	 .syntax unified
 922              	 .thumb
 923              	 .thumb_func
 924              	 .type SEGGER_RTT_Read,%function
 925              	SEGGER_RTT_Read:
 926              	 .fnstart
 927              	.LFB13:
 599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_Read
 603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    which have been previously stored by the host.
 607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes that have been read.
 615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 928              	 .loc 1 616 84
 929              	 .cfi_startproc
 930              	 
 931              	 
 932 0000 80B5     	 push {r7,lr}
 933              	 .cfi_def_cfa_offset 8
 934              	 .cfi_offset 7,-8
 935              	 .cfi_offset 14,-4
 936 0002 86B0     	 sub sp,sp,#24
 937              	 .cfi_def_cfa_offset 32
 938 0004 00AF     	 add r7,sp,#0
 939              	 .cfi_def_cfa_register 7
ARM GAS   			page 29


 940 0006 F860     	 str r0,[r7,#12]
 941 0008 B960     	 str r1,[r7,#8]
 942 000a 7A60     	 str r2,[r7,#4]
 943              	.LBB2:
 617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned NumBytesRead;
 618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 944              	 .loc 1 619 3
 945              	 .syntax unified
 946              	
 947 000c EFF31183 	 mrs r3,basepri
 948 0010 4FF02001 	 mov r1,#32
 949 0014 81F31188 	 msr basepri,r1
 950              	 
 951              	
 952              	 .thumb
 953              	 .syntax unified
 954 0018 7B61     	 str r3,[r7,#20]
 620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Call the non-locking read function
 622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 955              	 .loc 1 623 39
 956 001a 7A68     	 ldr r2,[r7,#4]
 957 001c B968     	 ldr r1,[r7,#8]
 958 001e F868     	 ldr r0,[r7,#12]
 959 0020 FFF7FEFF 	 bl SEGGER_RTT_ReadNoLock
 960 0024 3861     	 str r0,[r7,#16]
 624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish up.
 626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 961              	 .loc 1 627 3
 962 0026 7B69     	 ldr r3,[r7,#20]
 963              	 .syntax unified
 964              	
 965 0028 83F31188 	 msr basepri,r3
 966              	 
 967              	
 968              	 .thumb
 969              	 .syntax unified
 970              	.LBE2:
 628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return NumBytesRead;
 971              	 .loc 1 629 10
 972 002c 3B69     	 ldr r3,[r7,#16]
 630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 973              	 .loc 1 630 1
 974 002e 1846     	 mov r0,r3
 975 0030 1837     	 adds r7,r7,#24
 976              	 .cfi_def_cfa_offset 8
 977 0032 BD46     	 mov sp,r7
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 0034 80BD     	 pop {r7,pc}
 981              	 .cfi_endproc
 982              	.LFE13:
ARM GAS   			page 30


 983              	 .cantunwind
 984              	 .fnend
 985              	 .size SEGGER_RTT_Read,.-SEGGER_RTT_Read
 986              	 .section .text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 987              	 .align 1
 988              	 .global SEGGER_RTT_WriteWithOverwriteNoLock
 989              	 .syntax unified
 990              	 .thumb
 991              	 .thumb_func
 992              	 .type SEGGER_RTT_WriteWithOverwriteNoLock,%function
 993              	SEGGER_RTT_WriteWithOverwriteNoLock:
 994              	 .fnstart
 995              	.LFB14:
 631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    control block.
 639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        connection reads RTT data.
 654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 996              	 .loc 1 655 104
 997              	 .cfi_startproc
 998              	 
 999              	 
 1000              	 
 1001 0000 80B4     	 push {r7}
 1002              	 .cfi_def_cfa_offset 4
 1003              	 .cfi_offset 7,-4
 1004 0002 89B0     	 sub sp,sp,#36
 1005              	 .cfi_def_cfa_offset 40
 1006 0004 00AF     	 add r7,sp,#0
 1007              	 .cfi_def_cfa_register 7
 1008 0006 F860     	 str r0,[r7,#12]
 1009 0008 B960     	 str r1,[r7,#8]
 1010 000a 7A60     	 str r2,[r7,#4]
 656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   const char*           pData;
 657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Avail;
 659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS   			page 31


 660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   char*                 pDst;
 661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1011              	 .loc 1 663 9
 1012 000c BB68     	 ldr r3,[r7,#8]
 1013 000e FB61     	 str r3,[r7,#28]
 664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1014              	 .loc 1 667 9
 1015 0010 FB68     	 ldr r3,[r7,#12]
 1016 0012 5A1C     	 adds r2,r3,#1
 1017 0014 1346     	 mov r3,r2
 1018 0016 5B00     	 lsls r3,r3,#1
 1019 0018 1344     	 add r3,r3,r2
 1020 001a DB00     	 lsls r3,r3,#3
 1021 001c 544A     	 ldr r2,.L63
 1022 001e 1344     	 add r3,r3,r2
 1023 0020 3B61     	 str r3,[r7,#16]
 668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 1024              	 .loc 1 671 14
 1025 0022 3B69     	 ldr r3,[r7,#16]
 1026 0024 DA68     	 ldr r2,[r3,#12]
 1027              	 .loc 1 671 30
 1028 0026 3B69     	 ldr r3,[r7,#16]
 1029 0028 1B69     	 ldr r3,[r3,#16]
 1030              	 .loc 1 671 20
 1031 002a 9A42     	 cmp r2,r3
 1032 002c 0CBF     	 ite eq
 1033 002e 0123     	 moveq r3,#1
 1034 0030 0023     	 movne r3,#0
 1035 0032 DBB2     	 uxtb r3,r3
 1036              	 .loc 1 671 3
 1037 0034 002B     	 cmp r3,#0
 1038 0036 04D0     	 beq .L50
 672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 1039              	 .loc 1 672 20
 1040 0038 3B69     	 ldr r3,[r7,#16]
 1041 003a 9B68     	 ldr r3,[r3,#8]
 1042              	 .loc 1 672 11
 1043 003c 013B     	 subs r3,r3,#1
 1044 003e BB61     	 str r3,[r7,#24]
 1045 0040 1CE0     	 b .L51
 1046              	.L50:
 673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 1047              	 .loc 1 673 22
 1048 0042 3B69     	 ldr r3,[r7,#16]
 1049 0044 DA68     	 ldr r2,[r3,#12]
 1050              	 .loc 1 673 37
 1051 0046 3B69     	 ldr r3,[r7,#16]
 1052 0048 1B69     	 ldr r3,[r3,#16]
 1053              	 .loc 1 673 28
ARM GAS   			page 32


 1054 004a 9A42     	 cmp r2,r3
 1055 004c 34BF     	 ite cc
 1056 004e 0123     	 movcc r3,#1
 1057 0050 0023     	 movcs r3,#0
 1058 0052 DBB2     	 uxtb r3,r3
 1059              	 .loc 1 673 10
 1060 0054 002B     	 cmp r3,#0
 1061 0056 07D0     	 beq .L52
 674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1062              	 .loc 1 674 20
 1063 0058 3B69     	 ldr r3,[r7,#16]
 1064 005a 1A69     	 ldr r2,[r3,#16]
 1065              	 .loc 1 674 35
 1066 005c 3B69     	 ldr r3,[r7,#16]
 1067 005e DB68     	 ldr r3,[r3,#12]
 1068              	 .loc 1 674 26
 1069 0060 D31A     	 subs r3,r2,r3
 1070              	 .loc 1 674 11
 1071 0062 013B     	 subs r3,r3,#1
 1072 0064 BB61     	 str r3,[r7,#24]
 1073 0066 09E0     	 b .L51
 1074              	.L52:
 675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
 676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 1075              	 .loc 1 676 20
 1076 0068 3B69     	 ldr r3,[r7,#16]
 1077 006a 1A69     	 ldr r2,[r3,#16]
 1078              	 .loc 1 676 35
 1079 006c 3B69     	 ldr r3,[r7,#16]
 1080 006e DB68     	 ldr r3,[r3,#12]
 1081              	 .loc 1 676 26
 1082 0070 D21A     	 subs r2,r2,r3
 1083              	 .loc 1 676 55
 1084 0072 3B69     	 ldr r3,[r7,#16]
 1085 0074 9B68     	 ldr r3,[r3,#8]
 1086              	 .loc 1 676 46
 1087 0076 1344     	 add r3,r3,r2
 1088              	 .loc 1 676 11
 1089 0078 013B     	 subs r3,r3,#1
 1090 007a BB61     	 str r3,[r7,#24]
 1091              	.L51:
 677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (NumBytes > Avail) {
 1092              	 .loc 1 678 3
 1093 007c 7A68     	 ldr r2,[r7,#4]
 1094 007e BB69     	 ldr r3,[r7,#24]
 1095 0080 9A42     	 cmp r2,r3
 1096 0082 1AD9     	 bls .L53
 679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 1097              	 .loc 1 679 18
 1098 0084 3B69     	 ldr r3,[r7,#16]
 1099 0086 1A69     	 ldr r2,[r3,#16]
 1100              	 .loc 1 679 31
 1101 0088 7968     	 ldr r1,[r7,#4]
 1102 008a BB69     	 ldr r3,[r7,#24]
 1103 008c CB1A     	 subs r3,r1,r3
 1104              	 .loc 1 679 18
ARM GAS   			page 33


 1105 008e 1A44     	 add r2,r2,r3
 1106 0090 3B69     	 ldr r3,[r7,#16]
 1107 0092 1A61     	 str r2,[r3,#16]
 1108              	.L54:
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1109              	 .loc 1 680 19
 1110 0094 3B69     	 ldr r3,[r7,#16]
 1111 0096 1A69     	 ldr r2,[r3,#16]
 1112              	 .loc 1 680 35
 1113 0098 3B69     	 ldr r3,[r7,#16]
 1114 009a 9B68     	 ldr r3,[r3,#8]
 1115              	 .loc 1 680 25
 1116 009c 9A42     	 cmp r2,r3
 1117 009e 2CBF     	 ite cs
 1118 00a0 0123     	 movcs r3,#1
 1119 00a2 0023     	 movcc r3,#0
 1120 00a4 DBB2     	 uxtb r3,r3
 1121 00a6 002B     	 cmp r3,#0
 1122 00a8 07D0     	 beq .L53
 681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 1123              	 .loc 1 681 20
 1124 00aa 3B69     	 ldr r3,[r7,#16]
 1125 00ac 1A69     	 ldr r2,[r3,#16]
 1126              	 .loc 1 681 30
 1127 00ae 3B69     	 ldr r3,[r7,#16]
 1128 00b0 9B68     	 ldr r3,[r3,#8]
 1129              	 .loc 1 681 20
 1130 00b2 D21A     	 subs r2,r2,r3
 1131 00b4 3B69     	 ldr r3,[r7,#16]
 1132 00b6 1A61     	 str r2,[r3,#16]
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1133              	 .loc 1 680 5
 1134 00b8 ECE7     	 b .L54
 1135              	.L53:
 682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 1136              	 .loc 1 687 18
 1137 00ba 3B69     	 ldr r3,[r7,#16]
 1138 00bc 9A68     	 ldr r2,[r3,#8]
 1139              	 .loc 1 687 40
 1140 00be 3B69     	 ldr r3,[r7,#16]
 1141 00c0 DB68     	 ldr r3,[r3,#12]
 1142              	 .loc 1 687 9
 1143 00c2 D31A     	 subs r3,r2,r3
 1144 00c4 BB61     	 str r3,[r7,#24]
 1145              	.L61:
 688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
 689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail > NumBytes) {
 1146              	 .loc 1 689 5
 1147 00c6 BA69     	 ldr r2,[r7,#24]
 1148 00c8 7B68     	 ldr r3,[r7,#4]
 1149 00ca 9A42     	 cmp r2,r3
 1150 00cc 22D9     	 bls .L55
ARM GAS   			page 34


 690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // Last round
 692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 1151              	 .loc 1 694 21
 1152 00ce 3B69     	 ldr r3,[r7,#16]
 1153 00d0 5A68     	 ldr r2,[r3,#4]
 1154              	 .loc 1 694 38
 1155 00d2 3B69     	 ldr r3,[r7,#16]
 1156 00d4 DB68     	 ldr r3,[r3,#12]
 1157              	 .loc 1 694 12
 1158 00d6 1344     	 add r3,r3,r2
 1159 00d8 7B61     	 str r3,[r7,#20]
 695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Avail = NumBytes;
 1160              	 .loc 1 695 13
 1161 00da 7B68     	 ldr r3,[r7,#4]
 1162 00dc BB61     	 str r3,[r7,#24]
 1163              	.L57:
 696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
 1164              	 .loc 1 696 22
 1165 00de 7B68     	 ldr r3,[r7,#4]
 1166 00e0 5A1E     	 subs r2,r3,#1
 1167 00e2 7A60     	 str r2,[r7,#4]
 1168 00e4 002B     	 cmp r3,#0
 1169 00e6 14BF     	 ite ne
 1170 00e8 0123     	 movne r3,#1
 1171 00ea 0023     	 moveq r3,#0
 1172 00ec DBB2     	 uxtb r3,r3
 1173 00ee 002B     	 cmp r3,#0
 1174 00f0 08D0     	 beq .L56
 697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 1175              	 .loc 1 697 25
 1176 00f2 FA69     	 ldr r2,[r7,#28]
 1177 00f4 531C     	 adds r3,r2,#1
 1178 00f6 FB61     	 str r3,[r7,#28]
 1179              	 .loc 1 697 14
 1180 00f8 7B69     	 ldr r3,[r7,#20]
 1181 00fa 591C     	 adds r1,r3,#1
 1182 00fc 7961     	 str r1,[r7,#20]
 1183              	 .loc 1 697 19
 1184 00fe 1278     	 ldrb r2,[r2]
 1185              	 .loc 1 697 17
 1186 0100 1A70     	 strb r2,[r3]
 696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
 1187              	 .loc 1 696 7
 1188 0102 ECE7     	 b .L57
 1189              	.L56:
 698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff += Avail;
 1190              	 .loc 1 699 20
 1191 0104 3B69     	 ldr r3,[r7,#16]
 1192 0106 DA68     	 ldr r2,[r3,#12]
 1193 0108 BB69     	 ldr r3,[r7,#24]
 1194 010a 1A44     	 add r2,r2,r3
 1195 010c 3B69     	 ldr r3,[r7,#16]
 1196 010e DA60     	 str r2,[r3,#12]
ARM GAS   			page 35


 700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + pRing->WrOff, pData, NumBytes);
 702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 1197              	 .loc 1 704 7
 1198 0110 00BF     	 nop
 705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     } else {
 706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytes -= Avail;
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (Avail--) {
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = 0;
 716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + pRing->WrOff, pData, Avail);
 718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pData += Avail;
 719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = 0;
 720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytes -= Avail;
 721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } while (NumBytes);
 725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1199              	 .loc 1 725 1
 1200 0112 27E0     	 b .L62
 1201              	.L55:
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytes -= Avail;
 1202              	 .loc 1 710 21
 1203 0114 3B69     	 ldr r3,[r7,#16]
 1204 0116 5A68     	 ldr r2,[r3,#4]
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytes -= Avail;
 1205              	 .loc 1 710 38
 1206 0118 3B69     	 ldr r3,[r7,#16]
 1207 011a DB68     	 ldr r3,[r3,#12]
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       NumBytes -= Avail;
 1208              	 .loc 1 710 12
 1209 011c 1344     	 add r3,r3,r2
 1210 011e 7B61     	 str r3,[r7,#20]
 711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (Avail--) {
 1211              	 .loc 1 711 16
 1212 0120 7A68     	 ldr r2,[r7,#4]
 1213 0122 BB69     	 ldr r3,[r7,#24]
 1214 0124 D31A     	 subs r3,r2,r3
 1215 0126 7B60     	 str r3,[r7,#4]
 1216              	.L60:
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 1217              	 .loc 1 712 19
 1218 0128 BB69     	 ldr r3,[r7,#24]
 1219 012a 5A1E     	 subs r2,r3,#1
 1220 012c BA61     	 str r2,[r7,#24]
 1221 012e 002B     	 cmp r3,#0
 1222 0130 14BF     	 ite ne
ARM GAS   			page 36


 1223 0132 0123     	 movne r3,#1
 1224 0134 0023     	 moveq r3,#0
 1225 0136 DBB2     	 uxtb r3,r3
 1226 0138 002B     	 cmp r3,#0
 1227 013a 08D0     	 beq .L59
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 1228              	 .loc 1 713 25
 1229 013c FA69     	 ldr r2,[r7,#28]
 1230 013e 531C     	 adds r3,r2,#1
 1231 0140 FB61     	 str r3,[r7,#28]
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 1232              	 .loc 1 713 14
 1233 0142 7B69     	 ldr r3,[r7,#20]
 1234 0144 591C     	 adds r1,r3,#1
 1235 0146 7961     	 str r1,[r7,#20]
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 1236              	 .loc 1 713 19
 1237 0148 1278     	 ldrb r2,[r2]
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 1238              	 .loc 1 713 17
 1239 014a 1A70     	 strb r2,[r3]
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 1240              	 .loc 1 712 7
 1241 014c ECE7     	 b .L60
 1242              	.L59:
 715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 1243              	 .loc 1 715 20
 1244 014e 3B69     	 ldr r3,[r7,#16]
 1245 0150 0022     	 movs r2,#0
 1246 0152 DA60     	 str r2,[r3,#12]
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 1247              	 .loc 1 722 23
 1248 0154 3B69     	 ldr r3,[r7,#16]
 1249 0156 9B68     	 ldr r3,[r3,#8]
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 1250              	 .loc 1 722 13
 1251 0158 013B     	 subs r3,r3,#1
 1252 015a BB61     	 str r3,[r7,#24]
 724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1253              	 .loc 1 724 12
 1254 015c 7B68     	 ldr r3,[r7,#4]
 1255 015e 002B     	 cmp r3,#0
 1256 0160 00D0     	 beq .L62
 688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail > NumBytes) {
 1257              	 .loc 1 688 3
 1258 0162 B0E7     	 b .L61
 1259              	.L62:
 1260              	 .loc 1 725 1
 1261 0164 00BF     	 nop
 1262 0166 2437     	 adds r7,r7,#36
 1263              	 .cfi_def_cfa_offset 4
 1264 0168 BD46     	 mov sp,r7
 1265              	 .cfi_def_cfa_register 13
 1266              	 
 1267 016a 5DF8047B 	 ldr r7,[sp],#4
 1268              	 .cfi_restore 7
 1269              	 .cfi_def_cfa_offset 0
ARM GAS   			page 37


 1270 016e 7047     	 bx lr
 1271              	.L64:
 1272              	 .align 2
 1273              	.L63:
 1274 0170 00000000 	 .word _SEGGER_RTT
 1275              	 .cfi_endproc
 1276              	.LFE14:
 1277              	 .cantunwind
 1278              	 .fnend
 1279              	 .size SEGGER_RTT_WriteWithOverwriteNoLock,.-SEGGER_RTT_WriteWithOverwriteNoLock
 1280              	 .section .text.SEGGER_RTT_WriteSkipNoLock,"ax",%progbits
 1281              	 .align 1
 1282              	 .global SEGGER_RTT_WriteSkipNoLock
 1283              	 .syntax unified
 1284              	 .thumb
 1285              	 .thumb_func
 1286              	 .type SEGGER_RTT_WriteSkipNoLock,%function
 1287              	SEGGER_RTT_WriteSkipNoLock:
 1288              	 .fnstart
 1289              	.LFB15:
 726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    control block which is then read by the host.
 734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1290              	 .loc 1 751 99
 1291              	 .cfi_startproc
 1292              	 
 1293              	 
 1294              	 
 1295 0000 80B4     	 push {r7}
 1296              	 .cfi_def_cfa_offset 4
 1297              	 .cfi_offset 7,-4
 1298 0002 8DB0     	 sub sp,sp,#52
 1299              	 .cfi_def_cfa_offset 56
 1300 0004 00AF     	 add r7,sp,#0
ARM GAS   			page 38


 1301              	 .cfi_def_cfa_register 7
 1302 0006 F860     	 str r0,[r7,#12]
 1303 0008 B960     	 str r1,[r7,#8]
 1304 000a 7A60     	 str r2,[r7,#4]
 752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   const char*           pData;
 753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Avail;
 755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              RdOff;
 756:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              WrOff;
 757:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Rem;
 758:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 759:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   char*                 pDst;
 760:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 761:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 762:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1305              	 .loc 1 762 9
 1306 000c BB68     	 ldr r3,[r7,#8]
 1307 000e FB62     	 str r3,[r7,#44]
 763:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 764:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 765:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 766:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1308              	 .loc 1 766 9
 1309 0010 FB68     	 ldr r3,[r7,#12]
 1310 0012 5A1C     	 adds r2,r3,#1
 1311 0014 1346     	 mov r3,r2
 1312 0016 5B00     	 lsls r3,r3,#1
 1313 0018 1344     	 add r3,r3,r2
 1314 001a DB00     	 lsls r3,r3,#3
 1315 001c 6A4A     	 ldr r2,.L82
 1316 001e 1344     	 add r3,r3,r2
 1317 0020 3B62     	 str r3,[r7,#32]
 767:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1318              	 .loc 1 767 9
 1319 0022 3B6A     	 ldr r3,[r7,#32]
 1320 0024 1B69     	 ldr r3,[r3,#16]
 1321 0026 FB61     	 str r3,[r7,#28]
 768:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1322              	 .loc 1 768 9
 1323 0028 3B6A     	 ldr r3,[r7,#32]
 1324 002a DB68     	 ldr r3,[r3,#12]
 1325 002c BB61     	 str r3,[r7,#24]
 769:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 770:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Handle the most common cases fastest.
 771:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Which is:
 772:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //    RdOff <= WrOff -> Space until wrap around is free.
 773:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //  AND
 774:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //    WrOff + NumBytes < SizeOfBuffer -> No Wrap around necessary.
 775:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 776:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //  OR
 777:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 778:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //    RdOff > WrOff -> Space until RdOff - 1 is free.
 779:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //  AND
 780:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //    WrOff + NumBytes < RdOff -> Data fits into buffer
 781:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 782:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 1326              	 .loc 1 782 3
ARM GAS   			page 39


 1327 002e FA69     	 ldr r2,[r7,#28]
 1328 0030 BB69     	 ldr r3,[r7,#24]
 1329 0032 9A42     	 cmp r2,r3
 1330 0034 00F29780 	 bhi .L66
 783:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 784:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Get space until WrOff will be at wrap around.
 785:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 786:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u - WrOff ;
 1331              	 .loc 1 786 20
 1332 0038 3B6A     	 ldr r3,[r7,#32]
 1333 003a 9A68     	 ldr r2,[r3,#8]
 1334              	 .loc 1 786 38
 1335 003c BB69     	 ldr r3,[r7,#24]
 1336 003e D31A     	 subs r3,r2,r3
 1337              	 .loc 1 786 11
 1338 0040 013B     	 subs r3,r3,#1
 1339 0042 7B61     	 str r3,[r7,#20]
 787:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1340              	 .loc 1 787 5
 1341 0044 7A69     	 ldr r2,[r7,#20]
 1342 0046 7B68     	 ldr r3,[r7,#4]
 1343 0048 9A42     	 cmp r2,r3
 1344 004a 20D3     	 bcc .L67
 788:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 789:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pDst = pRing->pBuffer + WrOff;
 1345              	 .loc 1 789 21
 1346 004c 3B6A     	 ldr r3,[r7,#32]
 1347 004e 5A68     	 ldr r2,[r3,#4]
 1348              	 .loc 1 789 12
 1349 0050 BB69     	 ldr r3,[r7,#24]
 1350 0052 1344     	 add r3,r3,r2
 1351 0054 7B62     	 str r3,[r7,#36]
 790:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       WrOff += NumBytes;
 1352              	 .loc 1 790 13
 1353 0056 BA69     	 ldr r2,[r7,#24]
 1354 0058 7B68     	 ldr r3,[r7,#4]
 1355 005a 1344     	 add r3,r3,r2
 1356 005c BB61     	 str r3,[r7,#24]
 1357              	.L69:
 791:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
 1358              	 .loc 1 791 22
 1359 005e 7B68     	 ldr r3,[r7,#4]
 1360 0060 5A1E     	 subs r2,r3,#1
 1361 0062 7A60     	 str r2,[r7,#4]
 1362 0064 002B     	 cmp r3,#0
 1363 0066 14BF     	 ite ne
 1364 0068 0123     	 movne r3,#1
 1365 006a 0023     	 moveq r3,#0
 1366 006c DBB2     	 uxtb r3,r3
 1367 006e 002B     	 cmp r3,#0
 1368 0070 08D0     	 beq .L68
 792:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 1369              	 .loc 1 792 25
 1370 0072 FA6A     	 ldr r2,[r7,#44]
 1371 0074 531C     	 adds r3,r2,#1
 1372 0076 FB62     	 str r3,[r7,#44]
 1373              	 .loc 1 792 14
ARM GAS   			page 40


 1374 0078 7B6A     	 ldr r3,[r7,#36]
 1375 007a 591C     	 adds r1,r3,#1
 1376 007c 7962     	 str r1,[r7,#36]
 1377              	 .loc 1 792 19
 1378 007e 1278     	 ldrb r2,[r2]
 1379              	 .loc 1 792 17
 1380 0080 1A70     	 strb r2,[r3]
 791:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
 1381              	 .loc 1 791 7
 1382 0082 ECE7     	 b .L69
 1383              	.L68:
 793:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 794:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = WrOff;
 1384              	 .loc 1 794 20
 1385 0084 3B6A     	 ldr r3,[r7,#32]
 1386 0086 BA69     	 ldr r2,[r7,#24]
 1387 0088 DA60     	 str r2,[r3,#12]
 795:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 796:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
 797:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 798:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 799:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       return 1;
 1388              	 .loc 1 799 14
 1389 008a 0123     	 movs r3,#1
 1390 008c 96E0     	 b .L70
 1391              	.L67:
 800:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 801:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 802:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // If data did not fit into space until wrap around calculate complete space in buffer.
 803:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 804:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail += RdOff;
 1392              	 .loc 1 804 11
 1393 008e 7A69     	 ldr r2,[r7,#20]
 1394 0090 FB69     	 ldr r3,[r7,#28]
 1395 0092 1344     	 add r3,r3,r2
 1396 0094 7B61     	 str r3,[r7,#20]
 805:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 806:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // If there is still no space for the whole of this output, don't bother.
 807:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 808:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1397              	 .loc 1 808 5
 1398 0096 7A69     	 ldr r2,[r7,#20]
 1399 0098 7B68     	 ldr r3,[r7,#4]
 1400 009a 9A42     	 cmp r2,r3
 1401 009c C0F08D80 	 bcc .L71
 809:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 810:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //  OK, we have enough space in buffer. Copy in one or 2 chunks
 811:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
 812:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;      // Space until end of buffer
 1402              	 .loc 1 812 20
 1403 00a0 3B6A     	 ldr r3,[r7,#32]
 1404 00a2 9A68     	 ldr r2,[r3,#8]
 1405              	 .loc 1 812 11
 1406 00a4 BB69     	 ldr r3,[r7,#24]
 1407 00a6 D31A     	 subs r3,r2,r3
 1408 00a8 BB62     	 str r3,[r7,#40]
 813:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       if (Rem > NumBytes) {
ARM GAS   			page 41


 1409              	 .loc 1 813 7
 1410 00aa BA6A     	 ldr r2,[r7,#40]
 1411 00ac 7B68     	 ldr r3,[r7,#4]
 1412 00ae 9A42     	 cmp r2,r3
 1413 00b0 1FD9     	 bls .L72
 814:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 815:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pDst = pRing->pBuffer + WrOff;
 1414              	 .loc 1 815 23
 1415 00b2 3B6A     	 ldr r3,[r7,#32]
 1416 00b4 5A68     	 ldr r2,[r3,#4]
 1417              	 .loc 1 815 14
 1418 00b6 BB69     	 ldr r3,[r7,#24]
 1419 00b8 1344     	 add r3,r3,r2
 1420 00ba 7B62     	 str r3,[r7,#36]
 816:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         WrOff += NumBytes;
 1421              	 .loc 1 816 15
 1422 00bc BA69     	 ldr r2,[r7,#24]
 1423 00be 7B68     	 ldr r3,[r7,#4]
 1424 00c0 1344     	 add r3,r3,r2
 1425 00c2 BB61     	 str r3,[r7,#24]
 1426              	.L74:
 817:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         while (NumBytes--) {
 1427              	 .loc 1 817 24
 1428 00c4 7B68     	 ldr r3,[r7,#4]
 1429 00c6 5A1E     	 subs r2,r3,#1
 1430 00c8 7A60     	 str r2,[r7,#4]
 1431 00ca 002B     	 cmp r3,#0
 1432 00cc 14BF     	 ite ne
 1433 00ce 0123     	 movne r3,#1
 1434 00d0 0023     	 moveq r3,#0
 1435 00d2 DBB2     	 uxtb r3,r3
 1436 00d4 002B     	 cmp r3,#0
 1437 00d6 08D0     	 beq .L73
 818:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           *pDst++ = *pData++;
 1438              	 .loc 1 818 27
 1439 00d8 FA6A     	 ldr r2,[r7,#44]
 1440 00da 531C     	 adds r3,r2,#1
 1441 00dc FB62     	 str r3,[r7,#44]
 1442              	 .loc 1 818 16
 1443 00de 7B6A     	 ldr r3,[r7,#36]
 1444 00e0 591C     	 adds r1,r3,#1
 1445 00e2 7962     	 str r1,[r7,#36]
 1446              	 .loc 1 818 21
 1447 00e4 1278     	 ldrb r2,[r2]
 1448              	 .loc 1 818 19
 1449 00e6 1A70     	 strb r2,[r3]
 817:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         while (NumBytes--) {
 1450              	 .loc 1 817 9
 1451 00e8 ECE7     	 b .L74
 1452              	.L73:
 819:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         };
 820:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pRing->WrOff = WrOff;
 1453              	 .loc 1 820 22
 1454 00ea 3B6A     	 ldr r3,[r7,#32]
 1455 00ec BA69     	 ldr r2,[r7,#24]
 1456 00ee DA60     	 str r2,[r3,#12]
 1457 00f0 37E0     	 b .L75
ARM GAS   			page 42


 1458              	.L72:
 821:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 822:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
 823:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pRing->WrOff = WrOff + NumBytes;
 824:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 825:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       } else {
 826:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         //
 827:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         // We reach the end of the buffer, so need to wrap around
 828:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         //
 829:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 830:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pDst = pRing->pBuffer + WrOff;
 1459              	 .loc 1 830 23
 1460 00f2 3B6A     	 ldr r3,[r7,#32]
 1461 00f4 5A68     	 ldr r2,[r3,#4]
 1462              	 .loc 1 830 14
 1463 00f6 BB69     	 ldr r3,[r7,#24]
 1464 00f8 1344     	 add r3,r3,r2
 1465 00fa 7B62     	 str r3,[r7,#36]
 831:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         NumBytes -= Rem;
 1466              	 .loc 1 831 18
 1467 00fc 7A68     	 ldr r2,[r7,#4]
 1468 00fe BB6A     	 ldr r3,[r7,#40]
 1469 0100 D31A     	 subs r3,r2,r3
 1470 0102 7B60     	 str r3,[r7,#4]
 832:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         WrOff = NumBytes;
 1471              	 .loc 1 832 15
 1472 0104 7B68     	 ldr r3,[r7,#4]
 1473 0106 BB61     	 str r3,[r7,#24]
 1474              	.L77:
 833:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         do {
 834:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           *pDst++ = *pData++;
 1475              	 .loc 1 834 27
 1476 0108 FA6A     	 ldr r2,[r7,#44]
 1477 010a 531C     	 adds r3,r2,#1
 1478 010c FB62     	 str r3,[r7,#44]
 1479              	 .loc 1 834 16
 1480 010e 7B6A     	 ldr r3,[r7,#36]
 1481 0110 591C     	 adds r1,r3,#1
 1482 0112 7962     	 str r1,[r7,#36]
 1483              	 .loc 1 834 21
 1484 0114 1278     	 ldrb r2,[r2]
 1485              	 .loc 1 834 19
 1486 0116 1A70     	 strb r2,[r3]
 835:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         } while (--Rem);
 1487              	 .loc 1 835 18
 1488 0118 BB6A     	 ldr r3,[r7,#40]
 1489 011a 013B     	 subs r3,r3,#1
 1490 011c BB62     	 str r3,[r7,#40]
 1491 011e BB6A     	 ldr r3,[r7,#40]
 1492 0120 002B     	 cmp r3,#0
 1493 0122 14BF     	 ite ne
 1494 0124 0123     	 movne r3,#1
 1495 0126 0023     	 moveq r3,#0
 1496 0128 DBB2     	 uxtb r3,r3
 1497 012a 002B     	 cmp r3,#0
 1498 012c 00D0     	 beq .L76
 833:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         do {
ARM GAS   			page 43


 1499              	 .loc 1 833 9
 1500 012e EBE7     	 b .L77
 1501              	.L76:
 836:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pDst = pRing->pBuffer;
 1502              	 .loc 1 836 14
 1503 0130 3B6A     	 ldr r3,[r7,#32]
 1504 0132 5B68     	 ldr r3,[r3,#4]
 1505 0134 7B62     	 str r3,[r7,#36]
 1506              	.L79:
 837:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         while (NumBytes--) {
 1507              	 .loc 1 837 24
 1508 0136 7B68     	 ldr r3,[r7,#4]
 1509 0138 5A1E     	 subs r2,r3,#1
 1510 013a 7A60     	 str r2,[r7,#4]
 1511 013c 002B     	 cmp r3,#0
 1512 013e 14BF     	 ite ne
 1513 0140 0123     	 movne r3,#1
 1514 0142 0023     	 moveq r3,#0
 1515 0144 DBB2     	 uxtb r3,r3
 1516 0146 002B     	 cmp r3,#0
 1517 0148 08D0     	 beq .L78
 838:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****           *pDst++ = *pData++;
 1518              	 .loc 1 838 27
 1519 014a FA6A     	 ldr r2,[r7,#44]
 1520 014c 531C     	 adds r3,r2,#1
 1521 014e FB62     	 str r3,[r7,#44]
 1522              	 .loc 1 838 16
 1523 0150 7B6A     	 ldr r3,[r7,#36]
 1524 0152 591C     	 adds r1,r3,#1
 1525 0154 7962     	 str r1,[r7,#36]
 1526              	 .loc 1 838 21
 1527 0156 1278     	 ldrb r2,[r2]
 1528              	 .loc 1 838 19
 1529 0158 1A70     	 strb r2,[r3]
 837:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         while (NumBytes--) {
 1530              	 .loc 1 837 9
 1531 015a ECE7     	 b .L79
 1532              	.L78:
 839:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         };
 840:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pRing->WrOff = WrOff;
 1533              	 .loc 1 840 22
 1534 015c 3B6A     	 ldr r3,[r7,#32]
 1535 015e BA69     	 ldr r2,[r7,#24]
 1536 0160 DA60     	 str r2,[r3,#12]
 1537              	.L75:
 841:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 842:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, Rem);
 843:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytes - Rem);
 844:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         pRing->WrOff = NumBytes - Rem;
 845:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 846:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
 847:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       return 1;
 1538              	 .loc 1 847 14
 1539 0162 0123     	 movs r3,#1
 1540 0164 2AE0     	 b .L70
 1541              	.L66:
 848:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
ARM GAS   			page 44


 849:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
 850:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 1542              	 .loc 1 850 19
 1543 0166 FA69     	 ldr r2,[r7,#28]
 1544 0168 BB69     	 ldr r3,[r7,#24]
 1545 016a D31A     	 subs r3,r2,r3
 1546              	 .loc 1 850 11
 1547 016c 013B     	 subs r3,r3,#1
 1548 016e 7B61     	 str r3,[r7,#20]
 851:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1549              	 .loc 1 851 5
 1550 0170 7A69     	 ldr r2,[r7,#20]
 1551 0172 7B68     	 ldr r3,[r7,#4]
 1552 0174 9A42     	 cmp r2,r3
 1553 0176 20D3     	 bcc .L71
 852:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 853:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pDst = pRing->pBuffer + WrOff;
 1554              	 .loc 1 853 21
 1555 0178 3B6A     	 ldr r3,[r7,#32]
 1556 017a 5A68     	 ldr r2,[r3,#4]
 1557              	 .loc 1 853 12
 1558 017c BB69     	 ldr r3,[r7,#24]
 1559 017e 1344     	 add r3,r3,r2
 1560 0180 7B62     	 str r3,[r7,#36]
 854:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       WrOff += NumBytes;
 1561              	 .loc 1 854 13
 1562 0182 BA69     	 ldr r2,[r7,#24]
 1563 0184 7B68     	 ldr r3,[r7,#4]
 1564 0186 1344     	 add r3,r3,r2
 1565 0188 BB61     	 str r3,[r7,#24]
 1566              	.L81:
 855:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
 1567              	 .loc 1 855 22
 1568 018a 7B68     	 ldr r3,[r7,#4]
 1569 018c 5A1E     	 subs r2,r3,#1
 1570 018e 7A60     	 str r2,[r7,#4]
 1571 0190 002B     	 cmp r3,#0
 1572 0192 14BF     	 ite ne
 1573 0194 0123     	 movne r3,#1
 1574 0196 0023     	 moveq r3,#0
 1575 0198 DBB2     	 uxtb r3,r3
 1576 019a 002B     	 cmp r3,#0
 1577 019c 08D0     	 beq .L80
 856:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         *pDst++ = *pData++;
 1578              	 .loc 1 856 25
 1579 019e FA6A     	 ldr r2,[r7,#44]
 1580 01a0 531C     	 adds r3,r2,#1
 1581 01a2 FB62     	 str r3,[r7,#44]
 1582              	 .loc 1 856 14
 1583 01a4 7B6A     	 ldr r3,[r7,#36]
 1584 01a6 591C     	 adds r1,r3,#1
 1585 01a8 7962     	 str r1,[r7,#36]
 1586              	 .loc 1 856 19
 1587 01aa 1278     	 ldrb r2,[r2]
 1588              	 .loc 1 856 17
 1589 01ac 1A70     	 strb r2,[r3]
 855:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       while (NumBytes--) {
ARM GAS   			page 45


 1590              	 .loc 1 855 7
 1591 01ae ECE7     	 b .L81
 1592              	.L80:
 857:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       };
 858:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = WrOff;
 1593              	 .loc 1 858 20
 1594 01b0 3B6A     	 ldr r3,[r7,#32]
 1595 01b2 BA69     	 ldr r2,[r7,#24]
 1596 01b4 DA60     	 str r2,[r3,#12]
 859:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #else
 860:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
 861:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 862:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** #endif
 863:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       return 1;
 1597              	 .loc 1 863 14
 1598 01b6 0123     	 movs r3,#1
 1599 01b8 00E0     	 b .L70
 1600              	.L71:
 864:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 865:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 866:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 867:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // If we reach this point no data has been written
 868:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 869:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return 0;
 1601              	 .loc 1 869 10
 1602 01ba 0023     	 movs r3,#0
 1603              	.L70:
 870:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1604              	 .loc 1 870 1
 1605 01bc 1846     	 mov r0,r3
 1606 01be 3437     	 adds r7,r7,#52
 1607              	 .cfi_def_cfa_offset 4
 1608 01c0 BD46     	 mov sp,r7
 1609              	 .cfi_def_cfa_register 13
 1610              	 
 1611 01c2 5DF8047B 	 ldr r7,[sp],#4
 1612              	 .cfi_restore 7
 1613              	 .cfi_def_cfa_offset 0
 1614 01c6 7047     	 bx lr
 1615              	.L83:
 1616              	 .align 2
 1617              	.L82:
 1618 01c8 00000000 	 .word _SEGGER_RTT
 1619              	 .cfi_endproc
 1620              	.LFE15:
 1621              	 .cantunwind
 1622              	 .fnend
 1623              	 .size SEGGER_RTT_WriteSkipNoLock,.-SEGGER_RTT_WriteSkipNoLock
 1624              	 .section .text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1625              	 .align 1
 1626              	 .global SEGGER_RTT_WriteNoLock
 1627              	 .syntax unified
 1628              	 .thumb
 1629              	 .thumb_func
 1630              	 .type SEGGER_RTT_WriteNoLock,%function
 1631              	SEGGER_RTT_WriteNoLock:
 1632              	 .fnstart
ARM GAS   			page 46


 1633              	.LFB16:
 871:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 872:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 873:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 874:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
 875:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 876:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 877:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 878:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    control block which is then read by the host.
 879:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
 880:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 881:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 882:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 883:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 884:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 885:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 886:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 887:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 888:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 889:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 890:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
 891:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 892:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 893:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 894:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 895:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1634              	 .loc 1 895 95
 1635              	 .cfi_startproc
 1636              	 
 1637              	 
 1638 0000 80B5     	 push {r7,lr}
 1639              	 .cfi_def_cfa_offset 8
 1640              	 .cfi_offset 7,-8
 1641              	 .cfi_offset 14,-4
 1642 0002 88B0     	 sub sp,sp,#32
 1643              	 .cfi_def_cfa_offset 40
 1644 0004 00AF     	 add r7,sp,#0
 1645              	 .cfi_def_cfa_register 7
 1646 0006 F860     	 str r0,[r7,#12]
 1647 0008 B960     	 str r1,[r7,#8]
 1648 000a 7A60     	 str r2,[r7,#4]
 896:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Status;
 897:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Avail;
 898:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   const char*           pData;
 899:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 900:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 901:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1649              	 .loc 1 901 9
 1650 000c BB68     	 ldr r3,[r7,#8]
 1651 000e BB61     	 str r3,[r7,#24]
 902:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 903:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer.
 904:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 905:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1652              	 .loc 1 905 9
 1653 0010 FB68     	 ldr r3,[r7,#12]
 1654 0012 5A1C     	 adds r2,r3,#1
ARM GAS   			page 47


 1655 0014 1346     	 mov r3,r2
 1656 0016 5B00     	 lsls r3,r3,#1
 1657 0018 1344     	 add r3,r3,r2
 1658 001a DB00     	 lsls r3,r3,#3
 1659 001c 204A     	 ldr r2,.L95
 1660 001e 1344     	 add r3,r3,r2
 1661 0020 7B61     	 str r3,[r7,#20]
 906:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 907:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // How we output depends upon the mode...
 908:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 909:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   switch (pRing->Flags) {
 1662              	 .loc 1 909 18
 1663 0022 7B69     	 ldr r3,[r7,#20]
 1664 0024 5B69     	 ldr r3,[r3,#20]
 1665              	 .loc 1 909 3
 1666 0026 022B     	 cmp r3,#2
 1667 0028 2BD0     	 beq .L85
 1668 002a 022B     	 cmp r3,#2
 1669 002c 30D8     	 bhi .L86
 1670 002e 002B     	 cmp r3,#0
 1671 0030 02D0     	 beq .L87
 1672 0032 012B     	 cmp r3,#1
 1673 0034 13D0     	 beq .L88
 1674 0036 2BE0     	 b .L86
 1675              	.L87:
 910:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 911:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 912:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
 913:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // of this output, don't bother.
 914:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 915:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1676              	 .loc 1 915 32
 1677 0038 7869     	 ldr r0,[r7,#20]
 1678 003a FFF7FEFF 	 bl _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP
 1679 003e 3861     	 str r0,[r7,#16]
 916:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1680              	 .loc 1 916 5
 1681 0040 3A69     	 ldr r2,[r7,#16]
 1682 0042 7B68     	 ldr r3,[r7,#4]
 1683 0044 9A42     	 cmp r2,r3
 1684 0046 02D2     	 bcs .L89
 917:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Status = 0u;
 1685              	 .loc 1 917 14
 1686 0048 0023     	 movs r3,#0
 1687 004a FB61     	 str r3,[r7,#28]
 918:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     } else {
 919:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Status = NumBytes;
 920:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 921:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 922:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     break;
 1688              	 .loc 1 922 5
 1689 004c 23E0     	 b .L91
 1690              	.L89:
 919:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1691              	 .loc 1 919 14
 1692 004e 7B68     	 ldr r3,[r7,#4]
 1693 0050 FB61     	 str r3,[r7,#28]
ARM GAS   			page 48


 920:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
 1694              	 .loc 1 920 20
 1695 0052 7A68     	 ldr r2,[r7,#4]
 1696 0054 B969     	 ldr r1,[r7,#24]
 1697 0056 7869     	 ldr r0,[r7,#20]
 1698 0058 FFF7FEFF 	 bl _ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj
 1699              	 .loc 1 922 5
 1700 005c 1BE0     	 b .L91
 1701              	.L88:
 923:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
 924:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 925:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
 926:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 927:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1702              	 .loc 1 927 32
 1703 005e 7869     	 ldr r0,[r7,#20]
 1704 0060 FFF7FEFF 	 bl _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP
 1705 0064 3861     	 str r0,[r7,#16]
 928:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1706              	 .loc 1 928 31
 1707 0066 3A69     	 ldr r2,[r7,#16]
 1708 0068 7B68     	 ldr r3,[r7,#4]
 1709 006a 9A42     	 cmp r2,r3
 1710 006c 01D2     	 bcs .L92
 1711              	 .loc 1 928 31 is_stmt 0 discriminator 1
 1712 006e 3B69     	 ldr r3,[r7,#16]
 1713 0070 00E0     	 b .L93
 1714              	.L92:
 1715              	 .loc 1 928 31 discriminator 2
 1716 0072 7B68     	 ldr r3,[r7,#4]
 1717              	.L93:
 1718              	 .loc 1 928 12 is_stmt 1 discriminator 4
 1719 0074 FB61     	 str r3,[r7,#28]
 929:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1720              	 .loc 1 929 18 discriminator 4
 1721 0076 FA69     	 ldr r2,[r7,#28]
 1722 0078 B969     	 ldr r1,[r7,#24]
 1723 007a 7869     	 ldr r0,[r7,#20]
 1724 007c FFF7FEFF 	 bl _ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj
 930:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     break;
 1725              	 .loc 1 930 5 discriminator 4
 1726 0080 09E0     	 b .L91
 1727              	.L85:
 931:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 932:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 933:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
 934:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
 935:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
 1728              	 .loc 1 935 28
 1729 0082 7A68     	 ldr r2,[r7,#4]
 1730 0084 B969     	 ldr r1,[r7,#24]
 1731 0086 7869     	 ldr r0,[r7,#20]
 1732 0088 FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 1733 008c F861     	 str r0,[r7,#28]
 936:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     break;
 1734              	 .loc 1 936 5
 1735 008e 02E0     	 b .L91
ARM GAS   			page 49


 1736              	.L86:
 937:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   default:
 938:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 0u;
 1737              	 .loc 1 938 12
 1738 0090 0023     	 movs r3,#0
 1739 0092 FB61     	 str r3,[r7,#28]
 939:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     break;
 1740              	 .loc 1 939 5
 1741 0094 00BF     	 nop
 1742              	.L91:
 940:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
 941:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 942:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish up.
 943:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 944:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 1743              	 .loc 1 944 10
 1744 0096 FB69     	 ldr r3,[r7,#28]
 945:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1745              	 .loc 1 945 1
 1746 0098 1846     	 mov r0,r3
 1747 009a 2037     	 adds r7,r7,#32
 1748              	 .cfi_def_cfa_offset 8
 1749 009c BD46     	 mov sp,r7
 1750              	 .cfi_def_cfa_register 13
 1751              	 
 1752 009e 80BD     	 pop {r7,pc}
 1753              	.L96:
 1754              	 .align 2
 1755              	.L95:
 1756 00a0 00000000 	 .word _SEGGER_RTT
 1757              	 .cfi_endproc
 1758              	.LFE16:
 1759              	 .cantunwind
 1760              	 .fnend
 1761              	 .size SEGGER_RTT_WriteNoLock,.-SEGGER_RTT_WriteNoLock
 1762              	 .section .text.SEGGER_RTT_Write,"ax",%progbits
 1763              	 .align 1
 1764              	 .global SEGGER_RTT_Write
 1765              	 .syntax unified
 1766              	 .thumb
 1767              	 .thumb_func
 1768              	 .type SEGGER_RTT_Write,%function
 1769              	SEGGER_RTT_Write:
 1770              	 .fnstart
 1771              	.LFB17:
 946:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 947:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 948:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 949:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_Write
 950:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 951:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 952:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 953:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    control block which is then read by the host.
 954:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 955:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
 956:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 957:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
ARM GAS   			page 50


 958:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 959:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 960:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 961:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 962:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 963:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 964:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
 965:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
 966:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1772              	 .loc 1 966 89
 1773              	 .cfi_startproc
 1774              	 
 1775              	 
 1776 0000 80B5     	 push {r7,lr}
 1777              	 .cfi_def_cfa_offset 8
 1778              	 .cfi_offset 7,-8
 1779              	 .cfi_offset 14,-4
 1780 0002 86B0     	 sub sp,sp,#24
 1781              	 .cfi_def_cfa_offset 32
 1782 0004 00AF     	 add r7,sp,#0
 1783              	 .cfi_def_cfa_register 7
 1784 0006 F860     	 str r0,[r7,#12]
 1785 0008 B960     	 str r1,[r7,#8]
 1786 000a 7A60     	 str r2,[r7,#4]
 967:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned Status;
 968:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 969:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 1787              	 .loc 1 969 3
 1788 000c 0D4B     	 ldr r3,.L100
 1789 000e 1B78     	 ldrb r3,[r3]
 1790 0010 002B     	 cmp r3,#0
 1791 0012 01D1     	 bne .L98
 1792              	 .loc 1 969 3 is_stmt 0 discriminator 1
 1793 0014 FFF7FEFF 	 bl _ZL7_DoInitv
 1794              	.L98:
 1795              	.LBB3:
 970:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1796              	 .loc 1 970 3 is_stmt 1
 1797              	 .syntax unified
 1798              	
 1799 0018 EFF31183 	 mrs r3,basepri
 1800 001c 4FF02001 	 mov r1,#32
 1801 0020 81F31188 	 msr basepri,r1
 1802              	 
 1803              	
 1804              	 .thumb
 1805              	 .syntax unified
 1806 0024 7B61     	 str r3,[r7,#20]
 971:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 972:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Call the non-locking write function
 973:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 974:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);
 1807              	 .loc 1 974 34
 1808 0026 7A68     	 ldr r2,[r7,#4]
 1809 0028 B968     	 ldr r1,[r7,#8]
 1810 002a F868     	 ldr r0,[r7,#12]
 1811 002c FFF7FEFF 	 bl SEGGER_RTT_WriteNoLock
ARM GAS   			page 51


 1812 0030 3861     	 str r0,[r7,#16]
 975:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 976:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish up.
 977:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 978:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1813              	 .loc 1 978 3
 1814 0032 7B69     	 ldr r3,[r7,#20]
 1815              	 .syntax unified
 1816              	
 1817 0034 83F31188 	 msr basepri,r3
 1818              	 
 1819              	
 1820              	 .thumb
 1821              	 .syntax unified
 1822              	.LBE3:
 979:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
 980:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 1823              	 .loc 1 980 10
 1824 0038 3B69     	 ldr r3,[r7,#16]
 981:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1825              	 .loc 1 981 1
 1826 003a 1846     	 mov r0,r3
 1827 003c 1837     	 adds r7,r7,#24
 1828              	 .cfi_def_cfa_offset 8
 1829 003e BD46     	 mov sp,r7
 1830              	 .cfi_def_cfa_register 13
 1831              	 
 1832 0040 80BD     	 pop {r7,pc}
 1833              	.L101:
 1834 0042 00BF     	 .align 2
 1835              	.L100:
 1836 0044 00000000 	 .word _SEGGER_RTT
 1837              	 .cfi_endproc
 1838              	.LFE17:
 1839              	 .cantunwind
 1840              	 .fnend
 1841              	 .size SEGGER_RTT_Write,.-SEGGER_RTT_Write
 1842              	 .section .text.SEGGER_RTT_WriteString,"ax",%progbits
 1843              	 .align 1
 1844              	 .global SEGGER_RTT_WriteString
 1845              	 .syntax unified
 1846              	 .thumb
 1847              	 .thumb_func
 1848              	 .type SEGGER_RTT_WriteString,%function
 1849              	SEGGER_RTT_WriteString:
 1850              	 .fnstart
 1851              	.LFB18:
 982:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
 983:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
 984:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 985:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
 986:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 987:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
 988:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
 989:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    This data is read by the host.
 990:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 991:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
ARM GAS   			page 52


 992:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 993:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    s            Pointer to string.
 994:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 995:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
 996:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 997:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
 998:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
 999:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1000:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
1001:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
1002:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1003:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1852              	 .loc 1 1003 70
 1853              	 .cfi_startproc
 1854              	 
 1855              	 
 1856 0000 80B5     	 push {r7,lr}
 1857              	 .cfi_def_cfa_offset 8
 1858              	 .cfi_offset 7,-8
 1859              	 .cfi_offset 14,-4
 1860 0002 84B0     	 sub sp,sp,#16
 1861              	 .cfi_def_cfa_offset 24
 1862 0004 00AF     	 add r7,sp,#0
 1863              	 .cfi_def_cfa_register 7
 1864 0006 7860     	 str r0,[r7,#4]
 1865 0008 3960     	 str r1,[r7]
1004:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned Len;
1005:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1006:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   Len = STRLEN(s);
 1866              	 .loc 1 1006 9
 1867 000a 3868     	 ldr r0,[r7]
 1868 000c FFF7FEFF 	 bl strlen
 1869 0010 F860     	 str r0,[r7,#12]
1007:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1870              	 .loc 1 1007 26
 1871 0012 FA68     	 ldr r2,[r7,#12]
 1872 0014 3968     	 ldr r1,[r7]
 1873 0016 7868     	 ldr r0,[r7,#4]
 1874 0018 FFF7FEFF 	 bl SEGGER_RTT_Write
 1875 001c 0346     	 mov r3,r0
1008:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1876              	 .loc 1 1008 1
 1877 001e 1846     	 mov r0,r3
 1878 0020 1037     	 adds r7,r7,#16
 1879              	 .cfi_def_cfa_offset 8
 1880 0022 BD46     	 mov sp,r7
 1881              	 .cfi_def_cfa_register 13
 1882              	 
 1883 0024 80BD     	 pop {r7,pc}
 1884              	 .cfi_endproc
 1885              	.LFE18:
 1886              	 .cantunwind
 1887              	 .fnend
 1888              	 .size SEGGER_RTT_WriteString,.-SEGGER_RTT_WriteString
 1889              	 .section .text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 1890              	 .align 1
 1891              	 .global SEGGER_RTT_PutCharSkipNoLock
ARM GAS   			page 53


 1892              	 .syntax unified
 1893              	 .thumb
 1894              	 .thumb_func
 1895              	 .type SEGGER_RTT_PutCharSkipNoLock,%function
 1896              	SEGGER_RTT_PutCharSkipNoLock:
 1897              	 .fnstart
 1898              	.LFB19:
1009:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1010:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1011:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1012:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
1013:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1014:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1015:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1016:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
1017:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
1018:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1019:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1020:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    c            Byte to be stored.
1022:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1023:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1024:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1025:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1027:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1028:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1029:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1030:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1031:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1032:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1033:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 1899              	 .loc 1 1033 69
 1900              	 .cfi_startproc
 1901              	 
 1902              	 
 1903              	 
 1904 0000 80B4     	 push {r7}
 1905              	 .cfi_def_cfa_offset 4
 1906              	 .cfi_offset 7,-4
 1907 0002 87B0     	 sub sp,sp,#28
 1908              	 .cfi_def_cfa_offset 32
 1909 0004 00AF     	 add r7,sp,#0
 1910              	 .cfi_def_cfa_register 7
 1911 0006 7860     	 str r0,[r7,#4]
 1912 0008 0B46     	 mov r3,r1
 1913 000a FB70     	 strb r3,[r7,#3]
1034:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1035:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              WrOff;
1036:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Status;
1037:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1038:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1039:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1040:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1914              	 .loc 1 1040 9
 1915 000c 7B68     	 ldr r3,[r7,#4]
 1916 000e 5A1C     	 adds r2,r3,#1
ARM GAS   			page 54


 1917 0010 1346     	 mov r3,r2
 1918 0012 5B00     	 lsls r3,r3,#1
 1919 0014 1344     	 add r3,r3,r2
 1920 0016 DB00     	 lsls r3,r3,#3
 1921 0018 164A     	 ldr r2,.L109
 1922 001a 1344     	 add r3,r3,r2
 1923 001c FB60     	 str r3,[r7,#12]
1041:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1042:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1043:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1044:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 1924              	 .loc 1 1044 18
 1925 001e FB68     	 ldr r3,[r7,#12]
 1926 0020 DB68     	 ldr r3,[r3,#12]
 1927              	 .loc 1 1044 9
 1928 0022 0133     	 adds r3,r3,#1
 1929 0024 7B61     	 str r3,[r7,#20]
1045:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 1930              	 .loc 1 1045 23
 1931 0026 FB68     	 ldr r3,[r7,#12]
 1932 0028 9B68     	 ldr r3,[r3,#8]
 1933              	 .loc 1 1045 3
 1934 002a 7A69     	 ldr r2,[r7,#20]
 1935 002c 9A42     	 cmp r2,r3
 1936 002e 01D1     	 bne .L105
1046:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff = 0;
 1937              	 .loc 1 1046 11
 1938 0030 0023     	 movs r3,#0
 1939 0032 7B61     	 str r3,[r7,#20]
 1940              	.L105:
1047:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1048:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1049:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Output byte if free space is available
1050:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1051:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 1941              	 .loc 1 1051 23
 1942 0034 FB68     	 ldr r3,[r7,#12]
 1943 0036 1B69     	 ldr r3,[r3,#16]
 1944              	 .loc 1 1051 13
 1945 0038 7A69     	 ldr r2,[r7,#20]
 1946 003a 9A42     	 cmp r2,r3
 1947 003c 14BF     	 ite ne
 1948 003e 0123     	 movne r3,#1
 1949 0040 0023     	 moveq r3,#0
 1950 0042 DBB2     	 uxtb r3,r3
 1951              	 .loc 1 1051 3
 1952 0044 002B     	 cmp r3,#0
 1953 0046 0CD0     	 beq .L106
1052:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
 1954              	 .loc 1 1052 12
 1955 0048 FB68     	 ldr r3,[r7,#12]
 1956 004a 5A68     	 ldr r2,[r3,#4]
 1957              	 .loc 1 1052 27
 1958 004c FB68     	 ldr r3,[r7,#12]
 1959 004e DB68     	 ldr r3,[r3,#12]
 1960              	 .loc 1 1052 32
 1961 0050 1344     	 add r3,r3,r2
ARM GAS   			page 55


 1962              	 .loc 1 1052 34
 1963 0052 FA78     	 ldrb r2,[r7,#3]
 1964 0054 1A70     	 strb r2,[r3]
1053:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 1965              	 .loc 1 1053 18
 1966 0056 FB68     	 ldr r3,[r7,#12]
 1967 0058 7A69     	 ldr r2,[r7,#20]
 1968 005a DA60     	 str r2,[r3,#12]
1054:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 1;
 1969              	 .loc 1 1054 12
 1970 005c 0123     	 movs r3,#1
 1971 005e 3B61     	 str r3,[r7,#16]
 1972 0060 01E0     	 b .L107
 1973              	.L106:
1055:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1056:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 0;
 1974              	 .loc 1 1056 12
 1975 0062 0023     	 movs r3,#0
 1976 0064 3B61     	 str r3,[r7,#16]
 1977              	.L107:
1057:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1058:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1059:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 1978              	 .loc 1 1059 10
 1979 0066 3B69     	 ldr r3,[r7,#16]
1060:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 1980              	 .loc 1 1060 1
 1981 0068 1846     	 mov r0,r3
 1982 006a 1C37     	 adds r7,r7,#28
 1983              	 .cfi_def_cfa_offset 4
 1984 006c BD46     	 mov sp,r7
 1985              	 .cfi_def_cfa_register 13
 1986              	 
 1987 006e 5DF8047B 	 ldr r7,[sp],#4
 1988              	 .cfi_restore 7
 1989              	 .cfi_def_cfa_offset 0
 1990 0072 7047     	 bx lr
 1991              	.L110:
 1992              	 .align 2
 1993              	.L109:
 1994 0074 00000000 	 .word _SEGGER_RTT
 1995              	 .cfi_endproc
 1996              	.LFE19:
 1997              	 .cantunwind
 1998              	 .fnend
 1999              	 .size SEGGER_RTT_PutCharSkipNoLock,.-SEGGER_RTT_PutCharSkipNoLock
 2000              	 .section .text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 2001              	 .align 1
 2002              	 .global SEGGER_RTT_PutCharSkip
 2003              	 .syntax unified
 2004              	 .thumb
 2005              	 .thumb_func
 2006              	 .type SEGGER_RTT_PutCharSkip,%function
 2007              	SEGGER_RTT_PutCharSkip:
 2008              	 .fnstart
 2009              	.LFB20:
1061:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
ARM GAS   			page 56


1062:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1063:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1064:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1065:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1066:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1067:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1068:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1069:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1070:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1071:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    c            Byte to be stored.
1072:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1073:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1074:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1075:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1076:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1077:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1078:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1079:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1080:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 2010              	 .loc 1 1080 63
 2011              	 .cfi_startproc
 2012              	 
 2013              	 
 2014 0000 80B5     	 push {r7,lr}
 2015              	 .cfi_def_cfa_offset 8
 2016              	 .cfi_offset 7,-8
 2017              	 .cfi_offset 14,-4
 2018 0002 86B0     	 sub sp,sp,#24
 2019              	 .cfi_def_cfa_offset 32
 2020 0004 00AF     	 add r7,sp,#0
 2021              	 .cfi_def_cfa_register 7
 2022 0006 7860     	 str r0,[r7,#4]
 2023 0008 0B46     	 mov r3,r1
 2024 000a FB70     	 strb r3,[r7,#3]
1081:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1082:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              WrOff;
1083:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Status;
1084:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1085:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Prepare
1086:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1087:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 2025              	 .loc 1 1087 3
 2026 000c 204B     	 ldr r3,.L117
 2027 000e 1B78     	 ldrb r3,[r3]
 2028 0010 002B     	 cmp r3,#0
 2029 0012 01D1     	 bne .L112
 2030              	 .loc 1 1087 3 is_stmt 0 discriminator 1
 2031 0014 FFF7FEFF 	 bl _ZL7_DoInitv
 2032              	.L112:
 2033              	.LBB4:
1088:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2034              	 .loc 1 1088 3 is_stmt 1
 2035              	 .syntax unified
 2036              	
 2037 0018 EFF31183 	 mrs r3,basepri
 2038 001c 4FF02001 	 mov r1,#32
 2039 0020 81F31188 	 msr basepri,r1
ARM GAS   			page 57


 2040              	 
 2041              	
 2042              	 .thumb
 2043              	 .syntax unified
 2044 0024 FB60     	 str r3,[r7,#12]
1089:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1090:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1091:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1092:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 2045              	 .loc 1 1092 9
 2046 0026 7B68     	 ldr r3,[r7,#4]
 2047 0028 5A1C     	 adds r2,r3,#1
 2048 002a 1346     	 mov r3,r2
 2049 002c 5B00     	 lsls r3,r3,#1
 2050 002e 1344     	 add r3,r3,r2
 2051 0030 DB00     	 lsls r3,r3,#3
 2052 0032 174A     	 ldr r2,.L117
 2053 0034 1344     	 add r3,r3,r2
 2054 0036 BB60     	 str r3,[r7,#8]
1093:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1094:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1095:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1096:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 2055              	 .loc 1 1096 18
 2056 0038 BB68     	 ldr r3,[r7,#8]
 2057 003a DB68     	 ldr r3,[r3,#12]
 2058              	 .loc 1 1096 9
 2059 003c 0133     	 adds r3,r3,#1
 2060 003e 7B61     	 str r3,[r7,#20]
1097:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 2061              	 .loc 1 1097 23
 2062 0040 BB68     	 ldr r3,[r7,#8]
 2063 0042 9B68     	 ldr r3,[r3,#8]
 2064              	 .loc 1 1097 3
 2065 0044 7A69     	 ldr r2,[r7,#20]
 2066 0046 9A42     	 cmp r2,r3
 2067 0048 01D1     	 bne .L113
1098:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff = 0;
 2068              	 .loc 1 1098 11
 2069 004a 0023     	 movs r3,#0
 2070 004c 7B61     	 str r3,[r7,#20]
 2071              	.L113:
1099:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Output byte if free space is available
1102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 2072              	 .loc 1 1103 23
 2073 004e BB68     	 ldr r3,[r7,#8]
 2074 0050 1B69     	 ldr r3,[r3,#16]
 2075              	 .loc 1 1103 13
 2076 0052 7A69     	 ldr r2,[r7,#20]
 2077 0054 9A42     	 cmp r2,r3
 2078 0056 14BF     	 ite ne
 2079 0058 0123     	 movne r3,#1
 2080 005a 0023     	 moveq r3,#0
 2081 005c DBB2     	 uxtb r3,r3
ARM GAS   			page 58


 2082              	 .loc 1 1103 3
 2083 005e 002B     	 cmp r3,#0
 2084 0060 0CD0     	 beq .L114
1104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
 2085              	 .loc 1 1104 12
 2086 0062 BB68     	 ldr r3,[r7,#8]
 2087 0064 5A68     	 ldr r2,[r3,#4]
 2088              	 .loc 1 1104 27
 2089 0066 BB68     	 ldr r3,[r7,#8]
 2090 0068 DB68     	 ldr r3,[r3,#12]
 2091              	 .loc 1 1104 32
 2092 006a 1344     	 add r3,r3,r2
 2093              	 .loc 1 1104 34
 2094 006c FA78     	 ldrb r2,[r7,#3]
 2095 006e 1A70     	 strb r2,[r3]
1105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2096              	 .loc 1 1105 18
 2097 0070 BB68     	 ldr r3,[r7,#8]
 2098 0072 7A69     	 ldr r2,[r7,#20]
 2099 0074 DA60     	 str r2,[r3,#12]
1106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 1;
 2100              	 .loc 1 1106 12
 2101 0076 0123     	 movs r3,#1
 2102 0078 3B61     	 str r3,[r7,#16]
 2103 007a 01E0     	 b .L115
 2104              	.L114:
1107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 0;
 2105              	 .loc 1 1108 12
 2106 007c 0023     	 movs r3,#0
 2107 007e 3B61     	 str r3,[r7,#16]
 2108              	.L115:
1109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish up.
1112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2109              	 .loc 1 1113 3
 2110 0080 FB68     	 ldr r3,[r7,#12]
 2111              	 .syntax unified
 2112              	
 2113 0082 83F31188 	 msr basepri,r3
 2114              	 
 2115              	
 2116              	 .thumb
 2117              	 .syntax unified
 2118              	.LBE4:
1114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 2119              	 .loc 1 1115 10
 2120 0086 3B69     	 ldr r3,[r7,#16]
1116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2121              	 .loc 1 1116 1
 2122 0088 1846     	 mov r0,r3
 2123 008a 1837     	 adds r7,r7,#24
 2124              	 .cfi_def_cfa_offset 8
 2125 008c BD46     	 mov sp,r7
ARM GAS   			page 59


 2126              	 .cfi_def_cfa_register 13
 2127              	 
 2128 008e 80BD     	 pop {r7,pc}
 2129              	.L118:
 2130              	 .align 2
 2131              	.L117:
 2132 0090 00000000 	 .word _SEGGER_RTT
 2133              	 .cfi_endproc
 2134              	.LFE20:
 2135              	 .cantunwind
 2136              	 .fnend
 2137              	 .size SEGGER_RTT_PutCharSkip,.-SEGGER_RTT_PutCharSkip
 2138              	 .section .text.SEGGER_RTT_PutChar,"ax",%progbits
 2139              	 .align 1
 2140              	 .global SEGGER_RTT_PutChar
 2141              	 .syntax unified
 2142              	 .thumb
 2143              	 .thumb_func
 2144              	 .type SEGGER_RTT_PutChar,%function
 2145              	SEGGER_RTT_PutChar:
 2146              	 .fnstart
 2147              	.LFB21:
1117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****  /*********************************************************************
1119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
1121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    c            Byte to be stored.
1128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 2148              	 .loc 1 1136 59
 2149              	 .cfi_startproc
 2150              	 
 2151              	 
 2152 0000 80B5     	 push {r7,lr}
 2153              	 .cfi_def_cfa_offset 8
 2154              	 .cfi_offset 7,-8
 2155              	 .cfi_offset 14,-4
 2156 0002 86B0     	 sub sp,sp,#24
 2157              	 .cfi_def_cfa_offset 32
 2158 0004 00AF     	 add r7,sp,#0
 2159              	 .cfi_def_cfa_register 7
 2160 0006 7860     	 str r0,[r7,#4]
 2161 0008 0B46     	 mov r3,r1
 2162 000a FB70     	 strb r3,[r7,#3]
ARM GAS   			page 60


1137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              WrOff;
1139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Status;
1140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Prepare
1142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 2163              	 .loc 1 1143 3
 2164 000c 284B     	 ldr r3,.L127
 2165 000e 1B78     	 ldrb r3,[r3]
 2166 0010 002B     	 cmp r3,#0
 2167 0012 01D1     	 bne .L120
 2168              	 .loc 1 1143 3 is_stmt 0 discriminator 1
 2169 0014 FFF7FEFF 	 bl _ZL7_DoInitv
 2170              	.L120:
 2171              	.LBB5:
1144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2172              	 .loc 1 1144 3 is_stmt 1
 2173              	 .syntax unified
 2174              	
 2175 0018 EFF31183 	 mrs r3,basepri
 2176 001c 4FF02001 	 mov r1,#32
 2177 0020 81F31188 	 msr basepri,r1
 2178              	 
 2179              	
 2180              	 .thumb
 2181              	 .syntax unified
 2182 0024 FB60     	 str r3,[r7,#12]
1145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 2183              	 .loc 1 1148 9
 2184 0026 7B68     	 ldr r3,[r7,#4]
 2185 0028 5A1C     	 adds r2,r3,#1
 2186 002a 1346     	 mov r3,r2
 2187 002c 5B00     	 lsls r3,r3,#1
 2188 002e 1344     	 add r3,r3,r2
 2189 0030 DB00     	 lsls r3,r3,#3
 2190 0032 1F4A     	 ldr r2,.L127
 2191 0034 1344     	 add r3,r3,r2
 2192 0036 BB60     	 str r3,[r7,#8]
1149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 2193              	 .loc 1 1152 18
 2194 0038 BB68     	 ldr r3,[r7,#8]
 2195 003a DB68     	 ldr r3,[r3,#12]
 2196              	 .loc 1 1152 9
 2197 003c 0133     	 adds r3,r3,#1
 2198 003e 7B61     	 str r3,[r7,#20]
1153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 2199              	 .loc 1 1153 23
 2200 0040 BB68     	 ldr r3,[r7,#8]
 2201 0042 9B68     	 ldr r3,[r3,#8]
 2202              	 .loc 1 1153 3
ARM GAS   			page 61


 2203 0044 7A69     	 ldr r2,[r7,#20]
 2204 0046 9A42     	 cmp r2,r3
 2205 0048 01D1     	 bne .L121
1154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     WrOff = 0;
 2206              	 .loc 1 1154 11
 2207 004a 0023     	 movs r3,#0
 2208 004c 7B61     	 str r3,[r7,#20]
 2209              	.L121:
1155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 2210              	 .loc 1 1159 14
 2211 004e BB68     	 ldr r3,[r7,#8]
 2212 0050 5B69     	 ldr r3,[r3,#20]
 2213              	 .loc 1 1159 3
 2214 0052 022B     	 cmp r3,#2
 2215 0054 0AD1     	 bne .L122
 2216              	.L123:
1160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
 2217              	 .loc 1 1160 28
 2218 0056 BB68     	 ldr r3,[r7,#8]
 2219 0058 1B69     	 ldr r3,[r3,#16]
 2220              	 .loc 1 1160 18
 2221 005a 7A69     	 ldr r2,[r7,#20]
 2222 005c 9A42     	 cmp r2,r3
 2223 005e 0CBF     	 ite eq
 2224 0060 0123     	 moveq r3,#1
 2225 0062 0023     	 movne r3,#0
 2226 0064 DBB2     	 uxtb r3,r3
 2227 0066 002B     	 cmp r3,#0
 2228 0068 00D0     	 beq .L122
 2229              	 .loc 1 1160 5
 2230 006a F4E7     	 b .L123
 2231              	.L122:
1161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       ;
1162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Output byte if free space is available
1166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 2232              	 .loc 1 1167 23
 2233 006c BB68     	 ldr r3,[r7,#8]
 2234 006e 1B69     	 ldr r3,[r3,#16]
 2235              	 .loc 1 1167 13
 2236 0070 7A69     	 ldr r2,[r7,#20]
 2237 0072 9A42     	 cmp r2,r3
 2238 0074 14BF     	 ite ne
 2239 0076 0123     	 movne r3,#1
 2240 0078 0023     	 moveq r3,#0
 2241 007a DBB2     	 uxtb r3,r3
 2242              	 .loc 1 1167 3
 2243 007c 002B     	 cmp r3,#0
 2244 007e 0CD0     	 beq .L124
1168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->pBuffer[pRing->WrOff] = c;
ARM GAS   			page 62


 2245              	 .loc 1 1168 12
 2246 0080 BB68     	 ldr r3,[r7,#8]
 2247 0082 5A68     	 ldr r2,[r3,#4]
 2248              	 .loc 1 1168 27
 2249 0084 BB68     	 ldr r3,[r7,#8]
 2250 0086 DB68     	 ldr r3,[r3,#12]
 2251              	 .loc 1 1168 32
 2252 0088 1344     	 add r3,r3,r2
 2253              	 .loc 1 1168 34
 2254 008a FA78     	 ldrb r2,[r7,#3]
 2255 008c 1A70     	 strb r2,[r3]
1169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2256              	 .loc 1 1169 18
 2257 008e BB68     	 ldr r3,[r7,#8]
 2258 0090 7A69     	 ldr r2,[r7,#20]
 2259 0092 DA60     	 str r2,[r3,#12]
1170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 1;
 2260              	 .loc 1 1170 12
 2261 0094 0123     	 movs r3,#1
 2262 0096 3B61     	 str r3,[r7,#16]
 2263 0098 01E0     	 b .L125
 2264              	.L124:
1171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = 0;
 2265              	 .loc 1 1172 12
 2266 009a 0023     	 movs r3,#0
 2267 009c 3B61     	 str r3,[r7,#16]
 2268              	.L125:
1173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Finish up.
1176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2269              	 .loc 1 1177 3
 2270 009e FB68     	 ldr r3,[r7,#12]
 2271              	 .syntax unified
 2272              	
 2273 00a0 83F31188 	 msr basepri,r3
 2274              	 
 2275              	
 2276              	 .thumb
 2277              	 .syntax unified
 2278              	.LBE5:
1178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 2279              	 .loc 1 1179 10
 2280 00a4 3B69     	 ldr r3,[r7,#16]
1180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2281              	 .loc 1 1180 1
 2282 00a6 1846     	 mov r0,r3
 2283 00a8 1837     	 adds r7,r7,#24
 2284              	 .cfi_def_cfa_offset 8
 2285 00aa BD46     	 mov sp,r7
 2286              	 .cfi_def_cfa_register 13
 2287              	 
 2288 00ac 80BD     	 pop {r7,pc}
 2289              	.L128:
ARM GAS   			page 63


 2290 00ae 00BF     	 .align 2
 2291              	.L127:
 2292 00b0 00000000 	 .word _SEGGER_RTT
 2293              	 .cfi_endproc
 2294              	.LFE21:
 2295              	 .cantunwind
 2296              	 .fnend
 2297              	 .size SEGGER_RTT_PutChar,.-SEGGER_RTT_PutChar
 2298              	 .section .text.SEGGER_RTT_GetKey,"ax",%progbits
 2299              	 .align 1
 2300              	 .global SEGGER_RTT_GetKey
 2301              	 .syntax unified
 2302              	 .thumb
 2303              	 .thumb_func
 2304              	 .type SEGGER_RTT_GetKey,%function
 2305              	SEGGER_RTT_GetKey:
 2306              	 .fnstart
 2307              	.LFB22:
1181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Host has previously stored data there.
1189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 2308              	 .loc 1 1197 29
 2309              	 .cfi_startproc
 2310              	 
 2311              	 
 2312 0000 80B5     	 push {r7,lr}
 2313              	 .cfi_def_cfa_offset 8
 2314              	 .cfi_offset 7,-8
 2315              	 .cfi_offset 14,-4
 2316 0002 82B0     	 sub sp,sp,#8
 2317              	 .cfi_def_cfa_offset 16
 2318 0004 00AF     	 add r7,sp,#0
 2319              	 .cfi_def_cfa_register 7
1198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   char c;
1199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 2320              	 .loc 1 1201 27
 2321 0006 FB1C     	 adds r3,r7,#3
 2322 0008 0122     	 movs r2,#1
 2323 000a 1946     	 mov r1,r3
 2324 000c 0020     	 movs r0,#0
 2325 000e FFF7FEFF 	 bl SEGGER_RTT_Read
ARM GAS   			page 64


 2326 0012 0346     	 mov r3,r0
 2327              	 .loc 1 1201 5
 2328 0014 7B60     	 str r3,[r7,#4]
1202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (r == 1) {
 2329              	 .loc 1 1202 3
 2330 0016 7B68     	 ldr r3,[r7,#4]
 2331 0018 012B     	 cmp r3,#1
 2332 001a 02D1     	 bne .L130
1203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 2333              	 .loc 1 1203 9
 2334 001c FB78     	 ldrb r3,[r7,#3]
 2335              	 .loc 1 1203 7
 2336 001e 7B60     	 str r3,[r7,#4]
 2337 0020 02E0     	 b .L131
 2338              	.L130:
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 2339              	 .loc 1 1205 7
 2340 0022 4FF0FF33 	 mov r3,#-1
 2341 0026 7B60     	 str r3,[r7,#4]
 2342              	.L131:
1206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 2343              	 .loc 1 1207 10
 2344 0028 7B68     	 ldr r3,[r7,#4]
1208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2345              	 .loc 1 1208 1
 2346 002a 1846     	 mov r0,r3
 2347 002c 0837     	 adds r7,r7,#8
 2348              	 .cfi_def_cfa_offset 8
 2349 002e BD46     	 mov sp,r7
 2350              	 .cfi_def_cfa_register 13
 2351              	 
 2352 0030 80BD     	 pop {r7,pc}
 2353              	 .cfi_endproc
 2354              	.LFE22:
 2355              	 .cantunwind
 2356              	 .fnend
 2357              	 .size SEGGER_RTT_GetKey,.-SEGGER_RTT_GetKey
 2358              	 .section .text.SEGGER_RTT_WaitKey,"ax",%progbits
 2359              	 .align 1
 2360              	 .global SEGGER_RTT_WaitKey
 2361              	 .syntax unified
 2362              	 .thumb
 2363              	 .thumb_func
 2364              	 .type SEGGER_RTT_WaitKey,%function
 2365              	SEGGER_RTT_WaitKey:
 2366              	 .fnstart
 2367              	.LFB23:
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
ARM GAS   			page 65


1217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 2368              	 .loc 1 1225 30
 2369              	 .cfi_startproc
 2370              	 
 2371              	 
 2372 0000 80B5     	 push {r7,lr}
 2373              	 .cfi_def_cfa_offset 8
 2374              	 .cfi_offset 7,-8
 2375              	 .cfi_offset 14,-4
 2376 0002 82B0     	 sub sp,sp,#8
 2377              	 .cfi_def_cfa_offset 16
 2378 0004 00AF     	 add r7,sp,#0
 2379              	 .cfi_def_cfa_register 7
 2380              	.L135:
1226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
1229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 2381              	 .loc 1 1229 26
 2382 0006 FFF7FEFF 	 bl SEGGER_RTT_GetKey
 2383 000a 7860     	 str r0,[r7,#4]
1230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } while (r < 0);
 2384              	 .loc 1 1230 14
 2385 000c 7B68     	 ldr r3,[r7,#4]
 2386 000e 002B     	 cmp r3,#0
 2387 0010 00DA     	 bge .L134
1228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 2388              	 .loc 1 1228 3
 2389 0012 F8E7     	 b .L135
 2390              	.L134:
1231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 2391              	 .loc 1 1231 10
 2392 0014 7B68     	 ldr r3,[r7,#4]
1232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2393              	 .loc 1 1232 1
 2394 0016 1846     	 mov r0,r3
 2395 0018 0837     	 adds r7,r7,#8
 2396              	 .cfi_def_cfa_offset 8
 2397 001a BD46     	 mov sp,r7
 2398              	 .cfi_def_cfa_register 13
 2399              	 
 2400 001c 80BD     	 pop {r7,pc}
 2401              	 .cfi_endproc
 2402              	.LFE23:
 2403              	 .cantunwind
 2404              	 .fnend
 2405              	 .size SEGGER_RTT_WaitKey,.-SEGGER_RTT_WaitKey
 2406              	 .section .text.SEGGER_RTT_HasKey,"ax",%progbits
 2407              	 .align 1
ARM GAS   			page 66


 2408              	 .global SEGGER_RTT_HasKey
 2409              	 .syntax unified
 2410              	 .thumb
 2411              	 .thumb_func
 2412              	 .type SEGGER_RTT_HasKey,%function
 2413              	SEGGER_RTT_HasKey:
 2414              	 .fnstart
 2415              	.LFB24:
1233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
1243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Notes
1246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 2416              	 .loc 1 1248 29
 2417              	 .cfi_startproc
 2418              	 
 2419              	 
 2420 0000 80B5     	 push {r7,lr}
 2421              	 .cfi_def_cfa_offset 8
 2422              	 .cfi_offset 7,-8
 2423              	 .cfi_offset 14,-4
 2424 0002 82B0     	 sub sp,sp,#8
 2425              	 .cfi_def_cfa_offset 16
 2426 0004 00AF     	 add r7,sp,#0
 2427              	 .cfi_def_cfa_register 7
1249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned RdOff;
1250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 2428              	 .loc 1 1252 3
 2429 0006 0E4B     	 ldr r3,.L142
 2430 0008 1B78     	 ldrb r3,[r3]
 2431 000a 002B     	 cmp r3,#0
 2432 000c 01D1     	 bne .L138
 2433              	 .loc 1 1252 3 is_stmt 0 discriminator 1
 2434 000e FFF7FEFF 	 bl _ZL7_DoInitv
 2435              	.L138:
1253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   RdOff = _SEGGER_RTT.aDown[0].RdOff;
 2436              	 .loc 1 1253 9 is_stmt 1
 2437 0012 0B4B     	 ldr r3,.L142
 2438 0014 1B6F     	 ldr r3,[r3,#112]
 2439 0016 3B60     	 str r3,[r7]
1254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (RdOff != _SEGGER_RTT.aDown[0].WrOff) {
 2440              	 .loc 1 1254 37
 2441 0018 094B     	 ldr r3,.L142
 2442 001a DB6E     	 ldr r3,[r3,#108]
ARM GAS   			page 67


 2443              	 .loc 1 1254 13
 2444 001c 3A68     	 ldr r2,[r7]
 2445 001e 9A42     	 cmp r2,r3
 2446 0020 14BF     	 ite ne
 2447 0022 0123     	 movne r3,#1
 2448 0024 0023     	 moveq r3,#0
 2449 0026 DBB2     	 uxtb r3,r3
 2450              	 .loc 1 1254 3
 2451 0028 002B     	 cmp r3,#0
 2452 002a 02D0     	 beq .L139
1255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = 1;
 2453              	 .loc 1 1255 7
 2454 002c 0123     	 movs r3,#1
 2455 002e 7B60     	 str r3,[r7,#4]
 2456 0030 01E0     	 b .L140
 2457              	.L139:
1256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = 0;
 2458              	 .loc 1 1257 7
 2459 0032 0023     	 movs r3,#0
 2460 0034 7B60     	 str r3,[r7,#4]
 2461              	.L140:
1258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 2462              	 .loc 1 1259 10
 2463 0036 7B68     	 ldr r3,[r7,#4]
1260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2464              	 .loc 1 1260 1
 2465 0038 1846     	 mov r0,r3
 2466 003a 0837     	 adds r7,r7,#8
 2467              	 .cfi_def_cfa_offset 8
 2468 003c BD46     	 mov sp,r7
 2469              	 .cfi_def_cfa_register 13
 2470              	 
 2471 003e 80BD     	 pop {r7,pc}
 2472              	.L143:
 2473              	 .align 2
 2474              	.L142:
 2475 0040 00000000 	 .word _SEGGER_RTT
 2476              	 .cfi_endproc
 2477              	.LFE24:
 2478              	 .cantunwind
 2479              	 .fnend
 2480              	 .size SEGGER_RTT_HasKey,.-SEGGER_RTT_HasKey
 2481              	 .section .text.SEGGER_RTT_HasData,"ax",%progbits
 2482              	 .align 1
 2483              	 .global SEGGER_RTT_HasData
 2484              	 .syntax unified
 2485              	 .thumb
 2486              	 .thumb_func
 2487              	 .type SEGGER_RTT_HasData,%function
 2488              	SEGGER_RTT_HasData:
 2489              	 .fnstart
 2490              	.LFB25:
1261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
ARM GAS   			page 68


1264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value:
1270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  ==0:  No data
1271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  !=0:  Data in buffer
1272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 2491              	 .loc 1 1274 51
 2492              	 .cfi_startproc
 2493              	 
 2494              	 
 2495              	 
 2496 0000 80B4     	 push {r7}
 2497              	 .cfi_def_cfa_offset 4
 2498              	 .cfi_offset 7,-4
 2499 0002 85B0     	 sub sp,sp,#20
 2500              	 .cfi_def_cfa_offset 24
 2501 0004 00AF     	 add r7,sp,#0
 2502              	 .cfi_def_cfa_register 7
 2503 0006 7860     	 str r0,[r7,#4]
1275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
1276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                v;
1277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 2504              	 .loc 1 1278 9
 2505 0008 7A68     	 ldr r2,[r7,#4]
 2506 000a 1346     	 mov r3,r2
 2507 000c 5B00     	 lsls r3,r3,#1
 2508 000e 1344     	 add r3,r3,r2
 2509 0010 DB00     	 lsls r3,r3,#3
 2510 0012 6033     	 adds r3,r3,#96
 2511 0014 074A     	 ldr r2,.L146
 2512 0016 1344     	 add r3,r3,r2
 2513 0018 FB60     	 str r3,[r7,#12]
1279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   v = pRing->WrOff;
 2514              	 .loc 1 1279 5
 2515 001a FB68     	 ldr r3,[r7,#12]
 2516 001c DB68     	 ldr r3,[r3,#12]
 2517 001e BB60     	 str r3,[r7,#8]
1280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return v - pRing->RdOff;
 2518              	 .loc 1 1280 21
 2519 0020 FB68     	 ldr r3,[r7,#12]
 2520 0022 1B69     	 ldr r3,[r3,#16]
 2521 0024 BA68     	 ldr r2,[r7,#8]
 2522 0026 D31A     	 subs r3,r2,r3
1281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2523              	 .loc 1 1281 1
 2524 0028 1846     	 mov r0,r3
 2525 002a 1437     	 adds r7,r7,#20
 2526              	 .cfi_def_cfa_offset 4
 2527 002c BD46     	 mov sp,r7
 2528              	 .cfi_def_cfa_register 13
 2529              	 
ARM GAS   			page 69


 2530 002e 5DF8047B 	 ldr r7,[sp],#4
 2531              	 .cfi_restore 7
 2532              	 .cfi_def_cfa_offset 0
 2533 0032 7047     	 bx lr
 2534              	.L147:
 2535              	 .align 2
 2536              	.L146:
 2537 0034 00000000 	 .word _SEGGER_RTT
 2538              	 .cfi_endproc
 2539              	.LFE25:
 2540              	 .cantunwind
 2541              	 .fnend
 2542              	 .size SEGGER_RTT_HasData,.-SEGGER_RTT_HasData
 2543              	 .section .text.SEGGER_RTT_HasDataUp,"ax",%progbits
 2544              	 .align 1
 2545              	 .global SEGGER_RTT_HasDataUp
 2546              	 .syntax unified
 2547              	 .thumb
 2548              	 .thumb_func
 2549              	 .type SEGGER_RTT_HasDataUp,%function
 2550              	SEGGER_RTT_HasDataUp:
 2551              	 .fnstart
 2552              	.LFB26:
1282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value:
1291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  ==0:  No data
1292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  !=0:  Data in buffer
1293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 2553              	 .loc 1 1295 53
 2554              	 .cfi_startproc
 2555              	 
 2556              	 
 2557              	 
 2558 0000 80B4     	 push {r7}
 2559              	 .cfi_def_cfa_offset 4
 2560              	 .cfi_offset 7,-4
 2561 0002 85B0     	 sub sp,sp,#20
 2562              	 .cfi_def_cfa_offset 24
 2563 0004 00AF     	 add r7,sp,#0
 2564              	 .cfi_def_cfa_register 7
 2565 0006 7860     	 str r0,[r7,#4]
1296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned                v;
1298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 2566              	 .loc 1 1299 9
 2567 0008 7B68     	 ldr r3,[r7,#4]
 2568 000a 5A1C     	 adds r2,r3,#1
ARM GAS   			page 70


 2569 000c 1346     	 mov r3,r2
 2570 000e 5B00     	 lsls r3,r3,#1
 2571 0010 1344     	 add r3,r3,r2
 2572 0012 DB00     	 lsls r3,r3,#3
 2573 0014 074A     	 ldr r2,.L150
 2574 0016 1344     	 add r3,r3,r2
 2575 0018 FB60     	 str r3,[r7,#12]
1300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   v = pRing->RdOff;
 2576              	 .loc 1 1300 5
 2577 001a FB68     	 ldr r3,[r7,#12]
 2578 001c 1B69     	 ldr r3,[r3,#16]
 2579 001e BB60     	 str r3,[r7,#8]
1301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return pRing->WrOff - v;
 2580              	 .loc 1 1301 17
 2581 0020 FB68     	 ldr r3,[r7,#12]
 2582 0022 DA68     	 ldr r2,[r3,#12]
 2583              	 .loc 1 1301 25
 2584 0024 BB68     	 ldr r3,[r7,#8]
 2585 0026 D31A     	 subs r3,r2,r3
1302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2586              	 .loc 1 1302 1
 2587 0028 1846     	 mov r0,r3
 2588 002a 1437     	 adds r7,r7,#20
 2589              	 .cfi_def_cfa_offset 4
 2590 002c BD46     	 mov sp,r7
 2591              	 .cfi_def_cfa_register 13
 2592              	 
 2593 002e 5DF8047B 	 ldr r7,[sp],#4
 2594              	 .cfi_restore 7
 2595              	 .cfi_def_cfa_offset 0
 2596 0032 7047     	 bx lr
 2597              	.L151:
 2598              	 .align 2
 2599              	.L150:
 2600 0034 00000000 	 .word _SEGGER_RTT
 2601              	 .cfi_endproc
 2602              	.LFE26:
 2603              	 .cantunwind
 2604              	 .fnend
 2605              	 .size SEGGER_RTT_HasDataUp,.-SEGGER_RTT_HasDataUp
 2606              	 .section .text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 2607              	 .align 1
 2608              	 .global SEGGER_RTT_AllocDownBuffer
 2609              	 .syntax unified
 2610              	 .thumb
 2611              	 .thumb_func
 2612              	 .type SEGGER_RTT_AllocDownBuffer,%function
 2613              	SEGGER_RTT_AllocDownBuffer:
 2614              	 .fnstart
 2615              	.LFB27:
1303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
ARM GAS   			page 71


1310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0 - Error
1322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 2616              	 .loc 1 1323 103
 2617              	 .cfi_startproc
 2618              	 
 2619              	 
 2620 0000 80B5     	 push {r7,lr}
 2621              	 .cfi_def_cfa_offset 8
 2622              	 .cfi_offset 7,-8
 2623              	 .cfi_offset 14,-4
 2624 0002 86B0     	 sub sp,sp,#24
 2625              	 .cfi_def_cfa_offset 32
 2626 0004 00AF     	 add r7,sp,#0
 2627              	 .cfi_def_cfa_register 7
 2628 0006 F860     	 str r0,[r7,#12]
 2629 0008 B960     	 str r1,[r7,#8]
 2630 000a 7A60     	 str r2,[r7,#4]
 2631 000c 3B60     	 str r3,[r7]
1324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int BufferIndex;
1325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 2632              	 .loc 1 1326 3
 2633 000e 384B     	 ldr r3,.L161
 2634 0010 1B78     	 ldrb r3,[r3]
 2635 0012 002B     	 cmp r3,#0
 2636 0014 01D1     	 bne .L153
 2637              	 .loc 1 1326 3 is_stmt 0 discriminator 1
 2638 0016 FFF7FEFF 	 bl _ZL7_DoInitv
 2639              	.L153:
 2640              	.LBB6:
1327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2641              	 .loc 1 1327 3 is_stmt 1
 2642              	 .syntax unified
 2643              	
 2644 001a EFF31183 	 mrs r3,basepri
 2645 001e 4FF02001 	 mov r1,#32
 2646 0022 81F31188 	 msr basepri,r1
 2647              	 
 2648              	
 2649              	 .thumb
 2650              	 .syntax unified
 2651 0026 3B61     	 str r3,[r7,#16]
1328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   BufferIndex = 0;
 2652              	 .loc 1 1328 15
 2653 0028 0023     	 movs r3,#0
ARM GAS   			page 72


 2654 002a 7B61     	 str r3,[r7,#20]
 2655              	.L156:
1329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
1330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (_SEGGER_RTT.aDown[BufferIndex].pBuffer == NULL) {
 2656              	 .loc 1 1330 40
 2657 002c 3049     	 ldr r1,.L161
 2658 002e 7A69     	 ldr r2,[r7,#20]
 2659 0030 1346     	 mov r3,r2
 2660 0032 5B00     	 lsls r3,r3,#1
 2661 0034 1344     	 add r3,r3,r2
 2662 0036 DB00     	 lsls r3,r3,#3
 2663 0038 0B44     	 add r3,r3,r1
 2664 003a 6433     	 adds r3,r3,#100
 2665 003c 1B68     	 ldr r3,[r3]
 2666              	 .loc 1 1330 5
 2667 003e 002B     	 cmp r3,#0
 2668 0040 08D0     	 beq .L160
1331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
1332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferIndex++;
 2669              	 .loc 1 1333 16
 2670 0042 7B69     	 ldr r3,[r7,#20]
 2671 0044 0133     	 adds r3,r3,#1
 2672 0046 7B61     	 str r3,[r7,#20]
1334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers);
 2673              	 .loc 1 1334 38
 2674 0048 294B     	 ldr r3,.L161
 2675 004a 5B69     	 ldr r3,[r3,#20]
 2676              	 .loc 1 1334 24
 2677 004c 7A69     	 ldr r2,[r7,#20]
 2678 004e 9A42     	 cmp r2,r3
 2679 0050 01DA     	 bge .L155
1329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
 2680              	 .loc 1 1329 3
 2681 0052 EBE7     	 b .L156
 2682              	.L160:
1331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 2683              	 .loc 1 1331 7
 2684 0054 00BF     	 nop
 2685              	.L155:
1335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers) {
 2686              	 .loc 1 1335 33
 2687 0056 264B     	 ldr r3,.L161
 2688 0058 5B69     	 ldr r3,[r3,#20]
 2689              	 .loc 1 1335 3
 2690 005a 7A69     	 ldr r2,[r7,#20]
 2691 005c 9A42     	 cmp r2,r3
 2692 005e 3CDA     	 bge .L157
1336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 2693              	 .loc 1 1336 49
 2694 0060 2349     	 ldr r1,.L161
 2695 0062 7A69     	 ldr r2,[r7,#20]
 2696 0064 1346     	 mov r3,r2
 2697 0066 5B00     	 lsls r3,r3,#1
 2698 0068 1344     	 add r3,r3,r2
 2699 006a DB00     	 lsls r3,r3,#3
 2700 006c 0B44     	 add r3,r3,r1
ARM GAS   			page 73


 2701 006e 6033     	 adds r3,r3,#96
 2702 0070 FA68     	 ldr r2,[r7,#12]
 2703 0072 1A60     	 str r2,[r3]
1337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2704              	 .loc 1 1337 49
 2705 0074 1E49     	 ldr r1,.L161
 2706 0076 7A69     	 ldr r2,[r7,#20]
 2707 0078 1346     	 mov r3,r2
 2708 007a 5B00     	 lsls r3,r3,#1
 2709 007c 1344     	 add r3,r3,r2
 2710 007e DB00     	 lsls r3,r3,#3
 2711 0080 0B44     	 add r3,r3,r1
 2712 0082 6433     	 adds r3,r3,#100
 2713 0084 BA68     	 ldr r2,[r7,#8]
 2714 0086 1A60     	 str r2,[r3]
1338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2715              	 .loc 1 1338 49
 2716 0088 1949     	 ldr r1,.L161
 2717 008a 7A69     	 ldr r2,[r7,#20]
 2718 008c 1346     	 mov r3,r2
 2719 008e 5B00     	 lsls r3,r3,#1
 2720 0090 1344     	 add r3,r3,r2
 2721 0092 DB00     	 lsls r3,r3,#3
 2722 0094 0B44     	 add r3,r3,r1
 2723 0096 6833     	 adds r3,r3,#104
 2724 0098 7A68     	 ldr r2,[r7,#4]
 2725 009a 1A60     	 str r2,[r3]
1339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 2726              	 .loc 1 1339 49
 2727 009c 1449     	 ldr r1,.L161
 2728 009e 7A69     	 ldr r2,[r7,#20]
 2729 00a0 1346     	 mov r3,r2
 2730 00a2 5B00     	 lsls r3,r3,#1
 2731 00a4 1344     	 add r3,r3,r2
 2732 00a6 DB00     	 lsls r3,r3,#3
 2733 00a8 0B44     	 add r3,r3,r1
 2734 00aa 7033     	 adds r3,r3,#112
 2735 00ac 0022     	 movs r2,#0
 2736 00ae 1A60     	 str r2,[r3]
1340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 2737              	 .loc 1 1340 49
 2738 00b0 0F49     	 ldr r1,.L161
 2739 00b2 7A69     	 ldr r2,[r7,#20]
 2740 00b4 1346     	 mov r3,r2
 2741 00b6 5B00     	 lsls r3,r3,#1
 2742 00b8 1344     	 add r3,r3,r2
 2743 00ba DB00     	 lsls r3,r3,#3
 2744 00bc 0B44     	 add r3,r3,r1
 2745 00be 6C33     	 adds r3,r3,#108
 2746 00c0 0022     	 movs r2,#0
 2747 00c2 1A60     	 str r2,[r3]
1341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags        = Flags;
 2748              	 .loc 1 1341 49
 2749 00c4 0A49     	 ldr r1,.L161
 2750 00c6 7A69     	 ldr r2,[r7,#20]
 2751 00c8 1346     	 mov r3,r2
 2752 00ca 5B00     	 lsls r3,r3,#1
ARM GAS   			page 74


 2753 00cc 1344     	 add r3,r3,r2
 2754 00ce DB00     	 lsls r3,r3,#3
 2755 00d0 0B44     	 add r3,r3,r1
 2756 00d2 7433     	 adds r3,r3,#116
 2757 00d4 3A68     	 ldr r2,[r7]
 2758 00d6 1A60     	 str r2,[r3]
 2759 00d8 02E0     	 b .L158
 2760              	.L157:
1342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferIndex = -1;
 2761              	 .loc 1 1343 17
 2762 00da 4FF0FF33 	 mov r3,#-1
 2763 00de 7B61     	 str r3,[r7,#20]
 2764              	.L158:
1344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2765              	 .loc 1 1345 3
 2766 00e0 3B69     	 ldr r3,[r7,#16]
 2767              	 .syntax unified
 2768              	
 2769 00e2 83F31188 	 msr basepri,r3
 2770              	 
 2771              	
 2772              	 .thumb
 2773              	 .syntax unified
 2774              	.LBE6:
1346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return BufferIndex;
 2775              	 .loc 1 1346 10
 2776 00e6 7B69     	 ldr r3,[r7,#20]
1347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2777              	 .loc 1 1347 1
 2778 00e8 1846     	 mov r0,r3
 2779 00ea 1837     	 adds r7,r7,#24
 2780              	 .cfi_def_cfa_offset 8
 2781 00ec BD46     	 mov sp,r7
 2782              	 .cfi_def_cfa_register 13
 2783              	 
 2784 00ee 80BD     	 pop {r7,pc}
 2785              	.L162:
 2786              	 .align 2
 2787              	.L161:
 2788 00f0 00000000 	 .word _SEGGER_RTT
 2789              	 .cfi_endproc
 2790              	.LFE27:
 2791              	 .cantunwind
 2792              	 .fnend
 2793              	 .size SEGGER_RTT_AllocDownBuffer,.-SEGGER_RTT_AllocDownBuffer
 2794              	 .section .text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 2795              	 .align 1
 2796              	 .global SEGGER_RTT_AllocUpBuffer
 2797              	 .syntax unified
 2798              	 .thumb
 2799              	 .thumb_func
 2800              	 .type SEGGER_RTT_AllocUpBuffer,%function
 2801              	SEGGER_RTT_AllocUpBuffer:
 2802              	 .fnstart
 2803              	.LFB28:
ARM GAS   			page 75


1348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0 - Error
1367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 2804              	 .loc 1 1368 101
 2805              	 .cfi_startproc
 2806              	 
 2807              	 
 2808 0000 80B5     	 push {r7,lr}
 2809              	 .cfi_def_cfa_offset 8
 2810              	 .cfi_offset 7,-8
 2811              	 .cfi_offset 14,-4
 2812 0002 86B0     	 sub sp,sp,#24
 2813              	 .cfi_def_cfa_offset 32
 2814 0004 00AF     	 add r7,sp,#0
 2815              	 .cfi_def_cfa_register 7
 2816 0006 F860     	 str r0,[r7,#12]
 2817 0008 B960     	 str r1,[r7,#8]
 2818 000a 7A60     	 str r2,[r7,#4]
 2819 000c 3B60     	 str r3,[r7]
1369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int BufferIndex;
1370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 2820              	 .loc 1 1371 3
 2821 000e 394B     	 ldr r3,.L172
 2822 0010 1B78     	 ldrb r3,[r3]
 2823 0012 002B     	 cmp r3,#0
 2824 0014 01D1     	 bne .L164
 2825              	 .loc 1 1371 3 is_stmt 0 discriminator 1
 2826 0016 FFF7FEFF 	 bl _ZL7_DoInitv
 2827              	.L164:
 2828              	.LBB7:
1372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 2829              	 .loc 1 1372 3 is_stmt 1
 2830              	 .syntax unified
 2831              	
 2832 001a EFF31183 	 mrs r3,basepri
 2833 001e 4FF02001 	 mov r1,#32
 2834 0022 81F31188 	 msr basepri,r1
 2835              	 
ARM GAS   			page 76


 2836              	
 2837              	 .thumb
 2838              	 .syntax unified
 2839 0026 3B61     	 str r3,[r7,#16]
1373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   BufferIndex = 0;
 2840              	 .loc 1 1373 15
 2841 0028 0023     	 movs r3,#0
 2842 002a 7B61     	 str r3,[r7,#20]
 2843              	.L167:
1374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
1375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (_SEGGER_RTT.aUp[BufferIndex].pBuffer == NULL) {
 2844              	 .loc 1 1375 38
 2845 002c 3149     	 ldr r1,.L172
 2846 002e 7B69     	 ldr r3,[r7,#20]
 2847 0030 5A1C     	 adds r2,r3,#1
 2848 0032 1346     	 mov r3,r2
 2849 0034 5B00     	 lsls r3,r3,#1
 2850 0036 1344     	 add r3,r3,r2
 2851 0038 DB00     	 lsls r3,r3,#3
 2852 003a 0B44     	 add r3,r3,r1
 2853 003c 0433     	 adds r3,r3,#4
 2854 003e 1B68     	 ldr r3,[r3]
 2855              	 .loc 1 1375 5
 2856 0040 002B     	 cmp r3,#0
 2857 0042 08D0     	 beq .L171
1376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
1377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferIndex++;
 2858              	 .loc 1 1378 16
 2859 0044 7B69     	 ldr r3,[r7,#20]
 2860 0046 0133     	 adds r3,r3,#1
 2861 0048 7B61     	 str r3,[r7,#20]
1379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers);
 2862              	 .loc 1 1379 38
 2863 004a 2A4B     	 ldr r3,.L172
 2864 004c 1B69     	 ldr r3,[r3,#16]
 2865              	 .loc 1 1379 24
 2866 004e 7A69     	 ldr r2,[r7,#20]
 2867 0050 9A42     	 cmp r2,r3
 2868 0052 01DA     	 bge .L166
1374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   do {
 2869              	 .loc 1 1374 3
 2870 0054 EAE7     	 b .L167
 2871              	.L171:
1376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 2872              	 .loc 1 1376 7
 2873 0056 00BF     	 nop
 2874              	.L166:
1380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers) {
 2875              	 .loc 1 1380 33
 2876 0058 264B     	 ldr r3,.L172
 2877 005a 1B69     	 ldr r3,[r3,#16]
 2878              	 .loc 1 1380 3
 2879 005c 7A69     	 ldr r2,[r7,#20]
 2880 005e 9A42     	 cmp r2,r3
 2881 0060 3DDA     	 bge .L168
1381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
ARM GAS   			page 77


 2882              	 .loc 1 1381 47
 2883 0062 2449     	 ldr r1,.L172
 2884 0064 7B69     	 ldr r3,[r7,#20]
 2885 0066 5A1C     	 adds r2,r3,#1
 2886 0068 1346     	 mov r3,r2
 2887 006a 5B00     	 lsls r3,r3,#1
 2888 006c 1344     	 add r3,r3,r2
 2889 006e DB00     	 lsls r3,r3,#3
 2890 0070 0B44     	 add r3,r3,r1
 2891 0072 FA68     	 ldr r2,[r7,#12]
 2892 0074 1A60     	 str r2,[r3]
1382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2893              	 .loc 1 1382 47
 2894 0076 1F49     	 ldr r1,.L172
 2895 0078 7B69     	 ldr r3,[r7,#20]
 2896 007a 5A1C     	 adds r2,r3,#1
 2897 007c 1346     	 mov r3,r2
 2898 007e 5B00     	 lsls r3,r3,#1
 2899 0080 1344     	 add r3,r3,r2
 2900 0082 DB00     	 lsls r3,r3,#3
 2901 0084 0B44     	 add r3,r3,r1
 2902 0086 0433     	 adds r3,r3,#4
 2903 0088 BA68     	 ldr r2,[r7,#8]
 2904 008a 1A60     	 str r2,[r3]
1383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2905              	 .loc 1 1383 47
 2906 008c 1949     	 ldr r1,.L172
 2907 008e 7A69     	 ldr r2,[r7,#20]
 2908 0090 1346     	 mov r3,r2
 2909 0092 5B00     	 lsls r3,r3,#1
 2910 0094 1344     	 add r3,r3,r2
 2911 0096 DB00     	 lsls r3,r3,#3
 2912 0098 0B44     	 add r3,r3,r1
 2913 009a 2033     	 adds r3,r3,#32
 2914 009c 7A68     	 ldr r2,[r7,#4]
 2915 009e 1A60     	 str r2,[r3]
1384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2916              	 .loc 1 1384 47
 2917 00a0 1449     	 ldr r1,.L172
 2918 00a2 7A69     	 ldr r2,[r7,#20]
 2919 00a4 1346     	 mov r3,r2
 2920 00a6 5B00     	 lsls r3,r3,#1
 2921 00a8 1344     	 add r3,r3,r2
 2922 00aa DB00     	 lsls r3,r3,#3
 2923 00ac 0B44     	 add r3,r3,r1
 2924 00ae 2833     	 adds r3,r3,#40
 2925 00b0 0022     	 movs r2,#0
 2926 00b2 1A60     	 str r2,[r3]
1385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2927              	 .loc 1 1385 47
 2928 00b4 0F49     	 ldr r1,.L172
 2929 00b6 7A69     	 ldr r2,[r7,#20]
 2930 00b8 1346     	 mov r3,r2
 2931 00ba 5B00     	 lsls r3,r3,#1
 2932 00bc 1344     	 add r3,r3,r2
 2933 00be DB00     	 lsls r3,r3,#3
 2934 00c0 0B44     	 add r3,r3,r1
ARM GAS   			page 78


 2935 00c2 2433     	 adds r3,r3,#36
 2936 00c4 0022     	 movs r2,#0
 2937 00c6 1A60     	 str r2,[r3]
1386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags        = Flags;
 2938              	 .loc 1 1386 47
 2939 00c8 0A49     	 ldr r1,.L172
 2940 00ca 7A69     	 ldr r2,[r7,#20]
 2941 00cc 1346     	 mov r3,r2
 2942 00ce 5B00     	 lsls r3,r3,#1
 2943 00d0 1344     	 add r3,r3,r2
 2944 00d2 DB00     	 lsls r3,r3,#3
 2945 00d4 0B44     	 add r3,r3,r1
 2946 00d6 2C33     	 adds r3,r3,#44
 2947 00d8 3A68     	 ldr r2,[r7]
 2948 00da 1A60     	 str r2,[r3]
 2949 00dc 02E0     	 b .L169
 2950              	.L168:
1387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     BufferIndex = -1;
 2951              	 .loc 1 1388 17
 2952 00de 4FF0FF33 	 mov r3,#-1
 2953 00e2 7B61     	 str r3,[r7,#20]
 2954              	.L169:
1389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2955              	 .loc 1 1390 3
 2956 00e4 3B69     	 ldr r3,[r7,#16]
 2957              	 .syntax unified
 2958              	
 2959 00e6 83F31188 	 msr basepri,r3
 2960              	 
 2961              	
 2962              	 .thumb
 2963              	 .syntax unified
 2964              	.LBE7:
1391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return BufferIndex;
 2965              	 .loc 1 1391 10
 2966 00ea 7B69     	 ldr r3,[r7,#20]
1392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 2967              	 .loc 1 1392 1
 2968 00ec 1846     	 mov r0,r3
 2969 00ee 1837     	 adds r7,r7,#24
 2970              	 .cfi_def_cfa_offset 8
 2971 00f0 BD46     	 mov sp,r7
 2972              	 .cfi_def_cfa_register 13
 2973              	 
 2974 00f2 80BD     	 pop {r7,pc}
 2975              	.L173:
 2976              	 .align 2
 2977              	.L172:
 2978 00f4 00000000 	 .word _SEGGER_RTT
 2979              	 .cfi_endproc
 2980              	.LFE28:
 2981              	 .cantunwind
 2982              	 .fnend
 2983              	 .size SEGGER_RTT_AllocUpBuffer,.-SEGGER_RTT_AllocUpBuffer
 2984              	 .section .text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
ARM GAS   			page 79


 2985              	 .align 1
 2986              	 .global SEGGER_RTT_ConfigUpBuffer
 2987              	 .syntax unified
 2988              	 .thumb
 2989              	 .thumb_func
 2990              	 .type SEGGER_RTT_ConfigUpBuffer,%function
 2991              	SEGGER_RTT_ConfigUpBuffer:
 2992              	 .fnstart
 2993              	.LFB29:
1393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 - O.K.
1412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0 - Error
1413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Additional information
1415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    May only be called once per buffer.
1417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2994              	 .loc 1 1419 124
 2995              	 .cfi_startproc
 2996              	 
 2997              	 
 2998 0000 80B5     	 push {r7,lr}
 2999              	 .cfi_def_cfa_offset 8
 3000              	 .cfi_offset 7,-8
 3001              	 .cfi_offset 14,-4
 3002 0002 86B0     	 sub sp,sp,#24
 3003              	 .cfi_def_cfa_offset 32
 3004 0004 00AF     	 add r7,sp,#0
 3005              	 .cfi_def_cfa_register 7
 3006 0006 F860     	 str r0,[r7,#12]
 3007 0008 B960     	 str r1,[r7,#8]
 3008 000a 7A60     	 str r2,[r7,#4]
 3009 000c 3B60     	 str r3,[r7]
1420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3010              	 .loc 1 1422 3
 3011 000e 304B     	 ldr r3,.L180
ARM GAS   			page 80


 3012 0010 1B78     	 ldrb r3,[r3]
 3013 0012 002B     	 cmp r3,#0
 3014 0014 01D1     	 bne .L175
 3015              	 .loc 1 1422 3 is_stmt 0 discriminator 1
 3016 0016 FFF7FEFF 	 bl _ZL7_DoInitv
 3017              	.L175:
 3018              	.LBB8:
1423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 3019              	 .loc 1 1423 43 is_stmt 1
 3020 001a 2D4B     	 ldr r3,.L180
 3021 001c 1B69     	 ldr r3,[r3,#16]
 3022              	 .loc 1 1423 21
 3023 001e 1A46     	 mov r2,r3
 3024              	 .loc 1 1423 3
 3025 0020 FB68     	 ldr r3,[r7,#12]
 3026 0022 9342     	 cmp r3,r2
 3027 0024 4CD2     	 bcs .L176
 3028              	.LBB9:
 3029              	.LBB10:
1424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3030              	 .loc 1 1424 5
 3031              	 .syntax unified
 3032              	
 3033 0026 EFF31183 	 mrs r3,basepri
 3034 002a 4FF02001 	 mov r1,#32
 3035 002e 81F31188 	 msr basepri,r1
 3036              	 
 3037              	
 3038              	 .thumb
 3039              	 .syntax unified
 3040 0032 3B61     	 str r3,[r7,#16]
1425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 3041              	 .loc 1 1425 5
 3042 0034 FB68     	 ldr r3,[r7,#12]
 3043 0036 002B     	 cmp r3,#0
 3044 0038 32D0     	 beq .L177
1426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 3045              	 .loc 1 1426 49
 3046 003a 2549     	 ldr r1,.L180
 3047 003c FB68     	 ldr r3,[r7,#12]
 3048 003e 5A1C     	 adds r2,r3,#1
 3049 0040 1346     	 mov r3,r2
 3050 0042 5B00     	 lsls r3,r3,#1
 3051 0044 1344     	 add r3,r3,r2
 3052 0046 DB00     	 lsls r3,r3,#3
 3053 0048 0B44     	 add r3,r3,r1
 3054 004a BA68     	 ldr r2,[r7,#8]
 3055 004c 1A60     	 str r2,[r3]
1427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 3056              	 .loc 1 1427 49
 3057 004e 2049     	 ldr r1,.L180
 3058 0050 FB68     	 ldr r3,[r7,#12]
 3059 0052 5A1C     	 adds r2,r3,#1
 3060 0054 1346     	 mov r3,r2
 3061 0056 5B00     	 lsls r3,r3,#1
 3062 0058 1344     	 add r3,r3,r2
 3063 005a DB00     	 lsls r3,r3,#3
ARM GAS   			page 81


 3064 005c 0B44     	 add r3,r3,r1
 3065 005e 0433     	 adds r3,r3,#4
 3066 0060 7A68     	 ldr r2,[r7,#4]
 3067 0062 1A60     	 str r2,[r3]
1428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 3068              	 .loc 1 1428 49
 3069 0064 1A49     	 ldr r1,.L180
 3070 0066 FA68     	 ldr r2,[r7,#12]
 3071 0068 1346     	 mov r3,r2
 3072 006a 5B00     	 lsls r3,r3,#1
 3073 006c 1344     	 add r3,r3,r2
 3074 006e DB00     	 lsls r3,r3,#3
 3075 0070 0B44     	 add r3,r3,r1
 3076 0072 2033     	 adds r3,r3,#32
 3077 0074 3A68     	 ldr r2,[r7]
 3078 0076 1A60     	 str r2,[r3]
1429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 3079              	 .loc 1 1429 49
 3080 0078 1549     	 ldr r1,.L180
 3081 007a FA68     	 ldr r2,[r7,#12]
 3082 007c 1346     	 mov r3,r2
 3083 007e 5B00     	 lsls r3,r3,#1
 3084 0080 1344     	 add r3,r3,r2
 3085 0082 DB00     	 lsls r3,r3,#3
 3086 0084 0B44     	 add r3,r3,r1
 3087 0086 2833     	 adds r3,r3,#40
 3088 0088 0022     	 movs r2,#0
 3089 008a 1A60     	 str r2,[r3]
1430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 3090              	 .loc 1 1430 49
 3091 008c 1049     	 ldr r1,.L180
 3092 008e FA68     	 ldr r2,[r7,#12]
 3093 0090 1346     	 mov r3,r2
 3094 0092 5B00     	 lsls r3,r3,#1
 3095 0094 1344     	 add r3,r3,r2
 3096 0096 DB00     	 lsls r3,r3,#3
 3097 0098 0B44     	 add r3,r3,r1
 3098 009a 2433     	 adds r3,r3,#36
 3099 009c 0022     	 movs r2,#0
 3100 009e 1A60     	 str r2,[r3]
 3101              	.L177:
1431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
 3102              	 .loc 1 1432 49
 3103 00a0 0B49     	 ldr r1,.L180
 3104 00a2 FA68     	 ldr r2,[r7,#12]
 3105 00a4 1346     	 mov r3,r2
 3106 00a6 5B00     	 lsls r3,r3,#1
 3107 00a8 1344     	 add r3,r3,r2
 3108 00aa DB00     	 lsls r3,r3,#3
 3109 00ac 0B44     	 add r3,r3,r1
 3110 00ae 2C33     	 adds r3,r3,#44
 3111 00b0 3A6A     	 ldr r2,[r7,#32]
 3112 00b2 1A60     	 str r2,[r3]
1433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3113              	 .loc 1 1433 5
 3114 00b4 3B69     	 ldr r3,[r7,#16]
ARM GAS   			page 82


 3115              	 .syntax unified
 3116              	
 3117 00b6 83F31188 	 msr basepri,r3
 3118              	 
 3119              	
 3120              	 .thumb
 3121              	 .syntax unified
 3122              	.LBE10:
1434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3123              	 .loc 1 1434 7
 3124 00ba 0023     	 movs r3,#0
 3125 00bc 7B61     	 str r3,[r7,#20]
 3126              	.LBE9:
 3127 00be 02E0     	 b .L178
 3128              	.L176:
1435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3129              	 .loc 1 1436 7
 3130 00c0 4FF0FF33 	 mov r3,#-1
 3131 00c4 7B61     	 str r3,[r7,#20]
 3132              	.L178:
 3133              	.LBE8:
1437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3134              	 .loc 1 1438 10
 3135 00c6 7B69     	 ldr r3,[r7,#20]
1439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3136              	 .loc 1 1439 1
 3137 00c8 1846     	 mov r0,r3
 3138 00ca 1837     	 adds r7,r7,#24
 3139              	 .cfi_def_cfa_offset 8
 3140 00cc BD46     	 mov sp,r7
 3141              	 .cfi_def_cfa_register 13
 3142              	 
 3143 00ce 80BD     	 pop {r7,pc}
 3144              	.L181:
 3145              	 .align 2
 3146              	.L180:
 3147 00d0 00000000 	 .word _SEGGER_RTT
 3148              	 .cfi_endproc
 3149              	.LFE29:
 3150              	 .cantunwind
 3151              	 .fnend
 3152              	 .size SEGGER_RTT_ConfigUpBuffer,.-SEGGER_RTT_ConfigUpBuffer
 3153              	 .section .text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 3154              	 .align 1
 3155              	 .global SEGGER_RTT_ConfigDownBuffer
 3156              	 .syntax unified
 3157              	 .thumb
 3158              	 .thumb_func
 3159              	 .type SEGGER_RTT_ConfigDownBuffer,%function
 3160              	SEGGER_RTT_ConfigDownBuffer:
 3161              	 .fnstart
 3162              	.LFB30:
1440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
ARM GAS   			page 83


1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error
1460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Additional information
1462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    May only be called once per buffer.
1464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 3163              	 .loc 1 1466 126
 3164              	 .cfi_startproc
 3165              	 
 3166              	 
 3167 0000 80B5     	 push {r7,lr}
 3168              	 .cfi_def_cfa_offset 8
 3169              	 .cfi_offset 7,-8
 3170              	 .cfi_offset 14,-4
 3171 0002 86B0     	 sub sp,sp,#24
 3172              	 .cfi_def_cfa_offset 32
 3173 0004 00AF     	 add r7,sp,#0
 3174              	 .cfi_def_cfa_register 7
 3175 0006 F860     	 str r0,[r7,#12]
 3176 0008 B960     	 str r1,[r7,#8]
 3177 000a 7A60     	 str r2,[r7,#4]
 3178 000c 3B60     	 str r3,[r7]
1467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3179              	 .loc 1 1469 3
 3180 000e 304B     	 ldr r3,.L188
 3181 0010 1B78     	 ldrb r3,[r3]
 3182 0012 002B     	 cmp r3,#0
 3183 0014 01D1     	 bne .L183
 3184              	 .loc 1 1469 3 is_stmt 0 discriminator 1
 3185 0016 FFF7FEFF 	 bl _ZL7_DoInitv
 3186              	.L183:
 3187              	.LBB11:
1470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 3188              	 .loc 1 1470 43 is_stmt 1
 3189 001a 2D4B     	 ldr r3,.L188
 3190 001c 5B69     	 ldr r3,[r3,#20]
 3191              	 .loc 1 1470 21
ARM GAS   			page 84


 3192 001e 1A46     	 mov r2,r3
 3193              	 .loc 1 1470 3
 3194 0020 FB68     	 ldr r3,[r7,#12]
 3195 0022 9342     	 cmp r3,r2
 3196 0024 4BD2     	 bcs .L184
 3197              	.LBB12:
 3198              	.LBB13:
1471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3199              	 .loc 1 1471 5
 3200              	 .syntax unified
 3201              	
 3202 0026 EFF31183 	 mrs r3,basepri
 3203 002a 4FF02001 	 mov r1,#32
 3204 002e 81F31188 	 msr basepri,r1
 3205              	 
 3206              	
 3207              	 .thumb
 3208              	 .syntax unified
 3209 0032 3B61     	 str r3,[r7,#16]
1472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 3210              	 .loc 1 1472 5
 3211 0034 FB68     	 ldr r3,[r7,#12]
 3212 0036 002B     	 cmp r3,#0
 3213 0038 31D0     	 beq .L185
1473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 3214              	 .loc 1 1473 51
 3215 003a 2549     	 ldr r1,.L188
 3216 003c FA68     	 ldr r2,[r7,#12]
 3217 003e 1346     	 mov r3,r2
 3218 0040 5B00     	 lsls r3,r3,#1
 3219 0042 1344     	 add r3,r3,r2
 3220 0044 DB00     	 lsls r3,r3,#3
 3221 0046 0B44     	 add r3,r3,r1
 3222 0048 6033     	 adds r3,r3,#96
 3223 004a BA68     	 ldr r2,[r7,#8]
 3224 004c 1A60     	 str r2,[r3]
1474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 3225              	 .loc 1 1474 51
 3226 004e 2049     	 ldr r1,.L188
 3227 0050 FA68     	 ldr r2,[r7,#12]
 3228 0052 1346     	 mov r3,r2
 3229 0054 5B00     	 lsls r3,r3,#1
 3230 0056 1344     	 add r3,r3,r2
 3231 0058 DB00     	 lsls r3,r3,#3
 3232 005a 0B44     	 add r3,r3,r1
 3233 005c 6433     	 adds r3,r3,#100
 3234 005e 7A68     	 ldr r2,[r7,#4]
 3235 0060 1A60     	 str r2,[r3]
1475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 3236              	 .loc 1 1475 51
 3237 0062 1B49     	 ldr r1,.L188
 3238 0064 FA68     	 ldr r2,[r7,#12]
 3239 0066 1346     	 mov r3,r2
 3240 0068 5B00     	 lsls r3,r3,#1
 3241 006a 1344     	 add r3,r3,r2
 3242 006c DB00     	 lsls r3,r3,#3
 3243 006e 0B44     	 add r3,r3,r1
ARM GAS   			page 85


 3244 0070 6833     	 adds r3,r3,#104
 3245 0072 3A68     	 ldr r2,[r7]
 3246 0074 1A60     	 str r2,[r3]
1476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 3247              	 .loc 1 1476 51
 3248 0076 1649     	 ldr r1,.L188
 3249 0078 FA68     	 ldr r2,[r7,#12]
 3250 007a 1346     	 mov r3,r2
 3251 007c 5B00     	 lsls r3,r3,#1
 3252 007e 1344     	 add r3,r3,r2
 3253 0080 DB00     	 lsls r3,r3,#3
 3254 0082 0B44     	 add r3,r3,r1
 3255 0084 7033     	 adds r3,r3,#112
 3256 0086 0022     	 movs r2,#0
 3257 0088 1A60     	 str r2,[r3]
1477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 3258              	 .loc 1 1477 51
 3259 008a 1149     	 ldr r1,.L188
 3260 008c FA68     	 ldr r2,[r7,#12]
 3261 008e 1346     	 mov r3,r2
 3262 0090 5B00     	 lsls r3,r3,#1
 3263 0092 1344     	 add r3,r3,r2
 3264 0094 DB00     	 lsls r3,r3,#3
 3265 0096 0B44     	 add r3,r3,r1
 3266 0098 6C33     	 adds r3,r3,#108
 3267 009a 0022     	 movs r2,#0
 3268 009c 1A60     	 str r2,[r3]
 3269              	.L185:
1478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags          = Flags;
 3270              	 .loc 1 1479 51
 3271 009e 0C49     	 ldr r1,.L188
 3272 00a0 FA68     	 ldr r2,[r7,#12]
 3273 00a2 1346     	 mov r3,r2
 3274 00a4 5B00     	 lsls r3,r3,#1
 3275 00a6 1344     	 add r3,r3,r2
 3276 00a8 DB00     	 lsls r3,r3,#3
 3277 00aa 0B44     	 add r3,r3,r1
 3278 00ac 7433     	 adds r3,r3,#116
 3279 00ae 3A6A     	 ldr r2,[r7,#32]
 3280 00b0 1A60     	 str r2,[r3]
1480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3281              	 .loc 1 1480 5
 3282 00b2 3B69     	 ldr r3,[r7,#16]
 3283              	 .syntax unified
 3284              	
 3285 00b4 83F31188 	 msr basepri,r3
 3286              	 
 3287              	
 3288              	 .thumb
 3289              	 .syntax unified
 3290              	.LBE13:
1481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3291              	 .loc 1 1481 7
 3292 00b8 0023     	 movs r3,#0
 3293 00ba 7B61     	 str r3,[r7,#20]
 3294              	.LBE12:
ARM GAS   			page 86


 3295 00bc 02E0     	 b .L186
 3296              	.L184:
1482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3297              	 .loc 1 1483 7
 3298 00be 4FF0FF33 	 mov r3,#-1
 3299 00c2 7B61     	 str r3,[r7,#20]
 3300              	.L186:
 3301              	.LBE11:
1484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3302              	 .loc 1 1485 10
 3303 00c4 7B69     	 ldr r3,[r7,#20]
1486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3304              	 .loc 1 1486 1
 3305 00c6 1846     	 mov r0,r3
 3306 00c8 1837     	 adds r7,r7,#24
 3307              	 .cfi_def_cfa_offset 8
 3308 00ca BD46     	 mov sp,r7
 3309              	 .cfi_def_cfa_register 13
 3310              	 
 3311 00cc 80BD     	 pop {r7,pc}
 3312              	.L189:
 3313 00ce 00BF     	 .align 2
 3314              	.L188:
 3315 00d0 00000000 	 .word _SEGGER_RTT
 3316              	 .cfi_endproc
 3317              	.LFE30:
 3318              	 .cantunwind
 3319              	 .fnend
 3320              	 .size SEGGER_RTT_ConfigDownBuffer,.-SEGGER_RTT_ConfigDownBuffer
 3321              	 .section .text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 3322              	 .align 1
 3323              	 .global SEGGER_RTT_SetNameUpBuffer
 3324              	 .syntax unified
 3325              	 .thumb
 3326              	 .thumb_func
 3327              	 .type SEGGER_RTT_SetNameUpBuffer,%function
 3328              	SEGGER_RTT_SetNameUpBuffer:
 3329              	 .fnstart
 3330              	.LFB31:
1487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error
ARM GAS   			page 87


1503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 3331              	 .loc 1 1504 73
 3332              	 .cfi_startproc
 3333              	 
 3334              	 
 3335 0000 80B5     	 push {r7,lr}
 3336              	 .cfi_def_cfa_offset 8
 3337              	 .cfi_offset 7,-8
 3338              	 .cfi_offset 14,-4
 3339 0002 84B0     	 sub sp,sp,#16
 3340              	 .cfi_def_cfa_offset 24
 3341 0004 00AF     	 add r7,sp,#0
 3342              	 .cfi_def_cfa_register 7
 3343 0006 7860     	 str r0,[r7,#4]
 3344 0008 3960     	 str r1,[r7]
1505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3345              	 .loc 1 1507 3
 3346 000a 154B     	 ldr r3,.L195
 3347 000c 1B78     	 ldrb r3,[r3]
 3348 000e 002B     	 cmp r3,#0
 3349 0010 01D1     	 bne .L191
 3350              	 .loc 1 1507 3 is_stmt 0 discriminator 1
 3351 0012 FFF7FEFF 	 bl _ZL7_DoInitv
 3352              	.L191:
 3353              	.LBB14:
1508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 3354              	 .loc 1 1508 43 is_stmt 1
 3355 0016 124B     	 ldr r3,.L195
 3356 0018 1B69     	 ldr r3,[r3,#16]
 3357              	 .loc 1 1508 21
 3358 001a 1A46     	 mov r2,r3
 3359              	 .loc 1 1508 3
 3360 001c 7B68     	 ldr r3,[r7,#4]
 3361 001e 9342     	 cmp r3,r2
 3362 0020 16D2     	 bcs .L192
 3363              	.LBB15:
 3364              	.LBB16:
1509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3365              	 .loc 1 1509 5
 3366              	 .syntax unified
 3367              	
 3368 0022 EFF31183 	 mrs r3,basepri
 3369 0026 4FF02001 	 mov r1,#32
 3370 002a 81F31188 	 msr basepri,r1
 3371              	 
 3372              	
 3373              	 .thumb
 3374              	 .syntax unified
 3375 002e BB60     	 str r3,[r7,#8]
1510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName = sName;
 3376              	 .loc 1 1510 40
 3377 0030 0B49     	 ldr r1,.L195
 3378 0032 7B68     	 ldr r3,[r7,#4]
 3379 0034 5A1C     	 adds r2,r3,#1
ARM GAS   			page 88


 3380 0036 1346     	 mov r3,r2
 3381 0038 5B00     	 lsls r3,r3,#1
 3382 003a 1344     	 add r3,r3,r2
 3383 003c DB00     	 lsls r3,r3,#3
 3384 003e 0B44     	 add r3,r3,r1
 3385 0040 3A68     	 ldr r2,[r7]
 3386 0042 1A60     	 str r2,[r3]
1511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3387              	 .loc 1 1511 5
 3388 0044 BB68     	 ldr r3,[r7,#8]
 3389              	 .syntax unified
 3390              	
 3391 0046 83F31188 	 msr basepri,r3
 3392              	 
 3393              	
 3394              	 .thumb
 3395              	 .syntax unified
 3396              	.LBE16:
1512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3397              	 .loc 1 1512 7
 3398 004a 0023     	 movs r3,#0
 3399 004c FB60     	 str r3,[r7,#12]
 3400              	.LBE15:
 3401 004e 02E0     	 b .L193
 3402              	.L192:
1513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3403              	 .loc 1 1514 7
 3404 0050 4FF0FF33 	 mov r3,#-1
 3405 0054 FB60     	 str r3,[r7,#12]
 3406              	.L193:
 3407              	.LBE14:
1515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3408              	 .loc 1 1516 10
 3409 0056 FB68     	 ldr r3,[r7,#12]
1517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3410              	 .loc 1 1517 1
 3411 0058 1846     	 mov r0,r3
 3412 005a 1037     	 adds r7,r7,#16
 3413              	 .cfi_def_cfa_offset 8
 3414 005c BD46     	 mov sp,r7
 3415              	 .cfi_def_cfa_register 13
 3416              	 
 3417 005e 80BD     	 pop {r7,pc}
 3418              	.L196:
 3419              	 .align 2
 3420              	.L195:
 3421 0060 00000000 	 .word _SEGGER_RTT
 3422              	 .cfi_endproc
 3423              	.LFE31:
 3424              	 .cantunwind
 3425              	 .fnend
 3426              	 .size SEGGER_RTT_SetNameUpBuffer,.-SEGGER_RTT_SetNameUpBuffer
 3427              	 .section .text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 3428              	 .align 1
 3429              	 .global SEGGER_RTT_SetNameDownBuffer
ARM GAS   			page 89


 3430              	 .syntax unified
 3431              	 .thumb
 3432              	 .thumb_func
 3433              	 .type SEGGER_RTT_SetNameDownBuffer,%function
 3434              	SEGGER_RTT_SetNameDownBuffer:
 3435              	 .fnstart
 3436              	.LFB32:
1518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error
1534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 3437              	 .loc 1 1535 75
 3438              	 .cfi_startproc
 3439              	 
 3440              	 
 3441 0000 80B5     	 push {r7,lr}
 3442              	 .cfi_def_cfa_offset 8
 3443              	 .cfi_offset 7,-8
 3444              	 .cfi_offset 14,-4
 3445 0002 84B0     	 sub sp,sp,#16
 3446              	 .cfi_def_cfa_offset 24
 3447 0004 00AF     	 add r7,sp,#0
 3448              	 .cfi_def_cfa_register 7
 3449 0006 7860     	 str r0,[r7,#4]
 3450 0008 3960     	 str r1,[r7]
1536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3451              	 .loc 1 1538 3
 3452 000a 154B     	 ldr r3,.L202
 3453 000c 1B78     	 ldrb r3,[r3]
 3454 000e 002B     	 cmp r3,#0
 3455 0010 01D1     	 bne .L198
 3456              	 .loc 1 1538 3 is_stmt 0 discriminator 1
 3457 0012 FFF7FEFF 	 bl _ZL7_DoInitv
 3458              	.L198:
 3459              	.LBB17:
1539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 3460              	 .loc 1 1539 43 is_stmt 1
 3461 0016 124B     	 ldr r3,.L202
 3462 0018 5B69     	 ldr r3,[r3,#20]
 3463              	 .loc 1 1539 21
 3464 001a 1A46     	 mov r2,r3
ARM GAS   			page 90


 3465              	 .loc 1 1539 3
 3466 001c 7B68     	 ldr r3,[r7,#4]
 3467 001e 9342     	 cmp r3,r2
 3468 0020 16D2     	 bcs .L199
 3469              	.LBB18:
 3470              	.LBB19:
1540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3471              	 .loc 1 1540 5
 3472              	 .syntax unified
 3473              	
 3474 0022 EFF31183 	 mrs r3,basepri
 3475 0026 4FF02001 	 mov r1,#32
 3476 002a 81F31188 	 msr basepri,r1
 3477              	 
 3478              	
 3479              	 .thumb
 3480              	 .syntax unified
 3481 002e BB60     	 str r3,[r7,#8]
1541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName = sName;
 3482              	 .loc 1 1541 42
 3483 0030 0B49     	 ldr r1,.L202
 3484 0032 7A68     	 ldr r2,[r7,#4]
 3485 0034 1346     	 mov r3,r2
 3486 0036 5B00     	 lsls r3,r3,#1
 3487 0038 1344     	 add r3,r3,r2
 3488 003a DB00     	 lsls r3,r3,#3
 3489 003c 0B44     	 add r3,r3,r1
 3490 003e 6033     	 adds r3,r3,#96
 3491 0040 3A68     	 ldr r2,[r7]
 3492 0042 1A60     	 str r2,[r3]
1542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3493              	 .loc 1 1542 5
 3494 0044 BB68     	 ldr r3,[r7,#8]
 3495              	 .syntax unified
 3496              	
 3497 0046 83F31188 	 msr basepri,r3
 3498              	 
 3499              	
 3500              	 .thumb
 3501              	 .syntax unified
 3502              	.LBE19:
1543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3503              	 .loc 1 1543 7
 3504 004a 0023     	 movs r3,#0
 3505 004c FB60     	 str r3,[r7,#12]
 3506              	.LBE18:
 3507 004e 02E0     	 b .L200
 3508              	.L199:
1544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3509              	 .loc 1 1545 7
 3510 0050 4FF0FF33 	 mov r3,#-1
 3511 0054 FB60     	 str r3,[r7,#12]
 3512              	.L200:
 3513              	.LBE17:
1546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
ARM GAS   			page 91


 3514              	 .loc 1 1547 10
 3515 0056 FB68     	 ldr r3,[r7,#12]
1548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3516              	 .loc 1 1548 1
 3517 0058 1846     	 mov r0,r3
 3518 005a 1037     	 adds r7,r7,#16
 3519              	 .cfi_def_cfa_offset 8
 3520 005c BD46     	 mov sp,r7
 3521              	 .cfi_def_cfa_register 13
 3522              	 
 3523 005e 80BD     	 pop {r7,pc}
 3524              	.L203:
 3525              	 .align 2
 3526              	.L202:
 3527 0060 00000000 	 .word _SEGGER_RTT
 3528              	 .cfi_endproc
 3529              	.LFE32:
 3530              	 .cantunwind
 3531              	 .fnend
 3532              	 .size SEGGER_RTT_SetNameDownBuffer,.-SEGGER_RTT_SetNameDownBuffer
 3533              	 .section .text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 3534              	 .align 1
 3535              	 .global SEGGER_RTT_SetFlagsUpBuffer
 3536              	 .syntax unified
 3537              	 .thumb
 3538              	 .thumb_func
 3539              	 .type SEGGER_RTT_SetFlagsUpBuffer,%function
 3540              	SEGGER_RTT_SetFlagsUpBuffer:
 3541              	 .fnstart
 3542              	.LFB33:
1549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error
1565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 3543              	 .loc 1 1566 71
 3544              	 .cfi_startproc
 3545              	 
 3546              	 
 3547 0000 80B5     	 push {r7,lr}
 3548              	 .cfi_def_cfa_offset 8
 3549              	 .cfi_offset 7,-8
 3550              	 .cfi_offset 14,-4
 3551 0002 84B0     	 sub sp,sp,#16
ARM GAS   			page 92


 3552              	 .cfi_def_cfa_offset 24
 3553 0004 00AF     	 add r7,sp,#0
 3554              	 .cfi_def_cfa_register 7
 3555 0006 7860     	 str r0,[r7,#4]
 3556 0008 3960     	 str r1,[r7]
1567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3557              	 .loc 1 1569 3
 3558 000a 154B     	 ldr r3,.L209
 3559 000c 1B78     	 ldrb r3,[r3]
 3560 000e 002B     	 cmp r3,#0
 3561 0010 01D1     	 bne .L205
 3562              	 .loc 1 1569 3 is_stmt 0 discriminator 1
 3563 0012 FFF7FEFF 	 bl _ZL7_DoInitv
 3564              	.L205:
 3565              	.LBB20:
1570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 3566              	 .loc 1 1570 43 is_stmt 1
 3567 0016 124B     	 ldr r3,.L209
 3568 0018 1B69     	 ldr r3,[r3,#16]
 3569              	 .loc 1 1570 21
 3570 001a 1A46     	 mov r2,r3
 3571              	 .loc 1 1570 3
 3572 001c 7B68     	 ldr r3,[r7,#4]
 3573 001e 9342     	 cmp r3,r2
 3574 0020 16D2     	 bcs .L206
 3575              	.LBB21:
 3576              	.LBB22:
1571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3577              	 .loc 1 1571 5
 3578              	 .syntax unified
 3579              	
 3580 0022 EFF31183 	 mrs r3,basepri
 3581 0026 4FF02001 	 mov r1,#32
 3582 002a 81F31188 	 msr basepri,r1
 3583              	 
 3584              	
 3585              	 .thumb
 3586              	 .syntax unified
 3587 002e BB60     	 str r3,[r7,#8]
1572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags = Flags;
 3588              	 .loc 1 1572 40
 3589 0030 0B49     	 ldr r1,.L209
 3590 0032 7A68     	 ldr r2,[r7,#4]
 3591 0034 1346     	 mov r3,r2
 3592 0036 5B00     	 lsls r3,r3,#1
 3593 0038 1344     	 add r3,r3,r2
 3594 003a DB00     	 lsls r3,r3,#3
 3595 003c 0B44     	 add r3,r3,r1
 3596 003e 2C33     	 adds r3,r3,#44
 3597 0040 3A68     	 ldr r2,[r7]
 3598 0042 1A60     	 str r2,[r3]
1573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3599              	 .loc 1 1573 5
 3600 0044 BB68     	 ldr r3,[r7,#8]
 3601              	 .syntax unified
ARM GAS   			page 93


 3602              	
 3603 0046 83F31188 	 msr basepri,r3
 3604              	 
 3605              	
 3606              	 .thumb
 3607              	 .syntax unified
 3608              	.LBE22:
1574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3609              	 .loc 1 1574 7
 3610 004a 0023     	 movs r3,#0
 3611 004c FB60     	 str r3,[r7,#12]
 3612              	.LBE21:
 3613 004e 02E0     	 b .L207
 3614              	.L206:
1575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3615              	 .loc 1 1576 7
 3616 0050 4FF0FF33 	 mov r3,#-1
 3617 0054 FB60     	 str r3,[r7,#12]
 3618              	.L207:
 3619              	.LBE20:
1577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3620              	 .loc 1 1578 10
 3621 0056 FB68     	 ldr r3,[r7,#12]
1579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3622              	 .loc 1 1579 1
 3623 0058 1846     	 mov r0,r3
 3624 005a 1037     	 adds r7,r7,#16
 3625              	 .cfi_def_cfa_offset 8
 3626 005c BD46     	 mov sp,r7
 3627              	 .cfi_def_cfa_register 13
 3628              	 
 3629 005e 80BD     	 pop {r7,pc}
 3630              	.L210:
 3631              	 .align 2
 3632              	.L209:
 3633 0060 00000000 	 .word _SEGGER_RTT
 3634              	 .cfi_endproc
 3635              	.LFE33:
 3636              	 .cantunwind
 3637              	 .fnend
 3638              	 .size SEGGER_RTT_SetFlagsUpBuffer,.-SEGGER_RTT_SetFlagsUpBuffer
 3639              	 .section .text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 3640              	 .align 1
 3641              	 .global SEGGER_RTT_SetFlagsDownBuffer
 3642              	 .syntax unified
 3643              	 .thumb
 3644              	 .thumb_func
 3645              	 .type SEGGER_RTT_SetFlagsDownBuffer,%function
 3646              	SEGGER_RTT_SetFlagsDownBuffer:
 3647              	 .fnstart
 3648              	.LFB34:
1580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
ARM GAS   			page 94


1584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error
1596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 3649              	 .loc 1 1597 73
 3650              	 .cfi_startproc
 3651              	 
 3652              	 
 3653 0000 80B5     	 push {r7,lr}
 3654              	 .cfi_def_cfa_offset 8
 3655              	 .cfi_offset 7,-8
 3656              	 .cfi_offset 14,-4
 3657 0002 84B0     	 sub sp,sp,#16
 3658              	 .cfi_def_cfa_offset 24
 3659 0004 00AF     	 add r7,sp,#0
 3660              	 .cfi_def_cfa_register 7
 3661 0006 7860     	 str r0,[r7,#4]
 3662 0008 3960     	 str r1,[r7]
1598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3663              	 .loc 1 1600 3
 3664 000a 154B     	 ldr r3,.L216
 3665 000c 1B78     	 ldrb r3,[r3]
 3666 000e 002B     	 cmp r3,#0
 3667 0010 01D1     	 bne .L212
 3668              	 .loc 1 1600 3 is_stmt 0 discriminator 1
 3669 0012 FFF7FEFF 	 bl _ZL7_DoInitv
 3670              	.L212:
 3671              	.LBB23:
1601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 3672              	 .loc 1 1601 43 is_stmt 1
 3673 0016 124B     	 ldr r3,.L216
 3674 0018 5B69     	 ldr r3,[r3,#20]
 3675              	 .loc 1 1601 21
 3676 001a 1A46     	 mov r2,r3
 3677              	 .loc 1 1601 3
 3678 001c 7B68     	 ldr r3,[r7,#4]
 3679 001e 9342     	 cmp r3,r2
 3680 0020 16D2     	 bcs .L213
 3681              	.LBB24:
 3682              	.LBB25:
1602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3683              	 .loc 1 1602 5
 3684              	 .syntax unified
 3685              	
 3686 0022 EFF31183 	 mrs r3,basepri
ARM GAS   			page 95


 3687 0026 4FF02001 	 mov r1,#32
 3688 002a 81F31188 	 msr basepri,r1
 3689              	 
 3690              	
 3691              	 .thumb
 3692              	 .syntax unified
 3693 002e BB60     	 str r3,[r7,#8]
1603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags = Flags;
 3694              	 .loc 1 1603 42
 3695 0030 0B49     	 ldr r1,.L216
 3696 0032 7A68     	 ldr r2,[r7,#4]
 3697 0034 1346     	 mov r3,r2
 3698 0036 5B00     	 lsls r3,r3,#1
 3699 0038 1344     	 add r3,r3,r2
 3700 003a DB00     	 lsls r3,r3,#3
 3701 003c 0B44     	 add r3,r3,r1
 3702 003e 7433     	 adds r3,r3,#116
 3703 0040 3A68     	 ldr r2,[r7]
 3704 0042 1A60     	 str r2,[r3]
1604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3705              	 .loc 1 1604 5
 3706 0044 BB68     	 ldr r3,[r7,#8]
 3707              	 .syntax unified
 3708              	
 3709 0046 83F31188 	 msr basepri,r3
 3710              	 
 3711              	
 3712              	 .thumb
 3713              	 .syntax unified
 3714              	.LBE25:
1605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r =  0;
 3715              	 .loc 1 1605 7
 3716 004a 0023     	 movs r3,#0
 3717 004c FB60     	 str r3,[r7,#12]
 3718              	.LBE24:
 3719 004e 02E0     	 b .L214
 3720              	.L213:
1606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3721              	 .loc 1 1607 7
 3722 0050 4FF0FF33 	 mov r3,#-1
 3723 0054 FB60     	 str r3,[r7,#12]
 3724              	.L214:
 3725              	.LBE23:
1608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3726              	 .loc 1 1609 10
 3727 0056 FB68     	 ldr r3,[r7,#12]
1610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3728              	 .loc 1 1610 1
 3729 0058 1846     	 mov r0,r3
 3730 005a 1037     	 adds r7,r7,#16
 3731              	 .cfi_def_cfa_offset 8
 3732 005c BD46     	 mov sp,r7
 3733              	 .cfi_def_cfa_register 13
 3734              	 
 3735 005e 80BD     	 pop {r7,pc}
ARM GAS   			page 96


 3736              	.L217:
 3737              	 .align 2
 3738              	.L216:
 3739 0060 00000000 	 .word _SEGGER_RTT
 3740              	 .cfi_endproc
 3741              	.LFE34:
 3742              	 .cantunwind
 3743              	 .fnend
 3744              	 .size SEGGER_RTT_SetFlagsDownBuffer,.-SEGGER_RTT_SetFlagsDownBuffer
 3745              	 .section .text.SEGGER_RTT_Init,"ax",%progbits
 3746              	 .align 1
 3747              	 .global SEGGER_RTT_Init
 3748              	 .syntax unified
 3749              	 .thumb
 3750              	 .thumb_func
 3751              	 .type SEGGER_RTT_Init,%function
 3752              	SEGGER_RTT_Init:
 3753              	 .fnstart
 3754              	.LFB35:
1611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_Init
1615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 3755              	 .loc 1 1621 29
 3756              	 .cfi_startproc
 3757              	 
 3758              	 
 3759 0000 80B5     	 push {r7,lr}
 3760              	 .cfi_def_cfa_offset 8
 3761              	 .cfi_offset 7,-8
 3762              	 .cfi_offset 14,-4
 3763 0002 00AF     	 add r7,sp,#0
 3764              	 .cfi_def_cfa_register 7
1622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   _DoInit();
 3765              	 .loc 1 1622 10
 3766 0004 FFF7FEFF 	 bl _ZL7_DoInitv
1623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3767              	 .loc 1 1623 1
 3768 0008 00BF     	 nop
 3769 000a 80BD     	 pop {r7,pc}
 3770              	 .cfi_endproc
 3771              	.LFE35:
 3772              	 .cantunwind
 3773              	 .fnend
 3774              	 .size SEGGER_RTT_Init,.-SEGGER_RTT_Init
 3775              	 .section .text.SEGGER_RTT_SetTerminal,"ax",%progbits
 3776              	 .align 1
 3777              	 .global SEGGER_RTT_SetTerminal
 3778              	 .syntax unified
 3779              	 .thumb
ARM GAS   			page 97


 3780              	 .thumb_func
 3781              	 .type SEGGER_RTT_SetTerminal,%function
 3782              	SEGGER_RTT_SetTerminal:
 3783              	 .fnstart
 3784              	.LFB36:
1624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0  O.K.
1637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (char TerminalId) {
 3785              	 .loc 1 1639 46
 3786              	 .cfi_startproc
 3787              	 
 3788              	 
 3789 0000 80B5     	 push {r7,lr}
 3790              	 .cfi_def_cfa_offset 8
 3791              	 .cfi_offset 7,-8
 3792              	 .cfi_offset 14,-4
 3793 0002 88B0     	 sub sp,sp,#32
 3794              	 .cfi_def_cfa_offset 40
 3795 0004 00AF     	 add r7,sp,#0
 3796              	 .cfi_def_cfa_register 7
 3797 0006 0346     	 mov r3,r0
 3798 0008 FB71     	 strb r3,[r7,#7]
1640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned char         ac[2];
1641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned Avail;
1643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int r;
1644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3799              	 .loc 1 1645 3
 3800 000a 264B     	 ldr r3,.L227
 3801 000c 1B78     	 ldrb r3,[r3]
 3802 000e 002B     	 cmp r3,#0
 3803 0010 01D1     	 bne .L220
 3804              	 .loc 1 1645 3 is_stmt 0 discriminator 1
 3805 0012 FFF7FEFF 	 bl _ZL7_DoInitv
 3806              	.L220:
1646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   r = 0;
 3807              	 .loc 1 1647 5 is_stmt 1
 3808 0016 0023     	 movs r3,#0
 3809 0018 FB61     	 str r3,[r7,#28]
1648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   ac[0] = 0xFFu;
 3810              	 .loc 1 1648 9
 3811 001a FF23     	 movs r3,#255
ARM GAS   			page 98


 3812 001c 3B73     	 strb r3,[r7,#12]
 3813              	.LBB26:
1649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if ((unsigned char)TerminalId < (unsigned char)sizeof(_aTerminalId)) { // We only support a certa
 3814              	 .loc 1 1649 3
 3815 001e FB79     	 ldrb r3,[r7,#7]
 3816 0020 0F2B     	 cmp r3,#15
 3817 0022 36D8     	 bhi .L221
 3818              	.LBB27:
1650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     ac[1] = _aTerminalId[(unsigned char)TerminalId];
 3819              	 .loc 1 1650 26
 3820 0024 FB79     	 ldrb r3,[r7,#7]
 3821              	 .loc 1 1650 51
 3822 0026 204A     	 ldr r2,.L227+4
 3823 0028 D35C     	 ldrb r3,[r2,r3]
 3824              	 .loc 1 1650 11
 3825 002a 7B73     	 strb r3,[r7,#13]
1651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];    // Buffer 0 is always reserved for terminal I/O, so we can use 
 3826              	 .loc 1 1651 11
 3827 002c 1F4B     	 ldr r3,.L227+8
 3828 002e BB61     	 str r3,[r7,#24]
 3829              	.LBB28:
1652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();    // Lock to make sure that no other task is writing into buffer, while we 
 3830              	 .loc 1 1652 5
 3831              	 .syntax unified
 3832              	
 3833 0030 EFF31183 	 mrs r3,basepri
 3834 0034 4FF02001 	 mov r1,#32
 3835 0038 81F31188 	 msr basepri,r1
 3836              	 
 3837              	
 3838              	 .thumb
 3839              	 .syntax unified
 3840 003c 7B61     	 str r3,[r7,#20]
1653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 3841              	 .loc 1 1653 17
 3842 003e BB69     	 ldr r3,[r7,#24]
 3843 0040 5B69     	 ldr r3,[r3,#20]
 3844              	 .loc 1 1653 23
 3845 0042 03F00303 	 and r3,r3,#3
 3846              	 .loc 1 1653 5
 3847 0046 022B     	 cmp r3,#2
 3848 0048 0AD1     	 bne .L222
1654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
 3849              	 .loc 1 1654 23
 3850 004a 194A     	 ldr r2,.L227+12
 3851 004c FB79     	 ldrb r3,[r7,#7]
 3852 004e 1370     	 strb r3,[r2]
1655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 3853              	 .loc 1 1655 21
 3854 0050 07F10C03 	 add r3,r7,#12
 3855 0054 0222     	 movs r2,#2
 3856 0056 1946     	 mov r1,r3
 3857 0058 B869     	 ldr r0,[r7,#24]
 3858 005a FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 3859 005e 14E0     	 b .L223
 3860              	.L222:
1656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     } else {                                                                            // Skipping
ARM GAS   			page 99


1657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 3861              	 .loc 1 1657 34
 3862 0060 B869     	 ldr r0,[r7,#24]
 3863 0062 FFF7FEFF 	 bl _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP
 3864 0066 3861     	 str r0,[r7,#16]
1658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       if (Avail >= 2) {
 3865              	 .loc 1 1658 7
 3866 0068 3B69     	 ldr r3,[r7,#16]
 3867 006a 012B     	 cmp r3,#1
 3868 006c 0AD9     	 bls .L224
1659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
 3869              	 .loc 1 1659 25
 3870 006e 104A     	 ldr r2,.L227+12
 3871 0070 FB79     	 ldrb r3,[r7,#7]
 3872 0072 1370     	 strb r3,[r2]
1660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 3873              	 .loc 1 1660 22
 3874 0074 07F10C03 	 add r3,r7,#12
 3875 0078 0222     	 movs r2,#2
 3876 007a 1946     	 mov r1,r3
 3877 007c B869     	 ldr r0,[r7,#24]
 3878 007e FFF7FEFF 	 bl _ZL13_WriteNoCheckP20SEGGER_RTT_BUFFER_UPPKcj
 3879 0082 02E0     	 b .L223
 3880              	.L224:
1661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       } else {
1662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         r = -1;
 3881              	 .loc 1 1662 11
 3882 0084 4FF0FF33 	 mov r3,#-1
 3883 0088 FB61     	 str r3,[r7,#28]
 3884              	.L223:
1663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
1664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3885              	 .loc 1 1665 5
 3886 008a 7B69     	 ldr r3,[r7,#20]
 3887              	 .syntax unified
 3888              	
 3889 008c 83F31188 	 msr basepri,r3
 3890              	 
 3891              	
 3892              	 .thumb
 3893              	 .syntax unified
 3894              	.LBE28:
 3895              	.LBE27:
 3896 0090 02E0     	 b .L225
 3897              	.L221:
1666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     r = -1;
 3898              	 .loc 1 1667 7
 3899 0092 4FF0FF33 	 mov r3,#-1
 3900 0096 FB61     	 str r3,[r7,#28]
 3901              	.L225:
 3902              	.LBE26:
1668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return r;
 3903              	 .loc 1 1669 10
 3904 0098 FB69     	 ldr r3,[r7,#28]
ARM GAS   			page 100


1670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 3905              	 .loc 1 1670 1
 3906 009a 1846     	 mov r0,r3
 3907 009c 2037     	 adds r7,r7,#32
 3908              	 .cfi_def_cfa_offset 8
 3909 009e BD46     	 mov sp,r7
 3910              	 .cfi_def_cfa_register 13
 3911              	 
 3912 00a0 80BD     	 pop {r7,pc}
 3913              	.L228:
 3914 00a2 00BF     	 .align 2
 3915              	.L227:
 3916 00a4 00000000 	 .word _SEGGER_RTT
 3917 00a8 00000000 	 .word _ZL12_aTerminalId
 3918 00ac 18000000 	 .word _SEGGER_RTT+24
 3919 00b0 00000000 	 .word _ZL15_ActiveTerminal
 3920              	 .cfi_endproc
 3921              	.LFE36:
 3922              	 .cantunwind
 3923              	 .fnend
 3924              	 .size SEGGER_RTT_SetTerminal,.-SEGGER_RTT_SetTerminal
 3925              	 .section .text.SEGGER_RTT_TerminalOut,"ax",%progbits
 3926              	 .align 1
 3927              	 .global SEGGER_RTT_TerminalOut
 3928              	 .syntax unified
 3929              	 .thumb
 3930              	 .thumb_func
 3931              	 .type SEGGER_RTT_TerminalOut,%function
 3932              	SEGGER_RTT_TerminalOut:
 3933              	 .fnstart
 3934              	.LFB37:
1671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** 
1672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** /*********************************************************************
1673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Function description
1677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    Writes a string to the given terminal
1678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Parameters
1681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *  Return value
1685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *     < 0 - Error.
1687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** *
1688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** */
1689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (char TerminalId, const char* s) {
 3935              	 .loc 1 1689 61
 3936              	 .cfi_startproc
 3937              	 
 3938              	 
 3939 0000 80B5     	 push {r7,lr}
 3940              	 .cfi_def_cfa_offset 8
 3941              	 .cfi_offset 7,-8
ARM GAS   			page 101


 3942              	 .cfi_offset 14,-4
 3943 0002 88B0     	 sub sp,sp,#32
 3944              	 .cfi_def_cfa_offset 40
 3945 0004 00AF     	 add r7,sp,#0
 3946              	 .cfi_def_cfa_register 7
 3947 0006 0346     	 mov r3,r0
 3948 0008 3960     	 str r1,[r7]
 3949 000a FB71     	 strb r3,[r7,#7]
1690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   int                   Status;
1691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              FragLen;
1692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   unsigned              Avail;
1693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   INIT();
 3950              	 .loc 1 1695 3
 3951 000c 424B     	 ldr r3,.L243
 3952 000e 1B78     	 ldrb r3,[r3]
 3953 0010 002B     	 cmp r3,#0
 3954 0012 01D1     	 bne .L230
 3955              	 .loc 1 1695 3 is_stmt 0 discriminator 1
 3956 0014 FFF7FEFF 	 bl _ZL7_DoInitv
 3957              	.L230:
 3958              	.LBB29:
1696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   // Validate terminal ID.
1698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   //
1699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3959              	 .loc 1 1699 3 is_stmt 1
 3960 0018 FB79     	 ldrb r3,[r7,#7]
 3961 001a 0F2B     	 cmp r3,#15
 3962 001c 73D8     	 bhi .L231
 3963              	.LBB30:
1700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];
 3964              	 .loc 1 1703 11
 3965 001e 3F4B     	 ldr r3,.L243+4
 3966 0020 BB61     	 str r3,[r7,#24]
1704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     FragLen = STRLEN(s);
 3967              	 .loc 1 1708 15
 3968 0022 3868     	 ldr r0,[r7]
 3969 0024 FFF7FEFF 	 bl strlen
 3970 0028 7861     	 str r0,[r7,#20]
 3971              	.LBB31:
1709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // How we output depends upon the mode...
1711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3972              	 .loc 1 1712 5
 3973              	 .syntax unified
 3974              	
 3975 002a EFF31183 	 mrs r3,basepri
ARM GAS   			page 102


 3976 002e 4FF02001 	 mov r1,#32
 3977 0032 81F31188 	 msr basepri,r1
 3978              	 
 3979              	
 3980              	 .thumb
 3981              	 .syntax unified
 3982 0036 3B61     	 str r3,[r7,#16]
1713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3983              	 .loc 1 1713 32
 3984 0038 B869     	 ldr r0,[r7,#24]
 3985 003a FFF7FEFF 	 bl _ZL19_GetAvailWriteSpaceP20SEGGER_RTT_BUFFER_UP
 3986 003e F860     	 str r0,[r7,#12]
1714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3987              	 .loc 1 1714 20
 3988 0040 BB69     	 ldr r3,[r7,#24]
 3989 0042 5B69     	 ldr r3,[r3,#20]
 3990              	 .loc 1 1714 26
 3991 0044 03F00303 	 and r3,r3,#3
 3992              	 .loc 1 1714 5
 3993 0048 022B     	 cmp r3,#2
 3994 004a 41D0     	 beq .L232
 3995 004c 022B     	 cmp r3,#2
 3996 004e 52D8     	 bhi .L233
 3997 0050 002B     	 cmp r3,#0
 3998 0052 02D0     	 beq .L234
 3999 0054 012B     	 cmp r3,#1
 4000 0056 1BD0     	 beq .L235
 4001 0058 4DE0     	 b .L233
 4002              	.L234:
1715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
 4003              	 .loc 1 1720 28
 4004 005a 7B69     	 ldr r3,[r7,#20]
 4005 005c 0433     	 adds r3,r3,#4
 4006              	 .loc 1 1720 7
 4007 005e FA68     	 ldr r2,[r7,#12]
 4008 0060 9A42     	 cmp r2,r3
 4009 0062 02D2     	 bcs .L236
1721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = 0;
 4010              	 .loc 1 1721 16
 4011 0064 0023     	 movs r3,#0
 4012 0066 FB61     	 str r3,[r7,#28]
1722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       } else {
1723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
1725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
1727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 4013              	 .loc 1 1727 7
 4014 0068 49E0     	 b .L238
 4015              	.L236:
1723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 4016              	 .loc 1 1723 28
ARM GAS   			page 103


 4017 006a FB79     	 ldrb r3,[r7,#7]
 4018 006c 1946     	 mov r1,r3
 4019 006e B869     	 ldr r0,[r7,#24]
 4020 0070 FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
1724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4021              	 .loc 1 1724 37
 4022 0074 7A69     	 ldr r2,[r7,#20]
 4023 0076 3968     	 ldr r1,[r7]
 4024 0078 B869     	 ldr r0,[r7,#24]
 4025 007a FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 4026 007e 0346     	 mov r3,r0
1724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4027              	 .loc 1 1724 16
 4028 0080 FB61     	 str r3,[r7,#28]
1725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
 4029              	 .loc 1 1725 28
 4030 0082 274B     	 ldr r3,.L243+8
 4031 0084 1B78     	 ldrb r3,[r3]
 4032 0086 1946     	 mov r1,r3
 4033 0088 B869     	 ldr r0,[r7,#24]
 4034 008a FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
 4035              	 .loc 1 1727 7
 4036 008e 36E0     	 b .L238
 4037              	.L235:
1728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
1731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
1732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // for terminal switch, skip that totally.
1733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       if (Avail < 4u) {
 4038              	 .loc 1 1734 7
 4039 0090 FB68     	 ldr r3,[r7,#12]
 4040 0092 032B     	 cmp r3,#3
 4041 0094 03D8     	 bhi .L239
1735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = -1;
 4042              	 .loc 1 1735 16
 4043 0096 4FF0FF33 	 mov r3,#-1
 4044 009a FB61     	 str r3,[r7,#28]
1736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       } else {
1737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
1739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
1741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 4045              	 .loc 1 1741 7
 4046 009c 2FE0     	 b .L238
 4047              	.L239:
1737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 4048              	 .loc 1 1737 28
 4049 009e FB79     	 ldrb r3,[r7,#7]
 4050 00a0 1946     	 mov r1,r3
 4051 00a2 B869     	 ldr r0,[r7,#24]
 4052 00a4 FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
1738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4053              	 .loc 1 1738 66
 4054 00a8 FB68     	 ldr r3,[r7,#12]
ARM GAS   			page 104


 4055 00aa 1A1F     	 subs r2,r3,#4
1738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4056              	 .loc 1 1738 37
 4057 00ac 7B69     	 ldr r3,[r7,#20]
 4058 00ae 9342     	 cmp r3,r2
 4059 00b0 28BF     	 it cs
 4060 00b2 1346     	 movcs r3,r2
 4061 00b4 1A46     	 mov r2,r3
 4062 00b6 3968     	 ldr r1,[r7]
 4063 00b8 B869     	 ldr r0,[r7,#24]
 4064 00ba FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 4065 00be 0346     	 mov r3,r0
1738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 4066              	 .loc 1 1738 16
 4067 00c0 FB61     	 str r3,[r7,#28]
1739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       }
 4068              	 .loc 1 1739 28
 4069 00c2 174B     	 ldr r3,.L243+8
 4070 00c4 1B78     	 ldrb r3,[r3]
 4071 00c6 1946     	 mov r1,r3
 4072 00c8 B869     	 ldr r0,[r7,#24]
 4073 00ca FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
 4074              	 .loc 1 1741 7
 4075 00ce 16E0     	 b .L238
 4076              	.L232:
1742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
1745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       //
1746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
 4077              	 .loc 1 1746 26
 4078 00d0 FB79     	 ldrb r3,[r7,#7]
 4079 00d2 1946     	 mov r1,r3
 4080 00d4 B869     	 ldr r0,[r7,#24]
 4081 00d6 FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
1747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 4082              	 .loc 1 1747 35
 4083 00da 7A69     	 ldr r2,[r7,#20]
 4084 00dc 3968     	 ldr r1,[r7]
 4085 00de B869     	 ldr r0,[r7,#24]
 4086 00e0 FFF7FEFF 	 bl _ZL14_WriteBlockingP20SEGGER_RTT_BUFFER_UPPKcj
 4087 00e4 0346     	 mov r3,r0
 4088              	 .loc 1 1747 14
 4089 00e6 FB61     	 str r3,[r7,#28]
1748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 4090              	 .loc 1 1748 26
 4091 00e8 0D4B     	 ldr r3,.L243+8
 4092 00ea 1B78     	 ldrb r3,[r3]
 4093 00ec 1946     	 mov r1,r3
 4094 00ee B869     	 ldr r0,[r7,#24]
 4095 00f0 FFF7FEFF 	 bl _ZL19_PostTerminalSwitchP20SEGGER_RTT_BUFFER_UPh
1749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 4096              	 .loc 1 1749 7
 4097 00f4 03E0     	 b .L238
 4098              	.L233:
1750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     default:
1751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       Status = -1;
ARM GAS   			page 105


 4099              	 .loc 1 1751 14
 4100 00f6 4FF0FF33 	 mov r3,#-1
 4101 00fa FB61     	 str r3,[r7,#28]
1752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****       break;
 4102              	 .loc 1 1752 7
 4103 00fc 00BF     	 nop
 4104              	.L238:
1753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     }
1754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     // Finish up.
1756:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     //
1757:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 4105              	 .loc 1 1757 5
 4106 00fe 3B69     	 ldr r3,[r7,#16]
 4107              	 .syntax unified
 4108              	
 4109 0100 83F31188 	 msr basepri,r3
 4110              	 
 4111              	
 4112              	 .thumb
 4113              	 .syntax unified
 4114              	.LBE31:
 4115              	.LBE30:
 4116 0104 02E0     	 b .L241
 4117              	.L231:
1758:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   } else {
1759:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****     Status = -1;
 4118              	 .loc 1 1759 12
 4119 0106 4FF0FF33 	 mov r3,#-1
 4120 010a FB61     	 str r3,[r7,#28]
 4121              	.L241:
 4122              	.LBE29:
1760:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   }
1761:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c ****   return Status;
 4123              	 .loc 1 1761 10
 4124 010c FB69     	 ldr r3,[r7,#28]
1762:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\Segger\Segger_RTT\RTT\SEGGER_RTT.c **** }
 4125              	 .loc 1 1762 1
 4126 010e 1846     	 mov r0,r3
 4127 0110 2037     	 adds r7,r7,#32
 4128              	 .cfi_def_cfa_offset 8
 4129 0112 BD46     	 mov sp,r7
 4130              	 .cfi_def_cfa_register 13
 4131              	 
 4132 0114 80BD     	 pop {r7,pc}
 4133              	.L244:
 4134 0116 00BF     	 .align 2
 4135              	.L243:
 4136 0118 00000000 	 .word _SEGGER_RTT
 4137 011c 18000000 	 .word _SEGGER_RTT+24
 4138 0120 00000000 	 .word _ZL15_ActiveTerminal
 4139              	 .cfi_endproc
 4140              	.LFE37:
 4141              	 .cantunwind
 4142              	 .fnend
 4143              	 .size SEGGER_RTT_TerminalOut,.-SEGGER_RTT_TerminalOut
 4144              	 .text
ARM GAS   			page 106


 4145              	.Letext0:
 4146              	 .file 2 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\cstdlib"
 4147              	 .file 3 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\bits\\std_abs.h"
 4148              	 .file 4 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\arm-none-eabi\\thumb\\v7e-m+fp\\hard\\bits\\c++config.h"
 4149              	 .file 5 "c:\\progra~2\\gnuarm~1\\102021~1.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 4150              	 .file 6 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\stdlib.h"
 4151              	 .file 7 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\stdlib.h"
 4152              	 .file 8 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\Segger\\Segger_RTT\\RTT\\SEGGER_RTT.h"
 4153              	 .file 9 "<built-in>"
 4154              	 .section .debug_info,"",%progbits
 4155              	.Ldebug_info0:
 4156 0000 A7160000 	 .4byte 0x16a7
 4157 0004 0400     	 .2byte 0x4
 4158 0006 00000000 	 .4byte .Ldebug_abbrev0
 4159 000a 04       	 .byte 0x4
 4160 000b 01       	 .uleb128 0x1
 4161 000c 7D050000 	 .4byte .LASF121
 4162 0010 04       	 .byte 0x4
 4163 0011 5D020000 	 .4byte .LASF122
 4164 0015 B6060000 	 .4byte .LASF123
 4165 0019 00000000 	 .4byte .Ldebug_ranges0+0
 4166 001d 00000000 	 .4byte 0
 4167 0021 00000000 	 .4byte .Ldebug_line0
 4168 0025 02       	 .uleb128 0x2
 4169 0026 73746400 	 .ascii "std\000"
 4170 002a 09       	 .byte 0x9
 4171 002b 00       	 .byte 0
 4172 002c D0010000 	 .4byte 0x1d0
 4173 0030 03       	 .uleb128 0x3
 4174 0031 4C000000 	 .4byte .LASF5
 4175 0035 04       	 .byte 0x4
 4176 0036 1E01     	 .2byte 0x11e
 4177 0038 41       	 .byte 0x41
 4178 0039 04       	 .uleb128 0x4
 4179 003a 04       	 .byte 0x4
 4180 003b 1E01     	 .2byte 0x11e
 4181 003d 41       	 .byte 0x41
 4182 003e 30000000 	 .4byte 0x30
 4183 0042 05       	 .uleb128 0x5
 4184 0043 02       	 .byte 0x2
 4185 0044 7F       	 .byte 0x7f
 4186 0045 0B       	 .byte 0xb
 4187 0046 F5020000 	 .4byte 0x2f5
 4188 004a 05       	 .uleb128 0x5
 4189 004b 02       	 .byte 0x2
 4190 004c 80       	 .byte 0x80
 4191 004d 0B       	 .byte 0xb
 4192 004e 29030000 	 .4byte 0x329
 4193 0052 05       	 .uleb128 0x5
 4194 0053 02       	 .byte 0x2
 4195 0054 86       	 .byte 0x86
 4196 0055 0B       	 .byte 0xb
 4197 0056 96030000 	 .4byte 0x396
 4198 005a 05       	 .uleb128 0x5
 4199 005b 02       	 .byte 0x2
 4200 005c 8C       	 .byte 0x8c
 4201 005d 0B       	 .byte 0xb
ARM GAS   			page 107


 4202 005e AC030000 	 .4byte 0x3ac
 4203 0062 05       	 .uleb128 0x5
 4204 0063 02       	 .byte 0x2
 4205 0064 8D       	 .byte 0x8d
 4206 0065 0B       	 .byte 0xb
 4207 0066 C9030000 	 .4byte 0x3c9
 4208 006a 05       	 .uleb128 0x5
 4209 006b 02       	 .byte 0x2
 4210 006c 8E       	 .byte 0x8e
 4211 006d 0B       	 .byte 0xb
 4212 006e DF030000 	 .4byte 0x3df
 4213 0072 05       	 .uleb128 0x5
 4214 0073 02       	 .byte 0x2
 4215 0074 8F       	 .byte 0x8f
 4216 0075 0B       	 .byte 0xb
 4217 0076 F5030000 	 .4byte 0x3f5
 4218 007a 05       	 .uleb128 0x5
 4219 007b 02       	 .byte 0x2
 4220 007c 91       	 .byte 0x91
 4221 007d 0B       	 .byte 0xb
 4222 007e 1F040000 	 .4byte 0x41f
 4223 0082 05       	 .uleb128 0x5
 4224 0083 02       	 .byte 0x2
 4225 0084 94       	 .byte 0x94
 4226 0085 0B       	 .byte 0xb
 4227 0086 3A040000 	 .4byte 0x43a
 4228 008a 05       	 .uleb128 0x5
 4229 008b 02       	 .byte 0x2
 4230 008c 96       	 .byte 0x96
 4231 008d 0B       	 .byte 0xb
 4232 008e 50040000 	 .4byte 0x450
 4233 0092 05       	 .uleb128 0x5
 4234 0093 02       	 .byte 0x2
 4235 0094 99       	 .byte 0x99
 4236 0095 0B       	 .byte 0xb
 4237 0096 6B040000 	 .4byte 0x46b
 4238 009a 05       	 .uleb128 0x5
 4239 009b 02       	 .byte 0x2
 4240 009c 9A       	 .byte 0x9a
 4241 009d 0B       	 .byte 0xb
 4242 009e 86040000 	 .4byte 0x486
 4243 00a2 05       	 .uleb128 0x5
 4244 00a3 02       	 .byte 0x2
 4245 00a4 9B       	 .byte 0x9b
 4246 00a5 0B       	 .byte 0xb
 4247 00a6 B8040000 	 .4byte 0x4b8
 4248 00aa 05       	 .uleb128 0x5
 4249 00ab 02       	 .byte 0x2
 4250 00ac 9D       	 .byte 0x9d
 4251 00ad 0B       	 .byte 0xb
 4252 00ae D8040000 	 .4byte 0x4d8
 4253 00b2 05       	 .uleb128 0x5
 4254 00b3 02       	 .byte 0x2
 4255 00b4 A3       	 .byte 0xa3
 4256 00b5 0B       	 .byte 0xb
 4257 00b6 F9040000 	 .4byte 0x4f9
 4258 00ba 05       	 .uleb128 0x5
ARM GAS   			page 108


 4259 00bb 02       	 .byte 0x2
 4260 00bc A5       	 .byte 0xa5
 4261 00bd 0B       	 .byte 0xb
 4262 00be 05050000 	 .4byte 0x505
 4263 00c2 05       	 .uleb128 0x5
 4264 00c3 02       	 .byte 0x2
 4265 00c4 A6       	 .byte 0xa6
 4266 00c5 0B       	 .byte 0xb
 4267 00c6 17050000 	 .4byte 0x517
 4268 00ca 05       	 .uleb128 0x5
 4269 00cb 02       	 .byte 0x2
 4270 00cc A7       	 .byte 0xa7
 4271 00cd 0B       	 .byte 0xb
 4272 00ce 38050000 	 .4byte 0x538
 4273 00d2 05       	 .uleb128 0x5
 4274 00d3 02       	 .byte 0x2
 4275 00d4 A8       	 .byte 0xa8
 4276 00d5 0B       	 .byte 0xb
 4277 00d6 58050000 	 .4byte 0x558
 4278 00da 05       	 .uleb128 0x5
 4279 00db 02       	 .byte 0x2
 4280 00dc A9       	 .byte 0xa9
 4281 00dd 0B       	 .byte 0xb
 4282 00de 78050000 	 .4byte 0x578
 4283 00e2 05       	 .uleb128 0x5
 4284 00e3 02       	 .byte 0x2
 4285 00e4 AB       	 .byte 0xab
 4286 00e5 0B       	 .byte 0xb
 4287 00e6 8E050000 	 .4byte 0x58e
 4288 00ea 05       	 .uleb128 0x5
 4289 00eb 02       	 .byte 0x2
 4290 00ec AC       	 .byte 0xac
 4291 00ed 0B       	 .byte 0xb
 4292 00ee B4050000 	 .4byte 0x5b4
 4293 00f2 05       	 .uleb128 0x5
 4294 00f3 02       	 .byte 0x2
 4295 00f4 F0       	 .byte 0xf0
 4296 00f5 16       	 .byte 0x16
 4297 00f6 5D030000 	 .4byte 0x35d
 4298 00fa 05       	 .uleb128 0x5
 4299 00fb 02       	 .byte 0x2
 4300 00fc F5       	 .byte 0xf5
 4301 00fd 16       	 .byte 0x16
 4302 00fe 27020000 	 .4byte 0x227
 4303 0102 05       	 .uleb128 0x5
 4304 0103 02       	 .byte 0x2
 4305 0104 F6       	 .byte 0xf6
 4306 0105 16       	 .byte 0x16
 4307 0106 CF050000 	 .4byte 0x5cf
 4308 010a 05       	 .uleb128 0x5
 4309 010b 02       	 .byte 0x2
 4310 010c F8       	 .byte 0xf8
 4311 010d 16       	 .byte 0x16
 4312 010e EB050000 	 .4byte 0x5eb
 4313 0112 05       	 .uleb128 0x5
 4314 0113 02       	 .byte 0x2
 4315 0114 F9       	 .byte 0xf9
ARM GAS   			page 109


 4316 0115 16       	 .byte 0x16
 4317 0116 44060000 	 .4byte 0x644
 4318 011a 05       	 .uleb128 0x5
 4319 011b 02       	 .byte 0x2
 4320 011c FA       	 .byte 0xfa
 4321 011d 16       	 .byte 0x16
 4322 011e 02060000 	 .4byte 0x602
 4323 0122 05       	 .uleb128 0x5
 4324 0123 02       	 .byte 0x2
 4325 0124 FB       	 .byte 0xfb
 4326 0125 16       	 .byte 0x16
 4327 0126 23060000 	 .4byte 0x623
 4328 012a 05       	 .uleb128 0x5
 4329 012b 02       	 .byte 0x2
 4330 012c FC       	 .byte 0xfc
 4331 012d 16       	 .byte 0x16
 4332 012e 66060000 	 .4byte 0x666
 4333 0132 06       	 .uleb128 0x6
 4334 0133 61627300 	 .ascii "abs\000"
 4335 0137 03       	 .byte 0x3
 4336 0138 4F       	 .byte 0x4f
 4337 0139 03       	 .byte 0x3
 4338 013a F5040000 	 .4byte .LASF0
 4339 013e 69020000 	 .4byte 0x269
 4340 0142 4C010000 	 .4byte 0x14c
 4341 0146 07       	 .uleb128 0x7
 4342 0147 69020000 	 .4byte 0x269
 4343 014b 00       	 .byte 0
 4344 014c 06       	 .uleb128 0x6
 4345 014d 61627300 	 .ascii "abs\000"
 4346 0151 03       	 .byte 0x3
 4347 0152 4B       	 .byte 0x4b
 4348 0153 03       	 .byte 0x3
 4349 0154 FF040000 	 .4byte .LASF1
 4350 0158 5F060000 	 .4byte 0x65f
 4351 015c 66010000 	 .4byte 0x166
 4352 0160 07       	 .uleb128 0x7
 4353 0161 5F060000 	 .4byte 0x65f
 4354 0165 00       	 .byte 0
 4355 0166 06       	 .uleb128 0x6
 4356 0167 61627300 	 .ascii "abs\000"
 4357 016b 03       	 .byte 0x3
 4358 016c 47       	 .byte 0x47
 4359 016d 03       	 .byte 0x3
 4360 016e EB040000 	 .4byte .LASF2
 4361 0172 C2030000 	 .4byte 0x3c2
 4362 0176 80010000 	 .4byte 0x180
 4363 017a 07       	 .uleb128 0x7
 4364 017b C2030000 	 .4byte 0x3c2
 4365 017f 00       	 .byte 0
 4366 0180 06       	 .uleb128 0x6
 4367 0181 61627300 	 .ascii "abs\000"
 4368 0185 03       	 .byte 0x3
 4369 0186 3D       	 .byte 0x3d
 4370 0187 03       	 .byte 0x3
 4371 0188 73050000 	 .4byte .LASF3
 4372 018c 62020000 	 .4byte 0x262
ARM GAS   			page 110


 4373 0190 9A010000 	 .4byte 0x19a
 4374 0194 07       	 .uleb128 0x7
 4375 0195 62020000 	 .4byte 0x262
 4376 0199 00       	 .byte 0
 4377 019a 06       	 .uleb128 0x6
 4378 019b 61627300 	 .ascii "abs\000"
 4379 019f 03       	 .byte 0x3
 4380 01a0 38       	 .byte 0x38
 4381 01a1 03       	 .byte 0x3
 4382 01a2 4C050000 	 .4byte .LASF4
 4383 01a6 91020000 	 .4byte 0x291
 4384 01aa B4010000 	 .4byte 0x1b4
 4385 01ae 07       	 .uleb128 0x7
 4386 01af 91020000 	 .4byte 0x291
 4387 01b3 00       	 .byte 0
 4388 01b4 08       	 .uleb128 0x8
 4389 01b5 64697600 	 .ascii "div\000"
 4390 01b9 02       	 .byte 0x2
 4391 01ba B1       	 .byte 0xb1
 4392 01bb 03       	 .byte 0x3
 4393 01bc 54000000 	 .4byte .LASF6
 4394 01c0 29030000 	 .4byte 0x329
 4395 01c4 07       	 .uleb128 0x7
 4396 01c5 91020000 	 .4byte 0x291
 4397 01c9 07       	 .uleb128 0x7
 4398 01ca 91020000 	 .4byte 0x291
 4399 01ce 00       	 .byte 0
 4400 01cf 00       	 .byte 0
 4401 01d0 09       	 .uleb128 0x9
 4402 01d1 50080000 	 .4byte .LASF124
 4403 01d5 04       	 .byte 0x4
 4404 01d6 2001     	 .2byte 0x120
 4405 01d8 0B       	 .byte 0xb
 4406 01d9 43020000 	 .4byte 0x243
 4407 01dd 03       	 .uleb128 0x3
 4408 01de 4C000000 	 .4byte .LASF5
 4409 01e2 04       	 .byte 0x4
 4410 01e3 2201     	 .2byte 0x122
 4411 01e5 41       	 .byte 0x41
 4412 01e6 04       	 .uleb128 0x4
 4413 01e7 04       	 .byte 0x4
 4414 01e8 2201     	 .2byte 0x122
 4415 01ea 41       	 .byte 0x41
 4416 01eb DD010000 	 .4byte 0x1dd
 4417 01ef 05       	 .uleb128 0x5
 4418 01f0 02       	 .byte 0x2
 4419 01f1 C8       	 .byte 0xc8
 4420 01f2 0B       	 .byte 0xb
 4421 01f3 5D030000 	 .4byte 0x35d
 4422 01f7 05       	 .uleb128 0x5
 4423 01f8 02       	 .byte 0x2
 4424 01f9 D8       	 .byte 0xd8
 4425 01fa 0B       	 .byte 0xb
 4426 01fb CF050000 	 .4byte 0x5cf
 4427 01ff 05       	 .uleb128 0x5
 4428 0200 02       	 .byte 0x2
 4429 0201 E3       	 .byte 0xe3
ARM GAS   			page 111


 4430 0202 0B       	 .byte 0xb
 4431 0203 EB050000 	 .4byte 0x5eb
 4432 0207 05       	 .uleb128 0x5
 4433 0208 02       	 .byte 0x2
 4434 0209 E4       	 .byte 0xe4
 4435 020a 0B       	 .byte 0xb
 4436 020b 02060000 	 .4byte 0x602
 4437 020f 05       	 .uleb128 0x5
 4438 0210 02       	 .byte 0x2
 4439 0211 E5       	 .byte 0xe5
 4440 0212 0B       	 .byte 0xb
 4441 0213 23060000 	 .4byte 0x623
 4442 0217 05       	 .uleb128 0x5
 4443 0218 02       	 .byte 0x2
 4444 0219 E7       	 .byte 0xe7
 4445 021a 0B       	 .byte 0xb
 4446 021b 44060000 	 .4byte 0x644
 4447 021f 05       	 .uleb128 0x5
 4448 0220 02       	 .byte 0x2
 4449 0221 E8       	 .byte 0xe8
 4450 0222 0B       	 .byte 0xb
 4451 0223 66060000 	 .4byte 0x666
 4452 0227 08       	 .uleb128 0x8
 4453 0228 64697600 	 .ascii "div\000"
 4454 022c 02       	 .byte 0x2
 4455 022d D5       	 .byte 0xd5
 4456 022e 03       	 .byte 0x3
 4457 022f 37050000 	 .4byte .LASF7
 4458 0233 5D030000 	 .4byte 0x35d
 4459 0237 07       	 .uleb128 0x7
 4460 0238 62020000 	 .4byte 0x262
 4461 023c 07       	 .uleb128 0x7
 4462 023d 62020000 	 .4byte 0x262
 4463 0241 00       	 .byte 0
 4464 0242 00       	 .byte 0
 4465 0243 0A       	 .uleb128 0xa
 4466 0244 3C000000 	 .4byte .LASF20
 4467 0248 05       	 .byte 0x5
 4468 0249 D1       	 .byte 0xd1
 4469 024a 17       	 .byte 0x17
 4470 024b 4F020000 	 .4byte 0x24f
 4471 024f 0B       	 .uleb128 0xb
 4472 0250 04       	 .byte 0x4
 4473 0251 07       	 .byte 0x7
 4474 0252 0A020000 	 .4byte .LASF8
 4475 0256 0C       	 .uleb128 0xc
 4476 0257 4F020000 	 .4byte 0x24f
 4477 025b 0D       	 .uleb128 0xd
 4478 025c 04       	 .byte 0x4
 4479 025d 05       	 .byte 0x5
 4480 025e 696E7400 	 .ascii "int\000"
 4481 0262 0B       	 .uleb128 0xb
 4482 0263 08       	 .byte 0x8
 4483 0264 05       	 .byte 0x5
 4484 0265 05010000 	 .4byte .LASF9
 4485 0269 0B       	 .uleb128 0xb
 4486 026a 08       	 .byte 0x8
ARM GAS   			page 112


 4487 026b 04       	 .byte 0x4
 4488 026c C9030000 	 .4byte .LASF10
 4489 0270 0E       	 .uleb128 0xe
 4490 0271 47030000 	 .4byte .LASF125
 4491 0275 0B       	 .uleb128 0xb
 4492 0276 01       	 .byte 0x1
 4493 0277 06       	 .byte 0x6
 4494 0278 13010000 	 .4byte .LASF11
 4495 027c 0B       	 .uleb128 0xb
 4496 027d 01       	 .byte 0x1
 4497 027e 08       	 .byte 0x8
 4498 027f 78040000 	 .4byte .LASF12
 4499 0283 0B       	 .uleb128 0xb
 4500 0284 02       	 .byte 0x2
 4501 0285 05       	 .byte 0x5
 4502 0286 AD040000 	 .4byte .LASF13
 4503 028a 0B       	 .uleb128 0xb
 4504 028b 02       	 .byte 0x2
 4505 028c 07       	 .byte 0x7
 4506 028d EA020000 	 .4byte .LASF14
 4507 0291 0B       	 .uleb128 0xb
 4508 0292 04       	 .byte 0x4
 4509 0293 05       	 .byte 0x5
 4510 0294 7E010000 	 .4byte .LASF15
 4511 0298 0B       	 .uleb128 0xb
 4512 0299 04       	 .byte 0x4
 4513 029a 07       	 .byte 0x7
 4514 029b 1C020000 	 .4byte .LASF16
 4515 029f 0B       	 .uleb128 0xb
 4516 02a0 08       	 .byte 0x8
 4517 02a1 07       	 .byte 0x7
 4518 02a2 CE000000 	 .4byte .LASF17
 4519 02a6 0F       	 .uleb128 0xf
 4520 02a7 04       	 .byte 0x4
 4521 02a8 10       	 .uleb128 0x10
 4522 02a9 04       	 .byte 0x4
 4523 02aa AE020000 	 .4byte 0x2ae
 4524 02ae 11       	 .uleb128 0x11
 4525 02af 10       	 .uleb128 0x10
 4526 02b0 04       	 .byte 0x4
 4527 02b1 7C020000 	 .4byte 0x27c
 4528 02b5 10       	 .uleb128 0x10
 4529 02b6 04       	 .byte 0x4
 4530 02b7 BB020000 	 .4byte 0x2bb
 4531 02bb 0B       	 .uleb128 0xb
 4532 02bc 01       	 .byte 0x1
 4533 02bd 08       	 .byte 0x8
 4534 02be 81060000 	 .4byte .LASF18
 4535 02c2 12       	 .uleb128 0x12
 4536 02c3 BB020000 	 .4byte 0x2bb
 4537 02c7 10       	 .uleb128 0x10
 4538 02c8 04       	 .byte 0x4
 4539 02c9 C2020000 	 .4byte 0x2c2
 4540 02cd 13       	 .uleb128 0x13
 4541 02ce 08       	 .byte 0x8
 4542 02cf 06       	 .byte 0x6
 4543 02d0 24       	 .byte 0x24
ARM GAS   			page 113


 4544 02d1 01       	 .byte 0x1
 4545 02d2 D3020000 	 .4byte .LASF22
 4546 02d6 F5020000 	 .4byte 0x2f5
 4547 02da 14       	 .uleb128 0x14
 4548 02db 25000000 	 .4byte .LASF19
 4549 02df 06       	 .byte 0x6
 4550 02e0 25       	 .byte 0x25
 4551 02e1 07       	 .byte 0x7
 4552 02e2 5B020000 	 .4byte 0x25b
 4553 02e6 00       	 .byte 0
 4554 02e7 15       	 .uleb128 0x15
 4555 02e8 72656D00 	 .ascii "rem\000"
 4556 02ec 06       	 .byte 0x6
 4557 02ed 26       	 .byte 0x26
 4558 02ee 07       	 .byte 0x7
 4559 02ef 5B020000 	 .4byte 0x25b
 4560 02f3 04       	 .byte 0x4
 4561 02f4 00       	 .byte 0
 4562 02f5 0A       	 .uleb128 0xa
 4563 02f6 FF000000 	 .4byte .LASF21
 4564 02fa 06       	 .byte 0x6
 4565 02fb 27       	 .byte 0x27
 4566 02fc 03       	 .byte 0x3
 4567 02fd CD020000 	 .4byte 0x2cd
 4568 0301 13       	 .uleb128 0x13
 4569 0302 08       	 .byte 0x8
 4570 0303 06       	 .byte 0x6
 4571 0304 2A       	 .byte 0x2a
 4572 0305 01       	 .byte 0x1
 4573 0306 86040000 	 .4byte .LASF23
 4574 030a 29030000 	 .4byte 0x329
 4575 030e 14       	 .uleb128 0x14
 4576 030f 25000000 	 .4byte .LASF19
 4577 0313 06       	 .byte 0x6
 4578 0314 2B       	 .byte 0x2b
 4579 0315 08       	 .byte 0x8
 4580 0316 91020000 	 .4byte 0x291
 4581 031a 00       	 .byte 0
 4582 031b 15       	 .uleb128 0x15
 4583 031c 72656D00 	 .ascii "rem\000"
 4584 0320 06       	 .byte 0x6
 4585 0321 2C       	 .byte 0x2c
 4586 0322 08       	 .byte 0x8
 4587 0323 91020000 	 .4byte 0x291
 4588 0327 04       	 .byte 0x4
 4589 0328 00       	 .byte 0
 4590 0329 0A       	 .uleb128 0xa
 4591 032a BD010000 	 .4byte .LASF24
 4592 032e 06       	 .byte 0x6
 4593 032f 2D       	 .byte 0x2d
 4594 0330 03       	 .byte 0x3
 4595 0331 01030000 	 .4byte 0x301
 4596 0335 13       	 .uleb128 0x13
 4597 0336 10       	 .byte 0x10
 4598 0337 06       	 .byte 0x6
 4599 0338 31       	 .byte 0x31
 4600 0339 01       	 .byte 0x1
ARM GAS   			page 114


 4601 033a A0000000 	 .4byte .LASF25
 4602 033e 5D030000 	 .4byte 0x35d
 4603 0342 14       	 .uleb128 0x14
 4604 0343 25000000 	 .4byte .LASF19
 4605 0347 06       	 .byte 0x6
 4606 0348 32       	 .byte 0x32
 4607 0349 11       	 .byte 0x11
 4608 034a 62020000 	 .4byte 0x262
 4609 034e 00       	 .byte 0
 4610 034f 15       	 .uleb128 0x15
 4611 0350 72656D00 	 .ascii "rem\000"
 4612 0354 06       	 .byte 0x6
 4613 0355 33       	 .byte 0x33
 4614 0356 11       	 .byte 0x11
 4615 0357 62020000 	 .4byte 0x262
 4616 035b 08       	 .byte 0x8
 4617 035c 00       	 .byte 0
 4618 035d 0A       	 .uleb128 0xa
 4619 035e 8E040000 	 .4byte .LASF26
 4620 0362 06       	 .byte 0x6
 4621 0363 34       	 .byte 0x34
 4622 0364 03       	 .byte 0x3
 4623 0365 35030000 	 .4byte 0x335
 4624 0369 0A       	 .uleb128 0xa
 4625 036a E2070000 	 .4byte .LASF27
 4626 036e 06       	 .byte 0x6
 4627 036f 39       	 .byte 0x39
 4628 0370 0F       	 .byte 0xf
 4629 0371 75030000 	 .4byte 0x375
 4630 0375 10       	 .uleb128 0x10
 4631 0376 04       	 .byte 0x4
 4632 0377 7B030000 	 .4byte 0x37b
 4633 037b 16       	 .uleb128 0x16
 4634 037c 5B020000 	 .4byte 0x25b
 4635 0380 8F030000 	 .4byte 0x38f
 4636 0384 07       	 .uleb128 0x7
 4637 0385 8F030000 	 .4byte 0x38f
 4638 0389 07       	 .uleb128 0x7
 4639 038a 8F030000 	 .4byte 0x38f
 4640 038e 00       	 .byte 0
 4641 038f 10       	 .uleb128 0x10
 4642 0390 04       	 .byte 0x4
 4643 0391 95030000 	 .4byte 0x395
 4644 0395 17       	 .uleb128 0x17
 4645 0396 18       	 .uleb128 0x18
 4646 0397 F8000000 	 .4byte .LASF28
 4647 039b 06       	 .byte 0x6
 4648 039c 4C       	 .byte 0x4c
 4649 039d 05       	 .byte 0x5
 4650 039e 5B020000 	 .4byte 0x25b
 4651 03a2 AC030000 	 .4byte 0x3ac
 4652 03a6 07       	 .uleb128 0x7
 4653 03a7 A8020000 	 .4byte 0x2a8
 4654 03ab 00       	 .byte 0
 4655 03ac 18       	 .uleb128 0x18
 4656 03ad 4B040000 	 .4byte .LASF29
 4657 03b1 06       	 .byte 0x6
ARM GAS   			page 115


 4658 03b2 4D       	 .byte 0x4d
 4659 03b3 08       	 .byte 0x8
 4660 03b4 C2030000 	 .4byte 0x3c2
 4661 03b8 C2030000 	 .4byte 0x3c2
 4662 03bc 07       	 .uleb128 0x7
 4663 03bd C7020000 	 .4byte 0x2c7
 4664 03c1 00       	 .byte 0
 4665 03c2 0B       	 .uleb128 0xb
 4666 03c3 08       	 .byte 0x8
 4667 03c4 04       	 .byte 0x4
 4668 03c5 C4010000 	 .4byte .LASF30
 4669 03c9 18       	 .uleb128 0x18
 4670 03ca 55040000 	 .4byte .LASF31
 4671 03ce 06       	 .byte 0x6
 4672 03cf 51       	 .byte 0x51
 4673 03d0 05       	 .byte 0x5
 4674 03d1 5B020000 	 .4byte 0x25b
 4675 03d5 DF030000 	 .4byte 0x3df
 4676 03d9 07       	 .uleb128 0x7
 4677 03da C7020000 	 .4byte 0x2c7
 4678 03de 00       	 .byte 0
 4679 03df 18       	 .uleb128 0x18
 4680 03e0 73040000 	 .4byte .LASF32
 4681 03e4 06       	 .byte 0x6
 4682 03e5 53       	 .byte 0x53
 4683 03e6 06       	 .byte 0x6
 4684 03e7 91020000 	 .4byte 0x291
 4685 03eb F5030000 	 .4byte 0x3f5
 4686 03ef 07       	 .uleb128 0x7
 4687 03f0 C7020000 	 .4byte 0x2c7
 4688 03f4 00       	 .byte 0
 4689 03f5 18       	 .uleb128 0x18
 4690 03f6 FD020000 	 .4byte .LASF33
 4691 03fa 06       	 .byte 0x6
 4692 03fb 55       	 .byte 0x55
 4693 03fc 08       	 .byte 0x8
 4694 03fd A6020000 	 .4byte 0x2a6
 4695 0401 1F040000 	 .4byte 0x41f
 4696 0405 07       	 .uleb128 0x7
 4697 0406 8F030000 	 .4byte 0x38f
 4698 040a 07       	 .uleb128 0x7
 4699 040b 8F030000 	 .4byte 0x38f
 4700 040f 07       	 .uleb128 0x7
 4701 0410 43020000 	 .4byte 0x243
 4702 0414 07       	 .uleb128 0x7
 4703 0415 43020000 	 .4byte 0x243
 4704 0419 07       	 .uleb128 0x7
 4705 041a 69030000 	 .4byte 0x369
 4706 041e 00       	 .byte 0
 4707 041f 19       	 .uleb128 0x19
 4708 0420 64697600 	 .ascii "div\000"
 4709 0424 06       	 .byte 0x6
 4710 0425 5C       	 .byte 0x5c
 4711 0426 07       	 .byte 0x7
 4712 0427 F5020000 	 .4byte 0x2f5
 4713 042b 3A040000 	 .4byte 0x43a
 4714 042f 07       	 .uleb128 0x7
ARM GAS   			page 116


 4715 0430 5B020000 	 .4byte 0x25b
 4716 0434 07       	 .uleb128 0x7
 4717 0435 5B020000 	 .4byte 0x25b
 4718 0439 00       	 .byte 0
 4719 043a 18       	 .uleb128 0x18
 4720 043b 94030000 	 .4byte .LASF34
 4721 043f 06       	 .byte 0x6
 4722 0440 5F       	 .byte 0x5f
 4723 0441 09       	 .byte 0x9
 4724 0442 B5020000 	 .4byte 0x2b5
 4725 0446 50040000 	 .4byte 0x450
 4726 044a 07       	 .uleb128 0x7
 4727 044b C7020000 	 .4byte 0x2c7
 4728 044f 00       	 .byte 0
 4729 0450 18       	 .uleb128 0x18
 4730 0451 01040000 	 .4byte .LASF35
 4731 0455 06       	 .byte 0x6
 4732 0456 6B       	 .byte 0x6b
 4733 0457 08       	 .byte 0x8
 4734 0458 29030000 	 .4byte 0x329
 4735 045c 6B040000 	 .4byte 0x46b
 4736 0460 07       	 .uleb128 0x7
 4737 0461 91020000 	 .4byte 0x291
 4738 0465 07       	 .uleb128 0x7
 4739 0466 91020000 	 .4byte 0x291
 4740 046a 00       	 .byte 0
 4741 046b 18       	 .uleb128 0x18
 4742 046c 1F010000 	 .4byte .LASF36
 4743 0470 06       	 .byte 0x6
 4744 0471 6D       	 .byte 0x6d
 4745 0472 05       	 .byte 0x5
 4746 0473 5B020000 	 .4byte 0x25b
 4747 0477 86040000 	 .4byte 0x486
 4748 047b 07       	 .uleb128 0x7
 4749 047c C7020000 	 .4byte 0x2c7
 4750 0480 07       	 .uleb128 0x7
 4751 0481 43020000 	 .4byte 0x243
 4752 0485 00       	 .byte 0
 4753 0486 18       	 .uleb128 0x18
 4754 0487 42040000 	 .4byte .LASF37
 4755 048b 06       	 .byte 0x6
 4756 048c 73       	 .byte 0x73
 4757 048d 08       	 .byte 0x8
 4758 048e 43020000 	 .4byte 0x243
 4759 0492 A6040000 	 .4byte 0x4a6
 4760 0496 07       	 .uleb128 0x7
 4761 0497 A6040000 	 .4byte 0x4a6
 4762 049b 07       	 .uleb128 0x7
 4763 049c C7020000 	 .4byte 0x2c7
 4764 04a0 07       	 .uleb128 0x7
 4765 04a1 43020000 	 .4byte 0x243
 4766 04a5 00       	 .byte 0
 4767 04a6 10       	 .uleb128 0x10
 4768 04a7 04       	 .byte 0x4
 4769 04a8 AC040000 	 .4byte 0x4ac
 4770 04ac 0B       	 .uleb128 0xb
 4771 04ad 04       	 .byte 0x4
ARM GAS   			page 117


 4772 04ae 07       	 .byte 0x7
 4773 04af 26030000 	 .4byte .LASF38
 4774 04b3 12       	 .uleb128 0x12
 4775 04b4 AC040000 	 .4byte 0x4ac
 4776 04b8 18       	 .uleb128 0x18
 4777 04b9 DD010000 	 .4byte .LASF39
 4778 04bd 06       	 .byte 0x6
 4779 04be 6F       	 .byte 0x6f
 4780 04bf 05       	 .byte 0x5
 4781 04c0 5B020000 	 .4byte 0x25b
 4782 04c4 D8040000 	 .4byte 0x4d8
 4783 04c8 07       	 .uleb128 0x7
 4784 04c9 A6040000 	 .4byte 0x4a6
 4785 04cd 07       	 .uleb128 0x7
 4786 04ce C7020000 	 .4byte 0x2c7
 4787 04d2 07       	 .uleb128 0x7
 4788 04d3 43020000 	 .4byte 0x243
 4789 04d7 00       	 .byte 0
 4790 04d8 1A       	 .uleb128 0x1a
 4791 04d9 EA010000 	 .4byte .LASF40
 4792 04dd 06       	 .byte 0x6
 4793 04de 8F       	 .byte 0x8f
 4794 04df 06       	 .byte 0x6
 4795 04e0 F9040000 	 .4byte 0x4f9
 4796 04e4 07       	 .uleb128 0x7
 4797 04e5 A6020000 	 .4byte 0x2a6
 4798 04e9 07       	 .uleb128 0x7
 4799 04ea 43020000 	 .4byte 0x243
 4800 04ee 07       	 .uleb128 0x7
 4801 04ef 43020000 	 .4byte 0x243
 4802 04f3 07       	 .uleb128 0x7
 4803 04f4 69030000 	 .4byte 0x369
 4804 04f8 00       	 .byte 0
 4805 04f9 1B       	 .uleb128 0x1b
 4806 04fa 3C020000 	 .4byte .LASF126
 4807 04fe 06       	 .byte 0x6
 4808 04ff 90       	 .byte 0x90
 4809 0500 05       	 .byte 0x5
 4810 0501 5B020000 	 .4byte 0x25b
 4811 0505 1A       	 .uleb128 0x1a
 4812 0506 2E020000 	 .4byte .LASF41
 4813 050a 06       	 .byte 0x6
 4814 050b 9F       	 .byte 0x9f
 4815 050c 06       	 .byte 0x6
 4816 050d 17050000 	 .4byte 0x517
 4817 0511 07       	 .uleb128 0x7
 4818 0512 4F020000 	 .4byte 0x24f
 4819 0516 00       	 .byte 0
 4820 0517 18       	 .uleb128 0x18
 4821 0518 59010000 	 .4byte .LASF42
 4822 051c 06       	 .byte 0x6
 4823 051d A0       	 .byte 0xa0
 4824 051e 08       	 .byte 0x8
 4825 051f C2030000 	 .4byte 0x3c2
 4826 0523 32050000 	 .4byte 0x532
 4827 0527 07       	 .uleb128 0x7
 4828 0528 C7020000 	 .4byte 0x2c7
ARM GAS   			page 118


 4829 052c 07       	 .uleb128 0x7
 4830 052d 32050000 	 .4byte 0x532
 4831 0531 00       	 .byte 0
 4832 0532 10       	 .uleb128 0x10
 4833 0533 04       	 .byte 0x4
 4834 0534 B5020000 	 .4byte 0x2b5
 4835 0538 18       	 .uleb128 0x18
 4836 0539 87010000 	 .4byte .LASF43
 4837 053d 06       	 .byte 0x6
 4838 053e AB       	 .byte 0xab
 4839 053f 06       	 .byte 0x6
 4840 0540 91020000 	 .4byte 0x291
 4841 0544 58050000 	 .4byte 0x558
 4842 0548 07       	 .uleb128 0x7
 4843 0549 C7020000 	 .4byte 0x2c7
 4844 054d 07       	 .uleb128 0x7
 4845 054e 32050000 	 .4byte 0x532
 4846 0552 07       	 .uleb128 0x7
 4847 0553 5B020000 	 .4byte 0x25b
 4848 0557 00       	 .byte 0
 4849 0558 18       	 .uleb128 0x18
 4850 0559 95070000 	 .4byte .LASF44
 4851 055d 06       	 .byte 0x6
 4852 055e AD       	 .byte 0xad
 4853 055f 0F       	 .byte 0xf
 4854 0560 98020000 	 .4byte 0x298
 4855 0564 78050000 	 .4byte 0x578
 4856 0568 07       	 .uleb128 0x7
 4857 0569 C7020000 	 .4byte 0x2c7
 4858 056d 07       	 .uleb128 0x7
 4859 056e 32050000 	 .4byte 0x532
 4860 0572 07       	 .uleb128 0x7
 4861 0573 5B020000 	 .4byte 0x25b
 4862 0577 00       	 .byte 0
 4863 0578 18       	 .uleb128 0x18
 4864 0579 DB070000 	 .4byte .LASF45
 4865 057d 06       	 .byte 0x6
 4866 057e BF       	 .byte 0xbf
 4867 057f 05       	 .byte 0x5
 4868 0580 5B020000 	 .4byte 0x25b
 4869 0584 8E050000 	 .4byte 0x58e
 4870 0588 07       	 .uleb128 0x7
 4871 0589 C7020000 	 .4byte 0x2c7
 4872 058d 00       	 .byte 0
 4873 058e 18       	 .uleb128 0x18
 4874 058f 97000000 	 .4byte .LASF46
 4875 0593 06       	 .byte 0x6
 4876 0594 75       	 .byte 0x75
 4877 0595 08       	 .byte 0x8
 4878 0596 43020000 	 .4byte 0x243
 4879 059a AE050000 	 .4byte 0x5ae
 4880 059e 07       	 .uleb128 0x7
 4881 059f B5020000 	 .4byte 0x2b5
 4882 05a3 07       	 .uleb128 0x7
 4883 05a4 AE050000 	 .4byte 0x5ae
 4884 05a8 07       	 .uleb128 0x7
 4885 05a9 43020000 	 .4byte 0x243
ARM GAS   			page 119


 4886 05ad 00       	 .byte 0
 4887 05ae 10       	 .uleb128 0x10
 4888 05af 04       	 .byte 0x4
 4889 05b0 B3040000 	 .4byte 0x4b3
 4890 05b4 18       	 .uleb128 0x18
 4891 05b5 E4040000 	 .4byte .LASF47
 4892 05b9 06       	 .byte 0x6
 4893 05ba 71       	 .byte 0x71
 4894 05bb 05       	 .byte 0x5
 4895 05bc 5B020000 	 .4byte 0x25b
 4896 05c0 CF050000 	 .4byte 0x5cf
 4897 05c4 07       	 .uleb128 0x7
 4898 05c5 B5020000 	 .4byte 0x2b5
 4899 05c9 07       	 .uleb128 0x7
 4900 05ca AC040000 	 .4byte 0x4ac
 4901 05ce 00       	 .byte 0
 4902 05cf 1C       	 .uleb128 0x1c
 4903 05d0 14030000 	 .4byte .LASF48
 4904 05d4 06       	 .byte 0x6
 4905 05d5 0C01     	 .2byte 0x10c
 4906 05d7 09       	 .byte 0x9
 4907 05d8 5D030000 	 .4byte 0x35d
 4908 05dc EB050000 	 .4byte 0x5eb
 4909 05e0 07       	 .uleb128 0x7
 4910 05e1 62020000 	 .4byte 0x262
 4911 05e5 07       	 .uleb128 0x7
 4912 05e6 62020000 	 .4byte 0x262
 4913 05ea 00       	 .byte 0
 4914 05eb 1C       	 .uleb128 0x1c
 4915 05ec 15000000 	 .4byte .LASF49
 4916 05f0 06       	 .byte 0x6
 4917 05f1 0701     	 .2byte 0x107
 4918 05f3 0B       	 .byte 0xb
 4919 05f4 62020000 	 .4byte 0x262
 4920 05f8 02060000 	 .4byte 0x602
 4921 05fc 07       	 .uleb128 0x7
 4922 05fd C7020000 	 .4byte 0x2c7
 4923 0601 00       	 .byte 0
 4924 0602 1C       	 .uleb128 0x1c
 4925 0603 DC040000 	 .4byte .LASF50
 4926 0607 06       	 .byte 0x6
 4927 0608 0D01     	 .2byte 0x10d
 4928 060a 0B       	 .byte 0xb
 4929 060b 62020000 	 .4byte 0x262
 4930 060f 23060000 	 .4byte 0x623
 4931 0613 07       	 .uleb128 0x7
 4932 0614 C7020000 	 .4byte 0x2c7
 4933 0618 07       	 .uleb128 0x7
 4934 0619 32050000 	 .4byte 0x532
 4935 061d 07       	 .uleb128 0x7
 4936 061e 5B020000 	 .4byte 0x25b
 4937 0622 00       	 .byte 0
 4938 0623 1C       	 .uleb128 0x1c
 4939 0624 86060000 	 .4byte .LASF51
 4940 0628 06       	 .byte 0x6
 4941 0629 1101     	 .2byte 0x111
 4942 062b 14       	 .byte 0x14
ARM GAS   			page 120


 4943 062c 9F020000 	 .4byte 0x29f
 4944 0630 44060000 	 .4byte 0x644
 4945 0634 07       	 .uleb128 0x7
 4946 0635 C7020000 	 .4byte 0x2c7
 4947 0639 07       	 .uleb128 0x7
 4948 063a 32050000 	 .4byte 0x532
 4949 063e 07       	 .uleb128 0x7
 4950 063f 5B020000 	 .4byte 0x25b
 4951 0643 00       	 .byte 0
 4952 0644 18       	 .uleb128 0x18
 4953 0645 77010000 	 .4byte .LASF52
 4954 0649 06       	 .byte 0x6
 4955 064a A3       	 .byte 0xa3
 4956 064b 07       	 .byte 0x7
 4957 064c 5F060000 	 .4byte 0x65f
 4958 0650 5F060000 	 .4byte 0x65f
 4959 0654 07       	 .uleb128 0x7
 4960 0655 C7020000 	 .4byte 0x2c7
 4961 0659 07       	 .uleb128 0x7
 4962 065a 32050000 	 .4byte 0x532
 4963 065e 00       	 .byte 0
 4964 065f 0B       	 .uleb128 0xb
 4965 0660 04       	 .byte 0x4
 4966 0661 04       	 .byte 0x4
 4967 0662 3C040000 	 .4byte .LASF53
 4968 0666 1C       	 .uleb128 0x1c
 4969 0667 B7040000 	 .4byte .LASF54
 4970 066b 06       	 .byte 0x6
 4971 066c 4401     	 .2byte 0x144
 4972 066e 14       	 .byte 0x14
 4973 066f 69020000 	 .4byte 0x269
 4974 0673 82060000 	 .4byte 0x682
 4975 0677 07       	 .uleb128 0x7
 4976 0678 C7020000 	 .4byte 0x2c7
 4977 067c 07       	 .uleb128 0x7
 4978 067d 32050000 	 .4byte 0x532
 4979 0681 00       	 .byte 0
 4980 0682 05       	 .uleb128 0x5
 4981 0683 07       	 .byte 0x7
 4982 0684 27       	 .byte 0x27
 4983 0685 0C       	 .byte 0xc
 4984 0686 96030000 	 .4byte 0x396
 4985 068a 05       	 .uleb128 0x5
 4986 068b 07       	 .byte 0x7
 4987 068c 33       	 .byte 0x33
 4988 068d 0C       	 .byte 0xc
 4989 068e F5020000 	 .4byte 0x2f5
 4990 0692 05       	 .uleb128 0x5
 4991 0693 07       	 .byte 0x7
 4992 0694 34       	 .byte 0x34
 4993 0695 0C       	 .byte 0xc
 4994 0696 29030000 	 .4byte 0x329
 4995 069a 05       	 .uleb128 0x5
 4996 069b 07       	 .byte 0x7
 4997 069c 36       	 .byte 0x36
 4998 069d 0C       	 .byte 0xc
 4999 069e 32010000 	 .4byte 0x132
ARM GAS   			page 121


 5000 06a2 05       	 .uleb128 0x5
 5001 06a3 07       	 .byte 0x7
 5002 06a4 36       	 .byte 0x36
 5003 06a5 0C       	 .byte 0xc
 5004 06a6 4C010000 	 .4byte 0x14c
 5005 06aa 05       	 .uleb128 0x5
 5006 06ab 07       	 .byte 0x7
 5007 06ac 36       	 .byte 0x36
 5008 06ad 0C       	 .byte 0xc
 5009 06ae 66010000 	 .4byte 0x166
 5010 06b2 05       	 .uleb128 0x5
 5011 06b3 07       	 .byte 0x7
 5012 06b4 36       	 .byte 0x36
 5013 06b5 0C       	 .byte 0xc
 5014 06b6 80010000 	 .4byte 0x180
 5015 06ba 05       	 .uleb128 0x5
 5016 06bb 07       	 .byte 0x7
 5017 06bc 36       	 .byte 0x36
 5018 06bd 0C       	 .byte 0xc
 5019 06be 9A010000 	 .4byte 0x19a
 5020 06c2 05       	 .uleb128 0x5
 5021 06c3 07       	 .byte 0x7
 5022 06c4 37       	 .byte 0x37
 5023 06c5 0C       	 .byte 0xc
 5024 06c6 AC030000 	 .4byte 0x3ac
 5025 06ca 05       	 .uleb128 0x5
 5026 06cb 07       	 .byte 0x7
 5027 06cc 38       	 .byte 0x38
 5028 06cd 0C       	 .byte 0xc
 5029 06ce C9030000 	 .4byte 0x3c9
 5030 06d2 05       	 .uleb128 0x5
 5031 06d3 07       	 .byte 0x7
 5032 06d4 39       	 .byte 0x39
 5033 06d5 0C       	 .byte 0xc
 5034 06d6 DF030000 	 .4byte 0x3df
 5035 06da 05       	 .uleb128 0x5
 5036 06db 07       	 .byte 0x7
 5037 06dc 3A       	 .byte 0x3a
 5038 06dd 0C       	 .byte 0xc
 5039 06de F5030000 	 .4byte 0x3f5
 5040 06e2 05       	 .uleb128 0x5
 5041 06e3 07       	 .byte 0x7
 5042 06e4 3C       	 .byte 0x3c
 5043 06e5 0C       	 .byte 0xc
 5044 06e6 27020000 	 .4byte 0x227
 5045 06ea 05       	 .uleb128 0x5
 5046 06eb 07       	 .byte 0x7
 5047 06ec 3C       	 .byte 0x3c
 5048 06ed 0C       	 .byte 0xc
 5049 06ee B4010000 	 .4byte 0x1b4
 5050 06f2 05       	 .uleb128 0x5
 5051 06f3 07       	 .byte 0x7
 5052 06f4 3C       	 .byte 0x3c
 5053 06f5 0C       	 .byte 0xc
 5054 06f6 1F040000 	 .4byte 0x41f
 5055 06fa 05       	 .uleb128 0x5
 5056 06fb 07       	 .byte 0x7
ARM GAS   			page 122


 5057 06fc 3E       	 .byte 0x3e
 5058 06fd 0C       	 .byte 0xc
 5059 06fe 3A040000 	 .4byte 0x43a
 5060 0702 05       	 .uleb128 0x5
 5061 0703 07       	 .byte 0x7
 5062 0704 40       	 .byte 0x40
 5063 0705 0C       	 .byte 0xc
 5064 0706 50040000 	 .4byte 0x450
 5065 070a 05       	 .uleb128 0x5
 5066 070b 07       	 .byte 0x7
 5067 070c 43       	 .byte 0x43
 5068 070d 0C       	 .byte 0xc
 5069 070e 6B040000 	 .4byte 0x46b
 5070 0712 05       	 .uleb128 0x5
 5071 0713 07       	 .byte 0x7
 5072 0714 44       	 .byte 0x44
 5073 0715 0C       	 .byte 0xc
 5074 0716 86040000 	 .4byte 0x486
 5075 071a 05       	 .uleb128 0x5
 5076 071b 07       	 .byte 0x7
 5077 071c 45       	 .byte 0x45
 5078 071d 0C       	 .byte 0xc
 5079 071e B8040000 	 .4byte 0x4b8
 5080 0722 05       	 .uleb128 0x5
 5081 0723 07       	 .byte 0x7
 5082 0724 47       	 .byte 0x47
 5083 0725 0C       	 .byte 0xc
 5084 0726 D8040000 	 .4byte 0x4d8
 5085 072a 05       	 .uleb128 0x5
 5086 072b 07       	 .byte 0x7
 5087 072c 48       	 .byte 0x48
 5088 072d 0C       	 .byte 0xc
 5089 072e F9040000 	 .4byte 0x4f9
 5090 0732 05       	 .uleb128 0x5
 5091 0733 07       	 .byte 0x7
 5092 0734 4A       	 .byte 0x4a
 5093 0735 0C       	 .byte 0xc
 5094 0736 05050000 	 .4byte 0x505
 5095 073a 05       	 .uleb128 0x5
 5096 073b 07       	 .byte 0x7
 5097 073c 4B       	 .byte 0x4b
 5098 073d 0C       	 .byte 0xc
 5099 073e 17050000 	 .4byte 0x517
 5100 0742 05       	 .uleb128 0x5
 5101 0743 07       	 .byte 0x7
 5102 0744 4C       	 .byte 0x4c
 5103 0745 0C       	 .byte 0xc
 5104 0746 38050000 	 .4byte 0x538
 5105 074a 05       	 .uleb128 0x5
 5106 074b 07       	 .byte 0x7
 5107 074c 4D       	 .byte 0x4d
 5108 074d 0C       	 .byte 0xc
 5109 074e 58050000 	 .4byte 0x558
 5110 0752 05       	 .uleb128 0x5
 5111 0753 07       	 .byte 0x7
 5112 0754 4E       	 .byte 0x4e
 5113 0755 0C       	 .byte 0xc
ARM GAS   			page 123


 5114 0756 78050000 	 .4byte 0x578
 5115 075a 05       	 .uleb128 0x5
 5116 075b 07       	 .byte 0x7
 5117 075c 50       	 .byte 0x50
 5118 075d 0C       	 .byte 0xc
 5119 075e 8E050000 	 .4byte 0x58e
 5120 0762 05       	 .uleb128 0x5
 5121 0763 07       	 .byte 0x7
 5122 0764 51       	 .byte 0x51
 5123 0765 0C       	 .byte 0xc
 5124 0766 B4050000 	 .4byte 0x5b4
 5125 076a 13       	 .uleb128 0x13
 5126 076b 18       	 .byte 0x18
 5127 076c 08       	 .byte 0x8
 5128 076d 5C       	 .byte 0x5c
 5129 076e 10       	 .byte 0x10
 5130 076f BE070000 	 .4byte .LASF55
 5131 0773 C6070000 	 .4byte 0x7c6
 5132 0777 14       	 .uleb128 0x14
 5133 0778 41030000 	 .4byte .LASF56
 5134 077c 08       	 .byte 0x8
 5135 077d 5D       	 .byte 0x5d
 5136 077e 16       	 .byte 0x16
 5137 077f C7020000 	 .4byte 0x2c7
 5138 0783 00       	 .byte 0
 5139 0784 14       	 .uleb128 0x14
 5140 0785 34020000 	 .4byte .LASF57
 5141 0789 08       	 .byte 0x8
 5142 078a 5E       	 .byte 0x5e
 5143 078b 16       	 .byte 0x16
 5144 078c B5020000 	 .4byte 0x2b5
 5145 0790 04       	 .byte 0x4
 5146 0791 14       	 .uleb128 0x14
 5147 0792 2F040000 	 .4byte .LASF58
 5148 0796 08       	 .byte 0x8
 5149 0797 5F       	 .byte 0x5f
 5150 0798 16       	 .byte 0x16
 5151 0799 4F020000 	 .4byte 0x24f
 5152 079d 08       	 .byte 0x8
 5153 079e 14       	 .uleb128 0x14
 5154 079f D5070000 	 .4byte .LASF59
 5155 07a3 08       	 .byte 0x8
 5156 07a4 60       	 .byte 0x60
 5157 07a5 16       	 .byte 0x16
 5158 07a6 4F020000 	 .4byte 0x24f
 5159 07aa 0C       	 .byte 0xc
 5160 07ab 14       	 .uleb128 0x14
 5161 07ac F0010000 	 .4byte .LASF60
 5162 07b0 08       	 .byte 0x8
 5163 07b1 61       	 .byte 0x61
 5164 07b2 16       	 .byte 0x16
 5165 07b3 56020000 	 .4byte 0x256
 5166 07b7 10       	 .byte 0x10
 5167 07b8 14       	 .uleb128 0x14
 5168 07b9 AA060000 	 .4byte .LASF61
 5169 07bd 08       	 .byte 0x8
 5170 07be 62       	 .byte 0x62
ARM GAS   			page 124


 5171 07bf 16       	 .byte 0x16
 5172 07c0 4F020000 	 .4byte 0x24f
 5173 07c4 14       	 .byte 0x14
 5174 07c5 00       	 .byte 0
 5175 07c6 0A       	 .uleb128 0xa
 5176 07c7 5F000000 	 .4byte .LASF62
 5177 07cb 08       	 .byte 0x8
 5178 07cc 63       	 .byte 0x63
 5179 07cd 03       	 .byte 0x3
 5180 07ce 6A070000 	 .4byte 0x76a
 5181 07d2 13       	 .uleb128 0x13
 5182 07d3 18       	 .byte 0x18
 5183 07d4 08       	 .byte 0x8
 5184 07d5 69       	 .byte 0x69
 5185 07d6 10       	 .byte 0x10
 5186 07d7 25080000 	 .4byte .LASF63
 5187 07db 2E080000 	 .4byte 0x82e
 5188 07df 14       	 .uleb128 0x14
 5189 07e0 41030000 	 .4byte .LASF56
 5190 07e4 08       	 .byte 0x8
 5191 07e5 6A       	 .byte 0x6a
 5192 07e6 16       	 .byte 0x16
 5193 07e7 C7020000 	 .4byte 0x2c7
 5194 07eb 00       	 .byte 0
 5195 07ec 14       	 .uleb128 0x14
 5196 07ed 34020000 	 .4byte .LASF57
 5197 07f1 08       	 .byte 0x8
 5198 07f2 6B       	 .byte 0x6b
 5199 07f3 16       	 .byte 0x16
 5200 07f4 B5020000 	 .4byte 0x2b5
 5201 07f8 04       	 .byte 0x4
 5202 07f9 14       	 .uleb128 0x14
 5203 07fa 2F040000 	 .4byte .LASF58
 5204 07fe 08       	 .byte 0x8
 5205 07ff 6C       	 .byte 0x6c
 5206 0800 16       	 .byte 0x16
 5207 0801 4F020000 	 .4byte 0x24f
 5208 0805 08       	 .byte 0x8
 5209 0806 14       	 .uleb128 0x14
 5210 0807 D5070000 	 .4byte .LASF59
 5211 080b 08       	 .byte 0x8
 5212 080c 6D       	 .byte 0x6d
 5213 080d 16       	 .byte 0x16
 5214 080e 56020000 	 .4byte 0x256
 5215 0812 0C       	 .byte 0xc
 5216 0813 14       	 .uleb128 0x14
 5217 0814 F0010000 	 .4byte .LASF60
 5218 0818 08       	 .byte 0x8
 5219 0819 6E       	 .byte 0x6e
 5220 081a 16       	 .byte 0x16
 5221 081b 4F020000 	 .4byte 0x24f
 5222 081f 10       	 .byte 0x10
 5223 0820 14       	 .uleb128 0x14
 5224 0821 AA060000 	 .4byte .LASF61
 5225 0825 08       	 .byte 0x8
 5226 0826 6F       	 .byte 0x6f
 5227 0827 16       	 .byte 0x16
ARM GAS   			page 125


 5228 0828 4F020000 	 .4byte 0x24f
 5229 082c 14       	 .byte 0x14
 5230 082d 00       	 .byte 0
 5231 082e 0A       	 .uleb128 0xa
 5232 082f A9000000 	 .4byte .LASF64
 5233 0833 08       	 .byte 0x8
 5234 0834 70       	 .byte 0x70
 5235 0835 03       	 .byte 0x3
 5236 0836 D2070000 	 .4byte 0x7d2
 5237 083a 13       	 .uleb128 0x13
 5238 083b A8       	 .byte 0xa8
 5239 083c 08       	 .byte 0x8
 5240 083d 77       	 .byte 0x77
 5241 083e 10       	 .byte 0x10
 5242 083f 03080000 	 .4byte .LASF65
 5243 0843 89080000 	 .4byte 0x889
 5244 0847 14       	 .uleb128 0x14
 5245 0848 50040000 	 .4byte .LASF66
 5246 084c 08       	 .byte 0x8
 5247 084d 78       	 .byte 0x78
 5248 084e 1B       	 .byte 0x1b
 5249 084f 89080000 	 .4byte 0x889
 5250 0853 00       	 .byte 0
 5251 0854 14       	 .uleb128 0x14
 5252 0855 DA020000 	 .4byte .LASF67
 5253 0859 08       	 .byte 0x8
 5254 085a 79       	 .byte 0x79
 5255 085b 1B       	 .byte 0x1b
 5256 085c 5B020000 	 .4byte 0x25b
 5257 0860 10       	 .byte 0x10
 5258 0861 14       	 .uleb128 0x14
 5259 0862 2A000000 	 .4byte .LASF68
 5260 0866 08       	 .byte 0x8
 5261 0867 7A       	 .byte 0x7a
 5262 0868 1B       	 .byte 0x1b
 5263 0869 5B020000 	 .4byte 0x25b
 5264 086d 14       	 .byte 0x14
 5265 086e 15       	 .uleb128 0x15
 5266 086f 61557000 	 .ascii "aUp\000"
 5267 0873 08       	 .byte 0x8
 5268 0874 7B       	 .byte 0x7b
 5269 0875 1B       	 .byte 0x1b
 5270 0876 99080000 	 .4byte 0x899
 5271 087a 18       	 .byte 0x18
 5272 087b 14       	 .uleb128 0x14
 5273 087c 56050000 	 .4byte .LASF69
 5274 0880 08       	 .byte 0x8
 5275 0881 7C       	 .byte 0x7c
 5276 0882 1B       	 .byte 0x1b
 5277 0883 A9080000 	 .4byte 0x8a9
 5278 0887 60       	 .byte 0x60
 5279 0888 00       	 .byte 0
 5280 0889 1D       	 .uleb128 0x1d
 5281 088a BB020000 	 .4byte 0x2bb
 5282 088e 99080000 	 .4byte 0x899
 5283 0892 1E       	 .uleb128 0x1e
 5284 0893 4F020000 	 .4byte 0x24f
ARM GAS   			page 126


 5285 0897 0F       	 .byte 0xf
 5286 0898 00       	 .byte 0
 5287 0899 1D       	 .uleb128 0x1d
 5288 089a C6070000 	 .4byte 0x7c6
 5289 089e A9080000 	 .4byte 0x8a9
 5290 08a2 1E       	 .uleb128 0x1e
 5291 08a3 4F020000 	 .4byte 0x24f
 5292 08a7 02       	 .byte 0x2
 5293 08a8 00       	 .byte 0
 5294 08a9 1D       	 .uleb128 0x1d
 5295 08aa 2E080000 	 .4byte 0x82e
 5296 08ae B9080000 	 .4byte 0x8b9
 5297 08b2 1E       	 .uleb128 0x1e
 5298 08b3 4F020000 	 .4byte 0x24f
 5299 08b7 02       	 .byte 0x2
 5300 08b8 00       	 .byte 0
 5301 08b9 0A       	 .uleb128 0xa
 5302 08ba 9B030000 	 .4byte .LASF70
 5303 08be 08       	 .byte 0x8
 5304 08bf 7D       	 .byte 0x7d
 5305 08c0 03       	 .byte 0x3
 5306 08c1 3A080000 	 .4byte 0x83a
 5307 08c5 1F       	 .uleb128 0x1f
 5308 08c6 8E010000 	 .4byte .LASF127
 5309 08ca 08       	 .byte 0x8
 5310 08cb 85       	 .byte 0x85
 5311 08cc 16       	 .byte 0x16
 5312 08cd B9080000 	 .4byte 0x8b9
 5313 08d1 1D       	 .uleb128 0x1d
 5314 08d2 7C020000 	 .4byte 0x27c
 5315 08d6 E1080000 	 .4byte 0x8e1
 5316 08da 1E       	 .uleb128 0x1e
 5317 08db 4F020000 	 .4byte 0x24f
 5318 08df 0F       	 .byte 0xf
 5319 08e0 00       	 .byte 0
 5320 08e1 20       	 .uleb128 0x20
 5321 08e2 B1070000 	 .4byte .LASF71
 5322 08e6 01       	 .byte 0x1
 5323 08e7 F3       	 .byte 0xf3
 5324 08e8 16       	 .byte 0x16
 5325 08e9 D1080000 	 .4byte 0x8d1
 5326 08ed 05       	 .uleb128 0x5
 5327 08ee 03       	 .byte 0x3
 5328 08ef 00000000 	 .4byte _ZL12_aTerminalId
 5329 08f3 21       	 .uleb128 0x21
 5330 08f4 C5080000 	 .4byte 0x8c5
 5331 08f8 01       	 .byte 0x1
 5332 08f9 FE       	 .byte 0xfe
 5333 08fa 01       	 .byte 0x1
 5334 08fb 05       	 .uleb128 0x5
 5335 08fc 03       	 .byte 0x3
 5336 08fd 00000000 	 .4byte _SEGGER_RTT
 5337 0901 1D       	 .uleb128 0x1d
 5338 0902 BB020000 	 .4byte 0x2bb
 5339 0906 12090000 	 .4byte 0x912
 5340 090a 22       	 .uleb128 0x22
 5341 090b 4F020000 	 .4byte 0x24f
ARM GAS   			page 127


 5342 090f FF03     	 .2byte 0x3ff
 5343 0911 00       	 .byte 0
 5344 0912 23       	 .uleb128 0x23
 5345 0913 56070000 	 .4byte .LASF72
 5346 0917 01       	 .byte 0x1
 5347 0918 0001     	 .2byte 0x100
 5348 091a 01       	 .byte 0x1
 5349 091b 01090000 	 .4byte 0x901
 5350 091f 05       	 .uleb128 0x5
 5351 0920 03       	 .byte 0x3
 5352 0921 00000000 	 .4byte _ZL11_acUpBuffer
 5353 0925 23       	 .uleb128 0x23
 5354 0926 06040000 	 .4byte .LASF73
 5355 092a 01       	 .byte 0x1
 5356 092b 0101     	 .2byte 0x101
 5357 092d 01       	 .byte 0x1
 5358 092e 89080000 	 .4byte 0x889
 5359 0932 05       	 .uleb128 0x5
 5360 0933 03       	 .byte 0x3
 5361 0934 00000000 	 .4byte _ZL13_acDownBuffer
 5362 0938 23       	 .uleb128 0x23
 5363 0939 85070000 	 .4byte .LASF74
 5364 093d 01       	 .byte 0x1
 5365 093e 0301     	 .2byte 0x103
 5366 0940 0D       	 .byte 0xd
 5367 0941 BB020000 	 .4byte 0x2bb
 5368 0945 05       	 .uleb128 0x5
 5369 0946 03       	 .byte 0x3
 5370 0947 00000000 	 .4byte _ZL15_ActiveTerminal
 5371 094b 24       	 .uleb128 0x24
 5372 094c 62070000 	 .4byte .LASF81
 5373 0950 01       	 .byte 0x1
 5374 0951 9906     	 .2byte 0x699
 5375 0953 05       	 .byte 0x5
 5376 0954 5B020000 	 .4byte 0x25b
 5377 0958 00000000 	 .4byte .LFB37
 5378 095c 24010000 	 .4byte .LFE37-.LFB37
 5379 0960 01       	 .uleb128 0x1
 5380 0961 9C       	 .byte 0x9c
 5381 0962 DF090000 	 .4byte 0x9df
 5382 0966 25       	 .uleb128 0x25
 5383 0967 13080000 	 .4byte .LASF75
 5384 096b 01       	 .byte 0x1
 5385 096c 9906     	 .2byte 0x699
 5386 096e 22       	 .byte 0x22
 5387 096f BB020000 	 .4byte 0x2bb
 5388 0973 02       	 .uleb128 0x2
 5389 0974 91       	 .byte 0x91
 5390 0975 5F       	 .sleb128 -33
 5391 0976 26       	 .uleb128 0x26
 5392 0977 7300     	 .ascii "s\000"
 5393 0979 01       	 .byte 0x1
 5394 097a 9906     	 .2byte 0x699
 5395 097c 3A       	 .byte 0x3a
 5396 097d C7020000 	 .4byte 0x2c7
 5397 0981 02       	 .uleb128 0x2
 5398 0982 91       	 .byte 0x91
ARM GAS   			page 128


 5399 0983 58       	 .sleb128 -40
 5400 0984 23       	 .uleb128 0x23
 5401 0985 1E080000 	 .4byte .LASF76
 5402 0989 01       	 .byte 0x1
 5403 098a 9A06     	 .2byte 0x69a
 5404 098c 19       	 .byte 0x19
 5405 098d 5B020000 	 .4byte 0x25b
 5406 0991 02       	 .uleb128 0x2
 5407 0992 91       	 .byte 0x91
 5408 0993 74       	 .sleb128 -12
 5409 0994 23       	 .uleb128 0x23
 5410 0995 B5010000 	 .4byte .LASF77
 5411 0999 01       	 .byte 0x1
 5412 099a 9B06     	 .2byte 0x69b
 5413 099c 19       	 .byte 0x19
 5414 099d 4F020000 	 .4byte 0x24f
 5415 09a1 02       	 .uleb128 0x2
 5416 09a2 91       	 .byte 0x91
 5417 09a3 6C       	 .sleb128 -20
 5418 09a4 23       	 .uleb128 0x23
 5419 09a5 B0060000 	 .4byte .LASF78
 5420 09a9 01       	 .byte 0x1
 5421 09aa 9C06     	 .2byte 0x69c
 5422 09ac 19       	 .byte 0x19
 5423 09ad 4F020000 	 .4byte 0x24f
 5424 09b1 02       	 .uleb128 0x2
 5425 09b2 91       	 .byte 0x91
 5426 09b3 64       	 .sleb128 -28
 5427 09b4 23       	 .uleb128 0x23
 5428 09b5 C3030000 	 .4byte .LASF79
 5429 09b9 01       	 .byte 0x1
 5430 09ba 9D06     	 .2byte 0x69d
 5431 09bc 19       	 .byte 0x19
 5432 09bd DF090000 	 .4byte 0x9df
 5433 09c1 02       	 .uleb128 0x2
 5434 09c2 91       	 .byte 0x91
 5435 09c3 70       	 .sleb128 -16
 5436 09c4 27       	 .uleb128 0x27
 5437 09c5 2A000000 	 .4byte .LBB31
 5438 09c9 DA000000 	 .4byte .LBE31-.LBB31
 5439 09cd 23       	 .uleb128 0x23
 5440 09ce 1B000000 	 .4byte .LASF80
 5441 09d2 01       	 .byte 0x1
 5442 09d3 B006     	 .2byte 0x6b0
 5443 09d5 05       	 .byte 0x5
 5444 09d6 4F020000 	 .4byte 0x24f
 5445 09da 02       	 .uleb128 0x2
 5446 09db 91       	 .byte 0x91
 5447 09dc 68       	 .sleb128 -24
 5448 09dd 00       	 .byte 0
 5449 09de 00       	 .byte 0
 5450 09df 10       	 .uleb128 0x10
 5451 09e0 04       	 .byte 0x4
 5452 09e1 C6070000 	 .4byte 0x7c6
 5453 09e5 24       	 .uleb128 0x24
 5454 09e6 22070000 	 .4byte .LASF82
 5455 09ea 01       	 .byte 0x1
ARM GAS   			page 129


 5456 09eb 6706     	 .2byte 0x667
 5457 09ed 05       	 .byte 0x5
 5458 09ee 5B020000 	 .4byte 0x25b
 5459 09f2 00000000 	 .4byte .LFB36
 5460 09f6 B4000000 	 .4byte .LFE36-.LFB36
 5461 09fa 01       	 .uleb128 0x1
 5462 09fb 9C       	 .byte 0x9c
 5463 09fc 680A0000 	 .4byte 0xa68
 5464 0a00 25       	 .uleb128 0x25
 5465 0a01 13080000 	 .4byte .LASF75
 5466 0a05 01       	 .byte 0x1
 5467 0a06 6706     	 .2byte 0x667
 5468 0a08 22       	 .byte 0x22
 5469 0a09 BB020000 	 .4byte 0x2bb
 5470 0a0d 02       	 .uleb128 0x2
 5471 0a0e 91       	 .byte 0x91
 5472 0a0f 5F       	 .sleb128 -33
 5473 0a10 28       	 .uleb128 0x28
 5474 0a11 616300   	 .ascii "ac\000"
 5475 0a14 01       	 .byte 0x1
 5476 0a15 6806     	 .2byte 0x668
 5477 0a17 19       	 .byte 0x19
 5478 0a18 680A0000 	 .4byte 0xa68
 5479 0a1c 02       	 .uleb128 0x2
 5480 0a1d 91       	 .byte 0x91
 5481 0a1e 64       	 .sleb128 -28
 5482 0a1f 23       	 .uleb128 0x23
 5483 0a20 C3030000 	 .4byte .LASF79
 5484 0a24 01       	 .byte 0x1
 5485 0a25 6906     	 .2byte 0x669
 5486 0a27 19       	 .byte 0x19
 5487 0a28 DF090000 	 .4byte 0x9df
 5488 0a2c 02       	 .uleb128 0x2
 5489 0a2d 91       	 .byte 0x91
 5490 0a2e 70       	 .sleb128 -16
 5491 0a2f 23       	 .uleb128 0x23
 5492 0a30 B0060000 	 .4byte .LASF78
 5493 0a34 01       	 .byte 0x1
 5494 0a35 6A06     	 .2byte 0x66a
 5495 0a37 0C       	 .byte 0xc
 5496 0a38 4F020000 	 .4byte 0x24f
 5497 0a3c 02       	 .uleb128 0x2
 5498 0a3d 91       	 .byte 0x91
 5499 0a3e 68       	 .sleb128 -24
 5500 0a3f 28       	 .uleb128 0x28
 5501 0a40 7200     	 .ascii "r\000"
 5502 0a42 01       	 .byte 0x1
 5503 0a43 6B06     	 .2byte 0x66b
 5504 0a45 07       	 .byte 0x7
 5505 0a46 5B020000 	 .4byte 0x25b
 5506 0a4a 02       	 .uleb128 0x2
 5507 0a4b 91       	 .byte 0x91
 5508 0a4c 74       	 .sleb128 -12
 5509 0a4d 27       	 .uleb128 0x27
 5510 0a4e 30000000 	 .4byte .LBB28
 5511 0a52 60000000 	 .4byte .LBE28-.LBB28
 5512 0a56 23       	 .uleb128 0x23
ARM GAS   			page 130


 5513 0a57 1B000000 	 .4byte .LASF80
 5514 0a5b 01       	 .byte 0x1
 5515 0a5c 7406     	 .2byte 0x674
 5516 0a5e 05       	 .byte 0x5
 5517 0a5f 4F020000 	 .4byte 0x24f
 5518 0a63 02       	 .uleb128 0x2
 5519 0a64 91       	 .byte 0x91
 5520 0a65 6C       	 .sleb128 -20
 5521 0a66 00       	 .byte 0
 5522 0a67 00       	 .byte 0
 5523 0a68 1D       	 .uleb128 0x1d
 5524 0a69 7C020000 	 .4byte 0x27c
 5525 0a6d 780A0000 	 .4byte 0xa78
 5526 0a71 1E       	 .uleb128 0x1e
 5527 0a72 4F020000 	 .4byte 0x24f
 5528 0a76 01       	 .byte 0x1
 5529 0a77 00       	 .byte 0
 5530 0a78 29       	 .uleb128 0x29
 5531 0a79 25010000 	 .4byte .LASF128
 5532 0a7d 01       	 .byte 0x1
 5533 0a7e 5506     	 .2byte 0x655
 5534 0a80 06       	 .byte 0x6
 5535 0a81 00000000 	 .4byte .LFB35
 5536 0a85 0C000000 	 .4byte .LFE35-.LFB35
 5537 0a89 01       	 .uleb128 0x1
 5538 0a8a 9C       	 .byte 0x9c
 5539 0a8b 24       	 .uleb128 0x24
 5540 0a8c 09050000 	 .4byte .LASF83
 5541 0a90 01       	 .byte 0x1
 5542 0a91 3D06     	 .2byte 0x63d
 5543 0a93 05       	 .byte 0x5
 5544 0a94 5B020000 	 .4byte 0x25b
 5545 0a98 00000000 	 .4byte .LFB34
 5546 0a9c 64000000 	 .4byte .LFE34-.LFB34
 5547 0aa0 01       	 .uleb128 0x1
 5548 0aa1 9C       	 .byte 0x9c
 5549 0aa2 EF0A0000 	 .4byte 0xaef
 5550 0aa6 25       	 .uleb128 0x25
 5551 0aa7 1A030000 	 .4byte .LASF84
 5552 0aab 01       	 .byte 0x1
 5553 0aac 3D06     	 .2byte 0x63d
 5554 0aae 2C       	 .byte 0x2c
 5555 0aaf 4F020000 	 .4byte 0x24f
 5556 0ab3 02       	 .uleb128 0x2
 5557 0ab4 91       	 .byte 0x91
 5558 0ab5 6C       	 .sleb128 -20
 5559 0ab6 25       	 .uleb128 0x25
 5560 0ab7 AA060000 	 .4byte .LASF61
 5561 0abb 01       	 .byte 0x1
 5562 0abc 3D06     	 .2byte 0x63d
 5563 0abe 42       	 .byte 0x42
 5564 0abf 4F020000 	 .4byte 0x24f
 5565 0ac3 02       	 .uleb128 0x2
 5566 0ac4 91       	 .byte 0x91
 5567 0ac5 68       	 .sleb128 -24
 5568 0ac6 28       	 .uleb128 0x28
 5569 0ac7 7200     	 .ascii "r\000"
ARM GAS   			page 131


 5570 0ac9 01       	 .byte 0x1
 5571 0aca 3E06     	 .2byte 0x63e
 5572 0acc 07       	 .byte 0x7
 5573 0acd 5B020000 	 .4byte 0x25b
 5574 0ad1 02       	 .uleb128 0x2
 5575 0ad2 91       	 .byte 0x91
 5576 0ad3 74       	 .sleb128 -12
 5577 0ad4 27       	 .uleb128 0x27
 5578 0ad5 22000000 	 .4byte .LBB25
 5579 0ad9 28000000 	 .4byte .LBE25-.LBB25
 5580 0add 23       	 .uleb128 0x23
 5581 0ade 1B000000 	 .4byte .LASF80
 5582 0ae2 01       	 .byte 0x1
 5583 0ae3 4206     	 .2byte 0x642
 5584 0ae5 05       	 .byte 0x5
 5585 0ae6 4F020000 	 .4byte 0x24f
 5586 0aea 02       	 .uleb128 0x2
 5587 0aeb 91       	 .byte 0x91
 5588 0aec 70       	 .sleb128 -16
 5589 0aed 00       	 .byte 0
 5590 0aee 00       	 .byte 0
 5591 0aef 24       	 .uleb128 0x24
 5592 0af0 69030000 	 .4byte .LASF85
 5593 0af4 01       	 .byte 0x1
 5594 0af5 1E06     	 .2byte 0x61e
 5595 0af7 05       	 .byte 0x5
 5596 0af8 5B020000 	 .4byte 0x25b
 5597 0afc 00000000 	 .4byte .LFB33
 5598 0b00 64000000 	 .4byte .LFE33-.LFB33
 5599 0b04 01       	 .uleb128 0x1
 5600 0b05 9C       	 .byte 0x9c
 5601 0b06 530B0000 	 .4byte 0xb53
 5602 0b0a 25       	 .uleb128 0x25
 5603 0b0b 1A030000 	 .4byte .LASF84
 5604 0b0f 01       	 .byte 0x1
 5605 0b10 1E06     	 .2byte 0x61e
 5606 0b12 2A       	 .byte 0x2a
 5607 0b13 4F020000 	 .4byte 0x24f
 5608 0b17 02       	 .uleb128 0x2
 5609 0b18 91       	 .byte 0x91
 5610 0b19 6C       	 .sleb128 -20
 5611 0b1a 25       	 .uleb128 0x25
 5612 0b1b AA060000 	 .4byte .LASF61
 5613 0b1f 01       	 .byte 0x1
 5614 0b20 1E06     	 .2byte 0x61e
 5615 0b22 40       	 .byte 0x40
 5616 0b23 4F020000 	 .4byte 0x24f
 5617 0b27 02       	 .uleb128 0x2
 5618 0b28 91       	 .byte 0x91
 5619 0b29 68       	 .sleb128 -24
 5620 0b2a 28       	 .uleb128 0x28
 5621 0b2b 7200     	 .ascii "r\000"
 5622 0b2d 01       	 .byte 0x1
 5623 0b2e 1F06     	 .2byte 0x61f
 5624 0b30 07       	 .byte 0x7
 5625 0b31 5B020000 	 .4byte 0x25b
 5626 0b35 02       	 .uleb128 0x2
ARM GAS   			page 132


 5627 0b36 91       	 .byte 0x91
 5628 0b37 74       	 .sleb128 -12
 5629 0b38 27       	 .uleb128 0x27
 5630 0b39 22000000 	 .4byte .LBB22
 5631 0b3d 28000000 	 .4byte .LBE22-.LBB22
 5632 0b41 23       	 .uleb128 0x23
 5633 0b42 1B000000 	 .4byte .LASF80
 5634 0b46 01       	 .byte 0x1
 5635 0b47 2306     	 .2byte 0x623
 5636 0b49 05       	 .byte 0x5
 5637 0b4a 4F020000 	 .4byte 0x24f
 5638 0b4e 02       	 .uleb128 0x2
 5639 0b4f 91       	 .byte 0x91
 5640 0b50 70       	 .sleb128 -16
 5641 0b51 00       	 .byte 0
 5642 0b52 00       	 .byte 0
 5643 0b53 24       	 .uleb128 0x24
 5644 0b54 BF040000 	 .4byte .LASF86
 5645 0b58 01       	 .byte 0x1
 5646 0b59 FF05     	 .2byte 0x5ff
 5647 0b5b 05       	 .byte 0x5
 5648 0b5c 5B020000 	 .4byte 0x25b
 5649 0b60 00000000 	 .4byte .LFB32
 5650 0b64 64000000 	 .4byte .LFE32-.LFB32
 5651 0b68 01       	 .uleb128 0x1
 5652 0b69 9C       	 .byte 0x9c
 5653 0b6a B70B0000 	 .4byte 0xbb7
 5654 0b6e 25       	 .uleb128 0x25
 5655 0b6f 1A030000 	 .4byte .LASF84
 5656 0b73 01       	 .byte 0x1
 5657 0b74 FF05     	 .2byte 0x5ff
 5658 0b76 2B       	 .byte 0x2b
 5659 0b77 4F020000 	 .4byte 0x24f
 5660 0b7b 02       	 .uleb128 0x2
 5661 0b7c 91       	 .byte 0x91
 5662 0b7d 6C       	 .sleb128 -20
 5663 0b7e 25       	 .uleb128 0x25
 5664 0b7f 41030000 	 .4byte .LASF56
 5665 0b83 01       	 .byte 0x1
 5666 0b84 FF05     	 .2byte 0x5ff
 5667 0b86 44       	 .byte 0x44
 5668 0b87 C7020000 	 .4byte 0x2c7
 5669 0b8b 02       	 .uleb128 0x2
 5670 0b8c 91       	 .byte 0x91
 5671 0b8d 68       	 .sleb128 -24
 5672 0b8e 28       	 .uleb128 0x28
 5673 0b8f 7200     	 .ascii "r\000"
 5674 0b91 01       	 .byte 0x1
 5675 0b92 0006     	 .2byte 0x600
 5676 0b94 07       	 .byte 0x7
 5677 0b95 5B020000 	 .4byte 0x25b
 5678 0b99 02       	 .uleb128 0x2
 5679 0b9a 91       	 .byte 0x91
 5680 0b9b 74       	 .sleb128 -12
 5681 0b9c 27       	 .uleb128 0x27
 5682 0b9d 22000000 	 .4byte .LBB19
 5683 0ba1 28000000 	 .4byte .LBE19-.LBB19
ARM GAS   			page 133


 5684 0ba5 23       	 .uleb128 0x23
 5685 0ba6 1B000000 	 .4byte .LASF80
 5686 0baa 01       	 .byte 0x1
 5687 0bab 0406     	 .2byte 0x604
 5688 0bad 05       	 .byte 0x5
 5689 0bae 4F020000 	 .4byte 0x24f
 5690 0bb2 02       	 .uleb128 0x2
 5691 0bb3 91       	 .byte 0x91
 5692 0bb4 70       	 .sleb128 -16
 5693 0bb5 00       	 .byte 0
 5694 0bb6 00       	 .byte 0
 5695 0bb7 24       	 .uleb128 0x24
 5696 0bb8 8F060000 	 .4byte .LASF87
 5697 0bbc 01       	 .byte 0x1
 5698 0bbd E005     	 .2byte 0x5e0
 5699 0bbf 05       	 .byte 0x5
 5700 0bc0 5B020000 	 .4byte 0x25b
 5701 0bc4 00000000 	 .4byte .LFB31
 5702 0bc8 64000000 	 .4byte .LFE31-.LFB31
 5703 0bcc 01       	 .uleb128 0x1
 5704 0bcd 9C       	 .byte 0x9c
 5705 0bce 1B0C0000 	 .4byte 0xc1b
 5706 0bd2 25       	 .uleb128 0x25
 5707 0bd3 1A030000 	 .4byte .LASF84
 5708 0bd7 01       	 .byte 0x1
 5709 0bd8 E005     	 .2byte 0x5e0
 5710 0bda 29       	 .byte 0x29
 5711 0bdb 4F020000 	 .4byte 0x24f
 5712 0bdf 02       	 .uleb128 0x2
 5713 0be0 91       	 .byte 0x91
 5714 0be1 6C       	 .sleb128 -20
 5715 0be2 25       	 .uleb128 0x25
 5716 0be3 41030000 	 .4byte .LASF56
 5717 0be7 01       	 .byte 0x1
 5718 0be8 E005     	 .2byte 0x5e0
 5719 0bea 42       	 .byte 0x42
 5720 0beb C7020000 	 .4byte 0x2c7
 5721 0bef 02       	 .uleb128 0x2
 5722 0bf0 91       	 .byte 0x91
 5723 0bf1 68       	 .sleb128 -24
 5724 0bf2 28       	 .uleb128 0x28
 5725 0bf3 7200     	 .ascii "r\000"
 5726 0bf5 01       	 .byte 0x1
 5727 0bf6 E105     	 .2byte 0x5e1
 5728 0bf8 07       	 .byte 0x7
 5729 0bf9 5B020000 	 .4byte 0x25b
 5730 0bfd 02       	 .uleb128 0x2
 5731 0bfe 91       	 .byte 0x91
 5732 0bff 74       	 .sleb128 -12
 5733 0c00 27       	 .uleb128 0x27
 5734 0c01 22000000 	 .4byte .LBB16
 5735 0c05 28000000 	 .4byte .LBE16-.LBB16
 5736 0c09 23       	 .uleb128 0x23
 5737 0c0a 1B000000 	 .4byte .LASF80
 5738 0c0e 01       	 .byte 0x1
 5739 0c0f E505     	 .2byte 0x5e5
 5740 0c11 05       	 .byte 0x5
ARM GAS   			page 134


 5741 0c12 4F020000 	 .4byte 0x24f
 5742 0c16 02       	 .uleb128 0x2
 5743 0c17 91       	 .byte 0x91
 5744 0c18 70       	 .sleb128 -16
 5745 0c19 00       	 .byte 0
 5746 0c1a 00       	 .byte 0
 5747 0c1b 24       	 .uleb128 0x24
 5748 0c1c 41020000 	 .4byte .LASF88
 5749 0c20 01       	 .byte 0x1
 5750 0c21 BA05     	 .2byte 0x5ba
 5751 0c23 05       	 .byte 0x5
 5752 0c24 5B020000 	 .4byte 0x25b
 5753 0c28 00000000 	 .4byte .LFB30
 5754 0c2c D4000000 	 .4byte .LFE30-.LFB30
 5755 0c30 01       	 .uleb128 0x1
 5756 0c31 9C       	 .byte 0x9c
 5757 0c32 AF0C0000 	 .4byte 0xcaf
 5758 0c36 25       	 .uleb128 0x25
 5759 0c37 1A030000 	 .4byte .LASF84
 5760 0c3b 01       	 .byte 0x1
 5761 0c3c BA05     	 .2byte 0x5ba
 5762 0c3e 2A       	 .byte 0x2a
 5763 0c3f 4F020000 	 .4byte 0x24f
 5764 0c43 02       	 .uleb128 0x2
 5765 0c44 91       	 .byte 0x91
 5766 0c45 6C       	 .sleb128 -20
 5767 0c46 25       	 .uleb128 0x25
 5768 0c47 41030000 	 .4byte .LASF56
 5769 0c4b 01       	 .byte 0x1
 5770 0c4c BA05     	 .2byte 0x5ba
 5771 0c4e 43       	 .byte 0x43
 5772 0c4f C7020000 	 .4byte 0x2c7
 5773 0c53 02       	 .uleb128 0x2
 5774 0c54 91       	 .byte 0x91
 5775 0c55 68       	 .sleb128 -24
 5776 0c56 25       	 .uleb128 0x25
 5777 0c57 34020000 	 .4byte .LASF57
 5778 0c5b 01       	 .byte 0x1
 5779 0c5c BA05     	 .2byte 0x5ba
 5780 0c5e 50       	 .byte 0x50
 5781 0c5f A6020000 	 .4byte 0x2a6
 5782 0c63 02       	 .uleb128 0x2
 5783 0c64 91       	 .byte 0x91
 5784 0c65 64       	 .sleb128 -28
 5785 0c66 25       	 .uleb128 0x25
 5786 0c67 E5030000 	 .4byte .LASF89
 5787 0c6b 01       	 .byte 0x1
 5788 0c6c BA05     	 .2byte 0x5ba
 5789 0c6e 62       	 .byte 0x62
 5790 0c6f 4F020000 	 .4byte 0x24f
 5791 0c73 02       	 .uleb128 0x2
 5792 0c74 91       	 .byte 0x91
 5793 0c75 60       	 .sleb128 -32
 5794 0c76 25       	 .uleb128 0x25
 5795 0c77 AA060000 	 .4byte .LASF61
 5796 0c7b 01       	 .byte 0x1
 5797 0c7c BA05     	 .2byte 0x5ba
ARM GAS   			page 135


 5798 0c7e 77       	 .byte 0x77
 5799 0c7f 4F020000 	 .4byte 0x24f
 5800 0c83 02       	 .uleb128 0x2
 5801 0c84 91       	 .byte 0x91
 5802 0c85 00       	 .sleb128 0
 5803 0c86 28       	 .uleb128 0x28
 5804 0c87 7200     	 .ascii "r\000"
 5805 0c89 01       	 .byte 0x1
 5806 0c8a BB05     	 .2byte 0x5bb
 5807 0c8c 07       	 .byte 0x7
 5808 0c8d 5B020000 	 .4byte 0x25b
 5809 0c91 02       	 .uleb128 0x2
 5810 0c92 91       	 .byte 0x91
 5811 0c93 74       	 .sleb128 -12
 5812 0c94 27       	 .uleb128 0x27
 5813 0c95 26000000 	 .4byte .LBB13
 5814 0c99 92000000 	 .4byte .LBE13-.LBB13
 5815 0c9d 23       	 .uleb128 0x23
 5816 0c9e 1B000000 	 .4byte .LASF80
 5817 0ca2 01       	 .byte 0x1
 5818 0ca3 BF05     	 .2byte 0x5bf
 5819 0ca5 05       	 .byte 0x5
 5820 0ca6 4F020000 	 .4byte 0x24f
 5821 0caa 02       	 .uleb128 0x2
 5822 0cab 91       	 .byte 0x91
 5823 0cac 70       	 .sleb128 -16
 5824 0cad 00       	 .byte 0
 5825 0cae 00       	 .byte 0
 5826 0caf 24       	 .uleb128 0x24
 5827 0cb0 A9030000 	 .4byte .LASF90
 5828 0cb4 01       	 .byte 0x1
 5829 0cb5 8B05     	 .2byte 0x58b
 5830 0cb7 05       	 .byte 0x5
 5831 0cb8 5B020000 	 .4byte 0x25b
 5832 0cbc 00000000 	 .4byte .LFB29
 5833 0cc0 D4000000 	 .4byte .LFE29-.LFB29
 5834 0cc4 01       	 .uleb128 0x1
 5835 0cc5 9C       	 .byte 0x9c
 5836 0cc6 430D0000 	 .4byte 0xd43
 5837 0cca 25       	 .uleb128 0x25
 5838 0ccb 1A030000 	 .4byte .LASF84
 5839 0ccf 01       	 .byte 0x1
 5840 0cd0 8B05     	 .2byte 0x58b
 5841 0cd2 28       	 .byte 0x28
 5842 0cd3 4F020000 	 .4byte 0x24f
 5843 0cd7 02       	 .uleb128 0x2
 5844 0cd8 91       	 .byte 0x91
 5845 0cd9 6C       	 .sleb128 -20
 5846 0cda 25       	 .uleb128 0x25
 5847 0cdb 41030000 	 .4byte .LASF56
 5848 0cdf 01       	 .byte 0x1
 5849 0ce0 8B05     	 .2byte 0x58b
 5850 0ce2 41       	 .byte 0x41
 5851 0ce3 C7020000 	 .4byte 0x2c7
 5852 0ce7 02       	 .uleb128 0x2
 5853 0ce8 91       	 .byte 0x91
 5854 0ce9 68       	 .sleb128 -24
ARM GAS   			page 136


 5855 0cea 25       	 .uleb128 0x25
 5856 0ceb 34020000 	 .4byte .LASF57
 5857 0cef 01       	 .byte 0x1
 5858 0cf0 8B05     	 .2byte 0x58b
 5859 0cf2 4E       	 .byte 0x4e
 5860 0cf3 A6020000 	 .4byte 0x2a6
 5861 0cf7 02       	 .uleb128 0x2
 5862 0cf8 91       	 .byte 0x91
 5863 0cf9 64       	 .sleb128 -28
 5864 0cfa 25       	 .uleb128 0x25
 5865 0cfb E5030000 	 .4byte .LASF89
 5866 0cff 01       	 .byte 0x1
 5867 0d00 8B05     	 .2byte 0x58b
 5868 0d02 60       	 .byte 0x60
 5869 0d03 4F020000 	 .4byte 0x24f
 5870 0d07 02       	 .uleb128 0x2
 5871 0d08 91       	 .byte 0x91
 5872 0d09 60       	 .sleb128 -32
 5873 0d0a 25       	 .uleb128 0x25
 5874 0d0b AA060000 	 .4byte .LASF61
 5875 0d0f 01       	 .byte 0x1
 5876 0d10 8B05     	 .2byte 0x58b
 5877 0d12 75       	 .byte 0x75
 5878 0d13 4F020000 	 .4byte 0x24f
 5879 0d17 02       	 .uleb128 0x2
 5880 0d18 91       	 .byte 0x91
 5881 0d19 00       	 .sleb128 0
 5882 0d1a 28       	 .uleb128 0x28
 5883 0d1b 7200     	 .ascii "r\000"
 5884 0d1d 01       	 .byte 0x1
 5885 0d1e 8C05     	 .2byte 0x58c
 5886 0d20 07       	 .byte 0x7
 5887 0d21 5B020000 	 .4byte 0x25b
 5888 0d25 02       	 .uleb128 0x2
 5889 0d26 91       	 .byte 0x91
 5890 0d27 74       	 .sleb128 -12
 5891 0d28 27       	 .uleb128 0x27
 5892 0d29 26000000 	 .4byte .LBB10
 5893 0d2d 94000000 	 .4byte .LBE10-.LBB10
 5894 0d31 23       	 .uleb128 0x23
 5895 0d32 1B000000 	 .4byte .LASF80
 5896 0d36 01       	 .byte 0x1
 5897 0d37 9005     	 .2byte 0x590
 5898 0d39 05       	 .byte 0x5
 5899 0d3a 4F020000 	 .4byte 0x24f
 5900 0d3e 02       	 .uleb128 0x2
 5901 0d3f 91       	 .byte 0x91
 5902 0d40 70       	 .sleb128 -16
 5903 0d41 00       	 .byte 0
 5904 0d42 00       	 .byte 0
 5905 0d43 24       	 .uleb128 0x24
 5906 0d44 5A040000 	 .4byte .LASF91
 5907 0d48 01       	 .byte 0x1
 5908 0d49 5805     	 .2byte 0x558
 5909 0d4b 05       	 .byte 0x5
 5910 0d4c 5B020000 	 .4byte 0x25b
 5911 0d50 00000000 	 .4byte .LFB28
ARM GAS   			page 137


 5912 0d54 F8000000 	 .4byte .LFE28-.LFB28
 5913 0d58 01       	 .uleb128 0x1
 5914 0d59 9C       	 .byte 0x9c
 5915 0d5a C90D0000 	 .4byte 0xdc9
 5916 0d5e 25       	 .uleb128 0x25
 5917 0d5f 41030000 	 .4byte .LASF56
 5918 0d63 01       	 .byte 0x1
 5919 0d64 5805     	 .2byte 0x558
 5920 0d66 2A       	 .byte 0x2a
 5921 0d67 C7020000 	 .4byte 0x2c7
 5922 0d6b 02       	 .uleb128 0x2
 5923 0d6c 91       	 .byte 0x91
 5924 0d6d 6C       	 .sleb128 -20
 5925 0d6e 25       	 .uleb128 0x25
 5926 0d6f 34020000 	 .4byte .LASF57
 5927 0d73 01       	 .byte 0x1
 5928 0d74 5805     	 .2byte 0x558
 5929 0d76 37       	 .byte 0x37
 5930 0d77 A6020000 	 .4byte 0x2a6
 5931 0d7b 02       	 .uleb128 0x2
 5932 0d7c 91       	 .byte 0x91
 5933 0d7d 68       	 .sleb128 -24
 5934 0d7e 25       	 .uleb128 0x25
 5935 0d7f E5030000 	 .4byte .LASF89
 5936 0d83 01       	 .byte 0x1
 5937 0d84 5805     	 .2byte 0x558
 5938 0d86 49       	 .byte 0x49
 5939 0d87 4F020000 	 .4byte 0x24f
 5940 0d8b 02       	 .uleb128 0x2
 5941 0d8c 91       	 .byte 0x91
 5942 0d8d 64       	 .sleb128 -28
 5943 0d8e 25       	 .uleb128 0x25
 5944 0d8f AA060000 	 .4byte .LASF61
 5945 0d93 01       	 .byte 0x1
 5946 0d94 5805     	 .2byte 0x558
 5947 0d96 5E       	 .byte 0x5e
 5948 0d97 4F020000 	 .4byte 0x24f
 5949 0d9b 02       	 .uleb128 0x2
 5950 0d9c 91       	 .byte 0x91
 5951 0d9d 60       	 .sleb128 -32
 5952 0d9e 23       	 .uleb128 0x23
 5953 0d9f 1A030000 	 .4byte .LASF84
 5954 0da3 01       	 .byte 0x1
 5955 0da4 5905     	 .2byte 0x559
 5956 0da6 07       	 .byte 0x7
 5957 0da7 5B020000 	 .4byte 0x25b
 5958 0dab 02       	 .uleb128 0x2
 5959 0dac 91       	 .byte 0x91
 5960 0dad 74       	 .sleb128 -12
 5961 0dae 27       	 .uleb128 0x27
 5962 0daf 1A000000 	 .4byte .LBB7
 5963 0db3 D0000000 	 .4byte .LBE7-.LBB7
 5964 0db7 23       	 .uleb128 0x23
 5965 0db8 1B000000 	 .4byte .LASF80
 5966 0dbc 01       	 .byte 0x1
 5967 0dbd 5C05     	 .2byte 0x55c
 5968 0dbf 03       	 .byte 0x3
ARM GAS   			page 138


 5969 0dc0 4F020000 	 .4byte 0x24f
 5970 0dc4 02       	 .uleb128 0x2
 5971 0dc5 91       	 .byte 0x91
 5972 0dc6 70       	 .sleb128 -16
 5973 0dc7 00       	 .byte 0
 5974 0dc8 00       	 .byte 0
 5975 0dc9 24       	 .uleb128 0x24
 5976 0dca 14040000 	 .4byte .LASF92
 5977 0dce 01       	 .byte 0x1
 5978 0dcf 2B05     	 .2byte 0x52b
 5979 0dd1 05       	 .byte 0x5
 5980 0dd2 5B020000 	 .4byte 0x25b
 5981 0dd6 00000000 	 .4byte .LFB27
 5982 0dda F4000000 	 .4byte .LFE27-.LFB27
 5983 0dde 01       	 .uleb128 0x1
 5984 0ddf 9C       	 .byte 0x9c
 5985 0de0 4F0E0000 	 .4byte 0xe4f
 5986 0de4 25       	 .uleb128 0x25
 5987 0de5 41030000 	 .4byte .LASF56
 5988 0de9 01       	 .byte 0x1
 5989 0dea 2B05     	 .2byte 0x52b
 5990 0dec 2C       	 .byte 0x2c
 5991 0ded C7020000 	 .4byte 0x2c7
 5992 0df1 02       	 .uleb128 0x2
 5993 0df2 91       	 .byte 0x91
 5994 0df3 6C       	 .sleb128 -20
 5995 0df4 25       	 .uleb128 0x25
 5996 0df5 34020000 	 .4byte .LASF57
 5997 0df9 01       	 .byte 0x1
 5998 0dfa 2B05     	 .2byte 0x52b
 5999 0dfc 39       	 .byte 0x39
 6000 0dfd A6020000 	 .4byte 0x2a6
 6001 0e01 02       	 .uleb128 0x2
 6002 0e02 91       	 .byte 0x91
 6003 0e03 68       	 .sleb128 -24
 6004 0e04 25       	 .uleb128 0x25
 6005 0e05 E5030000 	 .4byte .LASF89
 6006 0e09 01       	 .byte 0x1
 6007 0e0a 2B05     	 .2byte 0x52b
 6008 0e0c 4B       	 .byte 0x4b
 6009 0e0d 4F020000 	 .4byte 0x24f
 6010 0e11 02       	 .uleb128 0x2
 6011 0e12 91       	 .byte 0x91
 6012 0e13 64       	 .sleb128 -28
 6013 0e14 25       	 .uleb128 0x25
 6014 0e15 AA060000 	 .4byte .LASF61
 6015 0e19 01       	 .byte 0x1
 6016 0e1a 2B05     	 .2byte 0x52b
 6017 0e1c 60       	 .byte 0x60
 6018 0e1d 4F020000 	 .4byte 0x24f
 6019 0e21 02       	 .uleb128 0x2
 6020 0e22 91       	 .byte 0x91
 6021 0e23 60       	 .sleb128 -32
 6022 0e24 23       	 .uleb128 0x23
 6023 0e25 1A030000 	 .4byte .LASF84
 6024 0e29 01       	 .byte 0x1
 6025 0e2a 2C05     	 .2byte 0x52c
ARM GAS   			page 139


 6026 0e2c 07       	 .byte 0x7
 6027 0e2d 5B020000 	 .4byte 0x25b
 6028 0e31 02       	 .uleb128 0x2
 6029 0e32 91       	 .byte 0x91
 6030 0e33 74       	 .sleb128 -12
 6031 0e34 27       	 .uleb128 0x27
 6032 0e35 1A000000 	 .4byte .LBB6
 6033 0e39 CC000000 	 .4byte .LBE6-.LBB6
 6034 0e3d 23       	 .uleb128 0x23
 6035 0e3e 1B000000 	 .4byte .LASF80
 6036 0e42 01       	 .byte 0x1
 6037 0e43 2F05     	 .2byte 0x52f
 6038 0e45 03       	 .byte 0x3
 6039 0e46 4F020000 	 .4byte 0x24f
 6040 0e4a 02       	 .uleb128 0x2
 6041 0e4b 91       	 .byte 0x91
 6042 0e4c 70       	 .sleb128 -16
 6043 0e4d 00       	 .byte 0
 6044 0e4e 00       	 .byte 0
 6045 0e4f 2A       	 .uleb128 0x2a
 6046 0e50 00000000 	 .4byte .LASF93
 6047 0e54 01       	 .byte 0x1
 6048 0e55 0F05     	 .2byte 0x50f
 6049 0e57 0A       	 .byte 0xa
 6050 0e58 4F020000 	 .4byte 0x24f
 6051 0e5c 00000000 	 .4byte .LFB26
 6052 0e60 38000000 	 .4byte .LFE26-.LFB26
 6053 0e64 01       	 .uleb128 0x1
 6054 0e65 9C       	 .byte 0x9c
 6055 0e66 990E0000 	 .4byte 0xe99
 6056 0e6a 25       	 .uleb128 0x25
 6057 0e6b 1A030000 	 .4byte .LASF84
 6058 0e6f 01       	 .byte 0x1
 6059 0e70 0F05     	 .2byte 0x50f
 6060 0e72 28       	 .byte 0x28
 6061 0e73 4F020000 	 .4byte 0x24f
 6062 0e77 02       	 .uleb128 0x2
 6063 0e78 91       	 .byte 0x91
 6064 0e79 6C       	 .sleb128 -20
 6065 0e7a 23       	 .uleb128 0x23
 6066 0e7b C3030000 	 .4byte .LASF79
 6067 0e7f 01       	 .byte 0x1
 6068 0e80 1005     	 .2byte 0x510
 6069 0e82 19       	 .byte 0x19
 6070 0e83 DF090000 	 .4byte 0x9df
 6071 0e87 02       	 .uleb128 0x2
 6072 0e88 91       	 .byte 0x91
 6073 0e89 74       	 .sleb128 -12
 6074 0e8a 28       	 .uleb128 0x28
 6075 0e8b 7600     	 .ascii "v\000"
 6076 0e8d 01       	 .byte 0x1
 6077 0e8e 1105     	 .2byte 0x511
 6078 0e90 1B       	 .byte 0x1b
 6079 0e91 4F020000 	 .4byte 0x24f
 6080 0e95 02       	 .uleb128 0x2
 6081 0e96 91       	 .byte 0x91
 6082 0e97 70       	 .sleb128 -16
ARM GAS   			page 140


 6083 0e98 00       	 .byte 0
 6084 0e99 2A       	 .uleb128 0x2a
 6085 0e9a 2E030000 	 .4byte .LASF94
 6086 0e9e 01       	 .byte 0x1
 6087 0e9f FA04     	 .2byte 0x4fa
 6088 0ea1 0A       	 .byte 0xa
 6089 0ea2 4F020000 	 .4byte 0x24f
 6090 0ea6 00000000 	 .4byte .LFB25
 6091 0eaa 38000000 	 .4byte .LFE25-.LFB25
 6092 0eae 01       	 .uleb128 0x1
 6093 0eaf 9C       	 .byte 0x9c
 6094 0eb0 E30E0000 	 .4byte 0xee3
 6095 0eb4 25       	 .uleb128 0x25
 6096 0eb5 1A030000 	 .4byte .LASF84
 6097 0eb9 01       	 .byte 0x1
 6098 0eba FA04     	 .2byte 0x4fa
 6099 0ebc 26       	 .byte 0x26
 6100 0ebd 4F020000 	 .4byte 0x24f
 6101 0ec1 02       	 .uleb128 0x2
 6102 0ec2 91       	 .byte 0x91
 6103 0ec3 6C       	 .sleb128 -20
 6104 0ec4 23       	 .uleb128 0x23
 6105 0ec5 C3030000 	 .4byte .LASF79
 6106 0ec9 01       	 .byte 0x1
 6107 0eca FB04     	 .2byte 0x4fb
 6108 0ecc 1B       	 .byte 0x1b
 6109 0ecd E30E0000 	 .4byte 0xee3
 6110 0ed1 02       	 .uleb128 0x2
 6111 0ed2 91       	 .byte 0x91
 6112 0ed3 74       	 .sleb128 -12
 6113 0ed4 28       	 .uleb128 0x28
 6114 0ed5 7600     	 .ascii "v\000"
 6115 0ed7 01       	 .byte 0x1
 6116 0ed8 FC04     	 .2byte 0x4fc
 6117 0eda 1B       	 .byte 0x1b
 6118 0edb 4F020000 	 .4byte 0x24f
 6119 0edf 02       	 .uleb128 0x2
 6120 0ee0 91       	 .byte 0x91
 6121 0ee1 70       	 .sleb128 -16
 6122 0ee2 00       	 .byte 0
 6123 0ee3 10       	 .uleb128 0x10
 6124 0ee4 04       	 .byte 0x4
 6125 0ee5 2E080000 	 .4byte 0x82e
 6126 0ee9 24       	 .uleb128 0x24
 6127 0eea 3E080000 	 .4byte .LASF95
 6128 0eee 01       	 .byte 0x1
 6129 0eef E004     	 .2byte 0x4e0
 6130 0ef1 05       	 .byte 0x5
 6131 0ef2 5B020000 	 .4byte 0x25b
 6132 0ef6 00000000 	 .4byte .LFB24
 6133 0efa 44000000 	 .4byte .LFE24-.LFB24
 6134 0efe 01       	 .uleb128 0x1
 6135 0eff 9C       	 .byte 0x9c
 6136 0f00 230F0000 	 .4byte 0xf23
 6137 0f04 23       	 .uleb128 0x23
 6138 0f05 F0010000 	 .4byte .LASF60
 6139 0f09 01       	 .byte 0x1
ARM GAS   			page 141


 6140 0f0a E104     	 .2byte 0x4e1
 6141 0f0c 0C       	 .byte 0xc
 6142 0f0d 4F020000 	 .4byte 0x24f
 6143 0f11 02       	 .uleb128 0x2
 6144 0f12 91       	 .byte 0x91
 6145 0f13 70       	 .sleb128 -16
 6146 0f14 28       	 .uleb128 0x28
 6147 0f15 7200     	 .ascii "r\000"
 6148 0f17 01       	 .byte 0x1
 6149 0f18 E204     	 .2byte 0x4e2
 6150 0f1a 07       	 .byte 0x7
 6151 0f1b 5B020000 	 .4byte 0x25b
 6152 0f1f 02       	 .uleb128 0x2
 6153 0f20 91       	 .byte 0x91
 6154 0f21 74       	 .sleb128 -12
 6155 0f22 00       	 .byte 0
 6156 0f23 24       	 .uleb128 0x24
 6157 0f24 F0070000 	 .4byte .LASF96
 6158 0f28 01       	 .byte 0x1
 6159 0f29 C904     	 .2byte 0x4c9
 6160 0f2b 05       	 .byte 0x5
 6161 0f2c 5B020000 	 .4byte 0x25b
 6162 0f30 00000000 	 .4byte .LFB23
 6163 0f34 1E000000 	 .4byte .LFE23-.LFB23
 6164 0f38 01       	 .uleb128 0x1
 6165 0f39 9C       	 .byte 0x9c
 6166 0f3a 4D0F0000 	 .4byte 0xf4d
 6167 0f3e 28       	 .uleb128 0x28
 6168 0f3f 7200     	 .ascii "r\000"
 6169 0f41 01       	 .byte 0x1
 6170 0f42 CA04     	 .2byte 0x4ca
 6171 0f44 07       	 .byte 0x7
 6172 0f45 5B020000 	 .4byte 0x25b
 6173 0f49 02       	 .uleb128 0x2
 6174 0f4a 91       	 .byte 0x91
 6175 0f4b 74       	 .sleb128 -12
 6176 0f4c 00       	 .byte 0
 6177 0f4d 24       	 .uleb128 0x24
 6178 0f4e CB010000 	 .4byte .LASF97
 6179 0f52 01       	 .byte 0x1
 6180 0f53 AD04     	 .2byte 0x4ad
 6181 0f55 05       	 .byte 0x5
 6182 0f56 5B020000 	 .4byte 0x25b
 6183 0f5a 00000000 	 .4byte .LFB22
 6184 0f5e 32000000 	 .4byte .LFE22-.LFB22
 6185 0f62 01       	 .uleb128 0x1
 6186 0f63 9C       	 .byte 0x9c
 6187 0f64 850F0000 	 .4byte 0xf85
 6188 0f68 28       	 .uleb128 0x28
 6189 0f69 6300     	 .ascii "c\000"
 6190 0f6b 01       	 .byte 0x1
 6191 0f6c AE04     	 .2byte 0x4ae
 6192 0f6e 08       	 .byte 0x8
 6193 0f6f BB020000 	 .4byte 0x2bb
 6194 0f73 02       	 .uleb128 0x2
 6195 0f74 91       	 .byte 0x91
 6196 0f75 73       	 .sleb128 -13
ARM GAS   			page 142


 6197 0f76 28       	 .uleb128 0x28
 6198 0f77 7200     	 .ascii "r\000"
 6199 0f79 01       	 .byte 0x1
 6200 0f7a AF04     	 .2byte 0x4af
 6201 0f7c 07       	 .byte 0x7
 6202 0f7d 5B020000 	 .4byte 0x25b
 6203 0f81 02       	 .uleb128 0x2
 6204 0f82 91       	 .byte 0x91
 6205 0f83 74       	 .sleb128 -12
 6206 0f84 00       	 .byte 0
 6207 0f85 24       	 .uleb128 0x24
 6208 0f86 E5000000 	 .4byte .LASF98
 6209 0f8a 01       	 .byte 0x1
 6210 0f8b 7004     	 .2byte 0x470
 6211 0f8d 0A       	 .byte 0xa
 6212 0f8e 4F020000 	 .4byte 0x24f
 6213 0f92 00000000 	 .4byte .LFB21
 6214 0f96 B4000000 	 .4byte .LFE21-.LFB21
 6215 0f9a 01       	 .uleb128 0x1
 6216 0f9b 9C       	 .byte 0x9c
 6217 0f9c 09100000 	 .4byte 0x1009
 6218 0fa0 25       	 .uleb128 0x25
 6219 0fa1 1A030000 	 .4byte .LASF84
 6220 0fa5 01       	 .byte 0x1
 6221 0fa6 7004     	 .2byte 0x470
 6222 0fa8 26       	 .byte 0x26
 6223 0fa9 4F020000 	 .4byte 0x24f
 6224 0fad 02       	 .uleb128 0x2
 6225 0fae 91       	 .byte 0x91
 6226 0faf 64       	 .sleb128 -28
 6227 0fb0 26       	 .uleb128 0x26
 6228 0fb1 6300     	 .ascii "c\000"
 6229 0fb3 01       	 .byte 0x1
 6230 0fb4 7004     	 .2byte 0x470
 6231 0fb6 38       	 .byte 0x38
 6232 0fb7 BB020000 	 .4byte 0x2bb
 6233 0fbb 02       	 .uleb128 0x2
 6234 0fbc 91       	 .byte 0x91
 6235 0fbd 63       	 .sleb128 -29
 6236 0fbe 23       	 .uleb128 0x23
 6237 0fbf C3030000 	 .4byte .LASF79
 6238 0fc3 01       	 .byte 0x1
 6239 0fc4 7104     	 .2byte 0x471
 6240 0fc6 19       	 .byte 0x19
 6241 0fc7 DF090000 	 .4byte 0x9df
 6242 0fcb 02       	 .uleb128 0x2
 6243 0fcc 91       	 .byte 0x91
 6244 0fcd 68       	 .sleb128 -24
 6245 0fce 23       	 .uleb128 0x23
 6246 0fcf D5070000 	 .4byte .LASF59
 6247 0fd3 01       	 .byte 0x1
 6248 0fd4 7204     	 .2byte 0x472
 6249 0fd6 19       	 .byte 0x19
 6250 0fd7 4F020000 	 .4byte 0x24f
 6251 0fdb 02       	 .uleb128 0x2
 6252 0fdc 91       	 .byte 0x91
 6253 0fdd 74       	 .sleb128 -12
ARM GAS   			page 143


 6254 0fde 23       	 .uleb128 0x23
 6255 0fdf 1E080000 	 .4byte .LASF76
 6256 0fe3 01       	 .byte 0x1
 6257 0fe4 7304     	 .2byte 0x473
 6258 0fe6 19       	 .byte 0x19
 6259 0fe7 4F020000 	 .4byte 0x24f
 6260 0feb 02       	 .uleb128 0x2
 6261 0fec 91       	 .byte 0x91
 6262 0fed 70       	 .sleb128 -16
 6263 0fee 27       	 .uleb128 0x27
 6264 0fef 18000000 	 .4byte .LBB5
 6265 0ff3 8C000000 	 .4byte .LBE5-.LBB5
 6266 0ff7 23       	 .uleb128 0x23
 6267 0ff8 1B000000 	 .4byte .LASF80
 6268 0ffc 01       	 .byte 0x1
 6269 0ffd 7804     	 .2byte 0x478
 6270 0fff 03       	 .byte 0x3
 6271 1000 4F020000 	 .4byte 0x24f
 6272 1004 02       	 .uleb128 0x2
 6273 1005 91       	 .byte 0x91
 6274 1006 6C       	 .sleb128 -20
 6275 1007 00       	 .byte 0
 6276 1008 00       	 .byte 0
 6277 1009 24       	 .uleb128 0x24
 6278 100a 60010000 	 .4byte .LASF99
 6279 100e 01       	 .byte 0x1
 6280 100f 3804     	 .2byte 0x438
 6281 1011 0A       	 .byte 0xa
 6282 1012 4F020000 	 .4byte 0x24f
 6283 1016 00000000 	 .4byte .LFB20
 6284 101a 94000000 	 .4byte .LFE20-.LFB20
 6285 101e 01       	 .uleb128 0x1
 6286 101f 9C       	 .byte 0x9c
 6287 1020 8D100000 	 .4byte 0x108d
 6288 1024 25       	 .uleb128 0x25
 6289 1025 1A030000 	 .4byte .LASF84
 6290 1029 01       	 .byte 0x1
 6291 102a 3804     	 .2byte 0x438
 6292 102c 2A       	 .byte 0x2a
 6293 102d 4F020000 	 .4byte 0x24f
 6294 1031 02       	 .uleb128 0x2
 6295 1032 91       	 .byte 0x91
 6296 1033 64       	 .sleb128 -28
 6297 1034 26       	 .uleb128 0x26
 6298 1035 6300     	 .ascii "c\000"
 6299 1037 01       	 .byte 0x1
 6300 1038 3804     	 .2byte 0x438
 6301 103a 3C       	 .byte 0x3c
 6302 103b BB020000 	 .4byte 0x2bb
 6303 103f 02       	 .uleb128 0x2
 6304 1040 91       	 .byte 0x91
 6305 1041 63       	 .sleb128 -29
 6306 1042 23       	 .uleb128 0x23
 6307 1043 C3030000 	 .4byte .LASF79
 6308 1047 01       	 .byte 0x1
 6309 1048 3904     	 .2byte 0x439
 6310 104a 19       	 .byte 0x19
ARM GAS   			page 144


 6311 104b DF090000 	 .4byte 0x9df
 6312 104f 02       	 .uleb128 0x2
 6313 1050 91       	 .byte 0x91
 6314 1051 68       	 .sleb128 -24
 6315 1052 23       	 .uleb128 0x23
 6316 1053 D5070000 	 .4byte .LASF59
 6317 1057 01       	 .byte 0x1
 6318 1058 3A04     	 .2byte 0x43a
 6319 105a 19       	 .byte 0x19
 6320 105b 4F020000 	 .4byte 0x24f
 6321 105f 02       	 .uleb128 0x2
 6322 1060 91       	 .byte 0x91
 6323 1061 74       	 .sleb128 -12
 6324 1062 23       	 .uleb128 0x23
 6325 1063 1E080000 	 .4byte .LASF76
 6326 1067 01       	 .byte 0x1
 6327 1068 3B04     	 .2byte 0x43b
 6328 106a 19       	 .byte 0x19
 6329 106b 4F020000 	 .4byte 0x24f
 6330 106f 02       	 .uleb128 0x2
 6331 1070 91       	 .byte 0x91
 6332 1071 70       	 .sleb128 -16
 6333 1072 27       	 .uleb128 0x27
 6334 1073 18000000 	 .4byte .LBB4
 6335 1077 6E000000 	 .4byte .LBE4-.LBB4
 6336 107b 23       	 .uleb128 0x23
 6337 107c 1B000000 	 .4byte .LASF80
 6338 1080 01       	 .byte 0x1
 6339 1081 4004     	 .2byte 0x440
 6340 1083 03       	 .byte 0x3
 6341 1084 4F020000 	 .4byte 0x24f
 6342 1088 02       	 .uleb128 0x2
 6343 1089 91       	 .byte 0x91
 6344 108a 6C       	 .sleb128 -20
 6345 108b 00       	 .byte 0
 6346 108c 00       	 .byte 0
 6347 108d 2A       	 .uleb128 0x2a
 6348 108e 39070000 	 .4byte .LASF100
 6349 1092 01       	 .byte 0x1
 6350 1093 0904     	 .2byte 0x409
 6351 1095 0A       	 .byte 0xa
 6352 1096 4F020000 	 .4byte 0x24f
 6353 109a 00000000 	 .4byte .LFB19
 6354 109e 78000000 	 .4byte .LFE19-.LFB19
 6355 10a2 01       	 .uleb128 0x1
 6356 10a3 9C       	 .byte 0x9c
 6357 10a4 F7100000 	 .4byte 0x10f7
 6358 10a8 25       	 .uleb128 0x25
 6359 10a9 1A030000 	 .4byte .LASF84
 6360 10ad 01       	 .byte 0x1
 6361 10ae 0904     	 .2byte 0x409
 6362 10b0 30       	 .byte 0x30
 6363 10b1 4F020000 	 .4byte 0x24f
 6364 10b5 02       	 .uleb128 0x2
 6365 10b6 91       	 .byte 0x91
 6366 10b7 64       	 .sleb128 -28
 6367 10b8 26       	 .uleb128 0x26
ARM GAS   			page 145


 6368 10b9 6300     	 .ascii "c\000"
 6369 10bb 01       	 .byte 0x1
 6370 10bc 0904     	 .2byte 0x409
 6371 10be 42       	 .byte 0x42
 6372 10bf BB020000 	 .4byte 0x2bb
 6373 10c3 02       	 .uleb128 0x2
 6374 10c4 91       	 .byte 0x91
 6375 10c5 63       	 .sleb128 -29
 6376 10c6 23       	 .uleb128 0x23
 6377 10c7 C3030000 	 .4byte .LASF79
 6378 10cb 01       	 .byte 0x1
 6379 10cc 0A04     	 .2byte 0x40a
 6380 10ce 19       	 .byte 0x19
 6381 10cf DF090000 	 .4byte 0x9df
 6382 10d3 02       	 .uleb128 0x2
 6383 10d4 91       	 .byte 0x91
 6384 10d5 6C       	 .sleb128 -20
 6385 10d6 23       	 .uleb128 0x23
 6386 10d7 D5070000 	 .4byte .LASF59
 6387 10db 01       	 .byte 0x1
 6388 10dc 0B04     	 .2byte 0x40b
 6389 10de 19       	 .byte 0x19
 6390 10df 4F020000 	 .4byte 0x24f
 6391 10e3 02       	 .uleb128 0x2
 6392 10e4 91       	 .byte 0x91
 6393 10e5 74       	 .sleb128 -12
 6394 10e6 23       	 .uleb128 0x23
 6395 10e7 1E080000 	 .4byte .LASF76
 6396 10eb 01       	 .byte 0x1
 6397 10ec 0C04     	 .2byte 0x40c
 6398 10ee 19       	 .byte 0x19
 6399 10ef 4F020000 	 .4byte 0x24f
 6400 10f3 02       	 .uleb128 0x2
 6401 10f4 91       	 .byte 0x91
 6402 10f5 70       	 .sleb128 -16
 6403 10f6 00       	 .byte 0
 6404 10f7 24       	 .uleb128 0x24
 6405 10f8 96040000 	 .4byte .LASF101
 6406 10fc 01       	 .byte 0x1
 6407 10fd EB03     	 .2byte 0x3eb
 6408 10ff 0A       	 .byte 0xa
 6409 1100 4F020000 	 .4byte 0x24f
 6410 1104 00000000 	 .4byte .LFB18
 6411 1108 26000000 	 .4byte .LFE18-.LFB18
 6412 110c 01       	 .uleb128 0x1
 6413 110d 9C       	 .byte 0x9c
 6414 110e 41110000 	 .4byte 0x1141
 6415 1112 25       	 .uleb128 0x25
 6416 1113 1A030000 	 .4byte .LASF84
 6417 1117 01       	 .byte 0x1
 6418 1118 EB03     	 .2byte 0x3eb
 6419 111a 2A       	 .byte 0x2a
 6420 111b 4F020000 	 .4byte 0x24f
 6421 111f 02       	 .uleb128 0x2
 6422 1120 91       	 .byte 0x91
 6423 1121 6C       	 .sleb128 -20
 6424 1122 26       	 .uleb128 0x26
ARM GAS   			page 146


 6425 1123 7300     	 .ascii "s\000"
 6426 1125 01       	 .byte 0x1
 6427 1126 EB03     	 .2byte 0x3eb
 6428 1128 43       	 .byte 0x43
 6429 1129 C7020000 	 .4byte 0x2c7
 6430 112d 02       	 .uleb128 0x2
 6431 112e 91       	 .byte 0x91
 6432 112f 68       	 .sleb128 -24
 6433 1130 28       	 .uleb128 0x28
 6434 1131 4C656E00 	 .ascii "Len\000"
 6435 1135 01       	 .byte 0x1
 6436 1136 EC03     	 .2byte 0x3ec
 6437 1138 0C       	 .byte 0xc
 6438 1139 4F020000 	 .4byte 0x24f
 6439 113d 02       	 .uleb128 0x2
 6440 113e 91       	 .byte 0x91
 6441 113f 74       	 .sleb128 -12
 6442 1140 00       	 .byte 0
 6443 1141 24       	 .uleb128 0x24
 6444 1142 F0030000 	 .4byte .LASF102
 6445 1146 01       	 .byte 0x1
 6446 1147 C603     	 .2byte 0x3c6
 6447 1149 0A       	 .byte 0xa
 6448 114a 4F020000 	 .4byte 0x24f
 6449 114e 00000000 	 .4byte .LFB17
 6450 1152 48000000 	 .4byte .LFE17-.LFB17
 6451 1156 01       	 .uleb128 0x1
 6452 1157 9C       	 .byte 0x9c
 6453 1158 B7110000 	 .4byte 0x11b7
 6454 115c 25       	 .uleb128 0x25
 6455 115d 1A030000 	 .4byte .LASF84
 6456 1161 01       	 .byte 0x1
 6457 1162 C603     	 .2byte 0x3c6
 6458 1164 24       	 .byte 0x24
 6459 1165 4F020000 	 .4byte 0x24f
 6460 1169 02       	 .uleb128 0x2
 6461 116a 91       	 .byte 0x91
 6462 116b 6C       	 .sleb128 -20
 6463 116c 25       	 .uleb128 0x25
 6464 116d 34020000 	 .4byte .LASF57
 6465 1171 01       	 .byte 0x1
 6466 1172 C603     	 .2byte 0x3c6
 6467 1174 3D       	 .byte 0x3d
 6468 1175 8F030000 	 .4byte 0x38f
 6469 1179 02       	 .uleb128 0x2
 6470 117a 91       	 .byte 0x91
 6471 117b 68       	 .sleb128 -24
 6472 117c 25       	 .uleb128 0x25
 6473 117d 43000000 	 .4byte .LASF103
 6474 1181 01       	 .byte 0x1
 6475 1182 C603     	 .2byte 0x3c6
 6476 1184 4F       	 .byte 0x4f
 6477 1185 4F020000 	 .4byte 0x24f
 6478 1189 02       	 .uleb128 0x2
 6479 118a 91       	 .byte 0x91
 6480 118b 64       	 .sleb128 -28
 6481 118c 23       	 .uleb128 0x23
ARM GAS   			page 147


 6482 118d 1E080000 	 .4byte .LASF76
 6483 1191 01       	 .byte 0x1
 6484 1192 C703     	 .2byte 0x3c7
 6485 1194 0C       	 .byte 0xc
 6486 1195 4F020000 	 .4byte 0x24f
 6487 1199 02       	 .uleb128 0x2
 6488 119a 91       	 .byte 0x91
 6489 119b 70       	 .sleb128 -16
 6490 119c 27       	 .uleb128 0x27
 6491 119d 18000000 	 .4byte .LBB3
 6492 11a1 20000000 	 .4byte .LBE3-.LBB3
 6493 11a5 23       	 .uleb128 0x23
 6494 11a6 1B000000 	 .4byte .LASF80
 6495 11aa 01       	 .byte 0x1
 6496 11ab CA03     	 .2byte 0x3ca
 6497 11ad 03       	 .byte 0x3
 6498 11ae 4F020000 	 .4byte 0x24f
 6499 11b2 02       	 .uleb128 0x2
 6500 11b3 91       	 .byte 0x91
 6501 11b4 74       	 .sleb128 -12
 6502 11b5 00       	 .byte 0
 6503 11b6 00       	 .byte 0
 6504 11b7 24       	 .uleb128 0x24
 6505 11b8 5C050000 	 .4byte .LASF104
 6506 11bc 01       	 .byte 0x1
 6507 11bd 7F03     	 .2byte 0x37f
 6508 11bf 0A       	 .byte 0xa
 6509 11c0 4F020000 	 .4byte 0x24f
 6510 11c4 00000000 	 .4byte .LFB16
 6511 11c8 A4000000 	 .4byte .LFE16-.LFB16
 6512 11cc 01       	 .uleb128 0x1
 6513 11cd 9C       	 .byte 0x9c
 6514 11ce 43120000 	 .4byte 0x1243
 6515 11d2 25       	 .uleb128 0x25
 6516 11d3 1A030000 	 .4byte .LASF84
 6517 11d7 01       	 .byte 0x1
 6518 11d8 7F03     	 .2byte 0x37f
 6519 11da 2A       	 .byte 0x2a
 6520 11db 4F020000 	 .4byte 0x24f
 6521 11df 02       	 .uleb128 0x2
 6522 11e0 91       	 .byte 0x91
 6523 11e1 64       	 .sleb128 -28
 6524 11e2 25       	 .uleb128 0x25
 6525 11e3 34020000 	 .4byte .LASF57
 6526 11e7 01       	 .byte 0x1
 6527 11e8 7F03     	 .2byte 0x37f
 6528 11ea 43       	 .byte 0x43
 6529 11eb 8F030000 	 .4byte 0x38f
 6530 11ef 02       	 .uleb128 0x2
 6531 11f0 91       	 .byte 0x91
 6532 11f1 60       	 .sleb128 -32
 6533 11f2 25       	 .uleb128 0x25
 6534 11f3 43000000 	 .4byte .LASF103
 6535 11f7 01       	 .byte 0x1
 6536 11f8 7F03     	 .2byte 0x37f
 6537 11fa 55       	 .byte 0x55
 6538 11fb 4F020000 	 .4byte 0x24f
ARM GAS   			page 148


 6539 11ff 02       	 .uleb128 0x2
 6540 1200 91       	 .byte 0x91
 6541 1201 5C       	 .sleb128 -36
 6542 1202 23       	 .uleb128 0x23
 6543 1203 1E080000 	 .4byte .LASF76
 6544 1207 01       	 .byte 0x1
 6545 1208 8003     	 .2byte 0x380
 6546 120a 19       	 .byte 0x19
 6547 120b 4F020000 	 .4byte 0x24f
 6548 120f 02       	 .uleb128 0x2
 6549 1210 91       	 .byte 0x91
 6550 1211 74       	 .sleb128 -12
 6551 1212 23       	 .uleb128 0x23
 6552 1213 B0060000 	 .4byte .LASF78
 6553 1217 01       	 .byte 0x1
 6554 1218 8103     	 .2byte 0x381
 6555 121a 19       	 .byte 0x19
 6556 121b 4F020000 	 .4byte 0x24f
 6557 121f 02       	 .uleb128 0x2
 6558 1220 91       	 .byte 0x91
 6559 1221 68       	 .sleb128 -24
 6560 1222 23       	 .uleb128 0x23
 6561 1223 E4010000 	 .4byte .LASF105
 6562 1227 01       	 .byte 0x1
 6563 1228 8203     	 .2byte 0x382
 6564 122a 19       	 .byte 0x19
 6565 122b C7020000 	 .4byte 0x2c7
 6566 122f 02       	 .uleb128 0x2
 6567 1230 91       	 .byte 0x91
 6568 1231 70       	 .sleb128 -16
 6569 1232 23       	 .uleb128 0x23
 6570 1233 C3030000 	 .4byte .LASF79
 6571 1237 01       	 .byte 0x1
 6572 1238 8303     	 .2byte 0x383
 6573 123a 19       	 .byte 0x19
 6574 123b DF090000 	 .4byte 0x9df
 6575 123f 02       	 .uleb128 0x2
 6576 1240 91       	 .byte 0x91
 6577 1241 6C       	 .sleb128 -20
 6578 1242 00       	 .byte 0
 6579 1243 2A       	 .uleb128 0x2a
 6580 1244 7C000000 	 .4byte .LASF106
 6581 1248 01       	 .byte 0x1
 6582 1249 EF02     	 .2byte 0x2ef
 6583 124b 0A       	 .byte 0xa
 6584 124c 4F020000 	 .4byte 0x24f
 6585 1250 00000000 	 .4byte .LFB15
 6586 1254 CC010000 	 .4byte .LFE15-.LFB15
 6587 1258 01       	 .uleb128 0x1
 6588 1259 9C       	 .byte 0x9c
 6589 125a FF120000 	 .4byte 0x12ff
 6590 125e 25       	 .uleb128 0x25
 6591 125f 1A030000 	 .4byte .LASF84
 6592 1263 01       	 .byte 0x1
 6593 1264 EF02     	 .2byte 0x2ef
 6594 1266 2E       	 .byte 0x2e
 6595 1267 4F020000 	 .4byte 0x24f
ARM GAS   			page 149


 6596 126b 02       	 .uleb128 0x2
 6597 126c 91       	 .byte 0x91
 6598 126d 54       	 .sleb128 -44
 6599 126e 25       	 .uleb128 0x25
 6600 126f 34020000 	 .4byte .LASF57
 6601 1273 01       	 .byte 0x1
 6602 1274 EF02     	 .2byte 0x2ef
 6603 1276 47       	 .byte 0x47
 6604 1277 8F030000 	 .4byte 0x38f
 6605 127b 02       	 .uleb128 0x2
 6606 127c 91       	 .byte 0x91
 6607 127d 50       	 .sleb128 -48
 6608 127e 25       	 .uleb128 0x25
 6609 127f 43000000 	 .4byte .LASF103
 6610 1283 01       	 .byte 0x1
 6611 1284 EF02     	 .2byte 0x2ef
 6612 1286 59       	 .byte 0x59
 6613 1287 4F020000 	 .4byte 0x24f
 6614 128b 02       	 .uleb128 0x2
 6615 128c 91       	 .byte 0x91
 6616 128d 4C       	 .sleb128 -52
 6617 128e 23       	 .uleb128 0x23
 6618 128f E4010000 	 .4byte .LASF105
 6619 1293 01       	 .byte 0x1
 6620 1294 F002     	 .2byte 0x2f0
 6621 1296 19       	 .byte 0x19
 6622 1297 C7020000 	 .4byte 0x2c7
 6623 129b 02       	 .uleb128 0x2
 6624 129c 91       	 .byte 0x91
 6625 129d 74       	 .sleb128 -12
 6626 129e 23       	 .uleb128 0x23
 6627 129f C3030000 	 .4byte .LASF79
 6628 12a3 01       	 .byte 0x1
 6629 12a4 F102     	 .2byte 0x2f1
 6630 12a6 19       	 .byte 0x19
 6631 12a7 DF090000 	 .4byte 0x9df
 6632 12ab 02       	 .uleb128 0x2
 6633 12ac 91       	 .byte 0x91
 6634 12ad 68       	 .sleb128 -24
 6635 12ae 23       	 .uleb128 0x23
 6636 12af B0060000 	 .4byte .LASF78
 6637 12b3 01       	 .byte 0x1
 6638 12b4 F202     	 .2byte 0x2f2
 6639 12b6 19       	 .byte 0x19
 6640 12b7 4F020000 	 .4byte 0x24f
 6641 12bb 02       	 .uleb128 0x2
 6642 12bc 91       	 .byte 0x91
 6643 12bd 5C       	 .sleb128 -36
 6644 12be 23       	 .uleb128 0x23
 6645 12bf F0010000 	 .4byte .LASF60
 6646 12c3 01       	 .byte 0x1
 6647 12c4 F302     	 .2byte 0x2f3
 6648 12c6 19       	 .byte 0x19
 6649 12c7 4F020000 	 .4byte 0x24f
 6650 12cb 02       	 .uleb128 0x2
 6651 12cc 91       	 .byte 0x91
 6652 12cd 64       	 .sleb128 -28
ARM GAS   			page 150


 6653 12ce 23       	 .uleb128 0x23
 6654 12cf D5070000 	 .4byte .LASF59
 6655 12d3 01       	 .byte 0x1
 6656 12d4 F402     	 .2byte 0x2f4
 6657 12d6 19       	 .byte 0x19
 6658 12d7 4F020000 	 .4byte 0x24f
 6659 12db 02       	 .uleb128 0x2
 6660 12dc 91       	 .byte 0x91
 6661 12dd 60       	 .sleb128 -32
 6662 12de 28       	 .uleb128 0x28
 6663 12df 52656D00 	 .ascii "Rem\000"
 6664 12e3 01       	 .byte 0x1
 6665 12e4 F502     	 .2byte 0x2f5
 6666 12e6 19       	 .byte 0x19
 6667 12e7 4F020000 	 .4byte 0x24f
 6668 12eb 02       	 .uleb128 0x2
 6669 12ec 91       	 .byte 0x91
 6670 12ed 70       	 .sleb128 -16
 6671 12ee 23       	 .uleb128 0x23
 6672 12ef 9A010000 	 .4byte .LASF107
 6673 12f3 01       	 .byte 0x1
 6674 12f4 F702     	 .2byte 0x2f7
 6675 12f6 19       	 .byte 0x19
 6676 12f7 B5020000 	 .4byte 0x2b5
 6677 12fb 02       	 .uleb128 0x2
 6678 12fc 91       	 .byte 0x91
 6679 12fd 6C       	 .sleb128 -20
 6680 12fe 00       	 .byte 0
 6681 12ff 2B       	 .uleb128 0x2b
 6682 1300 35010000 	 .4byte .LASF129
 6683 1304 01       	 .byte 0x1
 6684 1305 8F02     	 .2byte 0x28f
 6685 1307 06       	 .byte 0x6
 6686 1308 00000000 	 .4byte .LFB14
 6687 130c 74010000 	 .4byte .LFE14-.LFB14
 6688 1310 01       	 .uleb128 0x1
 6689 1311 9C       	 .byte 0x9c
 6690 1312 87130000 	 .4byte 0x1387
 6691 1316 25       	 .uleb128 0x25
 6692 1317 1A030000 	 .4byte .LASF84
 6693 131b 01       	 .byte 0x1
 6694 131c 8F02     	 .2byte 0x28f
 6695 131e 33       	 .byte 0x33
 6696 131f 4F020000 	 .4byte 0x24f
 6697 1323 02       	 .uleb128 0x2
 6698 1324 91       	 .byte 0x91
 6699 1325 64       	 .sleb128 -28
 6700 1326 25       	 .uleb128 0x25
 6701 1327 34020000 	 .4byte .LASF57
 6702 132b 01       	 .byte 0x1
 6703 132c 8F02     	 .2byte 0x28f
 6704 132e 4C       	 .byte 0x4c
 6705 132f 8F030000 	 .4byte 0x38f
 6706 1333 02       	 .uleb128 0x2
 6707 1334 91       	 .byte 0x91
 6708 1335 60       	 .sleb128 -32
 6709 1336 25       	 .uleb128 0x25
ARM GAS   			page 151


 6710 1337 43000000 	 .4byte .LASF103
 6711 133b 01       	 .byte 0x1
 6712 133c 8F02     	 .2byte 0x28f
 6713 133e 5E       	 .byte 0x5e
 6714 133f 4F020000 	 .4byte 0x24f
 6715 1343 02       	 .uleb128 0x2
 6716 1344 91       	 .byte 0x91
 6717 1345 5C       	 .sleb128 -36
 6718 1346 23       	 .uleb128 0x23
 6719 1347 E4010000 	 .4byte .LASF105
 6720 134b 01       	 .byte 0x1
 6721 134c 9002     	 .2byte 0x290
 6722 134e 19       	 .byte 0x19
 6723 134f C7020000 	 .4byte 0x2c7
 6724 1353 02       	 .uleb128 0x2
 6725 1354 91       	 .byte 0x91
 6726 1355 74       	 .sleb128 -12
 6727 1356 23       	 .uleb128 0x23
 6728 1357 C3030000 	 .4byte .LASF79
 6729 135b 01       	 .byte 0x1
 6730 135c 9102     	 .2byte 0x291
 6731 135e 19       	 .byte 0x19
 6732 135f DF090000 	 .4byte 0x9df
 6733 1363 02       	 .uleb128 0x2
 6734 1364 91       	 .byte 0x91
 6735 1365 68       	 .sleb128 -24
 6736 1366 23       	 .uleb128 0x23
 6737 1367 B0060000 	 .4byte .LASF78
 6738 136b 01       	 .byte 0x1
 6739 136c 9202     	 .2byte 0x292
 6740 136e 19       	 .byte 0x19
 6741 136f 4F020000 	 .4byte 0x24f
 6742 1373 02       	 .uleb128 0x2
 6743 1374 91       	 .byte 0x91
 6744 1375 70       	 .sleb128 -16
 6745 1376 23       	 .uleb128 0x23
 6746 1377 9A010000 	 .4byte .LASF107
 6747 137b 01       	 .byte 0x1
 6748 137c 9402     	 .2byte 0x294
 6749 137e 19       	 .byte 0x19
 6750 137f B5020000 	 .4byte 0x2b5
 6751 1383 02       	 .uleb128 0x2
 6752 1384 91       	 .byte 0x91
 6753 1385 6C       	 .sleb128 -20
 6754 1386 00       	 .byte 0
 6755 1387 24       	 .uleb128 0x24
 6756 1388 27050000 	 .4byte .LASF108
 6757 138c 01       	 .byte 0x1
 6758 138d 6802     	 .2byte 0x268
 6759 138f 0A       	 .byte 0xa
 6760 1390 4F020000 	 .4byte 0x24f
 6761 1394 00000000 	 .4byte .LFB13
 6762 1398 36000000 	 .4byte .LFE13-.LFB13
 6763 139c 01       	 .uleb128 0x1
 6764 139d 9C       	 .byte 0x9c
 6765 139e FD130000 	 .4byte 0x13fd
 6766 13a2 25       	 .uleb128 0x25
ARM GAS   			page 152


 6767 13a3 1A030000 	 .4byte .LASF84
 6768 13a7 01       	 .byte 0x1
 6769 13a8 6802     	 .2byte 0x268
 6770 13aa 23       	 .byte 0x23
 6771 13ab 4F020000 	 .4byte 0x24f
 6772 13af 02       	 .uleb128 0x2
 6773 13b0 91       	 .byte 0x91
 6774 13b1 6C       	 .sleb128 -20
 6775 13b2 25       	 .uleb128 0x25
 6776 13b3 34020000 	 .4byte .LASF57
 6777 13b7 01       	 .byte 0x1
 6778 13b8 6802     	 .2byte 0x268
 6779 13ba 36       	 .byte 0x36
 6780 13bb A6020000 	 .4byte 0x2a6
 6781 13bf 02       	 .uleb128 0x2
 6782 13c0 91       	 .byte 0x91
 6783 13c1 68       	 .sleb128 -24
 6784 13c2 25       	 .uleb128 0x25
 6785 13c3 E5030000 	 .4byte .LASF89
 6786 13c7 01       	 .byte 0x1
 6787 13c8 6802     	 .2byte 0x268
 6788 13ca 48       	 .byte 0x48
 6789 13cb 4F020000 	 .4byte 0x24f
 6790 13cf 02       	 .uleb128 0x2
 6791 13d0 91       	 .byte 0x91
 6792 13d1 64       	 .sleb128 -28
 6793 13d2 23       	 .uleb128 0x23
 6794 13d3 15070000 	 .4byte .LASF109
 6795 13d7 01       	 .byte 0x1
 6796 13d8 6902     	 .2byte 0x269
 6797 13da 0C       	 .byte 0xc
 6798 13db 4F020000 	 .4byte 0x24f
 6799 13df 02       	 .uleb128 0x2
 6800 13e0 91       	 .byte 0x91
 6801 13e1 70       	 .sleb128 -16
 6802 13e2 27       	 .uleb128 0x27
 6803 13e3 0C000000 	 .4byte .LBB2
 6804 13e7 20000000 	 .4byte .LBE2-.LBB2
 6805 13eb 23       	 .uleb128 0x23
 6806 13ec 1B000000 	 .4byte .LASF80
 6807 13f0 01       	 .byte 0x1
 6808 13f1 6B02     	 .2byte 0x26b
 6809 13f3 03       	 .byte 0x3
 6810 13f4 4F020000 	 .4byte 0x24f
 6811 13f8 02       	 .uleb128 0x2
 6812 13f9 91       	 .byte 0x91
 6813 13fa 74       	 .sleb128 -12
 6814 13fb 00       	 .byte 0
 6815 13fc 00       	 .byte 0
 6816 13fd 24       	 .uleb128 0x24
 6817 13fe 9F010000 	 .4byte .LASF110
 6818 1402 01       	 .byte 0x1
 6819 1403 0E02     	 .2byte 0x20e
 6820 1405 0A       	 .byte 0xa
 6821 1406 4F020000 	 .4byte 0x24f
 6822 140a 00000000 	 .4byte .LFB12
 6823 140e 38010000 	 .4byte .LFE12-.LFB12
ARM GAS   			page 153


 6824 1412 01       	 .uleb128 0x1
 6825 1413 9C       	 .byte 0x9c
 6826 1414 B9140000 	 .4byte 0x14b9
 6827 1418 25       	 .uleb128 0x25
 6828 1419 1A030000 	 .4byte .LASF84
 6829 141d 01       	 .byte 0x1
 6830 141e 0E02     	 .2byte 0x20e
 6831 1420 29       	 .byte 0x29
 6832 1421 4F020000 	 .4byte 0x24f
 6833 1425 02       	 .uleb128 0x2
 6834 1426 91       	 .byte 0x91
 6835 1427 54       	 .sleb128 -44
 6836 1428 25       	 .uleb128 0x25
 6837 1429 E4010000 	 .4byte .LASF105
 6838 142d 01       	 .byte 0x1
 6839 142e 0E02     	 .2byte 0x20e
 6840 1430 3C       	 .byte 0x3c
 6841 1431 A6020000 	 .4byte 0x2a6
 6842 1435 02       	 .uleb128 0x2
 6843 1436 91       	 .byte 0x91
 6844 1437 50       	 .sleb128 -48
 6845 1438 25       	 .uleb128 0x25
 6846 1439 E5030000 	 .4byte .LASF89
 6847 143d 01       	 .byte 0x1
 6848 143e 0E02     	 .2byte 0x20e
 6849 1440 4C       	 .byte 0x4c
 6850 1441 4F020000 	 .4byte 0x24f
 6851 1445 02       	 .uleb128 0x2
 6852 1446 91       	 .byte 0x91
 6853 1447 4C       	 .sleb128 -52
 6854 1448 23       	 .uleb128 0x23
 6855 1449 79070000 	 .4byte .LASF111
 6856 144d 01       	 .byte 0x1
 6857 144e 0F02     	 .2byte 0x20f
 6858 1450 1B       	 .byte 0x1b
 6859 1451 4F020000 	 .4byte 0x24f
 6860 1455 02       	 .uleb128 0x2
 6861 1456 91       	 .byte 0x91
 6862 1457 74       	 .sleb128 -12
 6863 1458 23       	 .uleb128 0x23
 6864 1459 15070000 	 .4byte .LASF109
 6865 145d 01       	 .byte 0x1
 6866 145e 1002     	 .2byte 0x210
 6867 1460 1B       	 .byte 0x1b
 6868 1461 4F020000 	 .4byte 0x24f
 6869 1465 02       	 .uleb128 0x2
 6870 1466 91       	 .byte 0x91
 6871 1467 70       	 .sleb128 -16
 6872 1468 23       	 .uleb128 0x23
 6873 1469 F0010000 	 .4byte .LASF60
 6874 146d 01       	 .byte 0x1
 6875 146e 1102     	 .2byte 0x211
 6876 1470 1B       	 .byte 0x1b
 6877 1471 4F020000 	 .4byte 0x24f
 6878 1475 02       	 .uleb128 0x2
 6879 1476 91       	 .byte 0x91
 6880 1477 6C       	 .sleb128 -20
ARM GAS   			page 154


 6881 1478 23       	 .uleb128 0x23
 6882 1479 D5070000 	 .4byte .LASF59
 6883 147d 01       	 .byte 0x1
 6884 147e 1202     	 .2byte 0x212
 6885 1480 1B       	 .byte 0x1b
 6886 1481 4F020000 	 .4byte 0x24f
 6887 1485 02       	 .uleb128 0x2
 6888 1486 91       	 .byte 0x91
 6889 1487 5C       	 .sleb128 -36
 6890 1488 23       	 .uleb128 0x23
 6891 1489 34020000 	 .4byte .LASF57
 6892 148d 01       	 .byte 0x1
 6893 148e 1302     	 .2byte 0x213
 6894 1490 1B       	 .byte 0x1b
 6895 1491 AF020000 	 .4byte 0x2af
 6896 1495 02       	 .uleb128 0x2
 6897 1496 91       	 .byte 0x91
 6898 1497 68       	 .sleb128 -24
 6899 1498 23       	 .uleb128 0x23
 6900 1499 C3030000 	 .4byte .LASF79
 6901 149d 01       	 .byte 0x1
 6902 149e 1402     	 .2byte 0x214
 6903 14a0 1B       	 .byte 0x1b
 6904 14a1 E30E0000 	 .4byte 0xee3
 6905 14a5 02       	 .uleb128 0x2
 6906 14a6 91       	 .byte 0x91
 6907 14a7 60       	 .sleb128 -32
 6908 14a8 23       	 .uleb128 0x23
 6909 14a9 17020000 	 .4byte .LASF112
 6910 14ad 01       	 .byte 0x1
 6911 14ae 1602     	 .2byte 0x216
 6912 14b0 1B       	 .byte 0x1b
 6913 14b1 C7020000 	 .4byte 0x2c7
 6914 14b5 02       	 .uleb128 0x2
 6915 14b6 91       	 .byte 0x91
 6916 14b7 64       	 .sleb128 -28
 6917 14b8 00       	 .byte 0
 6918 14b9 2C       	 .uleb128 0x2c
 6919 14ba F6010000 	 .4byte .LASF116
 6920 14be 01       	 .byte 0x1
 6921 14bf E501     	 .2byte 0x1e5
 6922 14c1 11       	 .byte 0x11
 6923 14c2 4F020000 	 .4byte 0x24f
 6924 14c6 00000000 	 .4byte .LFB11
 6925 14ca 46000000 	 .4byte .LFE11-.LFB11
 6926 14ce 01       	 .uleb128 0x1
 6927 14cf 9C       	 .byte 0x9c
 6928 14d0 13150000 	 .4byte 0x1513
 6929 14d4 25       	 .uleb128 0x25
 6930 14d5 C3030000 	 .4byte .LASF79
 6931 14d9 01       	 .byte 0x1
 6932 14da E501     	 .2byte 0x1e5
 6933 14dc 3B       	 .byte 0x3b
 6934 14dd DF090000 	 .4byte 0x9df
 6935 14e1 02       	 .uleb128 0x2
 6936 14e2 91       	 .byte 0x91
 6937 14e3 64       	 .sleb128 -28
ARM GAS   			page 155


 6938 14e4 23       	 .uleb128 0x23
 6939 14e5 F0010000 	 .4byte .LASF60
 6940 14e9 01       	 .byte 0x1
 6941 14ea E601     	 .2byte 0x1e6
 6942 14ec 0C       	 .byte 0xc
 6943 14ed 4F020000 	 .4byte 0x24f
 6944 14f1 02       	 .uleb128 0x2
 6945 14f2 91       	 .byte 0x91
 6946 14f3 70       	 .sleb128 -16
 6947 14f4 23       	 .uleb128 0x23
 6948 14f5 D5070000 	 .4byte .LASF59
 6949 14f9 01       	 .byte 0x1
 6950 14fa E701     	 .2byte 0x1e7
 6951 14fc 0C       	 .byte 0xc
 6952 14fd 4F020000 	 .4byte 0x24f
 6953 1501 02       	 .uleb128 0x2
 6954 1502 91       	 .byte 0x91
 6955 1503 6C       	 .sleb128 -20
 6956 1504 28       	 .uleb128 0x28
 6957 1505 7200     	 .ascii "r\000"
 6958 1507 01       	 .byte 0x1
 6959 1508 E801     	 .2byte 0x1e8
 6960 150a 0C       	 .byte 0xc
 6961 150b 4F020000 	 .4byte 0x24f
 6962 150f 02       	 .uleb128 0x2
 6963 1510 91       	 .byte 0x91
 6964 1511 74       	 .sleb128 -12
 6965 1512 00       	 .byte 0
 6966 1513 2D       	 .uleb128 0x2d
 6967 1514 9D070000 	 .4byte .LASF113
 6968 1518 01       	 .byte 0x1
 6969 1519 CF01     	 .2byte 0x1cf
 6970 151b 0D       	 .byte 0xd
 6971 151c 00000000 	 .4byte .LFB10
 6972 1520 34000000 	 .4byte .LFE10-.LFB10
 6973 1524 01       	 .uleb128 0x1
 6974 1525 9C       	 .byte 0x9c
 6975 1526 5A150000 	 .4byte 0x155a
 6976 152a 25       	 .uleb128 0x25
 6977 152b C3030000 	 .4byte .LASF79
 6978 152f 01       	 .byte 0x1
 6979 1530 CF01     	 .2byte 0x1cf
 6980 1532 37       	 .byte 0x37
 6981 1533 DF090000 	 .4byte 0x9df
 6982 1537 02       	 .uleb128 0x2
 6983 1538 91       	 .byte 0x91
 6984 1539 6C       	 .sleb128 -20
 6985 153a 25       	 .uleb128 0x25
 6986 153b 13080000 	 .4byte .LASF75
 6987 153f 01       	 .byte 0x1
 6988 1540 CF01     	 .2byte 0x1cf
 6989 1542 4C       	 .byte 0x4c
 6990 1543 7C020000 	 .4byte 0x27c
 6991 1547 02       	 .uleb128 0x2
 6992 1548 91       	 .byte 0x91
 6993 1549 6B       	 .sleb128 -21
 6994 154a 28       	 .uleb128 0x28
ARM GAS   			page 156


 6995 154b 616300   	 .ascii "ac\000"
 6996 154e 01       	 .byte 0x1
 6997 154f D001     	 .2byte 0x1d0
 6998 1551 11       	 .byte 0x11
 6999 1552 680A0000 	 .4byte 0xa68
 7000 1556 02       	 .uleb128 0x2
 7001 1557 91       	 .byte 0x91
 7002 1558 74       	 .sleb128 -12
 7003 1559 00       	 .byte 0
 7004 155a 2E       	 .uleb128 0x2e
 7005 155b C0000000 	 .4byte .LASF114
 7006 155f 01       	 .byte 0x1
 7007 1560 8F01     	 .2byte 0x18f
 7008 1562 0D       	 .byte 0xd
 7009 1563 00000000 	 .4byte .LFB9
 7010 1567 E2000000 	 .4byte .LFE9-.LFB9
 7011 156b 01       	 .uleb128 0x1
 7012 156c 9C       	 .byte 0x9c
 7013 156d E2150000 	 .4byte 0x15e2
 7014 1571 25       	 .uleb128 0x25
 7015 1572 C3030000 	 .4byte .LASF79
 7016 1576 01       	 .byte 0x1
 7017 1577 8F01     	 .2byte 0x18f
 7018 1579 31       	 .byte 0x31
 7019 157a DF090000 	 .4byte 0x9df
 7020 157e 02       	 .uleb128 0x2
 7021 157f 91       	 .byte 0x91
 7022 1580 64       	 .sleb128 -28
 7023 1581 25       	 .uleb128 0x25
 7024 1582 E4010000 	 .4byte .LASF105
 7025 1586 01       	 .byte 0x1
 7026 1587 8F01     	 .2byte 0x18f
 7027 1589 44       	 .byte 0x44
 7028 158a C7020000 	 .4byte 0x2c7
 7029 158e 02       	 .uleb128 0x2
 7030 158f 91       	 .byte 0x91
 7031 1590 60       	 .sleb128 -32
 7032 1591 25       	 .uleb128 0x25
 7033 1592 43000000 	 .4byte .LASF103
 7034 1596 01       	 .byte 0x1
 7035 1597 8F01     	 .2byte 0x18f
 7036 1599 54       	 .byte 0x54
 7037 159a 4F020000 	 .4byte 0x24f
 7038 159e 02       	 .uleb128 0x2
 7039 159f 91       	 .byte 0x91
 7040 15a0 5C       	 .sleb128 -36
 7041 15a1 23       	 .uleb128 0x23
 7042 15a2 85030000 	 .4byte .LASF115
 7043 15a6 01       	 .byte 0x1
 7044 15a7 9001     	 .2byte 0x190
 7045 15a9 0C       	 .byte 0xc
 7046 15aa 4F020000 	 .4byte 0x24f
 7047 15ae 02       	 .uleb128 0x2
 7048 15af 91       	 .byte 0x91
 7049 15b0 74       	 .sleb128 -12
 7050 15b1 23       	 .uleb128 0x23
 7051 15b2 D5070000 	 .4byte .LASF59
ARM GAS   			page 157


 7052 15b6 01       	 .byte 0x1
 7053 15b7 9101     	 .2byte 0x191
 7054 15b9 0C       	 .byte 0xc
 7055 15ba 4F020000 	 .4byte 0x24f
 7056 15be 02       	 .uleb128 0x2
 7057 15bf 91       	 .byte 0x91
 7058 15c0 6C       	 .sleb128 -20
 7059 15c1 28       	 .uleb128 0x28
 7060 15c2 52656D00 	 .ascii "Rem\000"
 7061 15c6 01       	 .byte 0x1
 7062 15c7 9201     	 .2byte 0x192
 7063 15c9 0C       	 .byte 0xc
 7064 15ca 4F020000 	 .4byte 0x24f
 7065 15ce 02       	 .uleb128 0x2
 7066 15cf 91       	 .byte 0x91
 7067 15d0 68       	 .sleb128 -24
 7068 15d1 23       	 .uleb128 0x23
 7069 15d2 9A010000 	 .4byte .LASF107
 7070 15d6 01       	 .byte 0x1
 7071 15d7 9401     	 .2byte 0x194
 7072 15d9 0C       	 .byte 0xc
 7073 15da B5020000 	 .4byte 0x2b5
 7074 15de 02       	 .uleb128 0x2
 7075 15df 91       	 .byte 0x91
 7076 15e0 70       	 .sleb128 -16
 7077 15e1 00       	 .byte 0
 7078 15e2 2C       	 .uleb128 0x2c
 7079 15e3 05030000 	 .4byte .LASF117
 7080 15e7 01       	 .byte 0x1
 7081 15e8 4F01     	 .2byte 0x14f
 7082 15ea 11       	 .byte 0x11
 7083 15eb 4F020000 	 .4byte 0x24f
 7084 15ef 00000000 	 .4byte .LFB8
 7085 15f3 D4000000 	 .4byte .LFE8-.LFB8
 7086 15f7 01       	 .uleb128 0x1
 7087 15f8 9C       	 .byte 0x9c
 7088 15f9 7E160000 	 .4byte 0x167e
 7089 15fd 25       	 .uleb128 0x25
 7090 15fe C3030000 	 .4byte .LASF79
 7091 1602 01       	 .byte 0x1
 7092 1603 4F01     	 .2byte 0x14f
 7093 1605 36       	 .byte 0x36
 7094 1606 DF090000 	 .4byte 0x9df
 7095 160a 02       	 .uleb128 0x2
 7096 160b 91       	 .byte 0x91
 7097 160c 5C       	 .sleb128 -36
 7098 160d 25       	 .uleb128 0x25
 7099 160e 34020000 	 .4byte .LASF57
 7100 1612 01       	 .byte 0x1
 7101 1613 4F01     	 .2byte 0x14f
 7102 1615 49       	 .byte 0x49
 7103 1616 C7020000 	 .4byte 0x2c7
 7104 161a 02       	 .uleb128 0x2
 7105 161b 91       	 .byte 0x91
 7106 161c 58       	 .sleb128 -40
 7107 161d 25       	 .uleb128 0x25
 7108 161e 43000000 	 .4byte .LASF103
ARM GAS   			page 158


 7109 1622 01       	 .byte 0x1
 7110 1623 4F01     	 .2byte 0x14f
 7111 1625 5B       	 .byte 0x5b
 7112 1626 4F020000 	 .4byte 0x24f
 7113 162a 02       	 .uleb128 0x2
 7114 162b 91       	 .byte 0x91
 7115 162c 54       	 .sleb128 -44
 7116 162d 23       	 .uleb128 0x23
 7117 162e D5030000 	 .4byte .LASF118
 7118 1632 01       	 .byte 0x1
 7119 1633 5001     	 .2byte 0x150
 7120 1635 0C       	 .byte 0xc
 7121 1636 4F020000 	 .4byte 0x24f
 7122 163a 02       	 .uleb128 0x2
 7123 163b 91       	 .byte 0x91
 7124 163c 74       	 .sleb128 -12
 7125 163d 23       	 .uleb128 0x23
 7126 163e 59030000 	 .4byte .LASF119
 7127 1642 01       	 .byte 0x1
 7128 1643 5101     	 .2byte 0x151
 7129 1645 0C       	 .byte 0xc
 7130 1646 4F020000 	 .4byte 0x24f
 7131 164a 02       	 .uleb128 0x2
 7132 164b 91       	 .byte 0x91
 7133 164c 70       	 .sleb128 -16
 7134 164d 23       	 .uleb128 0x23
 7135 164e F0010000 	 .4byte .LASF60
 7136 1652 01       	 .byte 0x1
 7137 1653 5201     	 .2byte 0x152
 7138 1655 0C       	 .byte 0xc
 7139 1656 4F020000 	 .4byte 0x24f
 7140 165a 02       	 .uleb128 0x2
 7141 165b 91       	 .byte 0x91
 7142 165c 64       	 .sleb128 -28
 7143 165d 23       	 .uleb128 0x23
 7144 165e D5070000 	 .4byte .LASF59
 7145 1662 01       	 .byte 0x1
 7146 1663 5301     	 .2byte 0x153
 7147 1665 0C       	 .byte 0xc
 7148 1666 4F020000 	 .4byte 0x24f
 7149 166a 02       	 .uleb128 0x2
 7150 166b 91       	 .byte 0x91
 7151 166c 6C       	 .sleb128 -20
 7152 166d 23       	 .uleb128 0x23
 7153 166e 9A010000 	 .4byte .LASF107
 7154 1672 01       	 .byte 0x1
 7155 1673 5501     	 .2byte 0x155
 7156 1675 0C       	 .byte 0xc
 7157 1676 B5020000 	 .4byte 0x2b5
 7158 167a 02       	 .uleb128 0x2
 7159 167b 91       	 .byte 0x91
 7160 167c 68       	 .sleb128 -24
 7161 167d 00       	 .byte 0
 7162 167e 2D       	 .uleb128 0x2d
 7163 167f 74000000 	 .4byte .LASF120
 7164 1683 01       	 .byte 0x1
 7165 1684 1801     	 .2byte 0x118
ARM GAS   			page 159


 7166 1686 0D       	 .byte 0xd
 7167 1687 00000000 	 .4byte .LFB7
 7168 168b A8000000 	 .4byte .LFE7-.LFB7
 7169 168f 01       	 .uleb128 0x1
 7170 1690 9C       	 .byte 0x9c
 7171 1691 A4160000 	 .4byte 0x16a4
 7172 1695 28       	 .uleb128 0x28
 7173 1696 7000     	 .ascii "p\000"
 7174 1698 01       	 .byte 0x1
 7175 1699 1901     	 .2byte 0x119
 7176 169b 12       	 .byte 0x12
 7177 169c A4160000 	 .4byte 0x16a4
 7178 16a0 02       	 .uleb128 0x2
 7179 16a1 91       	 .byte 0x91
 7180 16a2 74       	 .sleb128 -12
 7181 16a3 00       	 .byte 0
 7182 16a4 10       	 .uleb128 0x10
 7183 16a5 04       	 .byte 0x4
 7184 16a6 B9080000 	 .4byte 0x8b9
 7185 16aa 00       	 .byte 0
 7186              	 .section .debug_abbrev,"",%progbits
 7187              	.Ldebug_abbrev0:
 7188 0000 01       	 .uleb128 0x1
 7189 0001 11       	 .uleb128 0x11
 7190 0002 01       	 .byte 0x1
 7191 0003 25       	 .uleb128 0x25
 7192 0004 0E       	 .uleb128 0xe
 7193 0005 13       	 .uleb128 0x13
 7194 0006 0B       	 .uleb128 0xb
 7195 0007 03       	 .uleb128 0x3
 7196 0008 0E       	 .uleb128 0xe
 7197 0009 1B       	 .uleb128 0x1b
 7198 000a 0E       	 .uleb128 0xe
 7199 000b 55       	 .uleb128 0x55
 7200 000c 17       	 .uleb128 0x17
 7201 000d 11       	 .uleb128 0x11
 7202 000e 01       	 .uleb128 0x1
 7203 000f 10       	 .uleb128 0x10
 7204 0010 17       	 .uleb128 0x17
 7205 0011 00       	 .byte 0
 7206 0012 00       	 .byte 0
 7207 0013 02       	 .uleb128 0x2
 7208 0014 39       	 .uleb128 0x39
 7209 0015 01       	 .byte 0x1
 7210 0016 03       	 .uleb128 0x3
 7211 0017 08       	 .uleb128 0x8
 7212 0018 3A       	 .uleb128 0x3a
 7213 0019 0B       	 .uleb128 0xb
 7214 001a 3B       	 .uleb128 0x3b
 7215 001b 0B       	 .uleb128 0xb
 7216 001c 01       	 .uleb128 0x1
 7217 001d 13       	 .uleb128 0x13
 7218 001e 00       	 .byte 0
 7219 001f 00       	 .byte 0
 7220 0020 03       	 .uleb128 0x3
 7221 0021 39       	 .uleb128 0x39
 7222 0022 00       	 .byte 0
ARM GAS   			page 160


 7223 0023 03       	 .uleb128 0x3
 7224 0024 0E       	 .uleb128 0xe
 7225 0025 3A       	 .uleb128 0x3a
 7226 0026 0B       	 .uleb128 0xb
 7227 0027 3B       	 .uleb128 0x3b
 7228 0028 05       	 .uleb128 0x5
 7229 0029 39       	 .uleb128 0x39
 7230 002a 0B       	 .uleb128 0xb
 7231 002b 8901     	 .uleb128 0x89
 7232 002d 19       	 .uleb128 0x19
 7233 002e 00       	 .byte 0
 7234 002f 00       	 .byte 0
 7235 0030 04       	 .uleb128 0x4
 7236 0031 3A       	 .uleb128 0x3a
 7237 0032 00       	 .byte 0
 7238 0033 3A       	 .uleb128 0x3a
 7239 0034 0B       	 .uleb128 0xb
 7240 0035 3B       	 .uleb128 0x3b
 7241 0036 05       	 .uleb128 0x5
 7242 0037 39       	 .uleb128 0x39
 7243 0038 0B       	 .uleb128 0xb
 7244 0039 18       	 .uleb128 0x18
 7245 003a 13       	 .uleb128 0x13
 7246 003b 00       	 .byte 0
 7247 003c 00       	 .byte 0
 7248 003d 05       	 .uleb128 0x5
 7249 003e 08       	 .uleb128 0x8
 7250 003f 00       	 .byte 0
 7251 0040 3A       	 .uleb128 0x3a
 7252 0041 0B       	 .uleb128 0xb
 7253 0042 3B       	 .uleb128 0x3b
 7254 0043 0B       	 .uleb128 0xb
 7255 0044 39       	 .uleb128 0x39
 7256 0045 0B       	 .uleb128 0xb
 7257 0046 18       	 .uleb128 0x18
 7258 0047 13       	 .uleb128 0x13
 7259 0048 00       	 .byte 0
 7260 0049 00       	 .byte 0
 7261 004a 06       	 .uleb128 0x6
 7262 004b 2E       	 .uleb128 0x2e
 7263 004c 01       	 .byte 0x1
 7264 004d 3F       	 .uleb128 0x3f
 7265 004e 19       	 .uleb128 0x19
 7266 004f 03       	 .uleb128 0x3
 7267 0050 08       	 .uleb128 0x8
 7268 0051 3A       	 .uleb128 0x3a
 7269 0052 0B       	 .uleb128 0xb
 7270 0053 3B       	 .uleb128 0x3b
 7271 0054 0B       	 .uleb128 0xb
 7272 0055 39       	 .uleb128 0x39
 7273 0056 0B       	 .uleb128 0xb
 7274 0057 6E       	 .uleb128 0x6e
 7275 0058 0E       	 .uleb128 0xe
 7276 0059 49       	 .uleb128 0x49
 7277 005a 13       	 .uleb128 0x13
 7278 005b 3C       	 .uleb128 0x3c
 7279 005c 19       	 .uleb128 0x19
ARM GAS   			page 161


 7280 005d 01       	 .uleb128 0x1
 7281 005e 13       	 .uleb128 0x13
 7282 005f 00       	 .byte 0
 7283 0060 00       	 .byte 0
 7284 0061 07       	 .uleb128 0x7
 7285 0062 05       	 .uleb128 0x5
 7286 0063 00       	 .byte 0
 7287 0064 49       	 .uleb128 0x49
 7288 0065 13       	 .uleb128 0x13
 7289 0066 00       	 .byte 0
 7290 0067 00       	 .byte 0
 7291 0068 08       	 .uleb128 0x8
 7292 0069 2E       	 .uleb128 0x2e
 7293 006a 01       	 .byte 0x1
 7294 006b 3F       	 .uleb128 0x3f
 7295 006c 19       	 .uleb128 0x19
 7296 006d 03       	 .uleb128 0x3
 7297 006e 08       	 .uleb128 0x8
 7298 006f 3A       	 .uleb128 0x3a
 7299 0070 0B       	 .uleb128 0xb
 7300 0071 3B       	 .uleb128 0x3b
 7301 0072 0B       	 .uleb128 0xb
 7302 0073 39       	 .uleb128 0x39
 7303 0074 0B       	 .uleb128 0xb
 7304 0075 6E       	 .uleb128 0x6e
 7305 0076 0E       	 .uleb128 0xe
 7306 0077 49       	 .uleb128 0x49
 7307 0078 13       	 .uleb128 0x13
 7308 0079 3C       	 .uleb128 0x3c
 7309 007a 19       	 .uleb128 0x19
 7310 007b 00       	 .byte 0
 7311 007c 00       	 .byte 0
 7312 007d 09       	 .uleb128 0x9
 7313 007e 39       	 .uleb128 0x39
 7314 007f 01       	 .byte 0x1
 7315 0080 03       	 .uleb128 0x3
 7316 0081 0E       	 .uleb128 0xe
 7317 0082 3A       	 .uleb128 0x3a
 7318 0083 0B       	 .uleb128 0xb
 7319 0084 3B       	 .uleb128 0x3b
 7320 0085 05       	 .uleb128 0x5
 7321 0086 39       	 .uleb128 0x39
 7322 0087 0B       	 .uleb128 0xb
 7323 0088 01       	 .uleb128 0x1
 7324 0089 13       	 .uleb128 0x13
 7325 008a 00       	 .byte 0
 7326 008b 00       	 .byte 0
 7327 008c 0A       	 .uleb128 0xa
 7328 008d 16       	 .uleb128 0x16
 7329 008e 00       	 .byte 0
 7330 008f 03       	 .uleb128 0x3
 7331 0090 0E       	 .uleb128 0xe
 7332 0091 3A       	 .uleb128 0x3a
 7333 0092 0B       	 .uleb128 0xb
 7334 0093 3B       	 .uleb128 0x3b
 7335 0094 0B       	 .uleb128 0xb
 7336 0095 39       	 .uleb128 0x39
ARM GAS   			page 162


 7337 0096 0B       	 .uleb128 0xb
 7338 0097 49       	 .uleb128 0x49
 7339 0098 13       	 .uleb128 0x13
 7340 0099 00       	 .byte 0
 7341 009a 00       	 .byte 0
 7342 009b 0B       	 .uleb128 0xb
 7343 009c 24       	 .uleb128 0x24
 7344 009d 00       	 .byte 0
 7345 009e 0B       	 .uleb128 0xb
 7346 009f 0B       	 .uleb128 0xb
 7347 00a0 3E       	 .uleb128 0x3e
 7348 00a1 0B       	 .uleb128 0xb
 7349 00a2 03       	 .uleb128 0x3
 7350 00a3 0E       	 .uleb128 0xe
 7351 00a4 00       	 .byte 0
 7352 00a5 00       	 .byte 0
 7353 00a6 0C       	 .uleb128 0xc
 7354 00a7 35       	 .uleb128 0x35
 7355 00a8 00       	 .byte 0
 7356 00a9 49       	 .uleb128 0x49
 7357 00aa 13       	 .uleb128 0x13
 7358 00ab 00       	 .byte 0
 7359 00ac 00       	 .byte 0
 7360 00ad 0D       	 .uleb128 0xd
 7361 00ae 24       	 .uleb128 0x24
 7362 00af 00       	 .byte 0
 7363 00b0 0B       	 .uleb128 0xb
 7364 00b1 0B       	 .uleb128 0xb
 7365 00b2 3E       	 .uleb128 0x3e
 7366 00b3 0B       	 .uleb128 0xb
 7367 00b4 03       	 .uleb128 0x3
 7368 00b5 08       	 .uleb128 0x8
 7369 00b6 00       	 .byte 0
 7370 00b7 00       	 .byte 0
 7371 00b8 0E       	 .uleb128 0xe
 7372 00b9 3B       	 .uleb128 0x3b
 7373 00ba 00       	 .byte 0
 7374 00bb 03       	 .uleb128 0x3
 7375 00bc 0E       	 .uleb128 0xe
 7376 00bd 00       	 .byte 0
 7377 00be 00       	 .byte 0
 7378 00bf 0F       	 .uleb128 0xf
 7379 00c0 0F       	 .uleb128 0xf
 7380 00c1 00       	 .byte 0
 7381 00c2 0B       	 .uleb128 0xb
 7382 00c3 0B       	 .uleb128 0xb
 7383 00c4 00       	 .byte 0
 7384 00c5 00       	 .byte 0
 7385 00c6 10       	 .uleb128 0x10
 7386 00c7 0F       	 .uleb128 0xf
 7387 00c8 00       	 .byte 0
 7388 00c9 0B       	 .uleb128 0xb
 7389 00ca 0B       	 .uleb128 0xb
 7390 00cb 49       	 .uleb128 0x49
 7391 00cc 13       	 .uleb128 0x13
 7392 00cd 00       	 .byte 0
 7393 00ce 00       	 .byte 0
ARM GAS   			page 163


 7394 00cf 11       	 .uleb128 0x11
 7395 00d0 15       	 .uleb128 0x15
 7396 00d1 00       	 .byte 0
 7397 00d2 00       	 .byte 0
 7398 00d3 00       	 .byte 0
 7399 00d4 12       	 .uleb128 0x12
 7400 00d5 26       	 .uleb128 0x26
 7401 00d6 00       	 .byte 0
 7402 00d7 49       	 .uleb128 0x49
 7403 00d8 13       	 .uleb128 0x13
 7404 00d9 00       	 .byte 0
 7405 00da 00       	 .byte 0
 7406 00db 13       	 .uleb128 0x13
 7407 00dc 13       	 .uleb128 0x13
 7408 00dd 01       	 .byte 0x1
 7409 00de 0B       	 .uleb128 0xb
 7410 00df 0B       	 .uleb128 0xb
 7411 00e0 3A       	 .uleb128 0x3a
 7412 00e1 0B       	 .uleb128 0xb
 7413 00e2 3B       	 .uleb128 0x3b
 7414 00e3 0B       	 .uleb128 0xb
 7415 00e4 39       	 .uleb128 0x39
 7416 00e5 0B       	 .uleb128 0xb
 7417 00e6 6E       	 .uleb128 0x6e
 7418 00e7 0E       	 .uleb128 0xe
 7419 00e8 01       	 .uleb128 0x1
 7420 00e9 13       	 .uleb128 0x13
 7421 00ea 00       	 .byte 0
 7422 00eb 00       	 .byte 0
 7423 00ec 14       	 .uleb128 0x14
 7424 00ed 0D       	 .uleb128 0xd
 7425 00ee 00       	 .byte 0
 7426 00ef 03       	 .uleb128 0x3
 7427 00f0 0E       	 .uleb128 0xe
 7428 00f1 3A       	 .uleb128 0x3a
 7429 00f2 0B       	 .uleb128 0xb
 7430 00f3 3B       	 .uleb128 0x3b
 7431 00f4 0B       	 .uleb128 0xb
 7432 00f5 39       	 .uleb128 0x39
 7433 00f6 0B       	 .uleb128 0xb
 7434 00f7 49       	 .uleb128 0x49
 7435 00f8 13       	 .uleb128 0x13
 7436 00f9 38       	 .uleb128 0x38
 7437 00fa 0B       	 .uleb128 0xb
 7438 00fb 00       	 .byte 0
 7439 00fc 00       	 .byte 0
 7440 00fd 15       	 .uleb128 0x15
 7441 00fe 0D       	 .uleb128 0xd
 7442 00ff 00       	 .byte 0
 7443 0100 03       	 .uleb128 0x3
 7444 0101 08       	 .uleb128 0x8
 7445 0102 3A       	 .uleb128 0x3a
 7446 0103 0B       	 .uleb128 0xb
 7447 0104 3B       	 .uleb128 0x3b
 7448 0105 0B       	 .uleb128 0xb
 7449 0106 39       	 .uleb128 0x39
 7450 0107 0B       	 .uleb128 0xb
ARM GAS   			page 164


 7451 0108 49       	 .uleb128 0x49
 7452 0109 13       	 .uleb128 0x13
 7453 010a 38       	 .uleb128 0x38
 7454 010b 0B       	 .uleb128 0xb
 7455 010c 00       	 .byte 0
 7456 010d 00       	 .byte 0
 7457 010e 16       	 .uleb128 0x16
 7458 010f 15       	 .uleb128 0x15
 7459 0110 01       	 .byte 0x1
 7460 0111 49       	 .uleb128 0x49
 7461 0112 13       	 .uleb128 0x13
 7462 0113 01       	 .uleb128 0x1
 7463 0114 13       	 .uleb128 0x13
 7464 0115 00       	 .byte 0
 7465 0116 00       	 .byte 0
 7466 0117 17       	 .uleb128 0x17
 7467 0118 26       	 .uleb128 0x26
 7468 0119 00       	 .byte 0
 7469 011a 00       	 .byte 0
 7470 011b 00       	 .byte 0
 7471 011c 18       	 .uleb128 0x18
 7472 011d 2E       	 .uleb128 0x2e
 7473 011e 01       	 .byte 0x1
 7474 011f 3F       	 .uleb128 0x3f
 7475 0120 19       	 .uleb128 0x19
 7476 0121 03       	 .uleb128 0x3
 7477 0122 0E       	 .uleb128 0xe
 7478 0123 3A       	 .uleb128 0x3a
 7479 0124 0B       	 .uleb128 0xb
 7480 0125 3B       	 .uleb128 0x3b
 7481 0126 0B       	 .uleb128 0xb
 7482 0127 39       	 .uleb128 0x39
 7483 0128 0B       	 .uleb128 0xb
 7484 0129 49       	 .uleb128 0x49
 7485 012a 13       	 .uleb128 0x13
 7486 012b 3C       	 .uleb128 0x3c
 7487 012c 19       	 .uleb128 0x19
 7488 012d 01       	 .uleb128 0x1
 7489 012e 13       	 .uleb128 0x13
 7490 012f 00       	 .byte 0
 7491 0130 00       	 .byte 0
 7492 0131 19       	 .uleb128 0x19
 7493 0132 2E       	 .uleb128 0x2e
 7494 0133 01       	 .byte 0x1
 7495 0134 3F       	 .uleb128 0x3f
 7496 0135 19       	 .uleb128 0x19
 7497 0136 03       	 .uleb128 0x3
 7498 0137 08       	 .uleb128 0x8
 7499 0138 3A       	 .uleb128 0x3a
 7500 0139 0B       	 .uleb128 0xb
 7501 013a 3B       	 .uleb128 0x3b
 7502 013b 0B       	 .uleb128 0xb
 7503 013c 39       	 .uleb128 0x39
 7504 013d 0B       	 .uleb128 0xb
 7505 013e 49       	 .uleb128 0x49
 7506 013f 13       	 .uleb128 0x13
 7507 0140 3C       	 .uleb128 0x3c
ARM GAS   			page 165


 7508 0141 19       	 .uleb128 0x19
 7509 0142 01       	 .uleb128 0x1
 7510 0143 13       	 .uleb128 0x13
 7511 0144 00       	 .byte 0
 7512 0145 00       	 .byte 0
 7513 0146 1A       	 .uleb128 0x1a
 7514 0147 2E       	 .uleb128 0x2e
 7515 0148 01       	 .byte 0x1
 7516 0149 3F       	 .uleb128 0x3f
 7517 014a 19       	 .uleb128 0x19
 7518 014b 03       	 .uleb128 0x3
 7519 014c 0E       	 .uleb128 0xe
 7520 014d 3A       	 .uleb128 0x3a
 7521 014e 0B       	 .uleb128 0xb
 7522 014f 3B       	 .uleb128 0x3b
 7523 0150 0B       	 .uleb128 0xb
 7524 0151 39       	 .uleb128 0x39
 7525 0152 0B       	 .uleb128 0xb
 7526 0153 3C       	 .uleb128 0x3c
 7527 0154 19       	 .uleb128 0x19
 7528 0155 01       	 .uleb128 0x1
 7529 0156 13       	 .uleb128 0x13
 7530 0157 00       	 .byte 0
 7531 0158 00       	 .byte 0
 7532 0159 1B       	 .uleb128 0x1b
 7533 015a 2E       	 .uleb128 0x2e
 7534 015b 00       	 .byte 0
 7535 015c 3F       	 .uleb128 0x3f
 7536 015d 19       	 .uleb128 0x19
 7537 015e 03       	 .uleb128 0x3
 7538 015f 0E       	 .uleb128 0xe
 7539 0160 3A       	 .uleb128 0x3a
 7540 0161 0B       	 .uleb128 0xb
 7541 0162 3B       	 .uleb128 0x3b
 7542 0163 0B       	 .uleb128 0xb
 7543 0164 39       	 .uleb128 0x39
 7544 0165 0B       	 .uleb128 0xb
 7545 0166 49       	 .uleb128 0x49
 7546 0167 13       	 .uleb128 0x13
 7547 0168 3C       	 .uleb128 0x3c
 7548 0169 19       	 .uleb128 0x19
 7549 016a 00       	 .byte 0
 7550 016b 00       	 .byte 0
 7551 016c 1C       	 .uleb128 0x1c
 7552 016d 2E       	 .uleb128 0x2e
 7553 016e 01       	 .byte 0x1
 7554 016f 3F       	 .uleb128 0x3f
 7555 0170 19       	 .uleb128 0x19
 7556 0171 03       	 .uleb128 0x3
 7557 0172 0E       	 .uleb128 0xe
 7558 0173 3A       	 .uleb128 0x3a
 7559 0174 0B       	 .uleb128 0xb
 7560 0175 3B       	 .uleb128 0x3b
 7561 0176 05       	 .uleb128 0x5
 7562 0177 39       	 .uleb128 0x39
 7563 0178 0B       	 .uleb128 0xb
 7564 0179 49       	 .uleb128 0x49
ARM GAS   			page 166


 7565 017a 13       	 .uleb128 0x13
 7566 017b 3C       	 .uleb128 0x3c
 7567 017c 19       	 .uleb128 0x19
 7568 017d 01       	 .uleb128 0x1
 7569 017e 13       	 .uleb128 0x13
 7570 017f 00       	 .byte 0
 7571 0180 00       	 .byte 0
 7572 0181 1D       	 .uleb128 0x1d
 7573 0182 01       	 .uleb128 0x1
 7574 0183 01       	 .byte 0x1
 7575 0184 49       	 .uleb128 0x49
 7576 0185 13       	 .uleb128 0x13
 7577 0186 01       	 .uleb128 0x1
 7578 0187 13       	 .uleb128 0x13
 7579 0188 00       	 .byte 0
 7580 0189 00       	 .byte 0
 7581 018a 1E       	 .uleb128 0x1e
 7582 018b 21       	 .uleb128 0x21
 7583 018c 00       	 .byte 0
 7584 018d 49       	 .uleb128 0x49
 7585 018e 13       	 .uleb128 0x13
 7586 018f 2F       	 .uleb128 0x2f
 7587 0190 0B       	 .uleb128 0xb
 7588 0191 00       	 .byte 0
 7589 0192 00       	 .byte 0
 7590 0193 1F       	 .uleb128 0x1f
 7591 0194 34       	 .uleb128 0x34
 7592 0195 00       	 .byte 0
 7593 0196 03       	 .uleb128 0x3
 7594 0197 0E       	 .uleb128 0xe
 7595 0198 3A       	 .uleb128 0x3a
 7596 0199 0B       	 .uleb128 0xb
 7597 019a 3B       	 .uleb128 0x3b
 7598 019b 0B       	 .uleb128 0xb
 7599 019c 39       	 .uleb128 0x39
 7600 019d 0B       	 .uleb128 0xb
 7601 019e 49       	 .uleb128 0x49
 7602 019f 13       	 .uleb128 0x13
 7603 01a0 3F       	 .uleb128 0x3f
 7604 01a1 19       	 .uleb128 0x19
 7605 01a2 3C       	 .uleb128 0x3c
 7606 01a3 19       	 .uleb128 0x19
 7607 01a4 00       	 .byte 0
 7608 01a5 00       	 .byte 0
 7609 01a6 20       	 .uleb128 0x20
 7610 01a7 34       	 .uleb128 0x34
 7611 01a8 00       	 .byte 0
 7612 01a9 03       	 .uleb128 0x3
 7613 01aa 0E       	 .uleb128 0xe
 7614 01ab 3A       	 .uleb128 0x3a
 7615 01ac 0B       	 .uleb128 0xb
 7616 01ad 3B       	 .uleb128 0x3b
 7617 01ae 0B       	 .uleb128 0xb
 7618 01af 39       	 .uleb128 0x39
 7619 01b0 0B       	 .uleb128 0xb
 7620 01b1 49       	 .uleb128 0x49
 7621 01b2 13       	 .uleb128 0x13
ARM GAS   			page 167


 7622 01b3 02       	 .uleb128 0x2
 7623 01b4 18       	 .uleb128 0x18
 7624 01b5 00       	 .byte 0
 7625 01b6 00       	 .byte 0
 7626 01b7 21       	 .uleb128 0x21
 7627 01b8 34       	 .uleb128 0x34
 7628 01b9 00       	 .byte 0
 7629 01ba 47       	 .uleb128 0x47
 7630 01bb 13       	 .uleb128 0x13
 7631 01bc 3A       	 .uleb128 0x3a
 7632 01bd 0B       	 .uleb128 0xb
 7633 01be 3B       	 .uleb128 0x3b
 7634 01bf 0B       	 .uleb128 0xb
 7635 01c0 39       	 .uleb128 0x39
 7636 01c1 0B       	 .uleb128 0xb
 7637 01c2 02       	 .uleb128 0x2
 7638 01c3 18       	 .uleb128 0x18
 7639 01c4 00       	 .byte 0
 7640 01c5 00       	 .byte 0
 7641 01c6 22       	 .uleb128 0x22
 7642 01c7 21       	 .uleb128 0x21
 7643 01c8 00       	 .byte 0
 7644 01c9 49       	 .uleb128 0x49
 7645 01ca 13       	 .uleb128 0x13
 7646 01cb 2F       	 .uleb128 0x2f
 7647 01cc 05       	 .uleb128 0x5
 7648 01cd 00       	 .byte 0
 7649 01ce 00       	 .byte 0
 7650 01cf 23       	 .uleb128 0x23
 7651 01d0 34       	 .uleb128 0x34
 7652 01d1 00       	 .byte 0
 7653 01d2 03       	 .uleb128 0x3
 7654 01d3 0E       	 .uleb128 0xe
 7655 01d4 3A       	 .uleb128 0x3a
 7656 01d5 0B       	 .uleb128 0xb
 7657 01d6 3B       	 .uleb128 0x3b
 7658 01d7 05       	 .uleb128 0x5
 7659 01d8 39       	 .uleb128 0x39
 7660 01d9 0B       	 .uleb128 0xb
 7661 01da 49       	 .uleb128 0x49
 7662 01db 13       	 .uleb128 0x13
 7663 01dc 02       	 .uleb128 0x2
 7664 01dd 18       	 .uleb128 0x18
 7665 01de 00       	 .byte 0
 7666 01df 00       	 .byte 0
 7667 01e0 24       	 .uleb128 0x24
 7668 01e1 2E       	 .uleb128 0x2e
 7669 01e2 01       	 .byte 0x1
 7670 01e3 3F       	 .uleb128 0x3f
 7671 01e4 19       	 .uleb128 0x19
 7672 01e5 03       	 .uleb128 0x3
 7673 01e6 0E       	 .uleb128 0xe
 7674 01e7 3A       	 .uleb128 0x3a
 7675 01e8 0B       	 .uleb128 0xb
 7676 01e9 3B       	 .uleb128 0x3b
 7677 01ea 05       	 .uleb128 0x5
 7678 01eb 39       	 .uleb128 0x39
ARM GAS   			page 168


 7679 01ec 0B       	 .uleb128 0xb
 7680 01ed 49       	 .uleb128 0x49
 7681 01ee 13       	 .uleb128 0x13
 7682 01ef 11       	 .uleb128 0x11
 7683 01f0 01       	 .uleb128 0x1
 7684 01f1 12       	 .uleb128 0x12
 7685 01f2 06       	 .uleb128 0x6
 7686 01f3 40       	 .uleb128 0x40
 7687 01f4 18       	 .uleb128 0x18
 7688 01f5 9642     	 .uleb128 0x2116
 7689 01f7 19       	 .uleb128 0x19
 7690 01f8 01       	 .uleb128 0x1
 7691 01f9 13       	 .uleb128 0x13
 7692 01fa 00       	 .byte 0
 7693 01fb 00       	 .byte 0
 7694 01fc 25       	 .uleb128 0x25
 7695 01fd 05       	 .uleb128 0x5
 7696 01fe 00       	 .byte 0
 7697 01ff 03       	 .uleb128 0x3
 7698 0200 0E       	 .uleb128 0xe
 7699 0201 3A       	 .uleb128 0x3a
 7700 0202 0B       	 .uleb128 0xb
 7701 0203 3B       	 .uleb128 0x3b
 7702 0204 05       	 .uleb128 0x5
 7703 0205 39       	 .uleb128 0x39
 7704 0206 0B       	 .uleb128 0xb
 7705 0207 49       	 .uleb128 0x49
 7706 0208 13       	 .uleb128 0x13
 7707 0209 02       	 .uleb128 0x2
 7708 020a 18       	 .uleb128 0x18
 7709 020b 00       	 .byte 0
 7710 020c 00       	 .byte 0
 7711 020d 26       	 .uleb128 0x26
 7712 020e 05       	 .uleb128 0x5
 7713 020f 00       	 .byte 0
 7714 0210 03       	 .uleb128 0x3
 7715 0211 08       	 .uleb128 0x8
 7716 0212 3A       	 .uleb128 0x3a
 7717 0213 0B       	 .uleb128 0xb
 7718 0214 3B       	 .uleb128 0x3b
 7719 0215 05       	 .uleb128 0x5
 7720 0216 39       	 .uleb128 0x39
 7721 0217 0B       	 .uleb128 0xb
 7722 0218 49       	 .uleb128 0x49
 7723 0219 13       	 .uleb128 0x13
 7724 021a 02       	 .uleb128 0x2
 7725 021b 18       	 .uleb128 0x18
 7726 021c 00       	 .byte 0
 7727 021d 00       	 .byte 0
 7728 021e 27       	 .uleb128 0x27
 7729 021f 0B       	 .uleb128 0xb
 7730 0220 01       	 .byte 0x1
 7731 0221 11       	 .uleb128 0x11
 7732 0222 01       	 .uleb128 0x1
 7733 0223 12       	 .uleb128 0x12
 7734 0224 06       	 .uleb128 0x6
 7735 0225 00       	 .byte 0
ARM GAS   			page 169


 7736 0226 00       	 .byte 0
 7737 0227 28       	 .uleb128 0x28
 7738 0228 34       	 .uleb128 0x34
 7739 0229 00       	 .byte 0
 7740 022a 03       	 .uleb128 0x3
 7741 022b 08       	 .uleb128 0x8
 7742 022c 3A       	 .uleb128 0x3a
 7743 022d 0B       	 .uleb128 0xb
 7744 022e 3B       	 .uleb128 0x3b
 7745 022f 05       	 .uleb128 0x5
 7746 0230 39       	 .uleb128 0x39
 7747 0231 0B       	 .uleb128 0xb
 7748 0232 49       	 .uleb128 0x49
 7749 0233 13       	 .uleb128 0x13
 7750 0234 02       	 .uleb128 0x2
 7751 0235 18       	 .uleb128 0x18
 7752 0236 00       	 .byte 0
 7753 0237 00       	 .byte 0
 7754 0238 29       	 .uleb128 0x29
 7755 0239 2E       	 .uleb128 0x2e
 7756 023a 00       	 .byte 0
 7757 023b 3F       	 .uleb128 0x3f
 7758 023c 19       	 .uleb128 0x19
 7759 023d 03       	 .uleb128 0x3
 7760 023e 0E       	 .uleb128 0xe
 7761 023f 3A       	 .uleb128 0x3a
 7762 0240 0B       	 .uleb128 0xb
 7763 0241 3B       	 .uleb128 0x3b
 7764 0242 05       	 .uleb128 0x5
 7765 0243 39       	 .uleb128 0x39
 7766 0244 0B       	 .uleb128 0xb
 7767 0245 11       	 .uleb128 0x11
 7768 0246 01       	 .uleb128 0x1
 7769 0247 12       	 .uleb128 0x12
 7770 0248 06       	 .uleb128 0x6
 7771 0249 40       	 .uleb128 0x40
 7772 024a 18       	 .uleb128 0x18
 7773 024b 9642     	 .uleb128 0x2116
 7774 024d 19       	 .uleb128 0x19
 7775 024e 00       	 .byte 0
 7776 024f 00       	 .byte 0
 7777 0250 2A       	 .uleb128 0x2a
 7778 0251 2E       	 .uleb128 0x2e
 7779 0252 01       	 .byte 0x1
 7780 0253 3F       	 .uleb128 0x3f
 7781 0254 19       	 .uleb128 0x19
 7782 0255 03       	 .uleb128 0x3
 7783 0256 0E       	 .uleb128 0xe
 7784 0257 3A       	 .uleb128 0x3a
 7785 0258 0B       	 .uleb128 0xb
 7786 0259 3B       	 .uleb128 0x3b
 7787 025a 05       	 .uleb128 0x5
 7788 025b 39       	 .uleb128 0x39
 7789 025c 0B       	 .uleb128 0xb
 7790 025d 49       	 .uleb128 0x49
 7791 025e 13       	 .uleb128 0x13
 7792 025f 11       	 .uleb128 0x11
ARM GAS   			page 170


 7793 0260 01       	 .uleb128 0x1
 7794 0261 12       	 .uleb128 0x12
 7795 0262 06       	 .uleb128 0x6
 7796 0263 40       	 .uleb128 0x40
 7797 0264 18       	 .uleb128 0x18
 7798 0265 9742     	 .uleb128 0x2117
 7799 0267 19       	 .uleb128 0x19
 7800 0268 01       	 .uleb128 0x1
 7801 0269 13       	 .uleb128 0x13
 7802 026a 00       	 .byte 0
 7803 026b 00       	 .byte 0
 7804 026c 2B       	 .uleb128 0x2b
 7805 026d 2E       	 .uleb128 0x2e
 7806 026e 01       	 .byte 0x1
 7807 026f 3F       	 .uleb128 0x3f
 7808 0270 19       	 .uleb128 0x19
 7809 0271 03       	 .uleb128 0x3
 7810 0272 0E       	 .uleb128 0xe
 7811 0273 3A       	 .uleb128 0x3a
 7812 0274 0B       	 .uleb128 0xb
 7813 0275 3B       	 .uleb128 0x3b
 7814 0276 05       	 .uleb128 0x5
 7815 0277 39       	 .uleb128 0x39
 7816 0278 0B       	 .uleb128 0xb
 7817 0279 11       	 .uleb128 0x11
 7818 027a 01       	 .uleb128 0x1
 7819 027b 12       	 .uleb128 0x12
 7820 027c 06       	 .uleb128 0x6
 7821 027d 40       	 .uleb128 0x40
 7822 027e 18       	 .uleb128 0x18
 7823 027f 9742     	 .uleb128 0x2117
 7824 0281 19       	 .uleb128 0x19
 7825 0282 01       	 .uleb128 0x1
 7826 0283 13       	 .uleb128 0x13
 7827 0284 00       	 .byte 0
 7828 0285 00       	 .byte 0
 7829 0286 2C       	 .uleb128 0x2c
 7830 0287 2E       	 .uleb128 0x2e
 7831 0288 01       	 .byte 0x1
 7832 0289 03       	 .uleb128 0x3
 7833 028a 0E       	 .uleb128 0xe
 7834 028b 3A       	 .uleb128 0x3a
 7835 028c 0B       	 .uleb128 0xb
 7836 028d 3B       	 .uleb128 0x3b
 7837 028e 05       	 .uleb128 0x5
 7838 028f 39       	 .uleb128 0x39
 7839 0290 0B       	 .uleb128 0xb
 7840 0291 49       	 .uleb128 0x49
 7841 0292 13       	 .uleb128 0x13
 7842 0293 11       	 .uleb128 0x11
 7843 0294 01       	 .uleb128 0x1
 7844 0295 12       	 .uleb128 0x12
 7845 0296 06       	 .uleb128 0x6
 7846 0297 40       	 .uleb128 0x40
 7847 0298 18       	 .uleb128 0x18
 7848 0299 9742     	 .uleb128 0x2117
 7849 029b 19       	 .uleb128 0x19
ARM GAS   			page 171


 7850 029c 01       	 .uleb128 0x1
 7851 029d 13       	 .uleb128 0x13
 7852 029e 00       	 .byte 0
 7853 029f 00       	 .byte 0
 7854 02a0 2D       	 .uleb128 0x2d
 7855 02a1 2E       	 .uleb128 0x2e
 7856 02a2 01       	 .byte 0x1
 7857 02a3 03       	 .uleb128 0x3
 7858 02a4 0E       	 .uleb128 0xe
 7859 02a5 3A       	 .uleb128 0x3a
 7860 02a6 0B       	 .uleb128 0xb
 7861 02a7 3B       	 .uleb128 0x3b
 7862 02a8 05       	 .uleb128 0x5
 7863 02a9 39       	 .uleb128 0x39
 7864 02aa 0B       	 .uleb128 0xb
 7865 02ab 11       	 .uleb128 0x11
 7866 02ac 01       	 .uleb128 0x1
 7867 02ad 12       	 .uleb128 0x12
 7868 02ae 06       	 .uleb128 0x6
 7869 02af 40       	 .uleb128 0x40
 7870 02b0 18       	 .uleb128 0x18
 7871 02b1 9642     	 .uleb128 0x2116
 7872 02b3 19       	 .uleb128 0x19
 7873 02b4 01       	 .uleb128 0x1
 7874 02b5 13       	 .uleb128 0x13
 7875 02b6 00       	 .byte 0
 7876 02b7 00       	 .byte 0
 7877 02b8 2E       	 .uleb128 0x2e
 7878 02b9 2E       	 .uleb128 0x2e
 7879 02ba 01       	 .byte 0x1
 7880 02bb 03       	 .uleb128 0x3
 7881 02bc 0E       	 .uleb128 0xe
 7882 02bd 3A       	 .uleb128 0x3a
 7883 02be 0B       	 .uleb128 0xb
 7884 02bf 3B       	 .uleb128 0x3b
 7885 02c0 05       	 .uleb128 0x5
 7886 02c1 39       	 .uleb128 0x39
 7887 02c2 0B       	 .uleb128 0xb
 7888 02c3 11       	 .uleb128 0x11
 7889 02c4 01       	 .uleb128 0x1
 7890 02c5 12       	 .uleb128 0x12
 7891 02c6 06       	 .uleb128 0x6
 7892 02c7 40       	 .uleb128 0x40
 7893 02c8 18       	 .uleb128 0x18
 7894 02c9 9742     	 .uleb128 0x2117
 7895 02cb 19       	 .uleb128 0x19
 7896 02cc 01       	 .uleb128 0x1
 7897 02cd 13       	 .uleb128 0x13
 7898 02ce 00       	 .byte 0
 7899 02cf 00       	 .byte 0
 7900 02d0 00       	 .byte 0
 7901              	 .section .debug_aranges,"",%progbits
 7902 0000 0C010000 	 .4byte 0x10c
 7903 0004 0200     	 .2byte 0x2
 7904 0006 00000000 	 .4byte .Ldebug_info0
 7905 000a 04       	 .byte 0x4
 7906 000b 00       	 .byte 0
ARM GAS   			page 172


 7907 000c 0000     	 .2byte 0
 7908 000e 0000     	 .2byte 0
 7909 0010 00000000 	 .4byte .LFB7
 7910 0014 A8000000 	 .4byte .LFE7-.LFB7
 7911 0018 00000000 	 .4byte .LFB8
 7912 001c D4000000 	 .4byte .LFE8-.LFB8
 7913 0020 00000000 	 .4byte .LFB9
 7914 0024 E2000000 	 .4byte .LFE9-.LFB9
 7915 0028 00000000 	 .4byte .LFB10
 7916 002c 34000000 	 .4byte .LFE10-.LFB10
 7917 0030 00000000 	 .4byte .LFB11
 7918 0034 46000000 	 .4byte .LFE11-.LFB11
 7919 0038 00000000 	 .4byte .LFB12
 7920 003c 38010000 	 .4byte .LFE12-.LFB12
 7921 0040 00000000 	 .4byte .LFB13
 7922 0044 36000000 	 .4byte .LFE13-.LFB13
 7923 0048 00000000 	 .4byte .LFB14
 7924 004c 74010000 	 .4byte .LFE14-.LFB14
 7925 0050 00000000 	 .4byte .LFB15
 7926 0054 CC010000 	 .4byte .LFE15-.LFB15
 7927 0058 00000000 	 .4byte .LFB16
 7928 005c A4000000 	 .4byte .LFE16-.LFB16
 7929 0060 00000000 	 .4byte .LFB17
 7930 0064 48000000 	 .4byte .LFE17-.LFB17
 7931 0068 00000000 	 .4byte .LFB18
 7932 006c 26000000 	 .4byte .LFE18-.LFB18
 7933 0070 00000000 	 .4byte .LFB19
 7934 0074 78000000 	 .4byte .LFE19-.LFB19
 7935 0078 00000000 	 .4byte .LFB20
 7936 007c 94000000 	 .4byte .LFE20-.LFB20
 7937 0080 00000000 	 .4byte .LFB21
 7938 0084 B4000000 	 .4byte .LFE21-.LFB21
 7939 0088 00000000 	 .4byte .LFB22
 7940 008c 32000000 	 .4byte .LFE22-.LFB22
 7941 0090 00000000 	 .4byte .LFB23
 7942 0094 1E000000 	 .4byte .LFE23-.LFB23
 7943 0098 00000000 	 .4byte .LFB24
 7944 009c 44000000 	 .4byte .LFE24-.LFB24
 7945 00a0 00000000 	 .4byte .LFB25
 7946 00a4 38000000 	 .4byte .LFE25-.LFB25
 7947 00a8 00000000 	 .4byte .LFB26
 7948 00ac 38000000 	 .4byte .LFE26-.LFB26
 7949 00b0 00000000 	 .4byte .LFB27
 7950 00b4 F4000000 	 .4byte .LFE27-.LFB27
 7951 00b8 00000000 	 .4byte .LFB28
 7952 00bc F8000000 	 .4byte .LFE28-.LFB28
 7953 00c0 00000000 	 .4byte .LFB29
 7954 00c4 D4000000 	 .4byte .LFE29-.LFB29
 7955 00c8 00000000 	 .4byte .LFB30
 7956 00cc D4000000 	 .4byte .LFE30-.LFB30
 7957 00d0 00000000 	 .4byte .LFB31
 7958 00d4 64000000 	 .4byte .LFE31-.LFB31
 7959 00d8 00000000 	 .4byte .LFB32
 7960 00dc 64000000 	 .4byte .LFE32-.LFB32
 7961 00e0 00000000 	 .4byte .LFB33
 7962 00e4 64000000 	 .4byte .LFE33-.LFB33
 7963 00e8 00000000 	 .4byte .LFB34
ARM GAS   			page 173


 7964 00ec 64000000 	 .4byte .LFE34-.LFB34
 7965 00f0 00000000 	 .4byte .LFB35
 7966 00f4 0C000000 	 .4byte .LFE35-.LFB35
 7967 00f8 00000000 	 .4byte .LFB36
 7968 00fc B4000000 	 .4byte .LFE36-.LFB36
 7969 0100 00000000 	 .4byte .LFB37
 7970 0104 24010000 	 .4byte .LFE37-.LFB37
 7971 0108 00000000 	 .4byte 0
 7972 010c 00000000 	 .4byte 0
 7973              	 .section .debug_ranges,"",%progbits
 7974              	.Ldebug_ranges0:
 7975 0000 00000000 	 .4byte .LFB7
 7976 0004 A8000000 	 .4byte .LFE7
 7977 0008 00000000 	 .4byte .LFB8
 7978 000c D4000000 	 .4byte .LFE8
 7979 0010 00000000 	 .4byte .LFB9
 7980 0014 E2000000 	 .4byte .LFE9
 7981 0018 00000000 	 .4byte .LFB10
 7982 001c 34000000 	 .4byte .LFE10
 7983 0020 00000000 	 .4byte .LFB11
 7984 0024 46000000 	 .4byte .LFE11
 7985 0028 00000000 	 .4byte .LFB12
 7986 002c 38010000 	 .4byte .LFE12
 7987 0030 00000000 	 .4byte .LFB13
 7988 0034 36000000 	 .4byte .LFE13
 7989 0038 00000000 	 .4byte .LFB14
 7990 003c 74010000 	 .4byte .LFE14
 7991 0040 00000000 	 .4byte .LFB15
 7992 0044 CC010000 	 .4byte .LFE15
 7993 0048 00000000 	 .4byte .LFB16
 7994 004c A4000000 	 .4byte .LFE16
 7995 0050 00000000 	 .4byte .LFB17
 7996 0054 48000000 	 .4byte .LFE17
 7997 0058 00000000 	 .4byte .LFB18
 7998 005c 26000000 	 .4byte .LFE18
 7999 0060 00000000 	 .4byte .LFB19
 8000 0064 78000000 	 .4byte .LFE19
 8001 0068 00000000 	 .4byte .LFB20
 8002 006c 94000000 	 .4byte .LFE20
 8003 0070 00000000 	 .4byte .LFB21
 8004 0074 B4000000 	 .4byte .LFE21
 8005 0078 00000000 	 .4byte .LFB22
 8006 007c 32000000 	 .4byte .LFE22
 8007 0080 00000000 	 .4byte .LFB23
 8008 0084 1E000000 	 .4byte .LFE23
 8009 0088 00000000 	 .4byte .LFB24
 8010 008c 44000000 	 .4byte .LFE24
 8011 0090 00000000 	 .4byte .LFB25
 8012 0094 38000000 	 .4byte .LFE25
 8013 0098 00000000 	 .4byte .LFB26
 8014 009c 38000000 	 .4byte .LFE26
 8015 00a0 00000000 	 .4byte .LFB27
 8016 00a4 F4000000 	 .4byte .LFE27
 8017 00a8 00000000 	 .4byte .LFB28
 8018 00ac F8000000 	 .4byte .LFE28
 8019 00b0 00000000 	 .4byte .LFB29
 8020 00b4 D4000000 	 .4byte .LFE29
ARM GAS   			page 174


 8021 00b8 00000000 	 .4byte .LFB30
 8022 00bc D4000000 	 .4byte .LFE30
 8023 00c0 00000000 	 .4byte .LFB31
 8024 00c4 64000000 	 .4byte .LFE31
 8025 00c8 00000000 	 .4byte .LFB32
 8026 00cc 64000000 	 .4byte .LFE32
 8027 00d0 00000000 	 .4byte .LFB33
 8028 00d4 64000000 	 .4byte .LFE33
 8029 00d8 00000000 	 .4byte .LFB34
 8030 00dc 64000000 	 .4byte .LFE34
 8031 00e0 00000000 	 .4byte .LFB35
 8032 00e4 0C000000 	 .4byte .LFE35
 8033 00e8 00000000 	 .4byte .LFB36
 8034 00ec B4000000 	 .4byte .LFE36
 8035 00f0 00000000 	 .4byte .LFB37
 8036 00f4 24010000 	 .4byte .LFE37
 8037 00f8 00000000 	 .4byte 0
 8038 00fc 00000000 	 .4byte 0
 8039              	 .section .debug_line,"",%progbits
 8040              	.Ldebug_line0:
 8041 0000 1C0C0000 	 .section .debug_str,"MS",%progbits,1
 8041      03006402 
 8041      00000201 
 8041      FB0E0D00 
 8041      01010101 
 8042              	.LASF93:
 8043 0000 53454747 	 .ascii "SEGGER_RTT_HasDataUp\000"
 8043      45525F52 
 8043      54545F48 
 8043      61734461 
 8043      74615570 
 8044              	.LASF49:
 8045 0015 61746F6C 	 .ascii "atoll\000"
 8045      6C00
 8046              	.LASF80:
 8047 001b 4C6F636B 	 .ascii "LockState\000"
 8047      53746174 
 8047      6500
 8048              	.LASF19:
 8049 0025 71756F74 	 .ascii "quot\000"
 8049      00
 8050              	.LASF68:
 8051 002a 4D61784E 	 .ascii "MaxNumDownBuffers\000"
 8051      756D446F 
 8051      776E4275 
 8051      66666572 
 8051      7300
 8052              	.LASF20:
 8053 003c 73697A65 	 .ascii "size_t\000"
 8053      5F7400
 8054              	.LASF103:
 8055 0043 4E756D42 	 .ascii "NumBytes\000"
 8055      79746573 
 8055      00
 8056              	.LASF5:
 8057 004c 5F5F6378 	 .ascii "__cxx11\000"
 8057      78313100 
ARM GAS   			page 175


 8058              	.LASF6:
 8059 0054 5F5A5374 	 .ascii "_ZSt3divll\000"
 8059      33646976 
 8059      6C6C00
 8060              	.LASF62:
 8061 005f 53454747 	 .ascii "SEGGER_RTT_BUFFER_UP\000"
 8061      45525F52 
 8061      54545F42 
 8061      55464645 
 8061      525F5550 
 8062              	.LASF120:
 8063 0074 5F446F49 	 .ascii "_DoInit\000"
 8063      6E697400 
 8064              	.LASF106:
 8065 007c 53454747 	 .ascii "SEGGER_RTT_WriteSkipNoLock\000"
 8065      45525F52 
 8065      54545F57 
 8065      72697465 
 8065      536B6970 
 8066              	.LASF46:
 8067 0097 77637374 	 .ascii "wcstombs\000"
 8067      6F6D6273 
 8067      00
 8068              	.LASF25:
 8069 00a0 376C6C64 	 .ascii "7lldiv_t\000"
 8069      69765F74 
 8069      00
 8070              	.LASF64:
 8071 00a9 53454747 	 .ascii "SEGGER_RTT_BUFFER_DOWN\000"
 8071      45525F52 
 8071      54545F42 
 8071      55464645 
 8071      525F444F 
 8072              	.LASF114:
 8073 00c0 5F577269 	 .ascii "_WriteNoCheck\000"
 8073      74654E6F 
 8073      43686563 
 8073      6B00
 8074              	.LASF17:
 8075 00ce 6C6F6E67 	 .ascii "long long unsigned int\000"
 8075      206C6F6E 
 8075      6720756E 
 8075      7369676E 
 8075      65642069 
 8076              	.LASF98:
 8077 00e5 53454747 	 .ascii "SEGGER_RTT_PutChar\000"
 8077      45525F52 
 8077      54545F50 
 8077      75744368 
 8077      617200
 8078              	.LASF28:
 8079 00f8 61746578 	 .ascii "atexit\000"
 8079      697400
 8080              	.LASF21:
 8081 00ff 6469765F 	 .ascii "div_t\000"
 8081      7400
 8082              	.LASF9:
ARM GAS   			page 176


 8083 0105 6C6F6E67 	 .ascii "long long int\000"
 8083      206C6F6E 
 8083      6720696E 
 8083      7400
 8084              	.LASF11:
 8085 0113 7369676E 	 .ascii "signed char\000"
 8085      65642063 
 8085      68617200 
 8086              	.LASF36:
 8087 011f 6D626C65 	 .ascii "mblen\000"
 8087      6E00
 8088              	.LASF128:
 8089 0125 53454747 	 .ascii "SEGGER_RTT_Init\000"
 8089      45525F52 
 8089      54545F49 
 8089      6E697400 
 8090              	.LASF129:
 8091 0135 53454747 	 .ascii "SEGGER_RTT_WriteWithOverwriteNoLock\000"
 8091      45525F52 
 8091      54545F57 
 8091      72697465 
 8091      57697468 
 8092              	.LASF42:
 8093 0159 73747274 	 .ascii "strtod\000"
 8093      6F6400
 8094              	.LASF99:
 8095 0160 53454747 	 .ascii "SEGGER_RTT_PutCharSkip\000"
 8095      45525F52 
 8095      54545F50 
 8095      75744368 
 8095      6172536B 
 8096              	.LASF52:
 8097 0177 73747274 	 .ascii "strtof\000"
 8097      6F6600
 8098              	.LASF15:
 8099 017e 6C6F6E67 	 .ascii "long int\000"
 8099      20696E74 
 8099      00
 8100              	.LASF43:
 8101 0187 73747274 	 .ascii "strtol\000"
 8101      6F6C00
 8102              	.LASF127:
 8103 018e 5F534547 	 .ascii "_SEGGER_RTT\000"
 8103      4745525F 
 8103      52545400 
 8104              	.LASF107:
 8105 019a 70447374 	 .ascii "pDst\000"
 8105      00
 8106              	.LASF110:
 8107 019f 53454747 	 .ascii "SEGGER_RTT_ReadNoLock\000"
 8107      45525F52 
 8107      54545F52 
 8107      6561644E 
 8107      6F4C6F63 
 8108              	.LASF77:
 8109 01b5 46726167 	 .ascii "FragLen\000"
 8109      4C656E00 
ARM GAS   			page 177


 8110              	.LASF24:
 8111 01bd 6C646976 	 .ascii "ldiv_t\000"
 8111      5F7400
 8112              	.LASF30:
 8113 01c4 646F7562 	 .ascii "double\000"
 8113      6C6500
 8114              	.LASF97:
 8115 01cb 53454747 	 .ascii "SEGGER_RTT_GetKey\000"
 8115      45525F52 
 8115      54545F47 
 8115      65744B65 
 8115      7900
 8116              	.LASF39:
 8117 01dd 6D62746F 	 .ascii "mbtowc\000"
 8117      776300
 8118              	.LASF105:
 8119 01e4 70446174 	 .ascii "pData\000"
 8119      6100
 8120              	.LASF40:
 8121 01ea 71736F72 	 .ascii "qsort\000"
 8121      7400
 8122              	.LASF60:
 8123 01f0 52644F66 	 .ascii "RdOff\000"
 8123      6600
 8124              	.LASF116:
 8125 01f6 5F476574 	 .ascii "_GetAvailWriteSpace\000"
 8125      41766169 
 8125      6C577269 
 8125      74655370 
 8125      61636500 
 8126              	.LASF8:
 8127 020a 756E7369 	 .ascii "unsigned int\000"
 8127      676E6564 
 8127      20696E74 
 8127      00
 8128              	.LASF112:
 8129 0217 70537263 	 .ascii "pSrc\000"
 8129      00
 8130              	.LASF16:
 8131 021c 6C6F6E67 	 .ascii "long unsigned int\000"
 8131      20756E73 
 8131      69676E65 
 8131      6420696E 
 8131      7400
 8132              	.LASF41:
 8133 022e 7372616E 	 .ascii "srand\000"
 8133      6400
 8134              	.LASF57:
 8135 0234 70427566 	 .ascii "pBuffer\000"
 8135      66657200 
 8136              	.LASF126:
 8137 023c 72616E64 	 .ascii "rand\000"
 8137      00
 8138              	.LASF88:
 8139 0241 53454747 	 .ascii "SEGGER_RTT_ConfigDownBuffer\000"
 8139      45525F52 
 8139      54545F43 
ARM GAS   			page 178


 8139      6F6E6669 
 8139      67446F77 
 8140              	.LASF122:
 8141 025d 433A5C55 	 .ascii "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar "
 8141      73657273 
 8141      5C6E6965 
 8141      6C735C44 
 8141      6F63756D 
 8142 028b 325C4543 	 .ascii "2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\Segger\\"
 8142      535C4543 
 8142      534C5C73 
 8142      6F667477 
 8142      6172655C 
 8143 02b7 53656767 	 .ascii "Segger_RTT\\RTT\\SEGGER_RTT.c\000"
 8143      65725F52 
 8143      54545C52 
 8143      54545C53 
 8143      45474745 
 8144              	.LASF22:
 8145 02d3 35646976 	 .ascii "5div_t\000"
 8145      5F7400
 8146              	.LASF67:
 8147 02da 4D61784E 	 .ascii "MaxNumUpBuffers\000"
 8147      756D5570 
 8147      42756666 
 8147      65727300 
 8148              	.LASF14:
 8149 02ea 73686F72 	 .ascii "short unsigned int\000"
 8149      7420756E 
 8149      7369676E 
 8149      65642069 
 8149      6E7400
 8150              	.LASF33:
 8151 02fd 62736561 	 .ascii "bsearch\000"
 8151      72636800 
 8152              	.LASF117:
 8153 0305 5F577269 	 .ascii "_WriteBlocking\000"
 8153      7465426C 
 8153      6F636B69 
 8153      6E6700
 8154              	.LASF48:
 8155 0314 6C6C6469 	 .ascii "lldiv\000"
 8155      7600
 8156              	.LASF84:
 8157 031a 42756666 	 .ascii "BufferIndex\000"
 8157      6572496E 
 8157      64657800 
 8158              	.LASF38:
 8159 0326 77636861 	 .ascii "wchar_t\000"
 8159      725F7400 
 8160              	.LASF94:
 8161 032e 53454747 	 .ascii "SEGGER_RTT_HasData\000"
 8161      45525F52 
 8161      54545F48 
 8161      61734461 
 8161      746100
 8162              	.LASF56:
ARM GAS   			page 179


 8163 0341 734E616D 	 .ascii "sName\000"
 8163      6500
 8164              	.LASF125:
 8165 0347 6465636C 	 .ascii "decltype(nullptr)\000"
 8165      74797065 
 8165      286E756C 
 8165      6C707472 
 8165      2900
 8166              	.LASF119:
 8167 0359 4E756D42 	 .ascii "NumBytesWritten\000"
 8167      79746573 
 8167      57726974 
 8167      74656E00 
 8168              	.LASF85:
 8169 0369 53454747 	 .ascii "SEGGER_RTT_SetFlagsUpBuffer\000"
 8169      45525F52 
 8169      54545F53 
 8169      6574466C 
 8169      61677355 
 8170              	.LASF115:
 8171 0385 4E756D42 	 .ascii "NumBytesAtOnce\000"
 8171      79746573 
 8171      41744F6E 
 8171      636500
 8172              	.LASF34:
 8173 0394 67657465 	 .ascii "getenv\000"
 8173      6E7600
 8174              	.LASF70:
 8175 039b 53454747 	 .ascii "SEGGER_RTT_CB\000"
 8175      45525F52 
 8175      54545F43 
 8175      4200
 8176              	.LASF90:
 8177 03a9 53454747 	 .ascii "SEGGER_RTT_ConfigUpBuffer\000"
 8177      45525F52 
 8177      54545F43 
 8177      6F6E6669 
 8177      67557042 
 8178              	.LASF79:
 8179 03c3 7052696E 	 .ascii "pRing\000"
 8179      6700
 8180              	.LASF10:
 8181 03c9 6C6F6E67 	 .ascii "long double\000"
 8181      20646F75 
 8181      626C6500 
 8182              	.LASF118:
 8183 03d5 4E756D42 	 .ascii "NumBytesToWrite\000"
 8183      79746573 
 8183      546F5772 
 8183      69746500 
 8184              	.LASF89:
 8185 03e5 42756666 	 .ascii "BufferSize\000"
 8185      65725369 
 8185      7A6500
 8186              	.LASF102:
 8187 03f0 53454747 	 .ascii "SEGGER_RTT_Write\000"
 8187      45525F52 
ARM GAS   			page 180


 8187      54545F57 
 8187      72697465 
 8187      00
 8188              	.LASF35:
 8189 0401 6C646976 	 .ascii "ldiv\000"
 8189      00
 8190              	.LASF73:
 8191 0406 5F616344 	 .ascii "_acDownBuffer\000"
 8191      6F776E42 
 8191      75666665 
 8191      7200
 8192              	.LASF92:
 8193 0414 53454747 	 .ascii "SEGGER_RTT_AllocDownBuffer\000"
 8193      45525F52 
 8193      54545F41 
 8193      6C6C6F63 
 8193      446F776E 
 8194              	.LASF58:
 8195 042f 53697A65 	 .ascii "SizeOfBuffer\000"
 8195      4F664275 
 8195      66666572 
 8195      00
 8196              	.LASF53:
 8197 043c 666C6F61 	 .ascii "float\000"
 8197      7400
 8198              	.LASF37:
 8199 0442 6D627374 	 .ascii "mbstowcs\000"
 8199      6F776373 
 8199      00
 8200              	.LASF29:
 8201 044b 61746F66 	 .ascii "atof\000"
 8201      00
 8202              	.LASF66:
 8203 0450 61634944 	 .ascii "acID\000"
 8203      00
 8204              	.LASF31:
 8205 0455 61746F69 	 .ascii "atoi\000"
 8205      00
 8206              	.LASF91:
 8207 045a 53454747 	 .ascii "SEGGER_RTT_AllocUpBuffer\000"
 8207      45525F52 
 8207      54545F41 
 8207      6C6C6F63 
 8207      55704275 
 8208              	.LASF32:
 8209 0473 61746F6C 	 .ascii "atol\000"
 8209      00
 8210              	.LASF12:
 8211 0478 756E7369 	 .ascii "unsigned char\000"
 8211      676E6564 
 8211      20636861 
 8211      7200
 8212              	.LASF23:
 8213 0486 366C6469 	 .ascii "6ldiv_t\000"
 8213      765F7400 
 8214              	.LASF26:
 8215 048e 6C6C6469 	 .ascii "lldiv_t\000"
ARM GAS   			page 181


 8215      765F7400 
 8216              	.LASF101:
 8217 0496 53454747 	 .ascii "SEGGER_RTT_WriteString\000"
 8217      45525F52 
 8217      54545F57 
 8217      72697465 
 8217      53747269 
 8218              	.LASF13:
 8219 04ad 73686F72 	 .ascii "short int\000"
 8219      7420696E 
 8219      7400
 8220              	.LASF54:
 8221 04b7 73747274 	 .ascii "strtold\000"
 8221      6F6C6400 
 8222              	.LASF86:
 8223 04bf 53454747 	 .ascii "SEGGER_RTT_SetNameDownBuffer\000"
 8223      45525F52 
 8223      54545F53 
 8223      65744E61 
 8223      6D65446F 
 8224              	.LASF50:
 8225 04dc 73747274 	 .ascii "strtoll\000"
 8225      6F6C6C00 
 8226              	.LASF47:
 8227 04e4 7763746F 	 .ascii "wctomb\000"
 8227      6D6200
 8228              	.LASF2:
 8229 04eb 5F5A5374 	 .ascii "_ZSt3absd\000"
 8229      33616273 
 8229      6400
 8230              	.LASF0:
 8231 04f5 5F5A5374 	 .ascii "_ZSt3abse\000"
 8231      33616273 
 8231      6500
 8232              	.LASF1:
 8233 04ff 5F5A5374 	 .ascii "_ZSt3absf\000"
 8233      33616273 
 8233      6600
 8234              	.LASF83:
 8235 0509 53454747 	 .ascii "SEGGER_RTT_SetFlagsDownBuffer\000"
 8235      45525F52 
 8235      54545F53 
 8235      6574466C 
 8235      61677344 
 8236              	.LASF108:
 8237 0527 53454747 	 .ascii "SEGGER_RTT_Read\000"
 8237      45525F52 
 8237      54545F52 
 8237      65616400 
 8238              	.LASF7:
 8239 0537 5F5A4E39 	 .ascii "_ZN9__gnu_cxx3divExx\000"
 8239      5F5F676E 
 8239      755F6378 
 8239      78336469 
 8239      76457878 
 8240              	.LASF4:
 8241 054c 5F5A5374 	 .ascii "_ZSt3absl\000"
ARM GAS   			page 182


 8241      33616273 
 8241      6C00
 8242              	.LASF69:
 8243 0556 61446F77 	 .ascii "aDown\000"
 8243      6E00
 8244              	.LASF104:
 8245 055c 53454747 	 .ascii "SEGGER_RTT_WriteNoLock\000"
 8245      45525F52 
 8245      54545F57 
 8245      72697465 
 8245      4E6F4C6F 
 8246              	.LASF3:
 8247 0573 5F5A5374 	 .ascii "_ZSt3absx\000"
 8247      33616273 
 8247      7800
 8248              	.LASF121:
 8249 057d 474E5520 	 .ascii "GNU C++14 10.3.1 20210824 (release) -mcpu=cortex-m4"
 8249      432B2B31 
 8249      34203130 
 8249      2E332E31 
 8249      20323032 
 8250 05b0 202D6D66 	 .ascii " -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mfix-cortex-m3"
 8250      6C6F6174 
 8250      2D616269 
 8250      3D686172 
 8250      64202D6D 
 8251 05e3 2D6C6472 	 .ascii "-ldrd -mthumb -mno-unaligned-access -mapcs-frame -m"
 8251      64202D6D 
 8251      7468756D 
 8251      62202D6D 
 8251      6E6F2D75 
 8252 0616 61726368 	 .ascii "arch=armv7e-m+fp -g -g -O0 -fsingle-precision-const"
 8252      3D61726D 
 8252      7637652D 
 8252      6D2B6670 
 8252      202D6720 
 8253 0649 616E7420 	 .ascii "ant -funsigned-char -ffunction-sections -fdata-sect"
 8253      2D66756E 
 8253      7369676E 
 8253      65642D63 
 8253      68617220 
 8254 067c 696F6E73 	 .ascii "ions\000"
 8254      00
 8255              	.LASF18:
 8256 0681 63686172 	 .ascii "char\000"
 8256      00
 8257              	.LASF51:
 8258 0686 73747274 	 .ascii "strtoull\000"
 8258      6F756C6C 
 8258      00
 8259              	.LASF87:
 8260 068f 53454747 	 .ascii "SEGGER_RTT_SetNameUpBuffer\000"
 8260      45525F52 
 8260      54545F53 
 8260      65744E61 
 8260      6D655570 
 8261              	.LASF61:
ARM GAS   			page 183


 8262 06aa 466C6167 	 .ascii "Flags\000"
 8262      7300
 8263              	.LASF78:
 8264 06b0 41766169 	 .ascii "Avail\000"
 8264      6C00
 8265              	.LASF123:
 8266 06b6 433A5C55 	 .ascii "C:\\Users\\niels\\DOCUME~1\\ELEKTR~1\\JAAR2~1\\ECS\\"
 8266      73657273 
 8266      5C6E6965 
 8266      6C735C44 
 8266      4F43554D 
 8267 06e3 4543534C 	 .ascii "ECSL\\software\\STM32\\PRACTI~1\\CLion\\Debug\\SEGG"
 8267      5C736F66 
 8267      74776172 
 8267      655C5354 
 8267      4D33325C 
 8268 0710 45527E31 	 .ascii "ER~1\000"
 8268      00
 8269              	.LASF109:
 8270 0715 4E756D42 	 .ascii "NumBytesRead\000"
 8270      79746573 
 8270      52656164 
 8270      00
 8271              	.LASF82:
 8272 0722 53454747 	 .ascii "SEGGER_RTT_SetTerminal\000"
 8272      45525F52 
 8272      54545F53 
 8272      65745465 
 8272      726D696E 
 8273              	.LASF100:
 8274 0739 53454747 	 .ascii "SEGGER_RTT_PutCharSkipNoLock\000"
 8274      45525F52 
 8274      54545F50 
 8274      75744368 
 8274      6172536B 
 8275              	.LASF72:
 8276 0756 5F616355 	 .ascii "_acUpBuffer\000"
 8276      70427566 
 8276      66657200 
 8277              	.LASF81:
 8278 0762 53454747 	 .ascii "SEGGER_RTT_TerminalOut\000"
 8278      45525F52 
 8278      54545F54 
 8278      65726D69 
 8278      6E616C4F 
 8279              	.LASF111:
 8280 0779 4E756D42 	 .ascii "NumBytesRem\000"
 8280      79746573 
 8280      52656D00 
 8281              	.LASF74:
 8282 0785 5F416374 	 .ascii "_ActiveTerminal\000"
 8282      69766554 
 8282      65726D69 
 8282      6E616C00 
 8283              	.LASF44:
 8284 0795 73747274 	 .ascii "strtoul\000"
 8284      6F756C00 
ARM GAS   			page 184


 8285              	.LASF113:
 8286 079d 5F506F73 	 .ascii "_PostTerminalSwitch\000"
 8286      74546572 
 8286      6D696E61 
 8286      6C537769 
 8286      74636800 
 8287              	.LASF71:
 8288 07b1 5F615465 	 .ascii "_aTerminalId\000"
 8288      726D696E 
 8288      616C4964 
 8288      00
 8289              	.LASF55:
 8290 07be 32305345 	 .ascii "20SEGGER_RTT_BUFFER_UP\000"
 8290      47474552 
 8290      5F525454 
 8290      5F425546 
 8290      4645525F 
 8291              	.LASF59:
 8292 07d5 57724F66 	 .ascii "WrOff\000"
 8292      6600
 8293              	.LASF45:
 8294 07db 73797374 	 .ascii "system\000"
 8294      656D00
 8295              	.LASF27:
 8296 07e2 5F5F636F 	 .ascii "__compar_fn_t\000"
 8296      6D706172 
 8296      5F666E5F 
 8296      7400
 8297              	.LASF96:
 8298 07f0 53454747 	 .ascii "SEGGER_RTT_WaitKey\000"
 8298      45525F52 
 8298      54545F57 
 8298      6169744B 
 8298      657900
 8299              	.LASF65:
 8300 0803 31335345 	 .ascii "13SEGGER_RTT_CB\000"
 8300      47474552 
 8300      5F525454 
 8300      5F434200 
 8301              	.LASF75:
 8302 0813 5465726D 	 .ascii "TerminalId\000"
 8302      696E616C 
 8302      496400
 8303              	.LASF76:
 8304 081e 53746174 	 .ascii "Status\000"
 8304      757300
 8305              	.LASF63:
 8306 0825 32325345 	 .ascii "22SEGGER_RTT_BUFFER_DOWN\000"
 8306      47474552 
 8306      5F525454 
 8306      5F425546 
 8306      4645525F 
 8307              	.LASF95:
 8308 083e 53454747 	 .ascii "SEGGER_RTT_HasKey\000"
 8308      45525F52 
 8308      54545F48 
 8308      61734B65 
ARM GAS   			page 185


 8308      7900
 8309              	.LASF124:
 8310 0850 5F5F676E 	 .ascii "__gnu_cxx\000"
 8310      755F6378 
 8310      7800
 8311              	 .ident "GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
