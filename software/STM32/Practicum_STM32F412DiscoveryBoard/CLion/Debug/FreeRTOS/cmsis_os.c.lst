ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .arch armv7e-m
   3              	 .fpu fpv4-sp-d16
   4              	 .eabi_attribute 27,1
   5              	 .eabi_attribute 28,1
   6              	 .eabi_attribute 20,1
   7              	 .eabi_attribute 21,1
   8              	 .eabi_attribute 23,3
   9              	 .eabi_attribute 24,1
  10              	 .eabi_attribute 25,1
  11              	 .eabi_attribute 26,1
  12              	 .eabi_attribute 30,6
  13              	 .eabi_attribute 34,0
  14              	 .eabi_attribute 18,4
  15              	 .file "cmsis_os.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text._ZL20makeFreeRtosPriority10osPriority,"ax",%progbits
  20              	 .align 1
  21              	 .syntax unified
  22              	 .thumb
  23              	 .thumb_func
  24              	 .type _ZL20makeFreeRtosPriority10osPriority,%function
  25              	_ZL20makeFreeRtosPriority10osPriority:
  26              	 .fnstart
  27              	.LFB29:
  28              	 .file 1 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gemeenschappelijk\\Third_Party\\FreeRTOS\\Source\\CMSIS_RTOS\\cmsis_os.c"
   1:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /* ----------------------------------------------------------------------
   2:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * $Date:        5. February 2013
   3:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * $Revision:    V1.02
   4:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *
   5:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Project:      CMSIS-RTOS API
   6:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Title:        cmsis_os.c
   7:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *
   8:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Version 0.02
   9:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Initial Proposal Phase
  10:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Version 0.03
  11:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    osKernelStart added, optional feature: main started as thread
  12:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    osSemaphores have standard behavior
  13:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    osTimerCreate does not start the timer, added osTimerStart
  14:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    osThreadPass is renamed to osThreadYield
  15:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Version 1.01
  16:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Support for C++ interface
  17:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *     - const attribute removed from the osXxxxDef_t typedef's
  18:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *     - const attribute added to the osXxxxDef macros
  19:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Added: osTimerDelete, osMutexDelete, osSemaphoreDelete
  20:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Added: osKernelInitialize
  21:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Version 1.02
  22:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Control functions for short timeouts in microsecond resolution:
  23:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Added: osKernelSysTick, osKernelSysTickFrequency, osKernelSysTickMicroSec
  24:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    Removed: osSignalGet 
  25:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    
  26:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *  
  27:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *----------------------------------------------------------------------------
  28:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *
  29:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Portions Copyright ï¿½ 2016 STMicroelectronics International N.V. All rights reserved.
ARM GAS   			page 2


  30:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Portions Copyright (c) 2013 ARM LIMITED
  31:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * All rights reserved.
  32:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * Redistribution and use in source and binary forms, with or without
  33:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * modification, are permitted provided that the following conditions are met:
  34:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *  - Redistributions of source code must retain the above copyright
  35:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer.
  36:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *  - Redistributions in binary form must reproduce the above copyright
  37:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer in the
  38:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    documentation and/or other materials provided with the distribution.
  39:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used
  40:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    to endorse or promote products derived from this software without
  41:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *    specific prior written permission.
  42:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *
  43:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  44:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  45:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  46:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  47:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  48:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  49:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  50:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  51:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  52:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  53:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  * POSSIBILITY OF SUCH DAMAGE.
  54:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  *---------------------------------------------------------------------------*/
  55:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
  56:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  /**
  57:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ******************************************************************************
  58:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * @file    cmsis_os.c
  59:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * @author  MCD Application Team
  60:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * @date    22-January-2016
  61:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * @brief   CMSIS-RTOS API implementation for FreeRTOS V8.2.3
  62:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ******************************************************************************
  63:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * @attention
  64:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *
  65:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * Redistribution and use in source and binary forms, with or without 
  66:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * modification, are permitted, provided that the following conditions are met:
  67:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *
  68:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  69:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    this list of conditions and the following disclaimer.
  70:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  71:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    this list of conditions and the following disclaimer in the documentation
  72:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    and/or other materials provided with the distribution.
  73:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  74:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    contributors to this software may be used to endorse or promote products 
  75:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    derived from this software without specific written permission.
  76:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * 4. This software, including modifications and/or derivative works of this 
  77:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    software, must execute solely and exclusively on microcontroller or
  78:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  79:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * 5. Redistribution and use of this software other than as permitted under 
  80:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    this license is void and will automatically terminate your rights under 
  81:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *    this license. 
  82:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *
  83:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  84:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  85:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  86:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
ARM GAS   			page 3


  87:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  88:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  89:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  90:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  91:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  92:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  93:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  94:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  95:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *
  96:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ******************************************************************************
  97:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   */ 
  98:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
  99:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #include <string.h>
 100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #include "cmsis_os.h"
 101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** extern void xPortSysTickHandler(void);
 103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /* Convert from CMSIS type osPriority to FreeRTOS priority number */
 105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** static unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority)
 106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
  29              	 .loc 1 106 1
  30              	 .cfi_startproc
  31              	 
  32              	 
  33              	 
  34 0000 80B4     	 push {r7}
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 85B0     	 sub sp,sp,#20
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	 .cfi_def_cfa_register 7
  41 0006 0346     	 mov r3,r0
  42 0008 FB80     	 strh r3,[r7,#6]
 107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
  43              	 .loc 1 107 26
  44 000a 0023     	 movs r3,#0
  45 000c FB60     	 str r3,[r7,#12]
 108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (priority != osPriorityError) {
  46              	 .loc 1 109 3
  47 000e B7F90630 	 ldrsh r3,[r7,#6]
  48 0012 842B     	 cmp r3,#132
  49 0014 05D0     	 beq .L2
 110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     fpriority += (priority - osPriorityIdle);
  50              	 .loc 1 110 15
  51 0016 B7F90620 	 ldrsh r2,[r7,#6]
  52 001a FB68     	 ldr r3,[r7,#12]
  53 001c 1344     	 add r3,r3,r2
  54 001e 0333     	 adds r3,r3,#3
  55 0020 FB60     	 str r3,[r7,#12]
  56              	.L2:
 111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return fpriority;
  57              	 .loc 1 113 10
  58 0022 FB68     	 ldr r3,[r7,#12]
ARM GAS   			page 4


 114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
  59              	 .loc 1 114 1
  60 0024 1846     	 mov r0,r3
  61 0026 1437     	 adds r7,r7,#20
  62              	 .cfi_def_cfa_offset 4
  63 0028 BD46     	 mov sp,r7
  64              	 .cfi_def_cfa_register 13
  65              	 
  66 002a 5DF8047B 	 ldr r7,[sp],#4
  67              	 .cfi_restore 7
  68              	 .cfi_def_cfa_offset 0
  69 002e 7047     	 bx lr
  70              	 .cfi_endproc
  71              	.LFE29:
  72              	 .cantunwind
  73              	 .fnend
  74              	 .size _ZL20makeFreeRtosPriority10osPriority,.-_ZL20makeFreeRtosPriority10osPriority
  75              	 .section .text._ZL17makeCmsisPrioritym,"ax",%progbits
  76              	 .align 1
  77              	 .syntax unified
  78              	 .thumb
  79              	 .thumb_func
  80              	 .type _ZL17makeCmsisPrioritym,%function
  81              	_ZL17makeCmsisPrioritym:
  82              	 .fnstart
  83              	.LFB30:
 115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /* Convert from FreeRTOS priority number to CMSIS type osPriority */
 118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** static osPriority makeCmsisPriority (unsigned portBASE_TYPE fpriority)
 119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
  84              	 .loc 1 119 1
  85              	 .cfi_startproc
  86              	 
  87              	 
  88              	 
  89 0000 80B4     	 push {r7}
  90              	 .cfi_def_cfa_offset 4
  91              	 .cfi_offset 7,-4
  92 0002 85B0     	 sub sp,sp,#20
  93              	 .cfi_def_cfa_offset 24
  94 0004 00AF     	 add r7,sp,#0
  95              	 .cfi_def_cfa_register 7
  96 0006 7860     	 str r0,[r7,#4]
 120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osPriority priority = osPriorityError;
  97              	 .loc 1 120 14
  98 0008 8423     	 movs r3,#132
  99 000a FB81     	 strh r3,[r7,#14]
 121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if ((fpriority - tskIDLE_PRIORITY) <= (osPriorityRealtime - osPriorityIdle)) {
 100              	 .loc 1 122 3
 101 000c 7B68     	 ldr r3,[r7,#4]
 102 000e 062B     	 cmp r3,#6
 103 0010 04D8     	 bhi .L5
 123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     priority = (osPriority)((int)osPriorityIdle + (int)(fpriority - tskIDLE_PRIORITY));
 104              	 .loc 1 123 49
 105 0012 7B68     	 ldr r3,[r7,#4]
ARM GAS   			page 5


 106 0014 9BB2     	 uxth r3,r3
 107 0016 033B     	 subs r3,r3,#3
 108 0018 9BB2     	 uxth r3,r3
 109              	 .loc 1 123 14
 110 001a FB81     	 strh r3,[r7,#14]
 111              	.L5:
 124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return priority;
 112              	 .loc 1 126 10
 113 001c B7F90E30 	 ldrsh r3,[r7,#14]
 127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 114              	 .loc 1 127 1
 115 0020 1846     	 mov r0,r3
 116 0022 1437     	 adds r7,r7,#20
 117              	 .cfi_def_cfa_offset 4
 118 0024 BD46     	 mov sp,r7
 119              	 .cfi_def_cfa_register 13
 120              	 
 121 0026 5DF8047B 	 ldr r7,[sp],#4
 122              	 .cfi_restore 7
 123              	 .cfi_def_cfa_offset 0
 124 002a 7047     	 bx lr
 125              	 .cfi_endproc
 126              	.LFE30:
 127              	 .cantunwind
 128              	 .fnend
 129              	 .size _ZL17makeCmsisPrioritym,.-_ZL17makeCmsisPrioritym
 130              	 .section .text._ZL13inHandlerModev,"ax",%progbits
 131              	 .align 1
 132              	 .syntax unified
 133              	 .thumb
 134              	 .thumb_func
 135              	 .type _ZL13inHandlerModev,%function
 136              	_ZL13inHandlerModev:
 137              	 .fnstart
 138              	.LFB31:
 128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /* Determine whether we are in thread mode or handler mode. */
 132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** static int inHandlerMode (void)
 133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 139              	 .loc 1 133 1
 140              	 .cfi_startproc
 141              	 
 142              	 
 143              	 
 144 0000 80B4     	 push {r7}
 145              	 .cfi_def_cfa_offset 4
 146              	 .cfi_offset 7,-4
 147 0002 83B0     	 sub sp,sp,#12
 148              	 .cfi_def_cfa_offset 16
 149 0004 00AF     	 add r7,sp,#0
 150              	 .cfi_def_cfa_register 7
 151              	.LBB8:
 152              	.LBB9:
ARM GAS   			page 6


 153              	 .file 2 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
   9:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    *
  21:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  35:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  38:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** #endif
  45:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  46:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  47:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   @{
  51:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
  52:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  53:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**
  54:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS   			page 7


  57:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
  58:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** {
  60:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** }
  62:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  63:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  64:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**
  65:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
  69:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** {
  71:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** }
  73:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  74:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  75:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**
  76:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
  79:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
  80:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** {
  82:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  84:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 154              	 .loc 2 109 3
 155              	 .syntax unified
 156              	
 157 0006 EFF30583 	 MRS r3,ipsr
ARM GAS   			page 8


 158              	
 159              	 .thumb
 160              	 .syntax unified
 161 000a 7B60     	 str r3,[r7,#4]
 110:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/LIBRAR~1/CMSIS/Include\cmsis_gcc.h ****   return(result);
 162              	 .loc 2 110 16
 163 000c 7B68     	 ldr r3,[r7,#4]
 164              	.LBE9:
 165              	.LBE8:
 134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return __get_IPSR() != 0;
 166              	 .loc 1 134 23
 167 000e 002B     	 cmp r3,#0
 168 0010 14BF     	 ite ne
 169 0012 0123     	 movne r3,#1
 170 0014 0023     	 moveq r3,#0
 171 0016 DBB2     	 uxtb r3,r3
 135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 172              	 .loc 1 135 1
 173 0018 1846     	 mov r0,r3
 174 001a 0C37     	 adds r7,r7,#12
 175              	 .cfi_def_cfa_offset 4
 176 001c BD46     	 mov sp,r7
 177              	 .cfi_def_cfa_register 13
 178              	 
 179 001e 5DF8047B 	 ldr r7,[sp],#4
 180              	 .cfi_restore 7
 181              	 .cfi_def_cfa_offset 0
 182 0022 7047     	 bx lr
 183              	 .cfi_endproc
 184              	.LFE31:
 185              	 .cantunwind
 186              	 .fnend
 187              	 .size _ZL13inHandlerModev,.-_ZL13inHandlerModev
 188              	 .section .text.osKernelStart,"ax",%progbits
 189              	 .align 1
 190              	 .global osKernelStart
 191              	 .syntax unified
 192              	 .thumb
 193              	 .thumb_func
 194              	 .type osKernelStart,%function
 195              	osKernelStart:
 196              	 .fnstart
 197              	.LFB32:
 136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*********************** Kernel Control Functions *****************************/
 138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Initialize the RTOS Kernel for creating objects.
 140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelInitialize shall be consistent in every CMSIS-RTOS.
 142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** //osStatus osKernelInitialize (void);
 144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Start the RTOS Kernel with executing the specified thread.
 147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function
ARM GAS   			page 9


 150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
 151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osKernelStart (void)
 153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 198              	 .loc 1 153 1
 199              	 .cfi_startproc
 200              	 
 201              	 
 202 0000 80B5     	 push {r7,lr}
 203              	 .save {r7,lr}
 204              	 .cfi_def_cfa_offset 8
 205              	 .cfi_offset 7,-8
 206              	 .cfi_offset 14,-4
 207              	 .setfp r7,sp,#0
 208 0002 00AF     	 add r7,sp,#0
 209              	 .cfi_def_cfa_register 7
 154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskStartScheduler();
 210              	 .loc 1 154 22
 211 0004 FFF7FEFF 	 bl vTaskStartScheduler
 155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 212              	 .loc 1 156 10
 213 0008 0023     	 movs r3,#0
 157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 214              	 .loc 1 157 1
 215 000a 1846     	 mov r0,r3
 216 000c 80BD     	 pop {r7,pc}
 217              	 .cfi_endproc
 218              	.LFE32:
 219              	 .fnend
 220              	 .size osKernelStart,.-osKernelStart
 221              	 .section .text.osKernelRunning,"ax",%progbits
 222              	 .align 1
 223              	 .global osKernelRunning
 224              	 .syntax unified
 225              	 .thumb
 226              	 .thumb_func
 227              	 .type osKernelRunning,%function
 228              	osKernelRunning:
 229              	 .fnstart
 230              	.LFB33:
 158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Check if the RTOS kernel is already started
 161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  None
 162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval (0) RTOS is not started
 163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *         (1) RTOS is started
 164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *         (-1) if this feature is disabled in FreeRTOSConfig.h 
 165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note  MUST REMAIN UNCHANGED: \b osKernelRunning shall be consistent in every CMSIS-RTOS.
 166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** int32_t osKernelRunning(void)
 168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 231              	 .loc 1 168 1
 232              	 .cfi_startproc
 233              	 
 234              	 
 235 0000 80B5     	 push {r7,lr}
ARM GAS   			page 10


 236              	 .save {r7,lr}
 237              	 .cfi_def_cfa_offset 8
 238              	 .cfi_offset 7,-8
 239              	 .cfi_offset 14,-4
 240              	 .setfp r7,sp,#0
 241 0002 00AF     	 add r7,sp,#0
 242              	 .cfi_def_cfa_register 7
 169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xTaskGetSchedulerState() == taskSCHEDULER_NOT_STARTED)
 243              	 .loc 1 170 29
 244 0004 FFF7FEFF 	 bl xTaskGetSchedulerState
 245 0008 0346     	 mov r3,r0
 246              	 .loc 1 170 32
 247 000a 012B     	 cmp r3,#1
 248 000c 0CBF     	 ite eq
 249 000e 0123     	 moveq r3,#1
 250 0010 0023     	 movne r3,#0
 251 0012 DBB2     	 uxtb r3,r3
 252              	 .loc 1 170 3
 253 0014 002B     	 cmp r3,#0
 254 0016 01D0     	 beq .L13
 171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return 0;
 255              	 .loc 1 171 12
 256 0018 0023     	 movs r3,#0
 257 001a 00E0     	 b .L14
 258              	.L13:
 172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
 173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return 1;
 259              	 .loc 1 173 12
 260 001c 0123     	 movs r3,#1
 261              	.L14:
 174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return (-1);
 176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif	
 177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 262              	 .loc 1 177 1
 263 001e 1846     	 mov r0,r3
 264 0020 80BD     	 pop {r7,pc}
 265              	 .cfi_endproc
 266              	.LFE33:
 267              	 .fnend
 268              	 .size osKernelRunning,.-osKernelRunning
 269              	 .section .text.osKernelSysTick,"ax",%progbits
 270              	 .align 1
 271              	 .global osKernelSysTick
 272              	 .syntax unified
 273              	 .thumb
 274              	 .thumb_func
 275              	 .type osKernelSysTick,%function
 276              	osKernelSysTick:
 277              	 .fnstart
 278              	.LFB34:
 178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_SysTick)  &&  (osFeature_SysTick != 0))     // System Timer available
 180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Get the value of the Kernel SysTick timer
 182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  None
ARM GAS   			page 11


 183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval None
 184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelSysTick shall be consistent in every CMSIS-RTOS.
 185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** uint32_t osKernelSysTick(void)
 187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 279              	 .loc 1 187 1
 280              	 .cfi_startproc
 281              	 
 282              	 
 283 0000 80B5     	 push {r7,lr}
 284              	 .save {r7,lr}
 285              	 .cfi_def_cfa_offset 8
 286              	 .cfi_offset 7,-8
 287              	 .cfi_offset 14,-4
 288              	 .setfp r7,sp,#0
 289 0002 00AF     	 add r7,sp,#0
 290              	 .cfi_def_cfa_register 7
 188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 291              	 .loc 1 188 20
 292 0004 FFF7FEFF 	 bl _ZL13inHandlerModev
 293 0008 0346     	 mov r3,r0
 294 000a 002B     	 cmp r3,#0
 295 000c 14BF     	 ite ne
 296 000e 0123     	 movne r3,#1
 297 0010 0023     	 moveq r3,#0
 298 0012 DBB2     	 uxtb r3,r3
 299              	 .loc 1 188 3
 300 0014 002B     	 cmp r3,#0
 301 0016 03D0     	 beq .L16
 189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return xTaskGetTickCountFromISR();
 302              	 .loc 1 189 36
 303 0018 FFF7FEFF 	 bl xTaskGetTickCountFromISR
 304 001c 0346     	 mov r3,r0
 305              	 .loc 1 189 37
 306 001e 03E0     	 b .L17
 307              	.L16:
 190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return xTaskGetTickCount();
 308              	 .loc 1 192 29
 309 0020 FFF7FEFF 	 bl xTaskGetTickCount
 310 0024 0346     	 mov r3,r0
 311              	 .loc 1 192 30
 312 0026 00BF     	 nop
 313              	.L17:
 193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 314              	 .loc 1 194 1
 315 0028 1846     	 mov r0,r3
 316 002a 80BD     	 pop {r7,pc}
 317              	 .cfi_endproc
 318              	.LFE34:
 319              	 .fnend
 320              	 .size osKernelSysTick,.-osKernelSysTick
 321              	 .section .text.osThreadCreate,"ax",%progbits
 322              	 .align 1
 323              	 .global osThreadCreate
ARM GAS   			page 12


 324              	 .syntax unified
 325              	 .thumb
 326              	 .thumb_func
 327              	 .type osThreadCreate,%function
 328              	osThreadCreate:
 329              	 .fnstart
 330              	.LFB35:
 195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif    // System Timer available
 196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*********************** Thread Management *****************************/
 197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Create a thread and add it to Active Threads and set it to state READY.
 199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
 203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
 205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 331              	 .loc 1 205 1
 332              	 .cfi_startproc
 333              	 
 334              	 
 335 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 336              	 .save {r4,r5,r6,r7,lr}
 337              	 .cfi_def_cfa_offset 20
 338              	 .cfi_offset 4,-20
 339              	 .cfi_offset 5,-16
 340              	 .cfi_offset 6,-12
 341              	 .cfi_offset 7,-8
 342              	 .cfi_offset 14,-4
 343              	 .pad #36
 344 0002 89B0     	 sub sp,sp,#36
 345              	 .cfi_def_cfa_offset 56
 346              	 .setfp r7,sp,#16
 347 0004 04AF     	 add r7,sp,#16
 348              	 .cfi_def_cfa 7,40
 349 0006 7860     	 str r0,[r7,#4]
 350 0008 3960     	 str r1,[r7]
 206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TaskHandle_t handle;
 207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 351              	 .loc 1 209 7
 352 000a 7B68     	 ldr r3,[r7,#4]
 353 000c 5C68     	 ldr r4,[r3,#4]
 354 000e 7B68     	 ldr r3,[r7,#4]
 355 0010 1D68     	 ldr r5,[r3]
 356 0012 7B68     	 ldr r3,[r7,#4]
 357 0014 1B69     	 ldr r3,[r3,#16]
 358 0016 9EB2     	 uxth r6,r3
 359 0018 7B68     	 ldr r3,[r7,#4]
 360 001a B3F90830 	 ldrsh r3,[r3,#8]
 361 001e 1846     	 mov r0,r3
 362 0020 FFF7FEFF 	 bl _ZL20makeFreeRtosPriority10osPriority
 363 0024 0246     	 mov r2,r0
 364 0026 0023     	 movs r3,#0
 365 0028 0393     	 str r3,[sp,#12]
ARM GAS   			page 13


 366 002a 0023     	 movs r3,#0
 367 002c 0293     	 str r3,[sp,#8]
 368 002e 07F10C03 	 add r3,r7,#12
 369 0032 0193     	 str r3,[sp,#4]
 370 0034 0092     	 str r2,[sp]
 371 0036 3B68     	 ldr r3,[r7]
 372 0038 3246     	 mov r2,r6
 373 003a 2946     	 mov r1,r5
 374 003c 2046     	 mov r0,r4
 375 003e FFF7FEFF 	 bl xTaskGenericCreate
 376 0042 0346     	 mov r3,r0
 210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****               &handle) != pdPASS)  {
 377              	 .loc 1 211 24
 378 0044 012B     	 cmp r3,#1
 379 0046 14BF     	 ite ne
 380 0048 0123     	 movne r3,#1
 381 004a 0023     	 moveq r3,#0
 382 004c DBB2     	 uxtb r3,r3
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 383              	 .loc 1 209 3
 384 004e 002B     	 cmp r3,#0
 385 0050 01D0     	 beq .L19
 212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return NULL;
 386              	 .loc 1 212 12
 387 0052 0023     	 movs r3,#0
 388 0054 00E0     	 b .L21
 389              	.L19:
 213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return handle;
 390              	 .loc 1 215 10
 391 0056 FB68     	 ldr r3,[r7,#12]
 392              	.L21:
 216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 393              	 .loc 1 216 1 discriminator 1
 394 0058 1846     	 mov r0,r3
 395 005a 1437     	 adds r7,r7,#20
 396              	 .cfi_def_cfa_offset 20
 397 005c BD46     	 mov sp,r7
 398              	 .cfi_def_cfa_register 13
 399              	 
 400 005e F0BD     	 pop {r4,r5,r6,r7,pc}
 401              	 .cfi_endproc
 402              	.LFE35:
 403              	 .fnend
 404              	 .size osThreadCreate,.-osThreadCreate
 405              	 .section .text.osThreadGetId,"ax",%progbits
 406              	 .align 1
 407              	 .global osThreadGetId
 408              	 .syntax unified
 409              	 .thumb
 410              	 .thumb_func
 411              	 .type osThreadGetId,%function
 412              	osThreadGetId:
 413              	 .fnstart
 414              	.LFB36:
ARM GAS   			page 14


 217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Return the thread ID of the current running thread.
 220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetId shall be consistent in every CMSIS-RTOS.
 222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osThreadId osThreadGetId (void)
 224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 415              	 .loc 1 224 1
 416              	 .cfi_startproc
 417              	 
 418              	 
 419 0000 80B5     	 push {r7,lr}
 420              	 .save {r7,lr}
 421              	 .cfi_def_cfa_offset 8
 422              	 .cfi_offset 7,-8
 423              	 .cfi_offset 14,-4
 424              	 .setfp r7,sp,#0
 425 0002 00AF     	 add r7,sp,#0
 426              	 .cfi_def_cfa_register 7
 225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
 226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xTaskGetCurrentTaskHandle();
 427              	 .loc 1 226 35
 428 0004 FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 429 0008 0346     	 mov r3,r0
 227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return NULL;
 229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 430              	 .loc 1 230 1
 431 000a 1846     	 mov r0,r3
 432 000c 80BD     	 pop {r7,pc}
 433              	 .cfi_endproc
 434              	.LFE36:
 435              	 .fnend
 436              	 .size osThreadGetId,.-osThreadGetId
 437              	 .section .text.osThreadTerminate,"ax",%progbits
 438              	 .align 1
 439              	 .global osThreadTerminate
 440              	 .syntax unified
 441              	 .thumb
 442              	 .thumb_func
 443              	 .type osThreadTerminate,%function
 444              	osThreadTerminate:
 445              	 .fnstart
 446              	.LFB37:
 231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Terminate execution of a thread and remove it from Active Threads.
 234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadTerminate shall be consistent in every CMSIS-RTOS.
 237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadTerminate (osThreadId thread_id)
 239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 447              	 .loc 1 239 1
 448              	 .cfi_startproc
ARM GAS   			page 15


 449              	 
 450              	 
 451              	 
 452 0000 80B4     	 push {r7}
 453              	 .cfi_def_cfa_offset 4
 454              	 .cfi_offset 7,-4
 455 0002 83B0     	 sub sp,sp,#12
 456              	 .cfi_def_cfa_offset 16
 457 0004 00AF     	 add r7,sp,#0
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_vTaskDelete == 1)
 241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskDelete(thread_id);
 242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorOS;
 460              	 .loc 1 244 10
 461 0008 FF23     	 movs r3,#255
 245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 462              	 .loc 1 246 1
 463 000a 1846     	 mov r0,r3
 464 000c 0C37     	 adds r7,r7,#12
 465              	 .cfi_def_cfa_offset 4
 466 000e BD46     	 mov sp,r7
 467              	 .cfi_def_cfa_register 13
 468              	 
 469 0010 5DF8047B 	 ldr r7,[sp],#4
 470              	 .cfi_restore 7
 471              	 .cfi_def_cfa_offset 0
 472 0014 7047     	 bx lr
 473              	 .cfi_endproc
 474              	.LFE37:
 475              	 .cantunwind
 476              	 .fnend
 477              	 .size osThreadTerminate,.-osThreadTerminate
 478              	 .section .text.osThreadYield,"ax",%progbits
 479              	 .align 1
 480              	 .global osThreadYield
 481              	 .syntax unified
 482              	 .thumb
 483              	 .thumb_func
 484              	 .type osThreadYield,%function
 485              	osThreadYield:
 486              	 .fnstart
 487              	.LFB38:
 247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Pass control to next thread that is in state \b READY.
 250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadYield shall be consistent in every CMSIS-RTOS.
 252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadYield (void)
 254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 488              	 .loc 1 254 1
 489              	 .cfi_startproc
 490              	 
ARM GAS   			page 16


 491              	 
 492              	 
 493 0000 80B4     	 push {r7}
 494              	 .cfi_def_cfa_offset 4
 495              	 .cfi_offset 7,-4
 496 0002 00AF     	 add r7,sp,#0
 497              	 .cfi_def_cfa_register 7
 255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   taskYIELD();
 498              	 .loc 1 255 3
 499 0004 064B     	 ldr r3,.L28
 500 0006 4FF08052 	 mov r2,#268435456
 501 000a 1A60     	 str r2,[r3]
 502              	 .syntax unified
 503              	
 504 000c BFF34F8F 	 dsb
 505              	
 506              	
 507 0010 BFF36F8F 	 isb
 508              	
 256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 509              	 .loc 1 257 10
 510              	 .thumb
 511              	 .syntax unified
 512 0014 0023     	 movs r3,#0
 258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 513              	 .loc 1 258 1
 514 0016 1846     	 mov r0,r3
 515 0018 BD46     	 mov sp,r7
 516              	 .cfi_def_cfa_register 13
 517              	 
 518 001a 5DF8047B 	 ldr r7,[sp],#4
 519              	 .cfi_restore 7
 520              	 .cfi_def_cfa_offset 0
 521 001e 7047     	 bx lr
 522              	.L29:
 523              	 .align 2
 524              	.L28:
 525 0020 04ED00E0 	 .word -536810236
 526              	 .cfi_endproc
 527              	.LFE38:
 528              	 .cantunwind
 529              	 .fnend
 530              	 .size osThreadYield,.-osThreadYield
 531              	 .section .text.osThreadSetPriority,"ax",%progbits
 532              	 .align 1
 533              	 .global osThreadSetPriority
 534              	 .syntax unified
 535              	 .thumb
 536              	 .thumb_func
 537              	 .type osThreadSetPriority,%function
 538              	osThreadSetPriority:
 539              	 .fnstart
 540              	.LFB39:
 259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief   Change priority of an active thread.
ARM GAS   			page 17


 262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   priority      new priority value for the thread function.
 264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadSetPriority shall be consistent in every CMSIS-RTOS.
 266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadSetPriority (osThreadId thread_id, osPriority priority)
 268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 541              	 .loc 1 268 1
 542              	 .cfi_startproc
 543              	 
 544              	 
 545 0000 80B5     	 push {r7,lr}
 546              	 .save {r7,lr}
 547              	 .cfi_def_cfa_offset 8
 548              	 .cfi_offset 7,-8
 549              	 .cfi_offset 14,-4
 550              	 .pad #8
 551 0002 82B0     	 sub sp,sp,#8
 552              	 .cfi_def_cfa_offset 16
 553              	 .setfp r7,sp,#0
 554 0004 00AF     	 add r7,sp,#0
 555              	 .cfi_def_cfa_register 7
 556 0006 7860     	 str r0,[r7,#4]
 557 0008 0B46     	 mov r3,r1
 558 000a 7B80     	 strh r3,[r7,#2]
 269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_vTaskPrioritySet == 1)
 270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskPrioritySet(thread_id, makeFreeRtosPriority(priority));
 559              	 .loc 1 270 19
 560 000c B7F90230 	 ldrsh r3,[r7,#2]
 561 0010 1846     	 mov r0,r3
 562 0012 FFF7FEFF 	 bl _ZL20makeFreeRtosPriority10osPriority
 563 0016 0346     	 mov r3,r0
 564 0018 1946     	 mov r1,r3
 565 001a 7868     	 ldr r0,[r7,#4]
 566 001c FFF7FEFF 	 bl vTaskPrioritySet
 271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 567              	 .loc 1 271 10
 568 0020 0023     	 movs r3,#0
 272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorOS;
 274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 569              	 .loc 1 275 1
 570 0022 1846     	 mov r0,r3
 571 0024 0837     	 adds r7,r7,#8
 572              	 .cfi_def_cfa_offset 8
 573 0026 BD46     	 mov sp,r7
 574              	 .cfi_def_cfa_register 13
 575              	 
 576 0028 80BD     	 pop {r7,pc}
 577              	 .cfi_endproc
 578              	.LFE39:
 579              	 .fnend
 580              	 .size osThreadSetPriority,.-osThreadSetPriority
 581              	 .section .text.osThreadGetPriority,"ax",%progbits
 582              	 .align 1
 583              	 .global osThreadGetPriority
ARM GAS   			page 18


 584              	 .syntax unified
 585              	 .thumb
 586              	 .thumb_func
 587              	 .type osThreadGetPriority,%function
 588              	osThreadGetPriority:
 589              	 .fnstart
 590              	.LFB40:
 276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief   Get current priority of an active thread.
 279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  current priority value of the thread function.
 281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetPriority shall be consistent in every CMSIS-RTOS.
 282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osPriority osThreadGetPriority (osThreadId thread_id)
 284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 591              	 .loc 1 284 1
 592              	 .cfi_startproc
 593              	 
 594              	 
 595 0000 80B5     	 push {r7,lr}
 596              	 .save {r7,lr}
 597              	 .cfi_def_cfa_offset 8
 598              	 .cfi_offset 7,-8
 599              	 .cfi_offset 14,-4
 600              	 .pad #8
 601 0002 82B0     	 sub sp,sp,#8
 602              	 .cfi_def_cfa_offset 16
 603              	 .setfp r7,sp,#0
 604 0004 00AF     	 add r7,sp,#0
 605              	 .cfi_def_cfa_register 7
 606 0006 7860     	 str r0,[r7,#4]
 285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode())
 607              	 .loc 1 286 20
 608 0008 FFF7FEFF 	 bl _ZL13inHandlerModev
 609 000c 0346     	 mov r3,r0
 610 000e 002B     	 cmp r3,#0
 611 0010 14BF     	 ite ne
 612 0012 0123     	 movne r3,#1
 613 0014 0023     	 moveq r3,#0
 614 0016 DBB2     	 uxtb r3,r3
 615              	 .loc 1 286 3
 616 0018 002B     	 cmp r3,#0
 617 001a 08D0     	 beq .L33
 287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGetFromISR(thread_id));  
 618              	 .loc 1 288 29
 619 001c 7868     	 ldr r0,[r7,#4]
 620 001e FFF7FEFF 	 bl uxTaskPriorityGetFromISR
 621 0022 0346     	 mov r3,r0
 622 0024 1846     	 mov r0,r3
 623 0026 FFF7FEFF 	 bl _ZL17makeCmsisPrioritym
 624 002a 0346     	 mov r3,r0
 625              	 .loc 1 288 65
 626 002c 08E0     	 b .L34
 627              	.L33:
ARM GAS   			page 19


 289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
 291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {  
 292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGet(thread_id));
 628              	 .loc 1 292 29
 629 002e 7868     	 ldr r0,[r7,#4]
 630 0030 FFF7FEFF 	 bl uxTaskPriorityGet
 631 0034 0346     	 mov r3,r0
 632 0036 1846     	 mov r0,r3
 633 0038 FFF7FEFF 	 bl _ZL17makeCmsisPrioritym
 634 003c 0346     	 mov r3,r0
 635              	 .loc 1 292 58
 636 003e 00BF     	 nop
 637              	.L34:
 293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osPriorityError;
 296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 638              	 .loc 1 297 1
 639 0040 1846     	 mov r0,r3
 640 0042 0837     	 adds r7,r7,#8
 641              	 .cfi_def_cfa_offset 8
 642 0044 BD46     	 mov sp,r7
 643              	 .cfi_def_cfa_register 13
 644              	 
 645 0046 80BD     	 pop {r7,pc}
 646              	 .cfi_endproc
 647              	.LFE40:
 648              	 .fnend
 649              	 .size osThreadGetPriority,.-osThreadGetPriority
 650              	 .section .text.osDelay,"ax",%progbits
 651              	 .align 1
 652              	 .global osDelay
 653              	 .syntax unified
 654              	 .thumb
 655              	 .thumb_func
 656              	 .type osDelay,%function
 657              	osDelay:
 658              	 .fnstart
 659              	.LFB41:
 298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*********************** Generic Wait Functions *******************************/
 300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief   Wait for Timeout (Time Delay)
 302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   millisec      time delay value
 303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osDelay (uint32_t millisec)
 306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 660              	 .loc 1 306 1
 661              	 .cfi_startproc
 662              	 
 663              	 
 664 0000 80B5     	 push {r7,lr}
 665              	 .save {r7,lr}
 666              	 .cfi_def_cfa_offset 8
ARM GAS   			page 20


 667              	 .cfi_offset 7,-8
 668              	 .cfi_offset 14,-4
 669              	 .pad #16
 670 0002 84B0     	 sub sp,sp,#16
 671              	 .cfi_def_cfa_offset 24
 672              	 .setfp r7,sp,#0
 673 0004 00AF     	 add r7,sp,#0
 674              	 .cfi_def_cfa_register 7
 675 0006 7860     	 str r0,[r7,#4]
 307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if INCLUDE_vTaskDelay
 308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 676              	 .loc 1 308 14
 677 0008 7B68     	 ldr r3,[r7,#4]
 678 000a FB60     	 str r3,[r7,#12]
 309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskDelay(ticks ? ticks : 1);          /* Minimum delay = 1 tick */
 679              	 .loc 1 310 13
 680 000c FB68     	 ldr r3,[r7,#12]
 681 000e 002B     	 cmp r3,#0
 682 0010 01D0     	 beq .L36
 683              	 .loc 1 310 13 is_stmt 0 discriminator 1
 684 0012 FB68     	 ldr r3,[r7,#12]
 685 0014 00E0     	 b .L37
 686              	.L36:
 687              	 .loc 1 310 13 discriminator 2
 688 0016 0123     	 movs r3,#1
 689              	.L37:
 690              	 .loc 1 310 13 discriminator 4
 691 0018 1846     	 mov r0,r3
 692 001a FFF7FEFF 	 bl vTaskDelay
 311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 693              	 .loc 1 312 10 is_stmt 1 discriminator 4
 694 001e 0023     	 movs r3,#0
 313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) millisec;
 315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorResource;
 317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 695              	 .loc 1 318 1 discriminator 4
 696 0020 1846     	 mov r0,r3
 697 0022 1037     	 adds r7,r7,#16
 698              	 .cfi_def_cfa_offset 8
 699 0024 BD46     	 mov sp,r7
 700              	 .cfi_def_cfa_register 13
 701              	 
 702 0026 80BD     	 pop {r7,pc}
 703              	 .cfi_endproc
 704              	.LFE41:
 705              	 .fnend
 706              	 .size osDelay,.-osDelay
 707              	 .section .text.osTimerCreate,"ax",%progbits
 708              	 .align 1
 709              	 .global osTimerCreate
 710              	 .syntax unified
 711              	 .thumb
ARM GAS   			page 21


 712              	 .thumb_func
 713              	 .type osTimerCreate,%function
 714              	osTimerCreate:
 715              	 .fnstart
 716              	.LFB42:
 319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_Wait)  &&  (osFeature_Wait != 0)) /* Generic Wait available */
 321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Wait for Signal, Message, Mail, or Timeout
 323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   millisec  timeout value or 0 in case of no time-out
 324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  event that contains signal, message, or mail information or error code.
 325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osWait shall be consistent in every CMSIS-RTOS.
 326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osEvent osWait (uint32_t millisec);
 328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif  /* Generic Wait available */
 330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /***********************  Timer Management Functions ***************************/
 332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Create a timer.
 334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  timer_def     timer object referenced with \ref osTimer.
 335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  type          osTimerOnce for one-shot or osTimerPeriodic for periodic behavior.
 336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  argument      argument to the timer call back function.
 337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  timer ID for reference by other functions or NULL in case of error.
 338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerCreate shall be consistent in every CMSIS-RTOS.
 339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument)
 341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 717              	 .loc 1 341 1
 718              	 .cfi_startproc
 719              	 
 720              	 
 721              	 
 722 0000 80B4     	 push {r7}
 723              	 .cfi_def_cfa_offset 4
 724              	 .cfi_offset 7,-4
 725 0002 85B0     	 sub sp,sp,#20
 726              	 .cfi_def_cfa_offset 24
 727 0004 00AF     	 add r7,sp,#0
 728              	 .cfi_def_cfa_register 7
 729 0006 F860     	 str r0,[r7,#12]
 730 0008 0B46     	 mov r3,r1
 731 000a 7A60     	 str r2,[r7,#4]
 732 000c FB72     	 strb r3,[r7,#11]
 342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_TIMERS == 1)
 343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xTimerCreate((const char *)"",
 344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****                       (void *) argument,
 347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer);
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else 
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return NULL;
 733              	 .loc 1 349 9
 734 000e 0023     	 movs r3,#0
 350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 735              	 .loc 1 351 1
ARM GAS   			page 22


 736 0010 1846     	 mov r0,r3
 737 0012 1437     	 adds r7,r7,#20
 738              	 .cfi_def_cfa_offset 4
 739 0014 BD46     	 mov sp,r7
 740              	 .cfi_def_cfa_register 13
 741              	 
 742 0016 5DF8047B 	 ldr r7,[sp],#4
 743              	 .cfi_restore 7
 744              	 .cfi_def_cfa_offset 0
 745 001a 7047     	 bx lr
 746              	 .cfi_endproc
 747              	.LFE42:
 748              	 .cantunwind
 749              	 .fnend
 750              	 .size osTimerCreate,.-osTimerCreate
 751              	 .section .text.osTimerStart,"ax",%progbits
 752              	 .align 1
 753              	 .global osTimerStart
 754              	 .syntax unified
 755              	 .thumb
 756              	 .thumb_func
 757              	 .type osTimerStart,%function
 758              	osTimerStart:
 759              	 .fnstart
 760              	.LFB43:
 352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Start or restart a timer.
 355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate.
 356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec      time delay value of the timer.
 357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function
 358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStart shall be consistent in every CMSIS-RTOS.
 359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osTimerStart (osTimerId timer_id, uint32_t millisec)
 361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 761              	 .loc 1 361 1
 762              	 .cfi_startproc
 763              	 
 764              	 
 765              	 
 766 0000 80B4     	 push {r7}
 767              	 .cfi_def_cfa_offset 4
 768              	 .cfi_offset 7,-4
 769 0002 85B0     	 sub sp,sp,#20
 770              	 .cfi_def_cfa_offset 24
 771 0004 00AF     	 add r7,sp,#0
 772              	 .cfi_def_cfa_register 7
 773 0006 7860     	 str r0,[r7,#4]
 774 0008 3960     	 str r1,[r7]
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osStatus result = osOK;
 775              	 .loc 1 362 12
 776 000a 0023     	 movs r3,#0
 777 000c FB60     	 str r3,[r7,#12]
 363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
ARM GAS   			page 23


 367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (ticks == 0)
 368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = 1;
 369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     
 370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) 
 371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xTimerChangePeriodFromISR(timer_id, ticks, &taskWoken) != pdPASS)
 373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       result = osErrorOS;
 375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else
 377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       portEND_SWITCHING_ISR(taskWoken);     
 379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else 
 382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xTimerChangePeriod(timer_id, ticks, 0) != pdPASS)
 384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       result = osErrorOS;
 385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else 
 388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   result = osErrorOS;
 778              	 .loc 1 388 10
 779 000e FF23     	 movs r3,#255
 780 0010 FB60     	 str r3,[r7,#12]
 389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 781              	 .loc 1 390 10
 782 0012 FB68     	 ldr r3,[r7,#12]
 391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 783              	 .loc 1 391 1
 784 0014 1846     	 mov r0,r3
 785 0016 1437     	 adds r7,r7,#20
 786              	 .cfi_def_cfa_offset 4
 787 0018 BD46     	 mov sp,r7
 788              	 .cfi_def_cfa_register 13
 789              	 
 790 001a 5DF8047B 	 ldr r7,[sp],#4
 791              	 .cfi_restore 7
 792              	 .cfi_def_cfa_offset 0
 793 001e 7047     	 bx lr
 794              	 .cfi_endproc
 795              	.LFE43:
 796              	 .cantunwind
 797              	 .fnend
 798              	 .size osTimerStart,.-osTimerStart
 799              	 .section .text.osTimerStop,"ax",%progbits
 800              	 .align 1
 801              	 .global osTimerStop
 802              	 .syntax unified
 803              	 .thumb
 804              	 .thumb_func
 805              	 .type osTimerStop,%function
 806              	osTimerStop:
 807              	 .fnstart
 808              	.LFB44:
 392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
ARM GAS   			page 24


 393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Stop a timer.
 395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStop shall be consistent in every CMSIS-RTOS.
 398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osTimerStop (osTimerId timer_id)
 400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 809              	 .loc 1 400 1
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814 0000 80B4     	 push {r7}
 815              	 .cfi_def_cfa_offset 4
 816              	 .cfi_offset 7,-4
 817 0002 85B0     	 sub sp,sp,#20
 818              	 .cfi_def_cfa_offset 24
 819 0004 00AF     	 add r7,sp,#0
 820              	 .cfi_def_cfa_register 7
 821 0006 7860     	 str r0,[r7,#4]
 401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osStatus result = osOK;
 822              	 .loc 1 401 12
 823 0008 0023     	 movs r3,#0
 824 000a FB60     	 str r3,[r7,#12]
 402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xTimerStopFromISR(timer_id, &taskWoken) != pdPASS) {
 407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xTimerStop(timer_id, 0) != pdPASS) {
 413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       result = osErrorOS;
 414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else 
 417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   result = osErrorOS;
 825              	 .loc 1 417 10
 826 000c FF23     	 movs r3,#255
 827 000e FB60     	 str r3,[r7,#12]
 418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif 
 419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 828              	 .loc 1 419 10
 829 0010 FB68     	 ldr r3,[r7,#12]
 420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 830              	 .loc 1 420 1
 831 0012 1846     	 mov r0,r3
 832 0014 1437     	 adds r7,r7,#20
 833              	 .cfi_def_cfa_offset 4
 834 0016 BD46     	 mov sp,r7
 835              	 .cfi_def_cfa_register 13
 836              	 
 837 0018 5DF8047B 	 ldr r7,[sp],#4
ARM GAS   			page 25


 838              	 .cfi_restore 7
 839              	 .cfi_def_cfa_offset 0
 840 001c 7047     	 bx lr
 841              	 .cfi_endproc
 842              	.LFE44:
 843              	 .cantunwind
 844              	 .fnend
 845              	 .size osTimerStop,.-osTimerStop
 846              	 .section .text.osTimerDelete,"ax",%progbits
 847              	 .align 1
 848              	 .global osTimerDelete
 849              	 .syntax unified
 850              	 .thumb
 851              	 .thumb_func
 852              	 .type osTimerDelete,%function
 853              	osTimerDelete:
 854              	 .fnstart
 855              	.LFB45:
 421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Delete a timer.
 424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerDelete shall be consistent in every CMSIS-RTOS.
 427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osTimerDelete (osTimerId timer_id)
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 856              	 .loc 1 429 1
 857              	 .cfi_startproc
 858              	 
 859              	 
 860              	 
 861 0000 80B4     	 push {r7}
 862              	 .cfi_def_cfa_offset 4
 863              	 .cfi_offset 7,-4
 864 0002 85B0     	 sub sp,sp,#20
 865              	 .cfi_def_cfa_offset 24
 866 0004 00AF     	 add r7,sp,#0
 867              	 .cfi_def_cfa_register 7
 868 0006 7860     	 str r0,[r7,#4]
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus result = osOK;
 869              	 .loc 1 430 10
 870 0008 0023     	 movs r3,#0
 871 000a FB60     	 str r3,[r7,#12]
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_TIMERS == 1)
 433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****    if (inHandlerMode()) {
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****      return osErrorISR;
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else { 
 438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if ((xTimerDelete(timer_id, osWaitForever )) != pdPASS) {
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       result = osErrorOS;
 440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   } 
 442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     
 443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else 
ARM GAS   			page 26


 444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   result = osErrorOS;
 872              	 .loc 1 444 10
 873 000c FF23     	 movs r3,#255
 874 000e FB60     	 str r3,[r7,#12]
 445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif 
 446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  
 447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 875              	 .loc 1 447 10
 876 0010 FB68     	 ldr r3,[r7,#12]
 448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 877              	 .loc 1 448 1
 878 0012 1846     	 mov r0,r3
 879 0014 1437     	 adds r7,r7,#20
 880              	 .cfi_def_cfa_offset 4
 881 0016 BD46     	 mov sp,r7
 882              	 .cfi_def_cfa_register 13
 883              	 
 884 0018 5DF8047B 	 ldr r7,[sp],#4
 885              	 .cfi_restore 7
 886              	 .cfi_def_cfa_offset 0
 887 001c 7047     	 bx lr
 888              	 .cfi_endproc
 889              	.LFE45:
 890              	 .cantunwind
 891              	 .fnend
 892              	 .size osTimerDelete,.-osTimerDelete
 893              	 .section .text.osSignalSet,"ax",%progbits
 894              	 .align 1
 895              	 .global osSignalSet
 896              	 .syntax unified
 897              	 .thumb
 898              	 .thumb_func
 899              	 .type osSignalSet,%function
 900              	osSignalSet:
 901              	 .fnstart
 902              	.LFB46:
 449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /***************************  Signal Management ********************************/
 451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Set the specified Signal Flags of an active thread.
 453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  signals       specifies the signal flags of the thread that should be set.
 455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  osOK if successful, osErrorOS if failed .
 456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalSet shall be consistent in every CMSIS-RTOS.
 457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** int32_t osSignalSet (osThreadId thread_id, int32_t signal)
 459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 903              	 .loc 1 459 1
 904              	 .cfi_startproc
 905              	 
 906              	 
 907 0000 80B5     	 push {r7,lr}
 908              	 .save {r7,lr}
 909              	 .cfi_def_cfa_offset 8
 910              	 .cfi_offset 7,-8
 911              	 .cfi_offset 14,-4
 912              	 .pad #24
ARM GAS   			page 27


 913 0002 86B0     	 sub sp,sp,#24
 914              	 .cfi_def_cfa_offset 32
 915              	 .setfp r7,sp,#8
 916 0004 02AF     	 add r7,sp,#8
 917              	 .cfi_def_cfa 7,24
 918 0006 7860     	 str r0,[r7,#4]
 919 0008 3960     	 str r1,[r7]
 460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )	
 461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 920              	 .loc 1 461 14
 921 000a 0023     	 movs r3,#0
 922 000c FB60     	 str r3,[r7,#12]
 462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode())
 923              	 .loc 1 463 20
 924 000e FFF7FEFF 	 bl _ZL13inHandlerModev
 925 0012 0346     	 mov r3,r0
 926 0014 002B     	 cmp r3,#0
 927 0016 14BF     	 ite ne
 928 0018 0123     	 movne r3,#1
 929 001a 0023     	 moveq r3,#0
 930 001c DBB2     	 uxtb r3,r3
 931              	 .loc 1 463 3
 932 001e 002B     	 cmp r3,#0
 933 0020 1ED0     	 beq .L48
 464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if(xTaskNotifyFromISR( thread_id, (uint32_t)signal, eSetBits, &xHigherPriorityTaskWoken ) != pd
 934              	 .loc 1 465 8
 935 0022 3968     	 ldr r1,[r7]
 936 0024 07F10C03 	 add r3,r7,#12
 937 0028 0093     	 str r3,[sp]
 938 002a 0023     	 movs r3,#0
 939 002c 0122     	 movs r2,#1
 940 002e 7868     	 ldr r0,[r7,#4]
 941 0030 FFF7FEFF 	 bl xTaskGenericNotifyFromISR
 942 0034 0346     	 mov r3,r0
 943              	 .loc 1 465 95
 944 0036 012B     	 cmp r3,#1
 945 0038 14BF     	 ite ne
 946 003a 0123     	 movne r3,#1
 947 003c 0023     	 moveq r3,#0
 948 003e DBB2     	 uxtb r3,r3
 949              	 .loc 1 465 5
 950 0040 002B     	 cmp r3,#0
 951 0042 01D0     	 beq .L49
 466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 952              	 .loc 1 466 14
 953 0044 FF23     	 movs r3,#255
 954 0046 1CE0     	 b .L52
 955              	.L49:
 467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 956              	 .loc 1 468 5
 957 0048 FB68     	 ldr r3,[r7,#12]
 958 004a 002B     	 cmp r3,#0
 959 004c 18D0     	 beq .L51
 960              	 .loc 1 468 5 is_stmt 0 discriminator 1
ARM GAS   			page 28


 961 004e 0F4B     	 ldr r3,.L53
 962 0050 4FF08052 	 mov r2,#268435456
 963 0054 1A60     	 str r2,[r3]
 964              	 .syntax unified
 965              	
 966 0056 BFF34F8F 	 dsb
 967              	
 968              	
 969 005a BFF36F8F 	 isb
 970              	
 971              	 .thumb
 972              	 .syntax unified
 973 005e 0FE0     	 b .L51
 974              	.L48:
 469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }  
 470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if(xTaskNotify( thread_id, (uint32_t)signal, eSetBits) != pdPASS )
 975              	 .loc 1 470 11 is_stmt 1
 976 0060 3968     	 ldr r1,[r7]
 977 0062 0023     	 movs r3,#0
 978 0064 0122     	 movs r2,#1
 979 0066 7868     	 ldr r0,[r7,#4]
 980 0068 FFF7FEFF 	 bl xTaskGenericNotify
 981 006c 0346     	 mov r3,r0
 982              	 .loc 1 470 63
 983 006e 012B     	 cmp r3,#1
 984 0070 14BF     	 ite ne
 985 0072 0123     	 movne r3,#1
 986 0074 0023     	 moveq r3,#0
 987 0076 DBB2     	 uxtb r3,r3
 988              	 .loc 1 470 8
 989 0078 002B     	 cmp r3,#0
 990 007a 01D0     	 beq .L51
 471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
 991              	 .loc 1 472 12
 992 007c FF23     	 movs r3,#255
 993 007e 00E0     	 b .L52
 994              	.L51:
 473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 995              	 .loc 1 475 10
 996 0080 0023     	 movs r3,#0
 997              	.L52:
 476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) thread_id;
 478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) signal;
 479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorOS; /* Task Notification not supported */ 	
 481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 998              	 .loc 1 482 1 discriminator 1
 999 0082 1846     	 mov r0,r3
 1000 0084 1037     	 adds r7,r7,#16
 1001              	 .cfi_def_cfa_offset 8
 1002 0086 BD46     	 mov sp,r7
 1003              	 .cfi_def_cfa_register 13
ARM GAS   			page 29


 1004              	 
 1005 0088 80BD     	 pop {r7,pc}
 1006              	.L54:
 1007 008a 00BF     	 .align 2
 1008              	.L53:
 1009 008c 04ED00E0 	 .word -536810236
 1010              	 .cfi_endproc
 1011              	.LFE46:
 1012              	 .fnend
 1013              	 .size osSignalSet,.-osSignalSet
 1014              	 .section .text.osSignalWait,"ax",%progbits
 1015              	 .align 1
 1016              	 .global osSignalWait
 1017              	 .syntax unified
 1018              	 .thumb
 1019              	 .thumb_func
 1020              	 .type osSignalWait,%function
 1021              	osSignalWait:
 1022              	 .fnstart
 1023              	.LFB47:
 483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Clear the specified Signal Flags of an active thread.
 486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  thread_id  thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  signals    specifies the signal flags of the thread that shall be cleared.
 488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  previous signal flags of the specified thread or 0x80000000 in case of incorrect paramet
 489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalClear shall be consistent in every CMSIS-RTOS.
 490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** //int32_t osSignalClear (osThreadId thread_id, int32_t signal);
 492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Wait for one or more Signal Flags to become signaled for the current \b RUNNING thread.
 495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  signals   wait until all specified signal flags set or 0 for any single signal flag.
 496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
 497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  event flag information or error code.
 498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalWait shall be consistent in every CMSIS-RTOS.
 499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osEvent osSignalWait (int32_t signals, uint32_t millisec)
 501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1024              	 .loc 1 501 1
 1025              	 .cfi_startproc
 1026              	 
 1027              	 
 1028 0000 80B5     	 push {r7,lr}
 1029              	 .save {r7,lr}
 1030              	 .cfi_def_cfa_offset 8
 1031              	 .cfi_offset 7,-8
 1032              	 .cfi_offset 14,-4
 1033              	 .pad #24
 1034 0002 86B0     	 sub sp,sp,#24
 1035              	 .cfi_def_cfa_offset 32
 1036              	 .setfp r7,sp,#0
 1037 0004 00AF     	 add r7,sp,#0
 1038              	 .cfi_def_cfa_register 7
 1039 0006 F860     	 str r0,[r7,#12]
 1040 0008 B960     	 str r1,[r7,#8]
 1041 000a 7A60     	 str r2,[r7,#4]
ARM GAS   			page 30


 502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osEvent ret;
 503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
 507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ret.value.signals = 0;  
 1042              	 .loc 1 508 21
 1043 000c FB68     	 ldr r3,[r7,#12]
 1044 000e 0022     	 movs r2,#0
 1045 0010 5A60     	 str r2,[r3,#4]
 509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 1046              	 .loc 1 509 9
 1047 0012 0023     	 movs r3,#0
 1048 0014 7B61     	 str r3,[r7,#20]
 510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 1049              	 .loc 1 510 3
 1050 0016 7B68     	 ldr r3,[r7,#4]
 1051 0018 B3F1FF3F 	 cmp r3,#-1
 1052 001c 03D1     	 bne .L56
 511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 1053              	 .loc 1 511 11
 1054 001e 4FF0FF33 	 mov r3,#-1
 1055 0022 7B61     	 str r3,[r7,#20]
 1056 0024 09E0     	 b .L57
 1057              	.L56:
 512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 1058              	 .loc 1 513 8
 1059 0026 7B68     	 ldr r3,[r7,#4]
 1060 0028 002B     	 cmp r3,#0
 1061 002a 06D0     	 beq .L57
 514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 1062              	 .loc 1 514 11
 1063 002c 7B68     	 ldr r3,[r7,#4]
 1064 002e 7B61     	 str r3,[r7,#20]
 515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 1065              	 .loc 1 515 5
 1066 0030 7B69     	 ldr r3,[r7,#20]
 1067 0032 002B     	 cmp r3,#0
 1068 0034 01D1     	 bne .L57
 516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 1069              	 .loc 1 516 13
 1070 0036 0123     	 movs r3,#1
 1071 0038 7B61     	 str r3,[r7,#20]
 1072              	.L57:
 517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }  
 519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode())
 1073              	 .loc 1 520 20
 1074 003a FFF7FEFF 	 bl _ZL13inHandlerModev
 1075 003e 0346     	 mov r3,r0
 1076 0040 002B     	 cmp r3,#0
 1077 0042 14BF     	 ite ne
 1078 0044 0123     	 movne r3,#1
 1079 0046 0023     	 moveq r3,#0
ARM GAS   			page 31


 1080 0048 DBB2     	 uxtb r3,r3
 1081              	 .loc 1 520 3
 1082 004a 002B     	 cmp r3,#0
 1083 004c 03D0     	 beq .L58
 521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ret.status = osErrorISR;  /*Not allowed in ISR*/
 1084              	 .loc 1 522 16
 1085 004e FB68     	 ldr r3,[r7,#12]
 1086 0050 8222     	 movs r2,#130
 1087 0052 1A60     	 str r2,[r3]
 523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
 525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if(xTaskNotifyWait( 0,(uint32_t) signals, (uint32_t *)&ret.value.signals, ticks) != pdTRUE)
 527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       if(ticks == 0)  ret.status = osOK;
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       else  ret.status = osEventTimeout;
 530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else if(ret.value.signals < 0)
 532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ret.status =  osErrorValue;     
 534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else  ret.status =  osEventSignal;
 536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) signals;
 539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) millisec;
 540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	
 541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ret.status =  osErrorOS;	/* Task Notification not supported */
 542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return ret;
 1088              	 .loc 1 544 10
 1089 0054 24E0     	 b .L64
 1090              	.L58:
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 1091              	 .loc 1 526 23
 1092 0056 B968     	 ldr r1,[r7,#8]
 1093 0058 FB68     	 ldr r3,[r7,#12]
 1094 005a 1A1D     	 adds r2,r3,#4
 1095 005c 7B69     	 ldr r3,[r7,#20]
 1096 005e 0020     	 movs r0,#0
 1097 0060 FFF7FEFF 	 bl xTaskNotifyWait
 1098 0064 0346     	 mov r3,r0
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 1099              	 .loc 1 526 86
 1100 0066 012B     	 cmp r3,#1
 1101 0068 14BF     	 ite ne
 1102 006a 0123     	 movne r3,#1
 1103 006c 0023     	 moveq r3,#0
 1104 006e DBB2     	 uxtb r3,r3
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 1105              	 .loc 1 526 5
 1106 0070 002B     	 cmp r3,#0
 1107 0072 0AD0     	 beq .L60
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       else  ret.status = osEventTimeout;
 1108              	 .loc 1 528 7
ARM GAS   			page 32


 1109 0074 7B69     	 ldr r3,[r7,#20]
 1110 0076 002B     	 cmp r3,#0
 1111 0078 03D1     	 bne .L61
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       else  ret.status = osEventTimeout;
 1112              	 .loc 1 528 34 discriminator 1
 1113 007a FB68     	 ldr r3,[r7,#12]
 1114 007c 0022     	 movs r2,#0
 1115 007e 1A60     	 str r2,[r3]
 1116              	 .loc 1 544 10 discriminator 1
 1117 0080 0EE0     	 b .L64
 1118              	.L61:
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 1119              	 .loc 1 529 24
 1120 0082 FB68     	 ldr r3,[r7,#12]
 1121 0084 4022     	 movs r2,#64
 1122 0086 1A60     	 str r2,[r3]
 1123              	 .loc 1 544 10
 1124 0088 0AE0     	 b .L64
 1125              	.L60:
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 1126              	 .loc 1 531 23
 1127 008a FB68     	 ldr r3,[r7,#12]
 1128 008c 5B68     	 ldr r3,[r3,#4]
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
 1129              	 .loc 1 531 10
 1130 008e 002B     	 cmp r3,#0
 1131 0090 03DA     	 bge .L62
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 1132              	 .loc 1 533 18
 1133 0092 FB68     	 ldr r3,[r7,#12]
 1134 0094 8622     	 movs r2,#134
 1135 0096 1A60     	 str r2,[r3]
 1136              	 .loc 1 544 10
 1137 0098 02E0     	 b .L64
 1138              	.L62:
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 1139              	 .loc 1 535 22
 1140 009a FB68     	 ldr r3,[r7,#12]
 1141 009c 0822     	 movs r2,#8
 1142 009e 1A60     	 str r2,[r3]
 1143              	.L64:
 1144              	 .loc 1 544 10
 1145 00a0 00BF     	 nop
 545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1146              	 .loc 1 545 1
 1147 00a2 F868     	 ldr r0,[r7,#12]
 1148 00a4 1837     	 adds r7,r7,#24
 1149              	 .cfi_def_cfa_offset 8
 1150 00a6 BD46     	 mov sp,r7
 1151              	 .cfi_def_cfa_register 13
 1152              	 
 1153 00a8 80BD     	 pop {r7,pc}
 1154              	 .cfi_endproc
 1155              	.LFE47:
 1156              	 .fnend
 1157              	 .size osSignalWait,.-osSignalWait
 1158              	 .section .text.osMutexCreate,"ax",%progbits
ARM GAS   			page 33


 1159              	 .align 1
 1160              	 .global osMutexCreate
 1161              	 .syntax unified
 1162              	 .thumb
 1163              	 .thumb_func
 1164              	 .type osMutexCreate,%function
 1165              	osMutexCreate:
 1166              	 .fnstart
 1167              	.LFB48:
 546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /****************************  Mutex Management ********************************/
 548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Create and Initialize a Mutex object
 550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
 551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error.
 552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexCreate shall be consistent in every CMSIS-RTOS.
 553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osMutexId osMutexCreate (const osMutexDef_t *mutex_def)
 555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1168              	 .loc 1 555 1
 1169              	 .cfi_startproc
 1170              	 
 1171              	 
 1172 0000 80B5     	 push {r7,lr}
 1173              	 .save {r7,lr}
 1174              	 .cfi_def_cfa_offset 8
 1175              	 .cfi_offset 7,-8
 1176              	 .cfi_offset 14,-4
 1177              	 .pad #8
 1178 0002 82B0     	 sub sp,sp,#8
 1179              	 .cfi_def_cfa_offset 16
 1180              	 .setfp r7,sp,#0
 1181 0004 00AF     	 add r7,sp,#0
 1182              	 .cfi_def_cfa_register 7
 1183 0006 7860     	 str r0,[r7,#4]
 556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if ( configUSE_MUTEXES == 1)
 557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xSemaphoreCreateMutex(); 
 1184              	 .loc 1 557 10
 1185 0008 0120     	 movs r0,#1
 1186 000a FFF7FEFF 	 bl xQueueCreateMutex
 1187 000e 0346     	 mov r3,r0
 558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return NULL;
 560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1188              	 .loc 1 561 1
 1189 0010 1846     	 mov r0,r3
 1190 0012 0837     	 adds r7,r7,#8
 1191              	 .cfi_def_cfa_offset 8
 1192 0014 BD46     	 mov sp,r7
 1193              	 .cfi_def_cfa_register 13
 1194              	 
 1195 0016 80BD     	 pop {r7,pc}
 1196              	 .cfi_endproc
 1197              	.LFE48:
 1198              	 .fnend
 1199              	 .size osMutexCreate,.-osMutexCreate
ARM GAS   			page 34


 1200              	 .section .text.osMutexWait,"ax",%progbits
 1201              	 .align 1
 1202              	 .global osMutexWait
 1203              	 .syntax unified
 1204              	 .thumb
 1205              	 .thumb_func
 1206              	 .type osMutexWait,%function
 1207              	osMutexWait:
 1208              	 .fnstart
 1209              	.LFB49:
 562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Wait until a Mutex becomes available
 565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
 567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexWait shall be consistent in every CMSIS-RTOS.
 569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMutexWait (osMutexId mutex_id, uint32_t millisec)
 571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1210              	 .loc 1 571 1
 1211              	 .cfi_startproc
 1212              	 
 1213              	 
 1214 0000 80B5     	 push {r7,lr}
 1215              	 .save {r7,lr}
 1216              	 .cfi_def_cfa_offset 8
 1217              	 .cfi_offset 7,-8
 1218              	 .cfi_offset 14,-4
 1219              	 .pad #16
 1220 0002 84B0     	 sub sp,sp,#16
 1221              	 .cfi_def_cfa_offset 24
 1222              	 .setfp r7,sp,#0
 1223 0004 00AF     	 add r7,sp,#0
 1224              	 .cfi_def_cfa_register 7
 1225 0006 7860     	 str r0,[r7,#4]
 1226 0008 3960     	 str r1,[r7]
 572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
 573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 1227              	 .loc 1 573 17
 1228 000a 0023     	 movs r3,#0
 1229 000c BB60     	 str r3,[r7,#8]
 574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (mutex_id == NULL) {
 1230              	 .loc 1 576 3
 1231 000e 7B68     	 ldr r3,[r7,#4]
 1232 0010 002B     	 cmp r3,#0
 1233 0012 01D1     	 bne .L68
 577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 1234              	 .loc 1 577 12
 1235 0014 8023     	 movs r3,#128
 1236 0016 4BE0     	 b .L75
 1237              	.L68:
 578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
ARM GAS   			page 35


 1238              	 .loc 1 580 9
 1239 0018 0023     	 movs r3,#0
 1240 001a FB60     	 str r3,[r7,#12]
 581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 1241              	 .loc 1 581 3
 1242 001c 3B68     	 ldr r3,[r7]
 1243 001e B3F1FF3F 	 cmp r3,#-1
 1244 0022 03D1     	 bne .L70
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 1245              	 .loc 1 582 11
 1246 0024 4FF0FF33 	 mov r3,#-1
 1247 0028 FB60     	 str r3,[r7,#12]
 1248 002a 09E0     	 b .L71
 1249              	.L70:
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 1250              	 .loc 1 584 8
 1251 002c 3B68     	 ldr r3,[r7]
 1252 002e 002B     	 cmp r3,#0
 1253 0030 06D0     	 beq .L71
 585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 1254              	 .loc 1 585 11
 1255 0032 3B68     	 ldr r3,[r7]
 1256 0034 FB60     	 str r3,[r7,#12]
 586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 1257              	 .loc 1 586 5
 1258 0036 FB68     	 ldr r3,[r7,#12]
 1259 0038 002B     	 cmp r3,#0
 1260 003a 01D1     	 bne .L71
 587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 1261              	 .loc 1 587 13
 1262 003c 0123     	 movs r3,#1
 1263 003e FB60     	 str r3,[r7,#12]
 1264              	.L71:
 588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1265              	 .loc 1 591 20
 1266 0040 FFF7FEFF 	 bl _ZL13inHandlerModev
 1267 0044 0346     	 mov r3,r0
 1268 0046 002B     	 cmp r3,#0
 1269 0048 14BF     	 ite ne
 1270 004a 0123     	 movne r3,#1
 1271 004c 0023     	 moveq r3,#0
 1272 004e DBB2     	 uxtb r3,r3
 1273              	 .loc 1 591 3
 1274 0050 002B     	 cmp r3,#0
 1275 0052 1CD0     	 beq .L72
 592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xSemaphoreTakeFromISR(mutex_id, &taskWoken) != pdTRUE) {
 1276              	 .loc 1 592 9
 1277 0054 07F10803 	 add r3,r7,#8
 1278 0058 1A46     	 mov r2,r3
 1279 005a 0021     	 movs r1,#0
 1280 005c 7868     	 ldr r0,[r7,#4]
 1281 005e FFF7FEFF 	 bl xQueueReceiveFromISR
 1282 0062 0346     	 mov r3,r0
ARM GAS   			page 36


 1283              	 .loc 1 592 53
 1284 0064 012B     	 cmp r3,#1
 1285 0066 14BF     	 ite ne
 1286 0068 0123     	 movne r3,#1
 1287 006a 0023     	 moveq r3,#0
 1288 006c DBB2     	 uxtb r3,r3
 1289              	 .loc 1 592 5
 1290 006e 002B     	 cmp r3,#0
 1291 0070 01D0     	 beq .L73
 593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 1292              	 .loc 1 593 14
 1293 0072 FF23     	 movs r3,#255
 1294 0074 1CE0     	 b .L75
 1295              	.L73:
 594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 1296              	 .loc 1 595 2
 1297 0076 BB68     	 ldr r3,[r7,#8]
 1298 0078 002B     	 cmp r3,#0
 1299 007a 18D0     	 beq .L74
 1300              	 .loc 1 595 2 is_stmt 0 discriminator 1
 1301 007c 0E4B     	 ldr r3,.L76
 1302 007e 4FF08052 	 mov r2,#268435456
 1303 0082 1A60     	 str r2,[r3]
 1304              	 .syntax unified
 1305              	
 1306 0084 BFF34F8F 	 dsb
 1307              	
 1308              	
 1309 0088 BFF36F8F 	 isb
 1310              	
 1311              	 .thumb
 1312              	 .syntax unified
 1313 008c 0FE0     	 b .L74
 1314              	.L72:
 596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   } 
 597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (xSemaphoreTake(mutex_id, ticks) != pdTRUE) {
 1315              	 .loc 1 597 12 is_stmt 1
 1316 008e 0023     	 movs r3,#0
 1317 0090 FA68     	 ldr r2,[r7,#12]
 1318 0092 0021     	 movs r1,#0
 1319 0094 7868     	 ldr r0,[r7,#4]
 1320 0096 FFF7FEFF 	 bl xQueueGenericReceive
 1321 009a 0346     	 mov r3,r0
 1322              	 .loc 1 597 44
 1323 009c 012B     	 cmp r3,#1
 1324 009e 14BF     	 ite ne
 1325 00a0 0123     	 movne r3,#1
 1326 00a2 0023     	 moveq r3,#0
 1327 00a4 DBB2     	 uxtb r3,r3
 1328              	 .loc 1 597 8
 1329 00a6 002B     	 cmp r3,#0
 1330 00a8 01D0     	 beq .L74
 598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
 1331              	 .loc 1 598 12
 1332 00aa FF23     	 movs r3,#255
 1333 00ac 00E0     	 b .L75
ARM GAS   			page 37


 1334              	.L74:
 599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 1335              	 .loc 1 601 10
 1336 00ae 0023     	 movs r3,#0
 1337              	.L75:
 602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1338              	 .loc 1 602 1 discriminator 1
 1339 00b0 1846     	 mov r0,r3
 1340 00b2 1037     	 adds r7,r7,#16
 1341              	 .cfi_def_cfa_offset 8
 1342 00b4 BD46     	 mov sp,r7
 1343              	 .cfi_def_cfa_register 13
 1344              	 
 1345 00b6 80BD     	 pop {r7,pc}
 1346              	.L77:
 1347              	 .align 2
 1348              	.L76:
 1349 00b8 04ED00E0 	 .word -536810236
 1350              	 .cfi_endproc
 1351              	.LFE49:
 1352              	 .fnend
 1353              	 .size osMutexWait,.-osMutexWait
 1354              	 .section .text.osMutexRelease,"ax",%progbits
 1355              	 .align 1
 1356              	 .global osMutexRelease
 1357              	 .syntax unified
 1358              	 .thumb
 1359              	 .thumb_func
 1360              	 .type osMutexRelease,%function
 1361              	osMutexRelease:
 1362              	 .fnstart
 1363              	.LFB50:
 603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Release a Mutex that was obtained by \ref osMutexWait
 606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexRelease shall be consistent in every CMSIS-RTOS.
 609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMutexRelease (osMutexId mutex_id)
 611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1364              	 .loc 1 611 1
 1365              	 .cfi_startproc
 1366              	 
 1367              	 
 1368 0000 80B5     	 push {r7,lr}
 1369              	 .save {r7,lr}
 1370              	 .cfi_def_cfa_offset 8
 1371              	 .cfi_offset 7,-8
 1372              	 .cfi_offset 14,-4
 1373              	 .pad #16
 1374 0002 84B0     	 sub sp,sp,#16
 1375              	 .cfi_def_cfa_offset 24
 1376              	 .setfp r7,sp,#0
 1377 0004 00AF     	 add r7,sp,#0
ARM GAS   			page 38


 1378              	 .cfi_def_cfa_register 7
 1379 0006 7860     	 str r0,[r7,#4]
 612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osStatus result = osOK;
 1380              	 .loc 1 612 12
 1381 0008 0023     	 movs r3,#0
 1382 000a FB60     	 str r3,[r7,#12]
 613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1383              	 .loc 1 613 17
 1384 000c 0023     	 movs r3,#0
 1385 000e BB60     	 str r3,[r7,#8]
 614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1386              	 .loc 1 615 20
 1387 0010 FFF7FEFF 	 bl _ZL13inHandlerModev
 1388 0014 0346     	 mov r3,r0
 1389 0016 002B     	 cmp r3,#0
 1390 0018 14BF     	 ite ne
 1391 001a 0123     	 movne r3,#1
 1392 001c 0023     	 moveq r3,#0
 1393 001e DBB2     	 uxtb r3,r3
 1394              	 .loc 1 615 3
 1395 0020 002B     	 cmp r3,#0
 1396 0022 1BD0     	 beq .L79
 616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xSemaphoreGiveFromISR(mutex_id, &taskWoken) != pdTRUE) {
 1397              	 .loc 1 616 9
 1398 0024 07F10803 	 add r3,r7,#8
 1399 0028 1946     	 mov r1,r3
 1400 002a 7868     	 ldr r0,[r7,#4]
 1401 002c FFF7FEFF 	 bl xQueueGiveFromISR
 1402 0030 0346     	 mov r3,r0
 1403              	 .loc 1 616 53
 1404 0032 012B     	 cmp r3,#1
 1405 0034 14BF     	 ite ne
 1406 0036 0123     	 movne r3,#1
 1407 0038 0023     	 moveq r3,#0
 1408 003a DBB2     	 uxtb r3,r3
 1409              	 .loc 1 616 5
 1410 003c 002B     	 cmp r3,#0
 1411 003e 01D0     	 beq .L80
 617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 1412              	 .loc 1 617 14
 1413 0040 FF23     	 movs r3,#255
 1414 0042 1CE0     	 b .L83
 1415              	.L80:
 618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1416              	 .loc 1 619 5
 1417 0044 BB68     	 ldr r3,[r7,#8]
 1418 0046 002B     	 cmp r3,#0
 1419 0048 18D0     	 beq .L82
 1420              	 .loc 1 619 5 is_stmt 0 discriminator 1
 1421 004a 0F4B     	 ldr r3,.L84
 1422 004c 4FF08052 	 mov r2,#268435456
 1423 0050 1A60     	 str r2,[r3]
 1424              	 .syntax unified
 1425              	
 1426 0052 BFF34F8F 	 dsb
ARM GAS   			page 39


 1427              	
 1428              	
 1429 0056 BFF36F8F 	 isb
 1430              	
 1431              	 .thumb
 1432              	 .syntax unified
 1433 005a 0FE0     	 b .L82
 1434              	.L79:
 620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (xSemaphoreGive(mutex_id) != pdTRUE) 
 1435              	 .loc 1 621 12 is_stmt 1
 1436 005c 0023     	 movs r3,#0
 1437 005e 0022     	 movs r2,#0
 1438 0060 0021     	 movs r1,#0
 1439 0062 7868     	 ldr r0,[r7,#4]
 1440 0064 FFF7FEFF 	 bl xQueueGenericSend
 1441 0068 0346     	 mov r3,r0
 1442              	 .loc 1 621 37
 1443 006a 012B     	 cmp r3,#1
 1444 006c 14BF     	 ite ne
 1445 006e 0123     	 movne r3,#1
 1446 0070 0023     	 moveq r3,#0
 1447 0072 DBB2     	 uxtb r3,r3
 1448              	 .loc 1 621 8
 1449 0074 002B     	 cmp r3,#0
 1450 0076 01D0     	 beq .L82
 622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osErrorOS;
 1451              	 .loc 1 623 12
 1452 0078 FF23     	 movs r3,#255
 1453 007a FB60     	 str r3,[r7,#12]
 1454              	.L82:
 624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 1455              	 .loc 1 625 10
 1456 007c FB68     	 ldr r3,[r7,#12]
 1457              	.L83:
 626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1458              	 .loc 1 626 1 discriminator 1
 1459 007e 1846     	 mov r0,r3
 1460 0080 1037     	 adds r7,r7,#16
 1461              	 .cfi_def_cfa_offset 8
 1462 0082 BD46     	 mov sp,r7
 1463              	 .cfi_def_cfa_register 13
 1464              	 
 1465 0084 80BD     	 pop {r7,pc}
 1466              	.L85:
 1467 0086 00BF     	 .align 2
 1468              	.L84:
 1469 0088 04ED00E0 	 .word -536810236
 1470              	 .cfi_endproc
 1471              	.LFE50:
 1472              	 .fnend
 1473              	 .size osMutexRelease,.-osMutexRelease
 1474              	 .section .text.osMutexDelete,"ax",%progbits
 1475              	 .align 1
 1476              	 .global osMutexDelete
ARM GAS   			page 40


 1477              	 .syntax unified
 1478              	 .thumb
 1479              	 .thumb_func
 1480              	 .type osMutexDelete,%function
 1481              	osMutexDelete:
 1482              	 .fnstart
 1483              	.LFB51:
 627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Delete a Mutex
 630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param mutex_id  mutex ID obtained by \ref osMutexCreate.
 631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexDelete shall be consistent in every CMSIS-RTOS.
 633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMutexDelete (osMutexId mutex_id)
 635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1484              	 .loc 1 635 1
 1485              	 .cfi_startproc
 1486              	 
 1487              	 
 1488 0000 80B5     	 push {r7,lr}
 1489              	 .save {r7,lr}
 1490              	 .cfi_def_cfa_offset 8
 1491              	 .cfi_offset 7,-8
 1492              	 .cfi_offset 14,-4
 1493              	 .pad #8
 1494 0002 82B0     	 sub sp,sp,#8
 1495              	 .cfi_def_cfa_offset 16
 1496              	 .setfp r7,sp,#0
 1497 0004 00AF     	 add r7,sp,#0
 1498              	 .cfi_def_cfa_register 7
 1499 0006 7860     	 str r0,[r7,#4]
 636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1500              	 .loc 1 636 20
 1501 0008 FFF7FEFF 	 bl _ZL13inHandlerModev
 1502 000c 0346     	 mov r3,r0
 1503 000e 002B     	 cmp r3,#0
 1504 0010 14BF     	 ite ne
 1505 0012 0123     	 movne r3,#1
 1506 0014 0023     	 moveq r3,#0
 1507 0016 DBB2     	 uxtb r3,r3
 1508              	 .loc 1 636 3
 1509 0018 002B     	 cmp r3,#0
 1510 001a 01D0     	 beq .L87
 637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorISR;
 1511              	 .loc 1 637 12
 1512 001c 8223     	 movs r3,#130
 1513 001e 03E0     	 b .L88
 1514              	.L87:
 638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vQueueDelete(mutex_id);
 1515              	 .loc 1 640 15
 1516 0020 7868     	 ldr r0,[r7,#4]
 1517 0022 FFF7FEFF 	 bl vQueueDelete
 641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
ARM GAS   			page 41


 1518              	 .loc 1 642 10
 1519 0026 0023     	 movs r3,#0
 1520              	.L88:
 643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1521              	 .loc 1 643 1
 1522 0028 1846     	 mov r0,r3
 1523 002a 0837     	 adds r7,r7,#8
 1524              	 .cfi_def_cfa_offset 8
 1525 002c BD46     	 mov sp,r7
 1526              	 .cfi_def_cfa_register 13
 1527              	 
 1528 002e 80BD     	 pop {r7,pc}
 1529              	 .cfi_endproc
 1530              	.LFE51:
 1531              	 .fnend
 1532              	 .size osMutexDelete,.-osMutexDelete
 1533              	 .section .text.osSemaphoreCreate,"ax",%progbits
 1534              	 .align 1
 1535              	 .global osSemaphoreCreate
 1536              	 .syntax unified
 1537              	 .thumb
 1538              	 .thumb_func
 1539              	 .type osSemaphoreCreate,%function
 1540              	osSemaphoreCreate:
 1541              	 .fnstart
 1542              	.LFB52:
 644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /********************  Semaphore Management Functions **************************/
 646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_Semaphore)  &&  (osFeature_Semaphore != 0))
 648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Create and Initialize a Semaphore object used for managing resources
 651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param semaphore_def semaphore definition referenced with \ref osSemaphore.
 652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param count         number of available resources.
 653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  semaphore ID for reference by other functions or NULL in case of error.
 654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreCreate shall be consistent in every CMSIS-RTOS.
 655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count)
 657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1543              	 .loc 1 657 1
 1544              	 .cfi_startproc
 1545              	 
 1546              	 
 1547 0000 80B5     	 push {r7,lr}
 1548              	 .save {r7,lr}
 1549              	 .cfi_def_cfa_offset 8
 1550              	 .cfi_offset 7,-8
 1551              	 .cfi_offset 14,-4
 1552              	 .pad #16
 1553 0002 84B0     	 sub sp,sp,#16
 1554              	 .cfi_def_cfa_offset 24
 1555              	 .setfp r7,sp,#0
 1556 0004 00AF     	 add r7,sp,#0
 1557              	 .cfi_def_cfa_register 7
 1558 0006 7860     	 str r0,[r7,#4]
 1559 0008 3960     	 str r1,[r7]
ARM GAS   			page 42


 658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) semaphore_def;
 659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osSemaphoreId sema;
 660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (count == 1) {
 1560              	 .loc 1 661 3
 1561 000a 3B68     	 ldr r3,[r7]
 1562 000c 012B     	 cmp r3,#1
 1563 000e 11D1     	 bne .L90
 662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1564              	 .loc 1 662 5
 1565 0010 0322     	 movs r2,#3
 1566 0012 0021     	 movs r1,#0
 1567 0014 0120     	 movs r0,#1
 1568 0016 FFF7FEFF 	 bl xQueueGenericCreate
 1569 001a 0346     	 mov r3,r0
 1570 001c FB60     	 str r3,[r7,#12]
 1571 001e FB68     	 ldr r3,[r7,#12]
 1572 0020 002B     	 cmp r3,#0
 1573 0022 05D0     	 beq .L91
 1574              	 .loc 1 662 5 is_stmt 0 discriminator 1
 1575 0024 0023     	 movs r3,#0
 1576 0026 0022     	 movs r2,#0
 1577 0028 0021     	 movs r1,#0
 1578 002a F868     	 ldr r0,[r7,#12]
 1579 002c FFF7FEFF 	 bl xQueueGenericSend
 1580              	.L91:
 663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return sema;
 1581              	 .loc 1 663 12 is_stmt 1
 1582 0030 FB68     	 ldr r3,[r7,#12]
 1583 0032 06E0     	 b .L92
 1584              	.L90:
 664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )	
 667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xSemaphoreCreateCounting(count, 0);
 1585              	 .loc 1 667 10
 1586 0034 3B68     	 ldr r3,[r7]
 1587 0036 0021     	 movs r1,#0
 1588 0038 1846     	 mov r0,r3
 1589 003a FFF7FEFF 	 bl xQueueCreateCountingSemaphore
 1590 003e 0346     	 mov r3,r0
 1591 0040 00BF     	 nop
 1592              	.L92:
 668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
 669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return NULL;
 670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
 671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1593              	 .loc 1 671 1
 1594 0042 1846     	 mov r0,r3
 1595 0044 1037     	 adds r7,r7,#16
 1596              	 .cfi_def_cfa_offset 8
 1597 0046 BD46     	 mov sp,r7
 1598              	 .cfi_def_cfa_register 13
 1599              	 
 1600 0048 80BD     	 pop {r7,pc}
 1601              	 .cfi_endproc
 1602              	.LFE52:
ARM GAS   			page 43


 1603              	 .fnend
 1604              	 .size osSemaphoreCreate,.-osSemaphoreCreate
 1605              	 .section .text.osSemaphoreWait,"ax",%progbits
 1606              	 .align 1
 1607              	 .global osSemaphoreWait
 1608              	 .syntax unified
 1609              	 .thumb
 1610              	 .thumb_func
 1611              	 .type osSemaphoreWait,%function
 1612              	osSemaphoreWait:
 1613              	 .fnstart
 1614              	.LFB53:
 672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Wait until a Semaphore token becomes available
 675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
 677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  number of available tokens, or -1 in case of incorrect parameters.
 678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreWait shall be consistent in every CMSIS-RTOS.
 679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec)
 681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1615              	 .loc 1 681 1
 1616              	 .cfi_startproc
 1617              	 
 1618              	 
 1619 0000 80B5     	 push {r7,lr}
 1620              	 .save {r7,lr}
 1621              	 .cfi_def_cfa_offset 8
 1622              	 .cfi_offset 7,-8
 1623              	 .cfi_offset 14,-4
 1624              	 .pad #16
 1625 0002 84B0     	 sub sp,sp,#16
 1626              	 .cfi_def_cfa_offset 24
 1627              	 .setfp r7,sp,#0
 1628 0004 00AF     	 add r7,sp,#0
 1629              	 .cfi_def_cfa_register 7
 1630 0006 7860     	 str r0,[r7,#4]
 1631 0008 3960     	 str r1,[r7]
 682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
 683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 1632              	 .loc 1 683 17
 1633 000a 0023     	 movs r3,#0
 1634 000c BB60     	 str r3,[r7,#8]
 684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (semaphore_id == NULL) {
 1635              	 .loc 1 686 3
 1636 000e 7B68     	 ldr r3,[r7,#4]
 1637 0010 002B     	 cmp r3,#0
 1638 0012 01D1     	 bne .L94
 687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 1639              	 .loc 1 687 12
 1640 0014 8023     	 movs r3,#128
 1641 0016 4BE0     	 b .L101
 1642              	.L94:
 688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
ARM GAS   			page 44


 689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 1643              	 .loc 1 690 9
 1644 0018 0023     	 movs r3,#0
 1645 001a FB60     	 str r3,[r7,#12]
 691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 1646              	 .loc 1 691 3
 1647 001c 3B68     	 ldr r3,[r7]
 1648 001e B3F1FF3F 	 cmp r3,#-1
 1649 0022 03D1     	 bne .L96
 692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 1650              	 .loc 1 692 11
 1651 0024 4FF0FF33 	 mov r3,#-1
 1652 0028 FB60     	 str r3,[r7,#12]
 1653 002a 09E0     	 b .L97
 1654              	.L96:
 693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 1655              	 .loc 1 694 8
 1656 002c 3B68     	 ldr r3,[r7]
 1657 002e 002B     	 cmp r3,#0
 1658 0030 06D0     	 beq .L97
 695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 1659              	 .loc 1 695 11
 1660 0032 3B68     	 ldr r3,[r7]
 1661 0034 FB60     	 str r3,[r7,#12]
 696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 1662              	 .loc 1 696 5
 1663 0036 FB68     	 ldr r3,[r7,#12]
 1664 0038 002B     	 cmp r3,#0
 1665 003a 01D1     	 bne .L97
 697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 1666              	 .loc 1 697 13
 1667 003c 0123     	 movs r3,#1
 1668 003e FB60     	 str r3,[r7,#12]
 1669              	.L97:
 698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1670              	 .loc 1 701 20
 1671 0040 FFF7FEFF 	 bl _ZL13inHandlerModev
 1672 0044 0346     	 mov r3,r0
 1673 0046 002B     	 cmp r3,#0
 1674 0048 14BF     	 ite ne
 1675 004a 0123     	 movne r3,#1
 1676 004c 0023     	 moveq r3,#0
 1677 004e DBB2     	 uxtb r3,r3
 1678              	 .loc 1 701 3
 1679 0050 002B     	 cmp r3,#0
 1680 0052 1CD0     	 beq .L98
 702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1681              	 .loc 1 702 9
 1682 0054 07F10803 	 add r3,r7,#8
 1683 0058 1A46     	 mov r2,r3
 1684 005a 0021     	 movs r1,#0
 1685 005c 7868     	 ldr r0,[r7,#4]
ARM GAS   			page 45


 1686 005e FFF7FEFF 	 bl xQueueReceiveFromISR
 1687 0062 0346     	 mov r3,r0
 1688              	 .loc 1 702 57
 1689 0064 012B     	 cmp r3,#1
 1690 0066 14BF     	 ite ne
 1691 0068 0123     	 movne r3,#1
 1692 006a 0023     	 moveq r3,#0
 1693 006c DBB2     	 uxtb r3,r3
 1694              	 .loc 1 702 5
 1695 006e 002B     	 cmp r3,#0
 1696 0070 01D0     	 beq .L99
 703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 1697              	 .loc 1 703 14
 1698 0072 FF23     	 movs r3,#255
 1699 0074 1CE0     	 b .L101
 1700              	.L99:
 704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 1701              	 .loc 1 705 2
 1702 0076 BB68     	 ldr r3,[r7,#8]
 1703 0078 002B     	 cmp r3,#0
 1704 007a 18D0     	 beq .L100
 1705              	 .loc 1 705 2 is_stmt 0 discriminator 1
 1706 007c 0E4B     	 ldr r3,.L102
 1707 007e 4FF08052 	 mov r2,#268435456
 1708 0082 1A60     	 str r2,[r3]
 1709              	 .syntax unified
 1710              	
 1711 0084 BFF34F8F 	 dsb
 1712              	
 1713              	
 1714 0088 BFF36F8F 	 isb
 1715              	
 1716              	 .thumb
 1717              	 .syntax unified
 1718 008c 0FE0     	 b .L100
 1719              	.L98:
 706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }  
 707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (xSemaphoreTake(semaphore_id, ticks) != pdTRUE) {
 1720              	 .loc 1 707 12 is_stmt 1
 1721 008e 0023     	 movs r3,#0
 1722 0090 FA68     	 ldr r2,[r7,#12]
 1723 0092 0021     	 movs r1,#0
 1724 0094 7868     	 ldr r0,[r7,#4]
 1725 0096 FFF7FEFF 	 bl xQueueGenericReceive
 1726 009a 0346     	 mov r3,r0
 1727              	 .loc 1 707 48
 1728 009c 012B     	 cmp r3,#1
 1729 009e 14BF     	 ite ne
 1730 00a0 0123     	 movne r3,#1
 1731 00a2 0023     	 moveq r3,#0
 1732 00a4 DBB2     	 uxtb r3,r3
 1733              	 .loc 1 707 8
 1734 00a6 002B     	 cmp r3,#0
 1735 00a8 01D0     	 beq .L100
 708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
 1736              	 .loc 1 708 12
ARM GAS   			page 46


 1737 00aa FF23     	 movs r3,#255
 1738 00ac 00E0     	 b .L101
 1739              	.L100:
 709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 1740              	 .loc 1 711 10
 1741 00ae 0023     	 movs r3,#0
 1742              	.L101:
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1743              	 .loc 1 712 1 discriminator 1
 1744 00b0 1846     	 mov r0,r3
 1745 00b2 1037     	 adds r7,r7,#16
 1746              	 .cfi_def_cfa_offset 8
 1747 00b4 BD46     	 mov sp,r7
 1748              	 .cfi_def_cfa_register 13
 1749              	 
 1750 00b6 80BD     	 pop {r7,pc}
 1751              	.L103:
 1752              	 .align 2
 1753              	.L102:
 1754 00b8 04ED00E0 	 .word -536810236
 1755              	 .cfi_endproc
 1756              	.LFE53:
 1757              	 .fnend
 1758              	 .size osSemaphoreWait,.-osSemaphoreWait
 1759              	 .section .text.osSemaphoreRelease,"ax",%progbits
 1760              	 .align 1
 1761              	 .global osSemaphoreRelease
 1762              	 .syntax unified
 1763              	 .thumb
 1764              	 .thumb_func
 1765              	 .type osSemaphoreRelease,%function
 1766              	osSemaphoreRelease:
 1767              	 .fnstart
 1768              	.LFB54:
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Release a Semaphore token
 716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreRelease shall be consistent in every CMSIS-RTOS.
 719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osSemaphoreRelease (osSemaphoreId semaphore_id)
 721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1769              	 .loc 1 721 1
 1770              	 .cfi_startproc
 1771              	 
 1772              	 
 1773 0000 80B5     	 push {r7,lr}
 1774              	 .save {r7,lr}
 1775              	 .cfi_def_cfa_offset 8
 1776              	 .cfi_offset 7,-8
 1777              	 .cfi_offset 14,-4
 1778              	 .pad #16
 1779 0002 84B0     	 sub sp,sp,#16
 1780              	 .cfi_def_cfa_offset 24
ARM GAS   			page 47


 1781              	 .setfp r7,sp,#0
 1782 0004 00AF     	 add r7,sp,#0
 1783              	 .cfi_def_cfa_register 7
 1784 0006 7860     	 str r0,[r7,#4]
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osStatus result = osOK;
 1785              	 .loc 1 722 12
 1786 0008 0023     	 movs r3,#0
 1787 000a FB60     	 str r3,[r7,#12]
 723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1788              	 .loc 1 723 17
 1789 000c 0023     	 movs r3,#0
 1790 000e BB60     	 str r3,[r7,#8]
 724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1791              	 .loc 1 726 20
 1792 0010 FFF7FEFF 	 bl _ZL13inHandlerModev
 1793 0014 0346     	 mov r3,r0
 1794 0016 002B     	 cmp r3,#0
 1795 0018 14BF     	 ite ne
 1796 001a 0123     	 movne r3,#1
 1797 001c 0023     	 moveq r3,#0
 1798 001e DBB2     	 uxtb r3,r3
 1799              	 .loc 1 726 3
 1800 0020 002B     	 cmp r3,#0
 1801 0022 1BD0     	 beq .L105
 727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xSemaphoreGiveFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1802              	 .loc 1 727 9
 1803 0024 07F10803 	 add r3,r7,#8
 1804 0028 1946     	 mov r1,r3
 1805 002a 7868     	 ldr r0,[r7,#4]
 1806 002c FFF7FEFF 	 bl xQueueGiveFromISR
 1807 0030 0346     	 mov r3,r0
 1808              	 .loc 1 727 57
 1809 0032 012B     	 cmp r3,#1
 1810 0034 14BF     	 ite ne
 1811 0036 0123     	 movne r3,#1
 1812 0038 0023     	 moveq r3,#0
 1813 003a DBB2     	 uxtb r3,r3
 1814              	 .loc 1 727 5
 1815 003c 002B     	 cmp r3,#0
 1816 003e 01D0     	 beq .L106
 728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 1817              	 .loc 1 728 14
 1818 0040 FF23     	 movs r3,#255
 1819 0042 1CE0     	 b .L109
 1820              	.L106:
 729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1821              	 .loc 1 730 5
 1822 0044 BB68     	 ldr r3,[r7,#8]
 1823 0046 002B     	 cmp r3,#0
 1824 0048 18D0     	 beq .L108
 1825              	 .loc 1 730 5 is_stmt 0 discriminator 1
 1826 004a 0F4B     	 ldr r3,.L110
 1827 004c 4FF08052 	 mov r2,#268435456
 1828 0050 1A60     	 str r2,[r3]
ARM GAS   			page 48


 1829              	 .syntax unified
 1830              	
 1831 0052 BFF34F8F 	 dsb
 1832              	
 1833              	
 1834 0056 BFF36F8F 	 isb
 1835              	
 1836              	 .thumb
 1837              	 .syntax unified
 1838 005a 0FE0     	 b .L108
 1839              	.L105:
 731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xSemaphoreGive(semaphore_id) != pdTRUE) {
 1840              	 .loc 1 733 9 is_stmt 1
 1841 005c 0023     	 movs r3,#0
 1842 005e 0022     	 movs r2,#0
 1843 0060 0021     	 movs r1,#0
 1844 0062 7868     	 ldr r0,[r7,#4]
 1845 0064 FFF7FEFF 	 bl xQueueGenericSend
 1846 0068 0346     	 mov r3,r0
 1847              	 .loc 1 733 38
 1848 006a 012B     	 cmp r3,#1
 1849 006c 14BF     	 ite ne
 1850 006e 0123     	 movne r3,#1
 1851 0070 0023     	 moveq r3,#0
 1852 0072 DBB2     	 uxtb r3,r3
 1853              	 .loc 1 733 5
 1854 0074 002B     	 cmp r3,#0
 1855 0076 01D0     	 beq .L108
 734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       result = osErrorOS;
 1856              	 .loc 1 734 14
 1857 0078 FF23     	 movs r3,#255
 1858 007a FB60     	 str r3,[r7,#12]
 1859              	.L108:
 735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 1860              	 .loc 1 738 10
 1861 007c FB68     	 ldr r3,[r7,#12]
 1862              	.L109:
 739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1863              	 .loc 1 739 1 discriminator 1
 1864 007e 1846     	 mov r0,r3
 1865 0080 1037     	 adds r7,r7,#16
 1866              	 .cfi_def_cfa_offset 8
 1867 0082 BD46     	 mov sp,r7
 1868              	 .cfi_def_cfa_register 13
 1869              	 
 1870 0084 80BD     	 pop {r7,pc}
 1871              	.L111:
 1872 0086 00BF     	 .align 2
 1873              	.L110:
 1874 0088 04ED00E0 	 .word -536810236
 1875              	 .cfi_endproc
 1876              	.LFE54:
ARM GAS   			page 49


 1877              	 .fnend
 1878              	 .size osSemaphoreRelease,.-osSemaphoreRelease
 1879              	 .section .text.osSemaphoreDelete,"ax",%progbits
 1880              	 .align 1
 1881              	 .global osSemaphoreDelete
 1882              	 .syntax unified
 1883              	 .thumb
 1884              	 .thumb_func
 1885              	 .type osSemaphoreDelete,%function
 1886              	osSemaphoreDelete:
 1887              	 .fnstart
 1888              	.LFB55:
 740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Delete a Semaphore
 743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreDelete shall be consistent in every CMSIS-RTOS.
 746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osSemaphoreDelete (osSemaphoreId semaphore_id)
 748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1889              	 .loc 1 748 1
 1890              	 .cfi_startproc
 1891              	 
 1892              	 
 1893 0000 80B5     	 push {r7,lr}
 1894              	 .save {r7,lr}
 1895              	 .cfi_def_cfa_offset 8
 1896              	 .cfi_offset 7,-8
 1897              	 .cfi_offset 14,-4
 1898              	 .pad #8
 1899 0002 82B0     	 sub sp,sp,#8
 1900              	 .cfi_def_cfa_offset 16
 1901              	 .setfp r7,sp,#0
 1902 0004 00AF     	 add r7,sp,#0
 1903              	 .cfi_def_cfa_register 7
 1904 0006 7860     	 str r0,[r7,#4]
 749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 1905              	 .loc 1 749 20
 1906 0008 FFF7FEFF 	 bl _ZL13inHandlerModev
 1907 000c 0346     	 mov r3,r0
 1908 000e 002B     	 cmp r3,#0
 1909 0010 14BF     	 ite ne
 1910 0012 0123     	 movne r3,#1
 1911 0014 0023     	 moveq r3,#0
 1912 0016 DBB2     	 uxtb r3,r3
 1913              	 .loc 1 749 3
 1914 0018 002B     	 cmp r3,#0
 1915 001a 01D0     	 beq .L113
 750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorISR;
 1916              	 .loc 1 750 12
 1917 001c 8223     	 movs r3,#130
 1918 001e 03E0     	 b .L114
 1919              	.L113:
 751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vSemaphoreDelete(semaphore_id);
ARM GAS   			page 50


 1920              	 .loc 1 753 3
 1921 0020 7868     	 ldr r0,[r7,#4]
 1922 0022 FFF7FEFF 	 bl vQueueDelete
 754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK; 
 1923              	 .loc 1 755 10
 1924 0026 0023     	 movs r3,#0
 1925              	.L114:
 756:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 1926              	 .loc 1 756 1
 1927 0028 1846     	 mov r0,r3
 1928 002a 0837     	 adds r7,r7,#8
 1929              	 .cfi_def_cfa_offset 8
 1930 002c BD46     	 mov sp,r7
 1931              	 .cfi_def_cfa_register 13
 1932              	 
 1933 002e 80BD     	 pop {r7,pc}
 1934              	 .cfi_endproc
 1935              	.LFE55:
 1936              	 .fnend
 1937              	 .size osSemaphoreDelete,.-osSemaphoreDelete
 1938              	 .section .text.osPoolCreate,"ax",%progbits
 1939              	 .align 1
 1940              	 .global osPoolCreate
 1941              	 .syntax unified
 1942              	 .thumb
 1943              	 .thumb_func
 1944              	 .type osPoolCreate,%function
 1945              	osPoolCreate:
 1946              	 .fnstart
 1947              	.LFB56:
 757:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 758:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif    /* Use Semaphores */
 759:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 760:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*******************   Memory Pool Management Functions  ***********************/
 761:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 762:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_Pool)  &&  (osFeature_Pool != 0)) 
 763:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 764:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** //TODO
 765:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** //This is a primitive and inefficient wrapper around the existing FreeRTOS memory management.
 766:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** //A better implementation will have to modify heap_x.c!
 767:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 768:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 769:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** typedef struct os_pool_cb {
 770:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   void *pool;
 771:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint8_t *markers;
 772:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t pool_sz;
 773:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t item_sz;
 774:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t currentIndex;
 775:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** } os_pool_cb_t;
 776:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 777:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 778:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 779:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Create and Initialize a memory pool
 780:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  pool_def      memory pool definition referenced with \ref osPool.
 781:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  memory pool ID for reference by other functions or NULL in case of error.
 782:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCreate shall be consistent in every CMSIS-RTOS.
ARM GAS   			page 51


 783:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 784:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osPoolId osPoolCreate (const osPoolDef_t *pool_def)
 785:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 1948              	 .loc 1 785 1
 1949              	 .cfi_startproc
 1950              	 
 1951              	 
 1952 0000 80B5     	 push {r7,lr}
 1953              	 .save {r7,lr}
 1954              	 .cfi_def_cfa_offset 8
 1955              	 .cfi_offset 7,-8
 1956              	 .cfi_offset 14,-4
 1957              	 .pad #24
 1958 0002 86B0     	 sub sp,sp,#24
 1959              	 .cfi_def_cfa_offset 32
 1960              	 .setfp r7,sp,#0
 1961 0004 00AF     	 add r7,sp,#0
 1962              	 .cfi_def_cfa_register 7
 1963 0006 7860     	 str r0,[r7,#4]
 786:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osPoolId thePool;
 787:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   int itemSize = 4 * ((pool_def->item_sz + 3) / 4);
 1964              	 .loc 1 787 34
 1965 0008 7B68     	 ldr r3,[r7,#4]
 1966 000a 5B68     	 ldr r3,[r3,#4]
 1967              	 .loc 1 787 42
 1968 000c 0333     	 adds r3,r3,#3
 1969              	 .loc 1 787 7
 1970 000e 23F00303 	 bic r3,r3,#3
 1971 0012 FB60     	 str r3,[r7,#12]
 788:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t i;
 789:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 790:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   /* First have to allocate memory for the pool control block. */
 791:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   thePool = (osPoolId)pvPortMalloc(sizeof(os_pool_cb_t));
 1972              	 .loc 1 791 35
 1973 0014 1420     	 movs r0,#20
 1974 0016 FFF7FEFF 	 bl pvPortMalloc
 1975 001a 0346     	 mov r3,r0
 1976 001c 7B61     	 str r3,[r7,#20]
 792:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (thePool) {
 1977              	 .loc 1 792 3
 1978 001e 7B69     	 ldr r3,[r7,#20]
 1979 0020 002B     	 cmp r3,#0
 1980 0022 45D0     	 beq .L116
 793:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     thePool->pool_sz = pool_def->pool_sz;
 1981              	 .loc 1 793 34
 1982 0024 7B68     	 ldr r3,[r7,#4]
 1983 0026 1A68     	 ldr r2,[r3]
 1984              	 .loc 1 793 22
 1985 0028 7B69     	 ldr r3,[r7,#20]
 1986 002a 9A60     	 str r2,[r3,#8]
 794:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     thePool->item_sz = itemSize;
 1987              	 .loc 1 794 24
 1988 002c FA68     	 ldr r2,[r7,#12]
 1989              	 .loc 1 794 22
 1990 002e 7B69     	 ldr r3,[r7,#20]
 1991 0030 DA60     	 str r2,[r3,#12]
 795:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     thePool->currentIndex = 0;
ARM GAS   			page 52


 1992              	 .loc 1 795 27
 1993 0032 7B69     	 ldr r3,[r7,#20]
 1994 0034 0022     	 movs r2,#0
 1995 0036 1A61     	 str r2,[r3,#16]
 796:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     
 797:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     /* Memory for markers */
 798:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     thePool->markers = (uint8_t*)pvPortMalloc(pool_def->pool_sz);
 1996              	 .loc 1 798 57
 1997 0038 7B68     	 ldr r3,[r7,#4]
 1998 003a 1B68     	 ldr r3,[r3]
 1999              	 .loc 1 798 46
 2000 003c 1846     	 mov r0,r3
 2001 003e FFF7FEFF 	 bl pvPortMalloc
 2002 0042 0246     	 mov r2,r0
 2003              	 .loc 1 798 22
 2004 0044 7B69     	 ldr r3,[r7,#20]
 2005 0046 5A60     	 str r2,[r3,#4]
 799:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (thePool->markers) {
 2006              	 .loc 1 799 18
 2007 0048 7B69     	 ldr r3,[r7,#20]
 2008 004a 5B68     	 ldr r3,[r3,#4]
 2009              	 .loc 1 799 5
 2010 004c 002B     	 cmp r3,#0
 2011 004e 2AD0     	 beq .L117
 800:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* Now allocate the pool itself. */
 801:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       thePool->pool = (uint8_t*)pvPortMalloc(pool_def->pool_sz * itemSize);
 2012              	 .loc 1 801 56
 2013 0050 7B68     	 ldr r3,[r7,#4]
 2014 0052 1B68     	 ldr r3,[r3]
 2015              	 .loc 1 801 66
 2016 0054 FA68     	 ldr r2,[r7,#12]
 2017              	 .loc 1 801 64
 2018 0056 02FB03F3 	 mul r3,r2,r3
 2019              	 .loc 1 801 45
 2020 005a 1846     	 mov r0,r3
 2021 005c FFF7FEFF 	 bl pvPortMalloc
 2022 0060 0246     	 mov r2,r0
 2023              	 .loc 1 801 21
 2024 0062 7B69     	 ldr r3,[r7,#20]
 2025 0064 1A60     	 str r2,[r3]
 802:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       
 803:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       if (thePool->pool) {
 2026              	 .loc 1 803 20
 2027 0066 7B69     	 ldr r3,[r7,#20]
 2028 0068 1B68     	 ldr r3,[r3]
 2029              	 .loc 1 803 7
 2030 006a 002B     	 cmp r3,#0
 2031 006c 10D0     	 beq .L118
 804:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 2032              	 .loc 1 804 16
 2033 006e 0023     	 movs r3,#0
 2034 0070 3B61     	 str r3,[r7,#16]
 2035              	.L119:
 2036              	 .loc 1 804 35 discriminator 3
 2037 0072 7B68     	 ldr r3,[r7,#4]
 2038 0074 1B68     	 ldr r3,[r3]
 2039              	 .loc 1 804 23 discriminator 3
ARM GAS   			page 53


 2040 0076 3A69     	 ldr r2,[r7,#16]
 2041 0078 9A42     	 cmp r2,r3
 2042 007a 19D2     	 bcs .L116
 805:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****           thePool->markers[i] = 0;
 2043              	 .loc 1 805 20 discriminator 2
 2044 007c 7B69     	 ldr r3,[r7,#20]
 2045 007e 5A68     	 ldr r2,[r3,#4]
 2046              	 .loc 1 805 29 discriminator 2
 2047 0080 3B69     	 ldr r3,[r7,#16]
 2048 0082 1344     	 add r3,r3,r2
 2049              	 .loc 1 805 31 discriminator 2
 2050 0084 0022     	 movs r2,#0
 2051 0086 1A70     	 strb r2,[r3]
 804:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 2052              	 .loc 1 804 9 discriminator 2
 2053 0088 3B69     	 ldr r3,[r7,#16]
 2054 008a 0133     	 adds r3,r3,#1
 2055 008c 3B61     	 str r3,[r7,#16]
 2056 008e F0E7     	 b .L119
 2057              	.L118:
 806:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         }
 807:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       }
 808:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       else {
 809:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         vPortFree(thePool->markers);
 2058              	 .loc 1 809 28
 2059 0090 7B69     	 ldr r3,[r7,#20]
 2060 0092 5B68     	 ldr r3,[r3,#4]
 2061              	 .loc 1 809 18
 2062 0094 1846     	 mov r0,r3
 2063 0096 FFF7FEFF 	 bl vPortFree
 810:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         vPortFree(thePool);
 2064              	 .loc 1 810 18
 2065 009a 7869     	 ldr r0,[r7,#20]
 2066 009c FFF7FEFF 	 bl vPortFree
 811:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****         thePool = NULL;
 2067              	 .loc 1 811 17
 2068 00a0 0023     	 movs r3,#0
 2069 00a2 7B61     	 str r3,[r7,#20]
 2070 00a4 04E0     	 b .L116
 2071              	.L117:
 812:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       }
 813:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 814:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else {
 815:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       vPortFree(thePool);
 2072              	 .loc 1 815 16
 2073 00a6 7869     	 ldr r0,[r7,#20]
 2074 00a8 FFF7FEFF 	 bl vPortFree
 816:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       thePool = NULL;
 2075              	 .loc 1 816 15
 2076 00ac 0023     	 movs r3,#0
 2077 00ae 7B61     	 str r3,[r7,#20]
 2078              	.L116:
 817:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 818:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 819:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 820:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return thePool;
 2079              	 .loc 1 820 10
ARM GAS   			page 54


 2080 00b0 7B69     	 ldr r3,[r7,#20]
 821:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2081              	 .loc 1 821 1
 2082 00b2 1846     	 mov r0,r3
 2083 00b4 1837     	 adds r7,r7,#24
 2084              	 .cfi_def_cfa_offset 8
 2085 00b6 BD46     	 mov sp,r7
 2086              	 .cfi_def_cfa_register 13
 2087              	 
 2088 00b8 80BD     	 pop {r7,pc}
 2089              	 .cfi_endproc
 2090              	.LFE56:
 2091              	 .fnend
 2092              	 .size osPoolCreate,.-osPoolCreate
 2093              	 .section .text.osPoolAlloc,"ax",%progbits
 2094              	 .align 1
 2095              	 .global osPoolAlloc
 2096              	 .syntax unified
 2097              	 .thumb
 2098              	 .thumb_func
 2099              	 .type osPoolAlloc,%function
 2100              	osPoolAlloc:
 2101              	 .fnstart
 2102              	.LFB57:
 822:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 823:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 824:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Allocate a memory block from a memory pool
 825:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 826:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 827:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolAlloc shall be consistent in every CMSIS-RTOS.
 828:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 829:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** void *osPoolAlloc (osPoolId pool_id)
 830:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2103              	 .loc 1 830 1
 2104              	 .cfi_startproc
 2105              	 
 2106              	 
 2107 0000 80B5     	 push {r7,lr}
 2108              	 .save {r7,lr}
 2109              	 .cfi_def_cfa_offset 8
 2110              	 .cfi_offset 7,-8
 2111              	 .cfi_offset 14,-4
 2112              	 .pad #40
 2113 0002 8AB0     	 sub sp,sp,#40
 2114              	 .cfi_def_cfa_offset 48
 2115              	 .setfp r7,sp,#0
 2116 0004 00AF     	 add r7,sp,#0
 2117              	 .cfi_def_cfa_register 7
 2118 0006 7860     	 str r0,[r7,#4]
 831:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   int dummy = 0;
 2119              	 .loc 1 831 7
 2120 0008 0023     	 movs r3,#0
 2121 000a 7B62     	 str r3,[r7,#36]
 832:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   void *p = NULL;
 2122              	 .loc 1 832 9
 2123 000c 0023     	 movs r3,#0
 2124 000e 3B62     	 str r3,[r7,#32]
ARM GAS   			page 55


 833:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t i;
 834:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t index;
 835:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 836:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 2125              	 .loc 1 836 20
 2126 0010 FFF7FEFF 	 bl _ZL13inHandlerModev
 2127 0014 0346     	 mov r3,r0
 2128 0016 002B     	 cmp r3,#0
 2129 0018 14BF     	 ite ne
 2130 001a 0123     	 movne r3,#1
 2131 001c 0023     	 moveq r3,#0
 2132 001e DBB2     	 uxtb r3,r3
 2133              	 .loc 1 836 3
 2134 0020 002B     	 cmp r3,#0
 2135 0022 0ED0     	 beq .L122
 2136              	.LBB10:
 2137              	.LBB11:
 2138              	 .file 3 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*
   2:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     All rights reserved
   4:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   5:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   7:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   9:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  13:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  14:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  19:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  20:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  25:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  26:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  27:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    is the industry's de facto standard.                               *
  31:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  32:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  37:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  38:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  39:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
ARM GAS   			page 56


  40:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     defined configASSERT()?
  42:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  43:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     embedded software for free we request you assist our global community by
  45:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     participating in the support forum.
  46:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  47:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  52:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  56:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  59:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  63:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     mission critical applications that require provable dependability.
  66:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  67:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     1 tab == 4 spaces!
  68:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** */
  69:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  70:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  71:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef PORTMACRO_H
  72:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define PORTMACRO_H
  73:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  74:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef __cplusplus
  75:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern "C" {
  76:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
  77:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  78:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------
  79:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * Port specific definitions.
  80:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  81:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * given hardware and compiler.
  83:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  84:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * These settings should not be altered.
  85:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *-----------------------------------------------------------
  86:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  */
  87:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  88:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Type definitions. */
  89:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCHAR		char
  90:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portFLOAT		float
  91:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDOUBLE		double
  92:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portLONG		long
  93:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSHORT		short
  94:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBASE_TYPE	long
  96:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
ARM GAS   			page 57


  97:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef long BaseType_t;
  99:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef unsigned long UBaseType_t;
 100:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 101:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint16_t TickType_t;
 103:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #else
 105:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint32_t TickType_t;
 106:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 108:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	not need to be guarded with a critical section. */
 110:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 112:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 113:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 114:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specifics. */
 115:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 119:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 120:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Scheduler utilities. */
 121:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD() 															\
 122:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {																				\
 123:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 																				\
 126:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "dsb" );													\
 129:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "isb" );													\
 130:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 131:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 132:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 137:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 138:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Critical section management. */
 139:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortEnterCritical( void );
 140:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortExitCritical( void );
 141:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 148:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 149:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 150:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** (which build with all the ports) will build. */
 153:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
ARM GAS   			page 58


 154:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 157:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Tickless idle/low power functionality. */
 158:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 162:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 163:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 164:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specific optimisations. */
 165:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 168:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 169:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 171:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Generic helper function. */
 172:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 174:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	uint8_t ucReturn;
 175:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 176:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		return ucReturn;
 178:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 179:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 180:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Check the configuration. */
 181:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#endif
 184:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 185:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 189:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/*-----------------------------------------------------------*/
 190:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 191:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31 - ucPort
 192:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 193:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 195:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 196:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 197:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef configASSERT
 198:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 201:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 202:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* portNOP() is not required by this port. */
 203:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNOP()
 204:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 205:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portFORCE_INLINE
 206:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 207:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 208:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 209:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 210:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
ARM GAS   			page 59


 211:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 212:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 213:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulNewBASEPRI;
 214:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 216:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 217:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %0, %1												\n"	\
 218:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0											\n" \
 219:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 220:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 221:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 222:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 224:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 225:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 226:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 227:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 228:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 229:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 230:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 2139              	 .loc 3 231 2
 2140              	 .syntax unified
 2141              	
 2142 0024 EFF31182 	 mrs r2,basepri
 2143 0028 4FF01003 	 mov r3,#16
 2144 002c 83F31188 	 msr basepri,r3
 2145 0030 BFF36F8F 	 isb 
 2146 0034 BFF34F8F 	 dsb 
 2147              	
 2148              	
 2149              	 .thumb
 2150              	 .syntax unified
 2151 0038 7A61     	 str r2,[r7,#20]
 2152 003a 3B61     	 str r3,[r7,#16]
 232:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 233:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mrs %0, basepri											\n" \
 234:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %1, %2												\n"	\
 235:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %1											\n" \
 236:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 237:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 238:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 239:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 240:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 241:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 242:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	warnings. */
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return ulOriginalBASEPRI;
 2153              	 .loc 3 243 9
 2154 003c 7B69     	 ldr r3,[r7,#20]
 2155              	.LBE11:
 2156              	.LBE10:
 837:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     dummy = portSET_INTERRUPT_MASK_FROM_ISR();
 2157              	 .loc 1 837 11
 2158 003e 7B62     	 str r3,[r7,#36]
 2159 0040 01E0     	 b .L124
 2160              	.L122:
 838:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
ARM GAS   			page 60


 839:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 840:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vPortEnterCritical();
 2161              	 .loc 1 840 23
 2162 0042 FFF7FEFF 	 bl vPortEnterCritical
 2163              	.L124:
 841:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 842:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 843:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   for (i = 0; i < pool_id->pool_sz; i++) {
 2164              	 .loc 1 843 10
 2165 0046 0023     	 movs r3,#0
 2166 0048 FB61     	 str r3,[r7,#28]
 2167              	.L128:
 2168              	 .loc 1 843 28 discriminator 1
 2169 004a 7B68     	 ldr r3,[r7,#4]
 2170 004c 9B68     	 ldr r3,[r3,#8]
 2171              	 .loc 1 843 17 discriminator 1
 2172 004e FA69     	 ldr r2,[r7,#28]
 2173 0050 9A42     	 cmp r2,r3
 2174 0052 2AD2     	 bcs .L125
 844:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     index = pool_id->currentIndex + i;
 2175              	 .loc 1 844 22
 2176 0054 7B68     	 ldr r3,[r7,#4]
 2177 0056 1B69     	 ldr r3,[r3,#16]
 2178              	 .loc 1 844 11
 2179 0058 FA69     	 ldr r2,[r7,#28]
 2180 005a 1344     	 add r3,r3,r2
 2181 005c BB61     	 str r3,[r7,#24]
 845:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (index >= pool_id->pool_sz) {
 2182              	 .loc 1 845 27
 2183 005e 7B68     	 ldr r3,[r7,#4]
 2184 0060 9B68     	 ldr r3,[r3,#8]
 2185              	 .loc 1 845 5
 2186 0062 BA69     	 ldr r2,[r7,#24]
 2187 0064 9A42     	 cmp r2,r3
 2188 0066 01D3     	 bcc .L126
 846:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       index = 0;
 2189              	 .loc 1 846 13
 2190 0068 0023     	 movs r3,#0
 2191 006a BB61     	 str r3,[r7,#24]
 2192              	.L126:
 847:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 848:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     
 849:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (pool_id->markers[index] == 0) {
 2193              	 .loc 1 849 18
 2194 006c 7B68     	 ldr r3,[r7,#4]
 2195 006e 5A68     	 ldr r2,[r3,#4]
 2196              	 .loc 1 849 31
 2197 0070 BB69     	 ldr r3,[r7,#24]
 2198 0072 1344     	 add r3,r3,r2
 2199 0074 1B78     	 ldrb r3,[r3]
 2200              	 .loc 1 849 5
 2201 0076 002B     	 cmp r3,#0
 2202 0078 13D1     	 bne .L127
 850:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       pool_id->markers[index] = 1;
 2203              	 .loc 1 850 16
 2204 007a 7B68     	 ldr r3,[r7,#4]
 2205 007c 5A68     	 ldr r2,[r3,#4]
ARM GAS   			page 61


 2206              	 .loc 1 850 29
 2207 007e BB69     	 ldr r3,[r7,#24]
 2208 0080 1344     	 add r3,r3,r2
 2209              	 .loc 1 850 31
 2210 0082 0122     	 movs r2,#1
 2211 0084 1A70     	 strb r2,[r3]
 851:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       p = (void *)((uint32_t)(pool_id->pool) + (index * pool_id->item_sz));
 2212              	 .loc 1 851 40
 2213 0086 7B68     	 ldr r3,[r7,#4]
 2214 0088 1B68     	 ldr r3,[r3]
 2215              	 .loc 1 851 46
 2216 008a 1946     	 mov r1,r3
 2217              	 .loc 1 851 66
 2218 008c 7B68     	 ldr r3,[r7,#4]
 2219 008e DB68     	 ldr r3,[r3,#12]
 2220              	 .loc 1 851 55
 2221 0090 BA69     	 ldr r2,[r7,#24]
 2222 0092 02FB03F3 	 mul r3,r2,r3
 2223              	 .loc 1 851 46
 2224 0096 0B44     	 add r3,r3,r1
 2225              	 .loc 1 851 9
 2226 0098 3B62     	 str r3,[r7,#32]
 852:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       pool_id->currentIndex = index;
 2227              	 .loc 1 852 29
 2228 009a 7B68     	 ldr r3,[r7,#4]
 2229 009c BA69     	 ldr r2,[r7,#24]
 2230 009e 1A61     	 str r2,[r3,#16]
 853:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       break;
 2231              	 .loc 1 853 7
 2232 00a0 03E0     	 b .L125
 2233              	.L127:
 843:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     index = pool_id->currentIndex + i;
 2234              	 .loc 1 843 3 discriminator 2
 2235 00a2 FB69     	 ldr r3,[r7,#28]
 2236 00a4 0133     	 adds r3,r3,#1
 2237 00a6 FB61     	 str r3,[r7,#28]
 2238 00a8 CFE7     	 b .L128
 2239              	.L125:
 854:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 855:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 856:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 857:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 2240              	 .loc 1 857 20
 2241 00aa FFF7FEFF 	 bl _ZL13inHandlerModev
 2242 00ae 0346     	 mov r3,r0
 2243 00b0 002B     	 cmp r3,#0
 2244 00b2 14BF     	 ite ne
 2245 00b4 0123     	 movne r3,#1
 2246 00b6 0023     	 moveq r3,#0
 2247 00b8 DBB2     	 uxtb r3,r3
 2248              	 .loc 1 857 3
 2249 00ba 002B     	 cmp r3,#0
 2250 00bc 05D0     	 beq .L129
 858:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR(dummy);
 2251              	 .loc 1 858 5
 2252 00be 7B6A     	 ldr r3,[r7,#36]
 2253 00c0 FB60     	 str r3,[r7,#12]
ARM GAS   			page 62


 2254              	.LBB12:
 2255              	.LBB13:
 244:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 245:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 246:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 247:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 248:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 2256              	 .loc 3 249 2
 2257 00c2 FB68     	 ldr r3,[r7,#12]
 2258              	 .syntax unified
 2259              	
 2260 00c4 83F31188 	 msr basepri,r3
 2261              	
 250:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 251:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue )
 252:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 253:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 2262              	 .loc 3 253 1
 2263              	 .thumb
 2264              	 .syntax unified
 2265 00c8 01E0     	 b .L130
 2266              	.L129:
 2267              	.LBE13:
 2268              	.LBE12:
 859:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 860:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 861:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vPortExitCritical();
 2269              	 .loc 1 861 22
 2270 00ca FFF7FEFF 	 bl vPortExitCritical
 2271              	.L130:
 862:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 863:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 864:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return p;
 2272              	 .loc 1 864 10
 2273 00ce 3B6A     	 ldr r3,[r7,#32]
 865:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2274              	 .loc 1 865 1
 2275 00d0 1846     	 mov r0,r3
 2276 00d2 2837     	 adds r7,r7,#40
 2277              	 .cfi_def_cfa_offset 8
 2278 00d4 BD46     	 mov sp,r7
 2279              	 .cfi_def_cfa_register 13
 2280              	 
 2281 00d6 80BD     	 pop {r7,pc}
 2282              	 .cfi_endproc
 2283              	.LFE57:
 2284              	 .fnend
 2285              	 .size osPoolAlloc,.-osPoolAlloc
 2286              	 .section .text.osPoolCAlloc,"ax",%progbits
 2287              	 .align 1
 2288              	 .global osPoolCAlloc
 2289              	 .syntax unified
 2290              	 .thumb
 2291              	 .thumb_func
 2292              	 .type osPoolCAlloc,%function
 2293              	osPoolCAlloc:
ARM GAS   			page 63


 2294              	 .fnstart
 2295              	.LFB58:
 866:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 867:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 868:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Allocate a memory block from a memory pool and set memory block to zero
 869:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 870:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 871:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCAlloc shall be consistent in every CMSIS-RTOS.
 872:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 873:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** void *osPoolCAlloc (osPoolId pool_id)
 874:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2296              	 .loc 1 874 1
 2297              	 .cfi_startproc
 2298              	 
 2299              	 
 2300 0000 80B5     	 push {r7,lr}
 2301              	 .save {r7,lr}
 2302              	 .cfi_def_cfa_offset 8
 2303              	 .cfi_offset 7,-8
 2304              	 .cfi_offset 14,-4
 2305              	 .pad #16
 2306 0002 84B0     	 sub sp,sp,#16
 2307              	 .cfi_def_cfa_offset 24
 2308              	 .setfp r7,sp,#0
 2309 0004 00AF     	 add r7,sp,#0
 2310              	 .cfi_def_cfa_register 7
 2311 0006 7860     	 str r0,[r7,#4]
 875:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   void *p = osPoolAlloc(pool_id);
 2312              	 .loc 1 875 24
 2313 0008 7868     	 ldr r0,[r7,#4]
 2314 000a FFF7FEFF 	 bl osPoolAlloc
 2315 000e 0346     	 mov r3,r0
 2316 0010 FB60     	 str r3,[r7,#12]
 876:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 877:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (p != NULL)
 2317              	 .loc 1 877 3
 2318 0012 FB68     	 ldr r3,[r7,#12]
 2319 0014 002B     	 cmp r3,#0
 2320 0016 04D0     	 beq .L133
 878:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
 879:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     memset(p, 0, sizeof(pool_id->pool_sz));
 2321              	 .loc 1 879 11
 2322 0018 0422     	 movs r2,#4
 2323 001a 0021     	 movs r1,#0
 2324 001c F868     	 ldr r0,[r7,#12]
 2325 001e FFF7FEFF 	 bl memset
 2326              	.L133:
 880:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 881:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 882:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return p;
 2327              	 .loc 1 882 10
 2328 0022 FB68     	 ldr r3,[r7,#12]
 883:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2329              	 .loc 1 883 1
 2330 0024 1846     	 mov r0,r3
 2331 0026 1037     	 adds r7,r7,#16
 2332              	 .cfi_def_cfa_offset 8
ARM GAS   			page 64


 2333 0028 BD46     	 mov sp,r7
 2334              	 .cfi_def_cfa_register 13
 2335              	 
 2336 002a 80BD     	 pop {r7,pc}
 2337              	 .cfi_endproc
 2338              	.LFE58:
 2339              	 .fnend
 2340              	 .size osPoolCAlloc,.-osPoolCAlloc
 2341              	 .section .text.osPoolFree,"ax",%progbits
 2342              	 .align 1
 2343              	 .global osPoolFree
 2344              	 .syntax unified
 2345              	 .thumb
 2346              	 .thumb_func
 2347              	 .type osPoolFree,%function
 2348              	osPoolFree:
 2349              	 .fnstart
 2350              	.LFB59:
 884:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 885:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 886:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Return an allocated memory block back to a specific memory pool
 887:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 888:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  block         address of the allocated memory block that is returned to the memory pool.
 889:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 890:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolFree shall be consistent in every CMSIS-RTOS.
 891:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 892:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osPoolFree (osPoolId pool_id, void *block)
 893:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2351              	 .loc 1 893 1
 2352              	 .cfi_startproc
 2353              	 
 2354              	 
 2355              	 
 2356 0000 80B4     	 push {r7}
 2357              	 .cfi_def_cfa_offset 4
 2358              	 .cfi_offset 7,-4
 2359 0002 85B0     	 sub sp,sp,#20
 2360              	 .cfi_def_cfa_offset 24
 2361 0004 00AF     	 add r7,sp,#0
 2362              	 .cfi_def_cfa_register 7
 2363 0006 7860     	 str r0,[r7,#4]
 2364 0008 3960     	 str r1,[r7]
 894:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t index;
 895:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 896:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (pool_id == NULL) {
 2365              	 .loc 1 896 3
 2366 000a 7B68     	 ldr r3,[r7,#4]
 2367 000c 002B     	 cmp r3,#0
 2368 000e 01D1     	 bne .L136
 897:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 2369              	 .loc 1 897 12
 2370 0010 8023     	 movs r3,#128
 2371 0012 30E0     	 b .L137
 2372              	.L136:
 898:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 899:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 900:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (block == NULL) {
ARM GAS   			page 65


 2373              	 .loc 1 900 3
 2374 0014 3B68     	 ldr r3,[r7]
 2375 0016 002B     	 cmp r3,#0
 2376 0018 01D1     	 bne .L138
 901:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 2377              	 .loc 1 901 12
 2378 001a 8023     	 movs r3,#128
 2379 001c 2BE0     	 b .L137
 2380              	.L138:
 902:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 903:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 904:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (block < pool_id->pool) {
 2381              	 .loc 1 904 24
 2382 001e 7B68     	 ldr r3,[r7,#4]
 2383 0020 1B68     	 ldr r3,[r3]
 2384              	 .loc 1 904 3
 2385 0022 3A68     	 ldr r2,[r7]
 2386 0024 9A42     	 cmp r2,r3
 2387 0026 01D2     	 bcs .L139
 905:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 2388              	 .loc 1 905 12
 2389 0028 8023     	 movs r3,#128
 2390 002a 24E0     	 b .L137
 2391              	.L139:
 906:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 907:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 908:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   index = (uint32_t)block - (uint32_t)(pool_id->pool);
 2392              	 .loc 1 908 27
 2393 002c 3B68     	 ldr r3,[r7]
 2394              	 .loc 1 908 49
 2395 002e 7A68     	 ldr r2,[r7,#4]
 2396 0030 1268     	 ldr r2,[r2]
 2397              	 .loc 1 908 9
 2398 0032 9B1A     	 subs r3,r3,r2
 2399 0034 FB60     	 str r3,[r7,#12]
 909:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (index % pool_id->item_sz) {
 2400              	 .loc 1 909 24
 2401 0036 7B68     	 ldr r3,[r7,#4]
 2402 0038 DA68     	 ldr r2,[r3,#12]
 2403              	 .loc 1 909 13
 2404 003a FB68     	 ldr r3,[r7,#12]
 2405 003c B3FBF2F1 	 udiv r1,r3,r2
 2406 0040 01FB02F2 	 mul r2,r1,r2
 2407 0044 9B1A     	 subs r3,r3,r2
 2408              	 .loc 1 909 3
 2409 0046 002B     	 cmp r3,#0
 2410 0048 01D0     	 beq .L140
 910:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 2411              	 .loc 1 910 12
 2412 004a 8023     	 movs r3,#128
 2413 004c 13E0     	 b .L137
 2414              	.L140:
 911:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 912:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   index = index / pool_id->item_sz;
 2415              	 .loc 1 912 28
 2416 004e 7B68     	 ldr r3,[r7,#4]
 2417 0050 DB68     	 ldr r3,[r3,#12]
ARM GAS   			page 66


 2418              	 .loc 1 912 9
 2419 0052 FA68     	 ldr r2,[r7,#12]
 2420 0054 B2FBF3F3 	 udiv r3,r2,r3
 2421 0058 FB60     	 str r3,[r7,#12]
 913:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (index >= pool_id->pool_sz) {
 2422              	 .loc 1 913 25
 2423 005a 7B68     	 ldr r3,[r7,#4]
 2424 005c 9B68     	 ldr r3,[r3,#8]
 2425              	 .loc 1 913 3
 2426 005e FA68     	 ldr r2,[r7,#12]
 2427 0060 9A42     	 cmp r2,r3
 2428 0062 01D3     	 bcc .L141
 914:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 2429              	 .loc 1 914 12
 2430 0064 8023     	 movs r3,#128
 2431 0066 06E0     	 b .L137
 2432              	.L141:
 915:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 916:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 917:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   pool_id->markers[index] = 0;
 2433              	 .loc 1 917 12
 2434 0068 7B68     	 ldr r3,[r7,#4]
 2435 006a 5A68     	 ldr r2,[r3,#4]
 2436              	 .loc 1 917 25
 2437 006c FB68     	 ldr r3,[r7,#12]
 2438 006e 1344     	 add r3,r3,r2
 2439              	 .loc 1 917 27
 2440 0070 0022     	 movs r2,#0
 2441 0072 1A70     	 strb r2,[r3]
 918:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 919:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 2442              	 .loc 1 919 10
 2443 0074 0023     	 movs r3,#0
 2444              	.L137:
 920:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2445              	 .loc 1 920 1
 2446 0076 1846     	 mov r0,r3
 2447 0078 1437     	 adds r7,r7,#20
 2448              	 .cfi_def_cfa_offset 4
 2449 007a BD46     	 mov sp,r7
 2450              	 .cfi_def_cfa_register 13
 2451              	 
 2452 007c 5DF8047B 	 ldr r7,[sp],#4
 2453              	 .cfi_restore 7
 2454              	 .cfi_def_cfa_offset 0
 2455 0080 7047     	 bx lr
 2456              	 .cfi_endproc
 2457              	.LFE59:
 2458              	 .cantunwind
 2459              	 .fnend
 2460              	 .size osPoolFree,.-osPoolFree
 2461              	 .section .text.osMessageCreate,"ax",%progbits
 2462              	 .align 1
 2463              	 .global osMessageCreate
 2464              	 .syntax unified
 2465              	 .thumb
 2466              	 .thumb_func
ARM GAS   			page 67


 2467              	 .type osMessageCreate,%function
 2468              	osMessageCreate:
 2469              	 .fnstart
 2470              	.LFB60:
 921:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 922:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 923:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif   /* Use Memory Pool Management */
 924:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 925:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*******************   Message Queue Management Functions  *********************/
 926:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 927:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_MessageQ)  &&  (osFeature_MessageQ != 0)) /* Use Message Queues */
 928:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 929:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 930:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Create and Initialize a Message Queue
 931:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param queue_def     queue definition referenced with \ref osMessageQ.
 932:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
 933:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  message queue ID for reference by other functions or NULL in case of error.
 934:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageCreate shall be consistent in every CMSIS-RTOS.
 935:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 936:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osMessageQId osMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id)
 937:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2471              	 .loc 1 937 1
 2472              	 .cfi_startproc
 2473              	 
 2474              	 
 2475 0000 80B5     	 push {r7,lr}
 2476              	 .save {r7,lr}
 2477              	 .cfi_def_cfa_offset 8
 2478              	 .cfi_offset 7,-8
 2479              	 .cfi_offset 14,-4
 2480              	 .pad #8
 2481 0002 82B0     	 sub sp,sp,#8
 2482              	 .cfi_def_cfa_offset 16
 2483              	 .setfp r7,sp,#0
 2484 0004 00AF     	 add r7,sp,#0
 2485              	 .cfi_def_cfa_register 7
 2486 0006 7860     	 str r0,[r7,#4]
 2487 0008 3960     	 str r1,[r7]
 938:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) thread_id;
 939:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 940:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xQueueCreate(queue_def->queue_sz, queue_def->item_sz);
 2488              	 .loc 1 940 10
 2489 000a 7B68     	 ldr r3,[r7,#4]
 2490 000c 1868     	 ldr r0,[r3]
 2491 000e 7B68     	 ldr r3,[r7,#4]
 2492 0010 5B68     	 ldr r3,[r3,#4]
 2493 0012 0022     	 movs r2,#0
 2494 0014 1946     	 mov r1,r3
 2495 0016 FFF7FEFF 	 bl xQueueGenericCreate
 2496 001a 0346     	 mov r3,r0
 941:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2497              	 .loc 1 941 1
 2498 001c 1846     	 mov r0,r3
 2499 001e 0837     	 adds r7,r7,#8
 2500              	 .cfi_def_cfa_offset 8
 2501 0020 BD46     	 mov sp,r7
 2502              	 .cfi_def_cfa_register 13
ARM GAS   			page 68


 2503              	 
 2504 0022 80BD     	 pop {r7,pc}
 2505              	 .cfi_endproc
 2506              	.LFE60:
 2507              	 .fnend
 2508              	 .size osMessageCreate,.-osMessageCreate
 2509              	 .section .text.osMessagePut,"ax",%progbits
 2510              	 .align 1
 2511              	 .global osMessagePut
 2512              	 .syntax unified
 2513              	 .thumb
 2514              	 .thumb_func
 2515              	 .type osMessagePut,%function
 2516              	osMessagePut:
 2517              	 .fnstart
 2518              	.LFB61:
 942:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 943:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 944:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Put a Message to a Queue.
 945:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
 946:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  info      message information.
 947:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
 948:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 949:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessagePut shall be consistent in every CMSIS-RTOS.
 950:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 951:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec)
 952:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2519              	 .loc 1 952 1
 2520              	 .cfi_startproc
 2521              	 
 2522              	 
 2523 0000 80B5     	 push {r7,lr}
 2524              	 .save {r7,lr}
 2525              	 .cfi_def_cfa_offset 8
 2526              	 .cfi_offset 7,-8
 2527              	 .cfi_offset 14,-4
 2528              	 .pad #24
 2529 0002 86B0     	 sub sp,sp,#24
 2530              	 .cfi_def_cfa_offset 32
 2531              	 .setfp r7,sp,#0
 2532 0004 00AF     	 add r7,sp,#0
 2533              	 .cfi_def_cfa_register 7
 2534 0006 F860     	 str r0,[r7,#12]
 2535 0008 B960     	 str r1,[r7,#8]
 2536 000a 7A60     	 str r2,[r7,#4]
 953:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 2537              	 .loc 1 953 17
 2538 000c 0023     	 movs r3,#0
 2539 000e 3B61     	 str r3,[r7,#16]
 954:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
 955:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 956:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = millisec / portTICK_PERIOD_MS;
 2540              	 .loc 1 956 9
 2541 0010 7B68     	 ldr r3,[r7,#4]
 2542 0012 7B61     	 str r3,[r7,#20]
 957:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (ticks == 0) {
 2543              	 .loc 1 957 3
ARM GAS   			page 69


 2544 0014 7B69     	 ldr r3,[r7,#20]
 2545 0016 002B     	 cmp r3,#0
 2546 0018 01D1     	 bne .L145
 958:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = 1;
 2547              	 .loc 1 958 11
 2548 001a 0123     	 movs r3,#1
 2549 001c 7B61     	 str r3,[r7,#20]
 2550              	.L145:
 959:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 960:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 961:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 2551              	 .loc 1 961 20
 2552 001e FFF7FEFF 	 bl _ZL13inHandlerModev
 2553 0022 0346     	 mov r3,r0
 2554 0024 002B     	 cmp r3,#0
 2555 0026 14BF     	 ite ne
 2556 0028 0123     	 movne r3,#1
 2557 002a 0023     	 moveq r3,#0
 2558 002c DBB2     	 uxtb r3,r3
 2559              	 .loc 1 961 3
 2560 002e 002B     	 cmp r3,#0
 2561 0030 1DD0     	 beq .L146
 962:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueSendFromISR(queue_id, &info, &taskWoken) != pdTRUE) {
 2562              	 .loc 1 962 9
 2563 0032 07F11002 	 add r2,r7,#16
 2564 0036 07F10801 	 add r1,r7,#8
 2565 003a 0023     	 movs r3,#0
 2566 003c F868     	 ldr r0,[r7,#12]
 2567 003e FFF7FEFF 	 bl xQueueGenericSendFromISR
 2568 0042 0346     	 mov r3,r0
 2569              	 .loc 1 962 56
 2570 0044 012B     	 cmp r3,#1
 2571 0046 14BF     	 ite ne
 2572 0048 0123     	 movne r3,#1
 2573 004a 0023     	 moveq r3,#0
 2574 004c DBB2     	 uxtb r3,r3
 2575              	 .loc 1 962 5
 2576 004e 002B     	 cmp r3,#0
 2577 0050 01D0     	 beq .L147
 963:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 2578              	 .loc 1 963 14
 2579 0052 FF23     	 movs r3,#255
 2580 0054 1DE0     	 b .L150
 2581              	.L147:
 964:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 965:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2582              	 .loc 1 965 5
 2583 0056 3B69     	 ldr r3,[r7,#16]
 2584 0058 002B     	 cmp r3,#0
 2585 005a 19D0     	 beq .L149
 2586              	 .loc 1 965 5 is_stmt 0 discriminator 1
 2587 005c 0F4B     	 ldr r3,.L151
 2588 005e 4FF08052 	 mov r2,#268435456
 2589 0062 1A60     	 str r2,[r3]
 2590              	 .syntax unified
 2591              	
 2592 0064 BFF34F8F 	 dsb
ARM GAS   			page 70


 2593              	
 2594              	
 2595 0068 BFF36F8F 	 isb
 2596              	
 2597              	 .thumb
 2598              	 .syntax unified
 2599 006c 10E0     	 b .L149
 2600              	.L146:
 966:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 967:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
 968:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueSend(queue_id, &info, ticks) != pdTRUE) {
 2601              	 .loc 1 968 9 is_stmt 1
 2602 006e 07F10801 	 add r1,r7,#8
 2603 0072 0023     	 movs r3,#0
 2604 0074 7A69     	 ldr r2,[r7,#20]
 2605 0076 F868     	 ldr r0,[r7,#12]
 2606 0078 FFF7FEFF 	 bl xQueueGenericSend
 2607 007c 0346     	 mov r3,r0
 2608              	 .loc 1 968 44
 2609 007e 012B     	 cmp r3,#1
 2610 0080 14BF     	 ite ne
 2611 0082 0123     	 movne r3,#1
 2612 0084 0023     	 moveq r3,#0
 2613 0086 DBB2     	 uxtb r3,r3
 2614              	 .loc 1 968 5
 2615 0088 002B     	 cmp r3,#0
 2616 008a 01D0     	 beq .L149
 969:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 2617              	 .loc 1 969 14
 2618 008c FF23     	 movs r3,#255
 2619 008e 00E0     	 b .L150
 2620              	.L149:
 970:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 971:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 972:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 973:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 2621              	 .loc 1 973 10
 2622 0090 0023     	 movs r3,#0
 2623              	.L150:
 974:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2624              	 .loc 1 974 1 discriminator 1
 2625 0092 1846     	 mov r0,r3
 2626 0094 1837     	 adds r7,r7,#24
 2627              	 .cfi_def_cfa_offset 8
 2628 0096 BD46     	 mov sp,r7
 2629              	 .cfi_def_cfa_register 13
 2630              	 
 2631 0098 80BD     	 pop {r7,pc}
 2632              	.L152:
 2633 009a 00BF     	 .align 2
 2634              	.L151:
 2635 009c 04ED00E0 	 .word -536810236
 2636              	 .cfi_endproc
 2637              	.LFE61:
 2638              	 .fnend
 2639              	 .size osMessagePut,.-osMessagePut
 2640              	 .section .text.osMessageGet,"ax",%progbits
ARM GAS   			page 71


 2641              	 .align 1
 2642              	 .global osMessageGet
 2643              	 .syntax unified
 2644              	 .thumb
 2645              	 .thumb_func
 2646              	 .type osMessageGet,%function
 2647              	osMessageGet:
 2648              	 .fnstart
 2649              	.LFB62:
 975:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
 976:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
 977:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Get a Message or Wait for a Message from a Queue.
 978:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
 979:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
 980:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval event information that includes status code.
 981:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageGet shall be consistent in every CMSIS-RTOS.
 982:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
 983:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osEvent osMessageGet (osMessageQId queue_id, uint32_t millisec)
 984:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2650              	 .loc 1 984 1
 2651              	 .cfi_startproc
 2652              	 
 2653              	 
 2654 0000 80B5     	 push {r7,lr}
 2655              	 .save {r7,lr}
 2656              	 .cfi_def_cfa_offset 8
 2657              	 .cfi_offset 7,-8
 2658              	 .cfi_offset 14,-4
 2659              	 .pad #24
 2660 0002 86B0     	 sub sp,sp,#24
 2661              	 .cfi_def_cfa_offset 32
 2662              	 .setfp r7,sp,#0
 2663 0004 00AF     	 add r7,sp,#0
 2664              	 .cfi_def_cfa_register 7
 2665 0006 F860     	 str r0,[r7,#12]
 2666 0008 B960     	 str r1,[r7,#8]
 2667 000a 7A60     	 str r2,[r7,#4]
 985:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken;
 986:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
 987:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osEvent event;
 988:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 989:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   event.def.message_id = queue_id;
 2668              	 .loc 1 989 24
 2669 000c FB68     	 ldr r3,[r7,#12]
 2670 000e BA68     	 ldr r2,[r7,#8]
 2671 0010 9A60     	 str r2,[r3,#8]
 990:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   event.value.v = 0;
 2672              	 .loc 1 990 17
 2673 0012 FB68     	 ldr r3,[r7,#12]
 2674 0014 0022     	 movs r2,#0
 2675 0016 5A60     	 str r2,[r3,#4]
 991:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 992:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 2676              	 .loc 1 992 3
 2677 0018 BB68     	 ldr r3,[r7,#8]
 2678 001a 002B     	 cmp r3,#0
 2679 001c 03D1     	 bne .L154
ARM GAS   			page 72


 993:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     event.status = osErrorParameter;
 2680              	 .loc 1 993 18
 2681 001e FB68     	 ldr r3,[r7,#12]
 2682 0020 8022     	 movs r2,#128
 2683 0022 1A60     	 str r2,[r3]
 994:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return event;
 2684              	 .loc 1 994 12
 2685 0024 5EE0     	 b .L165
 2686              	.L154:
 995:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 996:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 997:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   taskWoken = pdFALSE;
 2687              	 .loc 1 997 13
 2688 0026 0023     	 movs r3,#0
 2689 0028 3B61     	 str r3,[r7,#16]
 998:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
 999:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 2690              	 .loc 1 999 9
 2691 002a 0023     	 movs r3,#0
 2692 002c 7B61     	 str r3,[r7,#20]
1000:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 2693              	 .loc 1 1000 3
 2694 002e 7B68     	 ldr r3,[r7,#4]
 2695 0030 B3F1FF3F 	 cmp r3,#-1
 2696 0034 03D1     	 bne .L156
1001:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 2697              	 .loc 1 1001 11
 2698 0036 4FF0FF33 	 mov r3,#-1
 2699 003a 7B61     	 str r3,[r7,#20]
 2700 003c 09E0     	 b .L157
 2701              	.L156:
1002:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1003:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 2702              	 .loc 1 1003 8
 2703 003e 7B68     	 ldr r3,[r7,#4]
 2704 0040 002B     	 cmp r3,#0
 2705 0042 06D0     	 beq .L157
1004:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 2706              	 .loc 1 1004 11
 2707 0044 7B68     	 ldr r3,[r7,#4]
 2708 0046 7B61     	 str r3,[r7,#20]
1005:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 2709              	 .loc 1 1005 5
 2710 0048 7B69     	 ldr r3,[r7,#20]
 2711 004a 002B     	 cmp r3,#0
 2712 004c 01D1     	 bne .L157
1006:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 2713              	 .loc 1 1006 13
 2714 004e 0123     	 movs r3,#1
 2715 0050 7B61     	 str r3,[r7,#20]
 2716              	.L157:
1007:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1008:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1009:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1010:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 2717              	 .loc 1 1010 20
 2718 0052 FFF7FEFF 	 bl _ZL13inHandlerModev
ARM GAS   			page 73


 2719 0056 0346     	 mov r3,r0
 2720 0058 002B     	 cmp r3,#0
 2721 005a 14BF     	 ite ne
 2722 005c 0123     	 movne r3,#1
 2723 005e 0023     	 moveq r3,#0
 2724 0060 DBB2     	 uxtb r3,r3
 2725              	 .loc 1 1010 3
 2726 0062 002B     	 cmp r3,#0
 2727 0064 22D0     	 beq .L158
1011:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id, &event.value.v, &taskWoken) == pdTRUE) {
 2728              	 .loc 1 1011 29
 2729 0066 07F11002 	 add r2,r7,#16
 2730 006a FB68     	 ldr r3,[r7,#12]
 2731 006c 0433     	 adds r3,r3,#4
 2732 006e 1946     	 mov r1,r3
 2733 0070 B868     	 ldr r0,[r7,#8]
 2734 0072 FFF7FEFF 	 bl xQueueReceiveFromISR
 2735 0076 0346     	 mov r3,r0
 2736              	 .loc 1 1011 68
 2737 0078 012B     	 cmp r3,#1
 2738 007a 0CBF     	 ite eq
 2739 007c 0123     	 moveq r3,#1
 2740 007e 0023     	 movne r3,#0
 2741 0080 DBB2     	 uxtb r3,r3
 2742              	 .loc 1 1011 5
 2743 0082 002B     	 cmp r3,#0
 2744 0084 03D0     	 beq .L159
1012:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
1013:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osEventMessage;
 2745              	 .loc 1 1013 20
 2746 0086 FB68     	 ldr r3,[r7,#12]
 2747 0088 1022     	 movs r2,#16
 2748 008a 1A60     	 str r2,[r3]
 2749 008c 02E0     	 b .L160
 2750              	.L159:
1014:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1015:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else {
1016:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osOK;
 2751              	 .loc 1 1016 20
 2752 008e FB68     	 ldr r3,[r7,#12]
 2753 0090 0022     	 movs r2,#0
 2754 0092 1A60     	 str r2,[r3]
 2755              	.L160:
1017:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1018:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2756              	 .loc 1 1018 5
 2757 0094 3B69     	 ldr r3,[r7,#16]
 2758 0096 002B     	 cmp r3,#0
 2759 0098 23D0     	 beq .L166
 2760              	 .loc 1 1018 5 is_stmt 0 discriminator 1
 2761 009a 144B     	 ldr r3,.L167
 2762 009c 4FF08052 	 mov r2,#268435456
 2763 00a0 1A60     	 str r2,[r3]
 2764              	 .syntax unified
 2765              	
 2766 00a2 BFF34F8F 	 dsb
 2767              	
ARM GAS   			page 74


 2768              	
 2769 00a6 BFF36F8F 	 isb
 2770              	
1019:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1020:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueReceive(queue_id, &event.value.v, ticks) == pdTRUE) {
1022:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
1023:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osEventMessage;
1024:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1025:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else {
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
1027:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1028:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1029:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1030:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return event;
 2771              	 .loc 1 1030 10 is_stmt 1 discriminator 1
 2772              	 .thumb
 2773              	 .syntax unified
 2774 00aa 1AE0     	 b .L166
 2775              	.L158:
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 2776              	 .loc 1 1021 9
 2777 00ac FB68     	 ldr r3,[r7,#12]
 2778 00ae 191D     	 adds r1,r3,#4
 2779 00b0 0023     	 movs r3,#0
 2780 00b2 7A69     	 ldr r2,[r7,#20]
 2781 00b4 B868     	 ldr r0,[r7,#8]
 2782 00b6 FFF7FEFF 	 bl xQueueGenericReceive
 2783 00ba 0346     	 mov r3,r0
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 2784              	 .loc 1 1021 56
 2785 00bc 012B     	 cmp r3,#1
 2786 00be 0CBF     	 ite eq
 2787 00c0 0123     	 moveq r3,#1
 2788 00c2 0023     	 movne r3,#0
 2789 00c4 DBB2     	 uxtb r3,r3
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 2790              	 .loc 1 1021 5
 2791 00c6 002B     	 cmp r3,#0
 2792 00c8 03D0     	 beq .L162
1023:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 2793              	 .loc 1 1023 20
 2794 00ca FB68     	 ldr r3,[r7,#12]
 2795 00cc 1022     	 movs r2,#16
 2796 00ce 1A60     	 str r2,[r3]
 2797              	 .loc 1 1030 10
 2798 00d0 07E0     	 b .L166
 2799              	.L162:
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 2800              	 .loc 1 1026 35
 2801 00d2 7B69     	 ldr r3,[r7,#20]
 2802 00d4 002B     	 cmp r3,#0
 2803 00d6 01D1     	 bne .L163
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 2804              	 .loc 1 1026 35 is_stmt 0 discriminator 1
 2805 00d8 0022     	 movs r2,#0
 2806 00da 00E0     	 b .L164
ARM GAS   			page 75


 2807              	.L163:
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 2808              	 .loc 1 1026 35 discriminator 2
 2809 00dc 4022     	 movs r2,#64
 2810              	.L164:
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 2811              	 .loc 1 1026 20 is_stmt 1 discriminator 4
 2812 00de FB68     	 ldr r3,[r7,#12]
 2813 00e0 1A60     	 str r2,[r3]
 2814              	.L166:
 2815              	 .loc 1 1030 10
 2816 00e2 00BF     	 nop
 2817              	.L165:
1031:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2818              	 .loc 1 1031 1 discriminator 3
 2819 00e4 F868     	 ldr r0,[r7,#12]
 2820 00e6 1837     	 adds r7,r7,#24
 2821              	 .cfi_def_cfa_offset 8
 2822 00e8 BD46     	 mov sp,r7
 2823              	 .cfi_def_cfa_register 13
 2824              	 
 2825 00ea 80BD     	 pop {r7,pc}
 2826              	.L168:
 2827              	 .align 2
 2828              	.L167:
 2829 00ec 04ED00E0 	 .word -536810236
 2830              	 .cfi_endproc
 2831              	.LFE62:
 2832              	 .fnend
 2833              	 .size osMessageGet,.-osMessageGet
 2834              	 .section .text.osMailCreate,"ax",%progbits
 2835              	 .align 1
 2836              	 .global osMailCreate
 2837              	 .syntax unified
 2838              	 .thumb
 2839              	 .thumb_func
 2840              	 .type osMailCreate,%function
 2841              	osMailCreate:
 2842              	 .fnstart
 2843              	.LFB63:
1032:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1033:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif     /* Use Message Queues */
1034:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1035:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /********************   Mail Queue Management Functions  ***********************/
1036:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (defined (osFeature_MailQ)  &&  (osFeature_MailQ != 0))  /* Use Mail Queues */
1037:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1038:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1039:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** typedef struct os_mailQ_cb {
1040:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   const osMailQDef_t *queue_def;
1041:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   QueueHandle_t handle;
1042:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osPoolId pool;
1043:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** } os_mailQ_cb_t;
1044:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1045:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1046:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Create and Initialize mail queue
1047:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_def     reference to the mail queue definition obtain with \ref osMailQ
1048:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
ARM GAS   			page 76


1049:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval mail queue ID for reference by other functions or NULL in case of error.
1050:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCreate shall be consistent in every CMSIS-RTOS.
1051:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1052:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osMailQId osMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id)
1053:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 2844              	 .loc 1 1053 1
 2845              	 .cfi_startproc
 2846              	 
 2847              	 
 2848 0000 90B5     	 push {r4,r7,lr}
 2849              	 .save {r4,r7,lr}
 2850              	 .cfi_def_cfa_offset 12
 2851              	 .cfi_offset 4,-12
 2852              	 .cfi_offset 7,-8
 2853              	 .cfi_offset 14,-4
 2854              	 .pad #28
 2855 0002 87B0     	 sub sp,sp,#28
 2856              	 .cfi_def_cfa_offset 40
 2857              	 .setfp r7,sp,#0
 2858 0004 00AF     	 add r7,sp,#0
 2859              	 .cfi_def_cfa_register 7
 2860 0006 7860     	 str r0,[r7,#4]
 2861 0008 3960     	 str r1,[r7]
1054:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) thread_id;
1055:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1056:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osPoolDef_t pool_def = {queue_def->queue_sz, queue_def->item_sz, NULL};
 2862              	 .loc 1 1056 15
 2863 000a 07F10C03 	 add r3,r7,#12
 2864 000e 0022     	 movs r2,#0
 2865 0010 1A60     	 str r2,[r3]
 2866 0012 5A60     	 str r2,[r3,#4]
 2867 0014 9A60     	 str r2,[r3,#8]
 2868              	 .loc 1 1056 38
 2869 0016 7B68     	 ldr r3,[r7,#4]
 2870 0018 1B68     	 ldr r3,[r3]
 2871              	 .loc 1 1056 72
 2872 001a FB60     	 str r3,[r7,#12]
 2873              	 .loc 1 1056 59
 2874 001c 7B68     	 ldr r3,[r7,#4]
 2875 001e 5B68     	 ldr r3,[r3,#4]
 2876              	 .loc 1 1056 72
 2877 0020 3B61     	 str r3,[r7,#16]
1057:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1058:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1059:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   /* Create a mail queue control block */
1060:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   *(queue_def->cb) = (struct os_mailQ_cb*)pvPortMalloc(sizeof(struct os_mailQ_cb));
 2878              	 .loc 1 1060 16
 2879 0022 7B68     	 ldr r3,[r7,#4]
 2880 0024 9C68     	 ldr r4,[r3,#8]
 2881              	 .loc 1 1060 55
 2882 0026 0C20     	 movs r0,#12
 2883 0028 FFF7FEFF 	 bl pvPortMalloc
 2884 002c 0346     	 mov r3,r0
 2885              	 .loc 1 1060 20
 2886 002e 2360     	 str r3,[r4]
1061:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (*(queue_def->cb) == NULL) {
 2887              	 .loc 1 1061 20
ARM GAS   			page 77


 2888 0030 7B68     	 ldr r3,[r7,#4]
 2889 0032 9B68     	 ldr r3,[r3,#8]
 2890              	 .loc 1 1061 7
 2891 0034 1B68     	 ldr r3,[r3]
 2892              	 .loc 1 1061 3
 2893 0036 002B     	 cmp r3,#0
 2894 0038 01D1     	 bne .L170
1062:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return NULL;
 2895              	 .loc 1 1062 12
 2896 003a 0023     	 movs r3,#0
 2897 003c 38E0     	 b .L174
 2898              	.L170:
1063:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1064:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (*(queue_def->cb))->queue_def = queue_def;
 2899              	 .loc 1 1064 17
 2900 003e 7B68     	 ldr r3,[r7,#4]
 2901 0040 9B68     	 ldr r3,[r3,#8]
 2902              	 .loc 1 1064 4
 2903 0042 1B68     	 ldr r3,[r3]
 2904              	 .loc 1 1064 33
 2905 0044 7A68     	 ldr r2,[r7,#4]
 2906 0046 1A60     	 str r2,[r3]
1065:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1066:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   /* Create a queue in FreeRTOS */
1067:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (*(queue_def->cb))->handle = xQueueCreate(queue_def->queue_sz, sizeof(void *));
 2907              	 .loc 1 1067 32
 2908 0048 7B68     	 ldr r3,[r7,#4]
 2909 004a 1868     	 ldr r0,[r3]
 2910              	 .loc 1 1067 17
 2911 004c 7B68     	 ldr r3,[r7,#4]
 2912 004e 9B68     	 ldr r3,[r3,#8]
 2913              	 .loc 1 1067 4
 2914 0050 1C68     	 ldr r4,[r3]
 2915              	 .loc 1 1067 32
 2916 0052 0022     	 movs r2,#0
 2917 0054 0421     	 movs r1,#4
 2918 0056 FFF7FEFF 	 bl xQueueGenericCreate
 2919 005a 0346     	 mov r3,r0
 2920              	 .loc 1 1067 30
 2921 005c 6360     	 str r3,[r4,#4]
1068:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if ((*(queue_def->cb))->handle == NULL) {
 2922              	 .loc 1 1068 21
 2923 005e 7B68     	 ldr r3,[r7,#4]
 2924 0060 9B68     	 ldr r3,[r3,#8]
 2925              	 .loc 1 1068 8
 2926 0062 1B68     	 ldr r3,[r3]
 2927              	 .loc 1 1068 27
 2928 0064 5B68     	 ldr r3,[r3,#4]
 2929              	 .loc 1 1068 3
 2930 0066 002B     	 cmp r3,#0
 2931 0068 07D1     	 bne .L172
1069:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vPortFree(*(queue_def->cb));
 2932              	 .loc 1 1069 28
 2933 006a 7B68     	 ldr r3,[r7,#4]
 2934 006c 9B68     	 ldr r3,[r3,#8]
 2935              	 .loc 1 1069 14
 2936 006e 1B68     	 ldr r3,[r3]
ARM GAS   			page 78


 2937 0070 1846     	 mov r0,r3
 2938 0072 FFF7FEFF 	 bl vPortFree
1070:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return NULL;
 2939              	 .loc 1 1070 12
 2940 0076 0023     	 movs r3,#0
 2941 0078 1AE0     	 b .L174
 2942              	.L172:
1071:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1072:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1073:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   /* Create a mail pool */
1074:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (*(queue_def->cb))->pool = osPoolCreate(&pool_def);
 2943              	 .loc 1 1074 17
 2944 007a 7B68     	 ldr r3,[r7,#4]
 2945 007c 9B68     	 ldr r3,[r3,#8]
 2946              	 .loc 1 1074 4
 2947 007e 1C68     	 ldr r4,[r3]
 2948              	 .loc 1 1074 42
 2949 0080 07F10C03 	 add r3,r7,#12
 2950 0084 1846     	 mov r0,r3
 2951 0086 FFF7FEFF 	 bl osPoolCreate
 2952 008a 0346     	 mov r3,r0
 2953              	 .loc 1 1074 28
 2954 008c A360     	 str r3,[r4,#8]
1075:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if ((*(queue_def->cb))->pool == NULL) {
 2955              	 .loc 1 1075 21
 2956 008e 7B68     	 ldr r3,[r7,#4]
 2957 0090 9B68     	 ldr r3,[r3,#8]
 2958              	 .loc 1 1075 8
 2959 0092 1B68     	 ldr r3,[r3]
 2960              	 .loc 1 1075 27
 2961 0094 9B68     	 ldr r3,[r3,#8]
 2962              	 .loc 1 1075 3
 2963 0096 002B     	 cmp r3,#0
 2964 0098 07D1     	 bne .L173
1076:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     //TODO: Delete queue. How to do it in FreeRTOS?
1077:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vPortFree(*(queue_def->cb));
 2965              	 .loc 1 1077 28
 2966 009a 7B68     	 ldr r3,[r7,#4]
 2967 009c 9B68     	 ldr r3,[r3,#8]
 2968              	 .loc 1 1077 14
 2969 009e 1B68     	 ldr r3,[r3]
 2970 00a0 1846     	 mov r0,r3
 2971 00a2 FFF7FEFF 	 bl vPortFree
1078:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return NULL;
 2972              	 .loc 1 1078 12
 2973 00a6 0023     	 movs r3,#0
 2974 00a8 02E0     	 b .L174
 2975              	.L173:
1079:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1080:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1081:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return *(queue_def->cb);
 2976              	 .loc 1 1081 23
 2977 00aa 7B68     	 ldr r3,[r7,#4]
 2978 00ac 9B68     	 ldr r3,[r3,#8]
 2979              	 .loc 1 1081 25
 2980 00ae 1B68     	 ldr r3,[r3]
 2981              	.L174:
ARM GAS   			page 79


1082:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 2982              	 .loc 1 1082 1 discriminator 1
 2983 00b0 1846     	 mov r0,r3
 2984 00b2 1C37     	 adds r7,r7,#28
 2985              	 .cfi_def_cfa_offset 12
 2986 00b4 BD46     	 mov sp,r7
 2987              	 .cfi_def_cfa_register 13
 2988              	 
 2989 00b6 90BD     	 pop {r4,r7,pc}
 2990              	 .cfi_endproc
 2991              	.LFE63:
 2992              	 .fnend
 2993              	 .size osMailCreate,.-osMailCreate
 2994              	 .section .text.osMailAlloc,"ax",%progbits
 2995              	 .align 1
 2996              	 .global osMailAlloc
 2997              	 .syntax unified
 2998              	 .thumb
 2999              	 .thumb_func
 3000              	 .type osMailAlloc,%function
 3001              	osMailAlloc:
 3002              	 .fnstart
 3003              	.LFB64:
1083:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1084:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1085:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Allocate a memory block from a mail
1086:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1087:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1088:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1089:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailAlloc shall be consistent in every CMSIS-RTOS.
1090:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1091:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** void *osMailAlloc (osMailQId queue_id, uint32_t millisec)
1092:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3004              	 .loc 1 1092 1
 3005              	 .cfi_startproc
 3006              	 
 3007              	 
 3008 0000 80B5     	 push {r7,lr}
 3009              	 .save {r7,lr}
 3010              	 .cfi_def_cfa_offset 8
 3011              	 .cfi_offset 7,-8
 3012              	 .cfi_offset 14,-4
 3013              	 .pad #16
 3014 0002 84B0     	 sub sp,sp,#16
 3015              	 .cfi_def_cfa_offset 24
 3016              	 .setfp r7,sp,#0
 3017 0004 00AF     	 add r7,sp,#0
 3018              	 .cfi_def_cfa_register 7
 3019 0006 7860     	 str r0,[r7,#4]
 3020 0008 3960     	 str r1,[r7]
1093:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) millisec;
1094:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   void *p;
1095:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1096:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1097:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 3021              	 .loc 1 1097 3
 3022 000a 7B68     	 ldr r3,[r7,#4]
ARM GAS   			page 80


 3023 000c 002B     	 cmp r3,#0
 3024 000e 01D1     	 bne .L176
1098:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return NULL;
 3025              	 .loc 1 1098 12
 3026 0010 0023     	 movs r3,#0
 3027 0012 07E0     	 b .L177
 3028              	.L176:
1099:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   p = osPoolAlloc(queue_id->pool);
 3029              	 .loc 1 1101 18
 3030 0014 7B68     	 ldr r3,[r7,#4]
 3031 0016 9B68     	 ldr r3,[r3,#8]
 3032 0018 1846     	 mov r0,r3
 3033 001a FFF7FEFF 	 bl osPoolAlloc
 3034 001e 0346     	 mov r3,r0
 3035 0020 FB60     	 str r3,[r7,#12]
1102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return p;
 3036              	 .loc 1 1103 10
 3037 0022 FB68     	 ldr r3,[r7,#12]
 3038              	.L177:
1104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3039              	 .loc 1 1104 1
 3040 0024 1846     	 mov r0,r3
 3041 0026 1037     	 adds r7,r7,#16
 3042              	 .cfi_def_cfa_offset 8
 3043 0028 BD46     	 mov sp,r7
 3044              	 .cfi_def_cfa_register 13
 3045              	 
 3046 002a 80BD     	 pop {r7,pc}
 3047              	 .cfi_endproc
 3048              	.LFE64:
 3049              	 .fnend
 3050              	 .size osMailAlloc,.-osMailAlloc
 3051              	 .section .text.osMailCAlloc,"ax",%progbits
 3052              	 .align 1
 3053              	 .global osMailCAlloc
 3054              	 .syntax unified
 3055              	 .thumb
 3056              	 .thumb_func
 3057              	 .type osMailCAlloc,%function
 3058              	osMailCAlloc:
 3059              	 .fnstart
 3060              	.LFB65:
1105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Allocate a memory block from a mail and set memory block to zero
1108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCAlloc shall be consistent in every CMSIS-RTOS.
1112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** void *osMailCAlloc (osMailQId queue_id, uint32_t millisec)
1114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3061              	 .loc 1 1114 1
 3062              	 .cfi_startproc
ARM GAS   			page 81


 3063              	 
 3064              	 
 3065 0000 80B5     	 push {r7,lr}
 3066              	 .save {r7,lr}
 3067              	 .cfi_def_cfa_offset 8
 3068              	 .cfi_offset 7,-8
 3069              	 .cfi_offset 14,-4
 3070              	 .pad #16
 3071 0002 84B0     	 sub sp,sp,#16
 3072              	 .cfi_def_cfa_offset 24
 3073              	 .setfp r7,sp,#0
 3074 0004 00AF     	 add r7,sp,#0
 3075              	 .cfi_def_cfa_register 7
 3076 0006 7860     	 str r0,[r7,#4]
 3077 0008 3960     	 str r1,[r7]
1115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   uint32_t i;
1116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   void *p = osMailAlloc(queue_id, millisec);
 3078              	 .loc 1 1116 24
 3079 000a 3968     	 ldr r1,[r7]
 3080 000c 7868     	 ldr r0,[r7,#4]
 3081 000e FFF7FEFF 	 bl osMailAlloc
 3082 0012 0346     	 mov r3,r0
 3083 0014 BB60     	 str r3,[r7,#8]
1117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (p) {
 3084              	 .loc 1 1118 3
 3085 0016 BB68     	 ldr r3,[r7,#8]
 3086 0018 002B     	 cmp r3,#0
 3087 001a 0DD0     	 beq .L179
1119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     for (i = 0; i < sizeof(queue_id->queue_def->item_sz); i++) {
 3088              	 .loc 1 1119 12
 3089 001c 0023     	 movs r3,#0
 3090 001e FB60     	 str r3,[r7,#12]
 3091              	.L180:
 3092              	 .loc 1 1119 19 discriminator 3
 3093 0020 FB68     	 ldr r3,[r7,#12]
 3094 0022 032B     	 cmp r3,#3
 3095 0024 08D8     	 bhi .L179
1120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ((uint8_t *)p)[i] = 0;
 3096              	 .loc 1 1120 23 discriminator 2
 3097 0026 BA68     	 ldr r2,[r7,#8]
 3098 0028 FB68     	 ldr r3,[r7,#12]
 3099 002a 1344     	 add r3,r3,r2
 3100              	 .loc 1 1120 25 discriminator 2
 3101 002c 0022     	 movs r2,#0
 3102 002e 1A70     	 strb r2,[r3]
1119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     for (i = 0; i < sizeof(queue_id->queue_def->item_sz); i++) {
 3103              	 .loc 1 1119 5 discriminator 2
 3104 0030 FB68     	 ldr r3,[r7,#12]
 3105 0032 0133     	 adds r3,r3,#1
 3106 0034 FB60     	 str r3,[r7,#12]
 3107 0036 F3E7     	 b .L180
 3108              	.L179:
1121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return p;
ARM GAS   			page 82


 3109              	 .loc 1 1124 10
 3110 0038 BB68     	 ldr r3,[r7,#8]
1125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3111              	 .loc 1 1125 1
 3112 003a 1846     	 mov r0,r3
 3113 003c 1037     	 adds r7,r7,#16
 3114              	 .cfi_def_cfa_offset 8
 3115 003e BD46     	 mov sp,r7
 3116              	 .cfi_def_cfa_register 13
 3117              	 
 3118 0040 80BD     	 pop {r7,pc}
 3119              	 .cfi_endproc
 3120              	.LFE65:
 3121              	 .fnend
 3122              	 .size osMailCAlloc,.-osMailCAlloc
 3123              	 .section .text.osMailPut,"ax",%progbits
 3124              	 .align 1
 3125              	 .global osMailPut
 3126              	 .syntax unified
 3127              	 .thumb
 3128              	 .thumb_func
 3129              	 .type osMailPut,%function
 3130              	osMailPut:
 3131              	 .fnstart
 3132              	.LFB66:
1126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Put a mail to a queue
1129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  mail          memory block previously allocated with \ref osMailAlloc or \ref osMailCAllo
1131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailPut shall be consistent in every CMSIS-RTOS.
1133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMailPut (osMailQId queue_id, void *mail)
1135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3133              	 .loc 1 1135 1
 3134              	 .cfi_startproc
 3135              	 
 3136              	 
 3137 0000 80B5     	 push {r7,lr}
 3138              	 .save {r7,lr}
 3139              	 .cfi_def_cfa_offset 8
 3140              	 .cfi_offset 7,-8
 3141              	 .cfi_offset 14,-4
 3142              	 .pad #16
 3143 0002 84B0     	 sub sp,sp,#16
 3144              	 .cfi_def_cfa_offset 24
 3145              	 .setfp r7,sp,#0
 3146 0004 00AF     	 add r7,sp,#0
 3147              	 .cfi_def_cfa_register 7
 3148 0006 7860     	 str r0,[r7,#4]
 3149 0008 3960     	 str r1,[r7]
1136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken;
1137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 3150              	 .loc 1 1139 3
ARM GAS   			page 83


 3151 000a 7B68     	 ldr r3,[r7,#4]
 3152 000c 002B     	 cmp r3,#0
 3153 000e 01D1     	 bne .L183
1140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 3154              	 .loc 1 1140 12
 3155 0010 8023     	 movs r3,#128
 3156 0012 3BE0     	 b .L188
 3157              	.L183:
1141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   taskWoken = pdFALSE;
 3158              	 .loc 1 1143 13
 3159 0014 0023     	 movs r3,#0
 3160 0016 FB60     	 str r3,[r7,#12]
1144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
 3161              	 .loc 1 1145 20
 3162 0018 FFF7FEFF 	 bl _ZL13inHandlerModev
 3163 001c 0346     	 mov r3,r0
 3164 001e 002B     	 cmp r3,#0
 3165 0020 14BF     	 ite ne
 3166 0022 0123     	 movne r3,#1
 3167 0024 0023     	 moveq r3,#0
 3168 0026 DBB2     	 uxtb r3,r3
 3169              	 .loc 1 1145 3
 3170 0028 002B     	 cmp r3,#0
 3171 002a 1DD0     	 beq .L185
1146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueSendFromISR(queue_id->handle, &mail, &taskWoken) != pdTRUE) {
 3172              	 .loc 1 1146 9
 3173 002c 7B68     	 ldr r3,[r7,#4]
 3174 002e 5868     	 ldr r0,[r3,#4]
 3175 0030 07F10C02 	 add r2,r7,#12
 3176 0034 3946     	 mov r1,r7
 3177 0036 0023     	 movs r3,#0
 3178 0038 FFF7FEFF 	 bl xQueueGenericSendFromISR
 3179 003c 0346     	 mov r3,r0
 3180              	 .loc 1 1146 64
 3181 003e 012B     	 cmp r3,#1
 3182 0040 14BF     	 ite ne
 3183 0042 0123     	 movne r3,#1
 3184 0044 0023     	 moveq r3,#0
 3185 0046 DBB2     	 uxtb r3,r3
 3186              	 .loc 1 1146 5
 3187 0048 002B     	 cmp r3,#0
 3188 004a 01D0     	 beq .L186
1147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 3189              	 .loc 1 1147 14
 3190 004c FF23     	 movs r3,#255
 3191 004e 1DE0     	 b .L188
 3192              	.L186:
1148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 3193              	 .loc 1 1149 5
 3194 0050 FB68     	 ldr r3,[r7,#12]
 3195 0052 002B     	 cmp r3,#0
 3196 0054 19D0     	 beq .L187
 3197              	 .loc 1 1149 5 is_stmt 0 discriminator 1
ARM GAS   			page 84


 3198 0056 0F4B     	 ldr r3,.L189
 3199 0058 4FF08052 	 mov r2,#268435456
 3200 005c 1A60     	 str r2,[r3]
 3201              	 .syntax unified
 3202              	
 3203 005e BFF34F8F 	 dsb
 3204              	
 3205              	
 3206 0062 BFF36F8F 	 isb
 3207              	
 3208              	 .thumb
 3209              	 .syntax unified
 3210 0066 10E0     	 b .L187
 3211              	.L185:
1150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
1152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueSend(queue_id->handle, &mail, 0) != pdTRUE) { 
 3212              	 .loc 1 1152 9 is_stmt 1
 3213 0068 7B68     	 ldr r3,[r7,#4]
 3214 006a 5868     	 ldr r0,[r3,#4]
 3215 006c 3946     	 mov r1,r7
 3216 006e 0023     	 movs r3,#0
 3217 0070 0022     	 movs r2,#0
 3218 0072 FFF7FEFF 	 bl xQueueGenericSend
 3219 0076 0346     	 mov r3,r0
 3220              	 .loc 1 1152 48
 3221 0078 012B     	 cmp r3,#1
 3222 007a 14BF     	 ite ne
 3223 007c 0123     	 movne r3,#1
 3224 007e 0023     	 moveq r3,#0
 3225 0080 DBB2     	 uxtb r3,r3
 3226              	 .loc 1 1152 5
 3227 0082 002B     	 cmp r3,#0
 3228 0084 01D0     	 beq .L187
1153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       return osErrorOS;
 3229              	 .loc 1 1153 14
 3230 0086 FF23     	 movs r3,#255
 3231 0088 00E0     	 b .L188
 3232              	.L187:
1154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 3233              	 .loc 1 1157 10
 3234 008a 0023     	 movs r3,#0
 3235              	.L188:
1158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3236              	 .loc 1 1158 1 discriminator 1
 3237 008c 1846     	 mov r0,r3
 3238 008e 1037     	 adds r7,r7,#16
 3239              	 .cfi_def_cfa_offset 8
 3240 0090 BD46     	 mov sp,r7
 3241              	 .cfi_def_cfa_register 13
 3242              	 
 3243 0092 80BD     	 pop {r7,pc}
 3244              	.L190:
 3245              	 .align 2
ARM GAS   			page 85


 3246              	.L189:
 3247 0094 04ED00E0 	 .word -536810236
 3248              	 .cfi_endproc
 3249              	.LFE66:
 3250              	 .fnend
 3251              	 .size osMailPut,.-osMailPut
 3252              	 .section .text.osMailGet,"ax",%progbits
 3253              	 .align 1
 3254              	 .global osMailGet
 3255              	 .syntax unified
 3256              	 .thumb
 3257              	 .thumb_func
 3258              	 .type osMailGet,%function
 3259              	osMailGet:
 3260              	 .fnstart
 3261              	.LFB67:
1159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Get a mail from a queue
1162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id   mail queue ID obtained with \ref osMailCreate.
1163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param millisec    timeout value or 0 in case of no time-out
1164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval event that contains mail information or error code.
1165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailGet shall be consistent in every CMSIS-RTOS.
1166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osEvent osMailGet (osMailQId queue_id, uint32_t millisec)
1168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3262              	 .loc 1 1168 1
 3263              	 .cfi_startproc
 3264              	 
 3265              	 
 3266 0000 80B5     	 push {r7,lr}
 3267              	 .save {r7,lr}
 3268              	 .cfi_def_cfa_offset 8
 3269              	 .cfi_offset 7,-8
 3270              	 .cfi_offset 14,-4
 3271              	 .pad #24
 3272 0002 86B0     	 sub sp,sp,#24
 3273              	 .cfi_def_cfa_offset 32
 3274              	 .setfp r7,sp,#0
 3275 0004 00AF     	 add r7,sp,#0
 3276              	 .cfi_def_cfa_register 7
 3277 0006 F860     	 str r0,[r7,#12]
 3278 0008 B960     	 str r1,[r7,#8]
 3279 000a 7A60     	 str r2,[r7,#4]
1169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   portBASE_TYPE taskWoken;
1170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
1171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osEvent event;
1172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   event.def.mail_id = queue_id;
 3280              	 .loc 1 1173 21
 3281 000c FB68     	 ldr r3,[r7,#12]
 3282 000e BA68     	 ldr r2,[r7,#8]
 3283 0010 9A60     	 str r2,[r3,#8]
1174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 3284              	 .loc 1 1175 3
 3285 0012 BB68     	 ldr r3,[r7,#8]
ARM GAS   			page 86


 3286 0014 002B     	 cmp r3,#0
 3287 0016 03D1     	 bne .L192
1176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     event.status = osErrorParameter;
 3288              	 .loc 1 1176 18
 3289 0018 FB68     	 ldr r3,[r7,#12]
 3290 001a 8022     	 movs r2,#128
 3291 001c 1A60     	 str r2,[r3]
1177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return event;
 3292              	 .loc 1 1177 12
 3293 001e 60E0     	 b .L203
 3294              	.L192:
1178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   taskWoken = pdFALSE;
 3295              	 .loc 1 1180 13
 3296 0020 0023     	 movs r3,#0
 3297 0022 3B61     	 str r3,[r7,#16]
1181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 3298              	 .loc 1 1182 9
 3299 0024 0023     	 movs r3,#0
 3300 0026 7B61     	 str r3,[r7,#20]
1183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 3301              	 .loc 1 1183 3
 3302 0028 7B68     	 ldr r3,[r7,#4]
 3303 002a B3F1FF3F 	 cmp r3,#-1
 3304 002e 03D1     	 bne .L194
1184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 3305              	 .loc 1 1184 11
 3306 0030 4FF0FF33 	 mov r3,#-1
 3307 0034 7B61     	 str r3,[r7,#20]
 3308 0036 09E0     	 b .L195
 3309              	.L194:
1185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 3310              	 .loc 1 1186 8
 3311 0038 7B68     	 ldr r3,[r7,#4]
 3312 003a 002B     	 cmp r3,#0
 3313 003c 06D0     	 beq .L195
1187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 3314              	 .loc 1 1187 11
 3315 003e 7B68     	 ldr r3,[r7,#4]
 3316 0040 7B61     	 str r3,[r7,#20]
1188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 3317              	 .loc 1 1188 5
 3318 0042 7B69     	 ldr r3,[r7,#20]
 3319 0044 002B     	 cmp r3,#0
 3320 0046 01D1     	 bne .L195
1189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 3321              	 .loc 1 1189 13
 3322 0048 0123     	 movs r3,#1
 3323 004a 7B61     	 str r3,[r7,#20]
 3324              	.L195:
1190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (inHandlerMode()) {
ARM GAS   			page 87


 3325              	 .loc 1 1193 20
 3326 004c FFF7FEFF 	 bl _ZL13inHandlerModev
 3327 0050 0346     	 mov r3,r0
 3328 0052 002B     	 cmp r3,#0
 3329 0054 14BF     	 ite ne
 3330 0056 0123     	 movne r3,#1
 3331 0058 0023     	 moveq r3,#0
 3332 005a DBB2     	 uxtb r3,r3
 3333              	 .loc 1 1193 3
 3334 005c 002B     	 cmp r3,#0
 3335 005e 23D0     	 beq .L196
1194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id->handle, &event.value.p, &taskWoken) == pdTRUE) {
 3336              	 .loc 1 1194 29
 3337 0060 BB68     	 ldr r3,[r7,#8]
 3338 0062 5868     	 ldr r0,[r3,#4]
 3339 0064 07F11002 	 add r2,r7,#16
 3340 0068 FB68     	 ldr r3,[r7,#12]
 3341 006a 0433     	 adds r3,r3,#4
 3342 006c 1946     	 mov r1,r3
 3343 006e FFF7FEFF 	 bl xQueueReceiveFromISR
 3344 0072 0346     	 mov r3,r0
 3345              	 .loc 1 1194 76
 3346 0074 012B     	 cmp r3,#1
 3347 0076 0CBF     	 ite eq
 3348 0078 0123     	 moveq r3,#1
 3349 007a 0023     	 movne r3,#0
 3350 007c DBB2     	 uxtb r3,r3
 3351              	 .loc 1 1194 5
 3352 007e 002B     	 cmp r3,#0
 3353 0080 03D0     	 beq .L197
1195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
1196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osEventMail;
 3354              	 .loc 1 1196 20
 3355 0082 FB68     	 ldr r3,[r7,#12]
 3356 0084 2022     	 movs r2,#32
 3357 0086 1A60     	 str r2,[r3]
 3358 0088 02E0     	 b .L198
 3359              	.L197:
1197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else {
1199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osOK;
 3360              	 .loc 1 1199 20
 3361 008a FB68     	 ldr r3,[r7,#12]
 3362 008c 0022     	 movs r2,#0
 3363 008e 1A60     	 str r2,[r3]
 3364              	.L198:
1200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 3365              	 .loc 1 1201 5
 3366 0090 3B69     	 ldr r3,[r7,#16]
 3367 0092 002B     	 cmp r3,#0
 3368 0094 24D0     	 beq .L204
 3369              	 .loc 1 1201 5 is_stmt 0 discriminator 1
 3370 0096 154B     	 ldr r3,.L205
 3371 0098 4FF08052 	 mov r2,#268435456
 3372 009c 1A60     	 str r2,[r3]
 3373              	 .syntax unified
ARM GAS   			page 88


 3374              	
 3375 009e BFF34F8F 	 dsb
 3376              	
 3377              	
 3378 00a2 BFF36F8F 	 isb
 3379              	
1202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else {
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xQueueReceive(queue_id->handle, &event.value.p, ticks) == pdTRUE) {
1205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
1206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = osEventMail;
1207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     else {
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
1210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return event;
 3380              	 .loc 1 1213 10 is_stmt 1 discriminator 1
 3381              	 .thumb
 3382              	 .syntax unified
 3383 00a6 1BE0     	 b .L204
 3384              	.L196:
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 3385              	 .loc 1 1204 9
 3386 00a8 BB68     	 ldr r3,[r7,#8]
 3387 00aa 5868     	 ldr r0,[r3,#4]
 3388 00ac FB68     	 ldr r3,[r7,#12]
 3389 00ae 191D     	 adds r1,r3,#4
 3390 00b0 0023     	 movs r3,#0
 3391 00b2 7A69     	 ldr r2,[r7,#20]
 3392 00b4 FFF7FEFF 	 bl xQueueGenericReceive
 3393 00b8 0346     	 mov r3,r0
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 3394              	 .loc 1 1204 64
 3395 00ba 012B     	 cmp r3,#1
 3396 00bc 0CBF     	 ite eq
 3397 00be 0123     	 moveq r3,#1
 3398 00c0 0023     	 movne r3,#0
 3399 00c2 DBB2     	 uxtb r3,r3
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       /* We have mail */
 3400              	 .loc 1 1204 5
 3401 00c4 002B     	 cmp r3,#0
 3402 00c6 03D0     	 beq .L200
1206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 3403              	 .loc 1 1206 20
 3404 00c8 FB68     	 ldr r3,[r7,#12]
 3405 00ca 2022     	 movs r2,#32
 3406 00cc 1A60     	 str r2,[r3]
 3407              	 .loc 1 1213 10
 3408 00ce 07E0     	 b .L204
 3409              	.L200:
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 3410              	 .loc 1 1209 35
 3411 00d0 7B69     	 ldr r3,[r7,#20]
 3412 00d2 002B     	 cmp r3,#0
 3413 00d4 01D1     	 bne .L201
ARM GAS   			page 89


1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 3414              	 .loc 1 1209 35 is_stmt 0 discriminator 1
 3415 00d6 0022     	 movs r2,#0
 3416 00d8 00E0     	 b .L202
 3417              	.L201:
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 3418              	 .loc 1 1209 35 discriminator 2
 3419 00da 4022     	 movs r2,#64
 3420              	.L202:
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
 3421              	 .loc 1 1209 20 is_stmt 1 discriminator 4
 3422 00dc FB68     	 ldr r3,[r7,#12]
 3423 00de 1A60     	 str r2,[r3]
 3424              	.L204:
 3425              	 .loc 1 1213 10
 3426 00e0 00BF     	 nop
 3427              	.L203:
1214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3428              	 .loc 1 1214 1 discriminator 3
 3429 00e2 F868     	 ldr r0,[r7,#12]
 3430 00e4 1837     	 adds r7,r7,#24
 3431              	 .cfi_def_cfa_offset 8
 3432 00e6 BD46     	 mov sp,r7
 3433              	 .cfi_def_cfa_register 13
 3434              	 
 3435 00e8 80BD     	 pop {r7,pc}
 3436              	.L206:
 3437 00ea 00BF     	 .align 2
 3438              	.L205:
 3439 00ec 04ED00E0 	 .word -536810236
 3440              	 .cfi_endproc
 3441              	.LFE67:
 3442              	 .fnend
 3443              	 .size osMailGet,.-osMailGet
 3444              	 .section .text.osMailFree,"ax",%progbits
 3445              	 .align 1
 3446              	 .global osMailFree
 3447              	 .syntax unified
 3448              	 .thumb
 3449              	 .thumb_func
 3450              	 .type osMailFree,%function
 3451              	osMailFree:
 3452              	 .fnstart
 3453              	.LFB68:
1215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Free a memory block from a mail
1218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id mail queue ID obtained with \ref osMailCreate.
1219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  mail     pointer to the memory block that was obtained with \ref osMailGet.
1220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailFree shall be consistent in every CMSIS-RTOS.
1222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osMailFree (osMailQId queue_id, void *mail)
1224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3454              	 .loc 1 1224 1
 3455              	 .cfi_startproc
 3456              	 
ARM GAS   			page 90


 3457              	 
 3458 0000 80B5     	 push {r7,lr}
 3459              	 .cfi_def_cfa_offset 8
 3460              	 .cfi_offset 7,-8
 3461              	 .cfi_offset 14,-4
 3462 0002 82B0     	 sub sp,sp,#8
 3463              	 .cfi_def_cfa_offset 16
 3464 0004 00AF     	 add r7,sp,#0
 3465              	 .cfi_def_cfa_register 7
 3466 0006 7860     	 str r0,[r7,#4]
 3467 0008 3960     	 str r1,[r7]
1225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 3468              	 .loc 1 1225 3
 3469 000a 7B68     	 ldr r3,[r7,#4]
 3470 000c 002B     	 cmp r3,#0
 3471 000e 01D1     	 bne .L208
1226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 3472              	 .loc 1 1226 12
 3473 0010 8023     	 movs r3,#128
 3474 0012 07E0     	 b .L209
 3475              	.L208:
1227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osPoolFree(queue_id->pool, mail);
 3476              	 .loc 1 1229 20
 3477 0014 7B68     	 ldr r3,[r7,#4]
 3478 0016 9B68     	 ldr r3,[r3,#8]
 3479 0018 3968     	 ldr r1,[r7]
 3480 001a 1846     	 mov r0,r3
 3481 001c FFF7FEFF 	 bl osPoolFree
 3482 0020 0346     	 mov r3,r0
 3483              	 .loc 1 1229 41
 3484 0022 00BF     	 nop
 3485              	.L209:
1230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3486              	 .loc 1 1230 1
 3487 0024 1846     	 mov r0,r3
 3488 0026 0837     	 adds r7,r7,#8
 3489              	 .cfi_def_cfa_offset 8
 3490 0028 BD46     	 mov sp,r7
 3491              	 .cfi_def_cfa_register 13
 3492              	 
 3493 002a 80BD     	 pop {r7,pc}
 3494              	 .cfi_endproc
 3495              	.LFE68:
 3496              	 .cantunwind
 3497              	 .fnend
 3498              	 .size osMailFree,.-osMailFree
 3499              	 .section .text.osSystickHandler,"ax",%progbits
 3500              	 .align 1
 3501              	 .global osSystickHandler
 3502              	 .syntax unified
 3503              	 .thumb
 3504              	 .thumb_func
 3505              	 .type osSystickHandler,%function
 3506              	osSystickHandler:
 3507              	 .fnstart
ARM GAS   			page 91


 3508              	.LFB69:
1231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif  /* Use Mail Queues */
1232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /*************************** Additional specific APIs to Free RTOS ************/
1234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Handles the tick increment
1236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  none.
1237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval none.
1238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** void osSystickHandler(void)
1240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3509              	 .loc 1 1240 1
 3510              	 .cfi_startproc
 3511              	 
 3512              	 
 3513 0000 80B5     	 push {r7,lr}
 3514              	 .save {r7,lr}
 3515              	 .cfi_def_cfa_offset 8
 3516              	 .cfi_offset 7,-8
 3517              	 .cfi_offset 14,-4
 3518              	 .setfp r7,sp,#0
 3519 0002 00AF     	 add r7,sp,#0
 3520              	 .cfi_def_cfa_register 7
1241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 3521              	 .loc 1 1243 29
 3522 0004 FFF7FEFF 	 bl xTaskGetSchedulerState
 3523 0008 0346     	 mov r3,r0
 3524              	 .loc 1 1243 32
 3525 000a 012B     	 cmp r3,#1
 3526 000c 14BF     	 ite ne
 3527 000e 0123     	 movne r3,#1
 3528 0010 0023     	 moveq r3,#0
 3529 0012 DBB2     	 uxtb r3,r3
 3530              	 .loc 1 1243 3
 3531 0014 002B     	 cmp r3,#0
 3532 0016 01D0     	 beq .L212
1244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     xPortSysTickHandler();
 3533              	 .loc 1 1246 24
 3534 0018 FFF7FEFF 	 bl _Z15SysTick_Handlerv
 3535              	.L212:
1247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3536              	 .loc 1 1250 1
 3537 001c 00BF     	 nop
 3538 001e 80BD     	 pop {r7,pc}
 3539              	 .cfi_endproc
 3540              	.LFE69:
 3541              	 .fnend
 3542              	 .size osSystickHandler,.-osSystickHandler
 3543              	 .section .text.osThreadSuspend,"ax",%progbits
 3544              	 .align 1
ARM GAS   			page 92


 3545              	 .global osThreadSuspend
 3546              	 .syntax unified
 3547              	 .thumb
 3548              	 .thumb_func
 3549              	 .type osThreadSuspend,%function
 3550              	osThreadSuspend:
 3551              	 .fnstart
 3552              	.LFB70:
1251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if ( INCLUDE_eTaskGetState == 1 )
1253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Obtain the state of any thread.
1255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  the stae of the thread, states are encoded by the osThreadState enumerated type.
1257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osThreadState osThreadGetState(osThreadId thread_id)
1259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
1260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   eTaskState ThreadState;
1261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osThreadState result;
1262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ThreadState = eTaskGetState(thread_id);
1264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   switch (ThreadState)
1266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   case eRunning :
1268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadRunning;
1269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     break;
1270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   case eReady :
1271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadReady;
1272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     break;
1273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   case eBlocked :
1274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadBlocked;
1275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     break;
1276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   case eSuspended :
1277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadSuspended;
1278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     break;
1279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   case eDeleted :
1280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadDeleted;
1281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     break;
1282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   default:
1283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osThreadError;
1284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   } 
1285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
1287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
1288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_eTaskGetState == 1)
1291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief Check if a thread is already suspended or not.
1293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param thread_id thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadIsSuspended(osThreadId thread_id)
1297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
1298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (eTaskGetState(thread_id) == eSuspended)
1299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osOK;
ARM GAS   			page 93


1300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
1301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
1302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
1303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Suspend execution of a thread.
1306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadSuspend (osThreadId thread_id)
1310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3553              	 .loc 1 1310 1
 3554              	 .cfi_startproc
 3555              	 
 3556              	 
 3557 0000 80B5     	 push {r7,lr}
 3558              	 .save {r7,lr}
 3559              	 .cfi_def_cfa_offset 8
 3560              	 .cfi_offset 7,-8
 3561              	 .cfi_offset 14,-4
 3562              	 .pad #8
 3563 0002 82B0     	 sub sp,sp,#8
 3564              	 .cfi_def_cfa_offset 16
 3565              	 .setfp r7,sp,#0
 3566 0004 00AF     	 add r7,sp,#0
 3567              	 .cfi_def_cfa_register 7
 3568 0006 7860     	 str r0,[r7,#4]
1311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)
1312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vTaskSuspend(thread_id);
 3569              	 .loc 1 1312 17
 3570 0008 7868     	 ldr r0,[r7,#4]
 3571 000a FFF7FEFF 	 bl vTaskSuspend
1313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 3572              	 .loc 1 1314 10
 3573 000e 0023     	 movs r3,#0
1315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorResource;
1317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
1318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3574              	 .loc 1 1318 1
 3575 0010 1846     	 mov r0,r3
 3576 0012 0837     	 adds r7,r7,#8
 3577              	 .cfi_def_cfa_offset 8
 3578 0014 BD46     	 mov sp,r7
 3579              	 .cfi_def_cfa_register 13
 3580              	 
 3581 0016 80BD     	 pop {r7,pc}
 3582              	 .cfi_endproc
 3583              	.LFE70:
 3584              	 .fnend
 3585              	 .size osThreadSuspend,.-osThreadSuspend
 3586              	 .section .text.osThreadResume,"ax",%progbits
 3587              	 .align 1
 3588              	 .global osThreadResume
 3589              	 .syntax unified
 3590              	 .thumb
ARM GAS   			page 94


 3591              	 .thumb_func
 3592              	 .type osThreadResume,%function
 3593              	osThreadResume:
 3594              	 .fnstart
 3595              	.LFB71:
1319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Resume execution of a suspended thread.
1322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadResume (osThreadId thread_id)
1326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3596              	 .loc 1 1326 1
 3597              	 .cfi_startproc
 3598              	 
 3599              	 
 3600 0000 80B5     	 push {r7,lr}
 3601              	 .save {r7,lr}
 3602              	 .cfi_def_cfa_offset 8
 3603              	 .cfi_offset 7,-8
 3604              	 .cfi_offset 14,-4
 3605              	 .pad #8
 3606 0002 82B0     	 sub sp,sp,#8
 3607              	 .cfi_def_cfa_offset 16
 3608              	 .setfp r7,sp,#0
 3609 0004 00AF     	 add r7,sp,#0
 3610              	 .cfi_def_cfa_register 7
 3611 0006 7860     	 str r0,[r7,#4]
1327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)  
1328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if(inHandlerMode())
 3612              	 .loc 1 1328 19
 3613 0008 FFF7FEFF 	 bl _ZL13inHandlerModev
 3614 000c 0346     	 mov r3,r0
 3615 000e 002B     	 cmp r3,#0
 3616 0010 14BF     	 ite ne
 3617 0012 0123     	 movne r3,#1
 3618 0014 0023     	 moveq r3,#0
 3619 0016 DBB2     	 uxtb r3,r3
 3620              	 .loc 1 1328 3
 3621 0018 002B     	 cmp r3,#0
 3622 001a 13D0     	 beq .L216
1329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (xTaskResumeFromISR(thread_id) == pdTRUE)
 3623              	 .loc 1 1330 27
 3624 001c 7868     	 ldr r0,[r7,#4]
 3625 001e FFF7FEFF 	 bl xTaskResumeFromISR
 3626 0022 0346     	 mov r3,r0
 3627              	 .loc 1 1330 39
 3628 0024 012B     	 cmp r3,#1
 3629 0026 0CBF     	 ite eq
 3630 0028 0123     	 moveq r3,#1
 3631 002a 0023     	 movne r3,#0
 3632 002c DBB2     	 uxtb r3,r3
 3633              	 .loc 1 1330 5
 3634 002e 002B     	 cmp r3,#0
 3635 0030 0BD0     	 beq .L217
ARM GAS   			page 95


1331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
1332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       portYIELD_FROM_ISR(pdTRUE);
 3636              	 .loc 1 1332 7
 3637 0032 084B     	 ldr r3,.L219
 3638 0034 4FF08052 	 mov r2,#268435456
 3639 0038 1A60     	 str r2,[r3]
 3640              	 .syntax unified
 3641              	
 3642 003a BFF34F8F 	 dsb
 3643              	
 3644              	
 3645 003e BFF36F8F 	 isb
 3646              	
 3647              	 .thumb
 3648              	 .syntax unified
 3649 0042 02E0     	 b .L217
 3650              	.L216:
1333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
1336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     vTaskResume(thread_id);
 3651              	 .loc 1 1337 16
 3652 0044 7868     	 ldr r0,[r7,#4]
 3653 0046 FFF7FEFF 	 bl vTaskResume
 3654              	.L217:
1338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 3655              	 .loc 1 1339 10
 3656 004a 0023     	 movs r3,#0
1340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorResource;
1342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
1343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3657              	 .loc 1 1343 1
 3658 004c 1846     	 mov r0,r3
 3659 004e 0837     	 adds r7,r7,#8
 3660              	 .cfi_def_cfa_offset 8
 3661 0050 BD46     	 mov sp,r7
 3662              	 .cfi_def_cfa_register 13
 3663              	 
 3664 0052 80BD     	 pop {r7,pc}
 3665              	.L220:
 3666              	 .align 2
 3667              	.L219:
 3668 0054 04ED00E0 	 .word -536810236
 3669              	 .cfi_endproc
 3670              	.LFE71:
 3671              	 .fnend
 3672              	 .size osThreadResume,.-osThreadResume
 3673              	 .section .text.osThreadSuspendAll,"ax",%progbits
 3674              	 .align 1
 3675              	 .global osThreadSuspendAll
 3676              	 .syntax unified
 3677              	 .thumb
 3678              	 .thumb_func
 3679              	 .type osThreadSuspendAll,%function
ARM GAS   			page 96


 3680              	osThreadSuspendAll:
 3681              	 .fnstart
 3682              	.LFB72:
1344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Suspend execution of a all active threads.
1347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadSuspendAll (void)
1350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3683              	 .loc 1 1350 1
 3684              	 .cfi_startproc
 3685              	 
 3686              	 
 3687 0000 80B5     	 push {r7,lr}
 3688              	 .save {r7,lr}
 3689              	 .cfi_def_cfa_offset 8
 3690              	 .cfi_offset 7,-8
 3691              	 .cfi_offset 14,-4
 3692              	 .setfp r7,sp,#0
 3693 0002 00AF     	 add r7,sp,#0
 3694              	 .cfi_def_cfa_register 7
1351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskSuspendAll();
 3695              	 .loc 1 1351 18
 3696 0004 FFF7FEFF 	 bl vTaskSuspendAll
1352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 3697              	 .loc 1 1353 10
 3698 0008 0023     	 movs r3,#0
1354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3699              	 .loc 1 1354 1
 3700 000a 1846     	 mov r0,r3
 3701 000c 80BD     	 pop {r7,pc}
 3702              	 .cfi_endproc
 3703              	.LFE72:
 3704              	 .fnend
 3705              	 .size osThreadSuspendAll,.-osThreadSuspendAll
 3706              	 .section .text.osThreadResumeAll,"ax",%progbits
 3707              	 .align 1
 3708              	 .global osThreadResumeAll
 3709              	 .syntax unified
 3710              	 .thumb
 3711              	 .thumb_func
 3712              	 .type osThreadResumeAll,%function
 3713              	osThreadResumeAll:
 3714              	 .fnstart
 3715              	.LFB73:
1355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Resume execution of a all suspended threads.
1358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadResumeAll (void)
1361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3716              	 .loc 1 1361 1
 3717              	 .cfi_startproc
 3718              	 
ARM GAS   			page 97


 3719              	 
 3720 0000 80B5     	 push {r7,lr}
 3721              	 .save {r7,lr}
 3722              	 .cfi_def_cfa_offset 8
 3723              	 .cfi_offset 7,-8
 3724              	 .cfi_offset 14,-4
 3725              	 .setfp r7,sp,#0
 3726 0002 00AF     	 add r7,sp,#0
 3727              	 .cfi_def_cfa_register 7
1362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xTaskResumeAll() == pdTRUE)
 3728              	 .loc 1 1362 21
 3729 0004 FFF7FEFF 	 bl xTaskResumeAll
 3730 0008 0346     	 mov r3,r0
 3731              	 .loc 1 1362 24
 3732 000a 012B     	 cmp r3,#1
 3733 000c 0CBF     	 ite eq
 3734 000e 0123     	 moveq r3,#1
 3735 0010 0023     	 movne r3,#0
 3736 0012 DBB2     	 uxtb r3,r3
 3737              	 .loc 1 1362 3
 3738 0014 002B     	 cmp r3,#0
 3739 0016 01D0     	 beq .L224
1363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osOK;
 3740              	 .loc 1 1363 12
 3741 0018 0023     	 movs r3,#0
 3742 001a 00E0     	 b .L225
 3743              	.L224:
1364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else
1365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
 3744              	 .loc 1 1365 12
 3745 001c FF23     	 movs r3,#255
 3746              	.L225:
1366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3747              	 .loc 1 1367 1
 3748 001e 1846     	 mov r0,r3
 3749 0020 80BD     	 pop {r7,pc}
 3750              	 .cfi_endproc
 3751              	.LFE73:
 3752              	 .fnend
 3753              	 .size osThreadResumeAll,.-osThreadResumeAll
 3754              	 .section .text.osDelayUntil,"ax",%progbits
 3755              	 .align 1
 3756              	 .global osDelayUntil
 3757              	 .syntax unified
 3758              	 .thumb
 3759              	 .thumb_func
 3760              	 .type osDelayUntil,%function
 3761              	osDelayUntil:
 3762              	 .fnstart
 3763              	.LFB74:
1368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Delay a task until a specified time
1371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   PreviousWakeTime   Pointer to a variable that holds the time at which the 
1372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *          task was last unblocked. PreviousWakeTime must be initialised with the current time
1373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *          prior to its first use (PreviousWakeTime = osKernelSysTick() )
ARM GAS   			page 98


1374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   millisec    time delay value
1375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osDelayUntil (uint32_t *PreviousWakeTime, uint32_t millisec)
1378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3764              	 .loc 1 1378 1
 3765              	 .cfi_startproc
 3766              	 
 3767              	 
 3768              	 
 3769 0000 80B4     	 push {r7}
 3770              	 .cfi_def_cfa_offset 4
 3771              	 .cfi_offset 7,-4
 3772 0002 83B0     	 sub sp,sp,#12
 3773              	 .cfi_def_cfa_offset 16
 3774 0004 00AF     	 add r7,sp,#0
 3775              	 .cfi_def_cfa_register 7
 3776 0006 7860     	 str r0,[r7,#4]
 3777 0008 3960     	 str r1,[r7]
1379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if INCLUDE_vTaskDelayUntil
1380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks = (millisec / portTICK_PERIOD_MS);
1381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskDelayUntil((TickType_t *) PreviousWakeTime, ticks ? ticks : 1);
1382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
1384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) millisec;
1386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) PreviousWakeTime;
1387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osErrorResource;
 3778              	 .loc 1 1388 10
 3779 000a 8123     	 movs r3,#129
1389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
1390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3780              	 .loc 1 1390 1
 3781 000c 1846     	 mov r0,r3
 3782 000e 0C37     	 adds r7,r7,#12
 3783              	 .cfi_def_cfa_offset 4
 3784 0010 BD46     	 mov sp,r7
 3785              	 .cfi_def_cfa_register 13
 3786              	 
 3787 0012 5DF8047B 	 ldr r7,[sp],#4
 3788              	 .cfi_restore 7
 3789              	 .cfi_def_cfa_offset 0
 3790 0016 7047     	 bx lr
 3791              	 .cfi_endproc
 3792              	.LFE74:
 3793              	 .cantunwind
 3794              	 .fnend
 3795              	 .size osDelayUntil,.-osDelayUntil
 3796              	 .section .text.osThreadList,"ax",%progbits
 3797              	 .align 1
 3798              	 .global osThreadList
 3799              	 .syntax unified
 3800              	 .thumb
 3801              	 .thumb_func
 3802              	 .type osThreadList,%function
 3803              	osThreadList:
ARM GAS   			page 99


 3804              	 .fnstart
 3805              	.LFB75:
1391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief   Lists all the current threads, along with their current state 
1394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *          and stack usage high water mark.
1395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   buffer   A buffer into which the above mentioned details
1396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** *          will be written
1397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osThreadList (uint8_t *buffer)
1400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3806              	 .loc 1 1400 1
 3807              	 .cfi_startproc
 3808              	 
 3809              	 
 3810              	 
 3811 0000 80B4     	 push {r7}
 3812              	 .cfi_def_cfa_offset 4
 3813              	 .cfi_offset 7,-4
 3814 0002 83B0     	 sub sp,sp,#12
 3815              	 .cfi_def_cfa_offset 16
 3816 0004 00AF     	 add r7,sp,#0
 3817              	 .cfi_def_cfa_register 7
 3818 0006 7860     	 str r0,[r7,#4]
1401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) )
1402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   vTaskList((char *)buffer);
1403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
1404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 3819              	 .loc 1 1404 10
 3820 0008 0023     	 movs r3,#0
1405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3821              	 .loc 1 1405 1
 3822 000a 1846     	 mov r0,r3
 3823 000c 0C37     	 adds r7,r7,#12
 3824              	 .cfi_def_cfa_offset 4
 3825 000e BD46     	 mov sp,r7
 3826              	 .cfi_def_cfa_register 13
 3827              	 
 3828 0010 5DF8047B 	 ldr r7,[sp],#4
 3829              	 .cfi_restore 7
 3830              	 .cfi_def_cfa_offset 0
 3831 0014 7047     	 bx lr
 3832              	 .cfi_endproc
 3833              	.LFE75:
 3834              	 .cantunwind
 3835              	 .fnend
 3836              	 .size osThreadList,.-osThreadList
 3837              	 .section .text.osMessagePeek,"ax",%progbits
 3838              	 .align 1
 3839              	 .global osMessagePeek
 3840              	 .syntax unified
 3841              	 .thumb
 3842              	 .thumb_func
 3843              	 .type osMessagePeek,%function
 3844              	osMessagePeek:
 3845              	 .fnstart
ARM GAS   			page 100


 3846              	.LFB76:
1406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Receive an item from a queue without removing the item from the queue.
1409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval event information that includes status code.
1412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osEvent osMessagePeek (osMessageQId queue_id, uint32_t millisec)
1414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3847              	 .loc 1 1414 1
 3848              	 .cfi_startproc
 3849              	 
 3850              	 
 3851 0000 80B5     	 push {r7,lr}
 3852              	 .save {r7,lr}
 3853              	 .cfi_def_cfa_offset 8
 3854              	 .cfi_offset 7,-8
 3855              	 .cfi_offset 14,-4
 3856              	 .pad #24
 3857 0002 86B0     	 sub sp,sp,#24
 3858              	 .cfi_def_cfa_offset 32
 3859              	 .setfp r7,sp,#0
 3860 0004 00AF     	 add r7,sp,#0
 3861              	 .cfi_def_cfa_register 7
 3862 0006 F860     	 str r0,[r7,#12]
 3863 0008 B960     	 str r1,[r7,#8]
 3864 000a 7A60     	 str r2,[r7,#4]
1415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
1416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osEvent event;
1417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   event.def.message_id = queue_id;
 3865              	 .loc 1 1418 24
 3866 000c FB68     	 ldr r3,[r7,#12]
 3867 000e BA68     	 ldr r2,[r7,#8]
 3868 0010 9A60     	 str r2,[r3,#8]
1419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (queue_id == NULL) {
 3869              	 .loc 1 1420 3
 3870 0012 BB68     	 ldr r3,[r7,#8]
 3871 0014 002B     	 cmp r3,#0
 3872 0016 03D1     	 bne .L231
1421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     event.status = osErrorParameter;
 3873              	 .loc 1 1421 18
 3874 0018 FB68     	 ldr r3,[r7,#12]
 3875 001a 8022     	 movs r2,#128
 3876 001c 1A60     	 str r2,[r3]
1422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return event;
 3877              	 .loc 1 1422 12
 3878 001e 2FE0     	 b .L232
 3879              	.L231:
1423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 3880              	 .loc 1 1425 9
 3881 0020 0023     	 movs r3,#0
 3882 0022 7B61     	 str r3,[r7,#20]
ARM GAS   			page 101


1426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) {
 3883              	 .loc 1 1426 3
 3884 0024 7B68     	 ldr r3,[r7,#4]
 3885 0026 B3F1FF3F 	 cmp r3,#-1
 3886 002a 03D1     	 bne .L233
1427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 3887              	 .loc 1 1427 11
 3888 002c 4FF0FF33 	 mov r3,#-1
 3889 0030 7B61     	 str r3,[r7,#20]
 3890 0032 09E0     	 b .L234
 3891              	.L233:
1428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) {
 3892              	 .loc 1 1429 8
 3893 0034 7B68     	 ldr r3,[r7,#4]
 3894 0036 002B     	 cmp r3,#0
 3895 0038 06D0     	 beq .L234
1430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 3896              	 .loc 1 1430 11
 3897 003a 7B68     	 ldr r3,[r7,#4]
 3898 003c 7B61     	 str r3,[r7,#20]
1431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) {
 3899              	 .loc 1 1431 5
 3900 003e 7B69     	 ldr r3,[r7,#20]
 3901 0040 002B     	 cmp r3,#0
 3902 0042 01D1     	 bne .L234
1432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 3903              	 .loc 1 1432 13
 3904 0044 0123     	 movs r3,#1
 3905 0046 7B61     	 str r3,[r7,#20]
 3906              	.L234:
1433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xQueuePeek(queue_id, &event.value.v, ticks) == pdTRUE) 
 3907              	 .loc 1 1436 7
 3908 0048 FB68     	 ldr r3,[r7,#12]
 3909 004a 191D     	 adds r1,r3,#4
 3910 004c 0123     	 movs r3,#1
 3911 004e 7A69     	 ldr r2,[r7,#20]
 3912 0050 B868     	 ldr r0,[r7,#8]
 3913 0052 FFF7FEFF 	 bl xQueueGenericReceive
 3914 0056 0346     	 mov r3,r0
 3915              	 .loc 1 1436 51
 3916 0058 012B     	 cmp r3,#1
 3917 005a 0CBF     	 ite eq
 3918 005c 0123     	 moveq r3,#1
 3919 005e 0023     	 movne r3,#0
 3920 0060 DBB2     	 uxtb r3,r3
 3921              	 .loc 1 1436 3
 3922 0062 002B     	 cmp r3,#0
 3923 0064 03D0     	 beq .L235
1437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     /* We have mail */
1439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     event.status = osEventMessage;
 3924              	 .loc 1 1439 18
 3925 0066 FB68     	 ldr r3,[r7,#12]
ARM GAS   			page 102


 3926 0068 1022     	 movs r2,#16
 3927 006a 1A60     	 str r2,[r3]
1440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else 
1442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     event.status = (ticks == 0) ? osOK : osEventTimeout;
1444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return event;
 3928              	 .loc 1 1446 10
 3929 006c 07E0     	 b .L239
 3930              	.L235:
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 3931              	 .loc 1 1443 33
 3932 006e 7B69     	 ldr r3,[r7,#20]
 3933 0070 002B     	 cmp r3,#0
 3934 0072 01D1     	 bne .L237
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 3935              	 .loc 1 1443 33 is_stmt 0 discriminator 1
 3936 0074 0022     	 movs r2,#0
 3937 0076 00E0     	 b .L238
 3938              	.L237:
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 3939              	 .loc 1 1443 33 discriminator 2
 3940 0078 4022     	 movs r2,#64
 3941              	.L238:
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
 3942              	 .loc 1 1443 18 is_stmt 1 discriminator 4
 3943 007a FB68     	 ldr r3,[r7,#12]
 3944 007c 1A60     	 str r2,[r3]
 3945              	.L239:
 3946              	 .loc 1 1446 10
 3947 007e 00BF     	 nop
 3948              	.L232:
1447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3949              	 .loc 1 1447 1 discriminator 1
 3950 0080 F868     	 ldr r0,[r7,#12]
 3951 0082 1837     	 adds r7,r7,#24
 3952              	 .cfi_def_cfa_offset 8
 3953 0084 BD46     	 mov sp,r7
 3954              	 .cfi_def_cfa_register 13
 3955              	 
 3956 0086 80BD     	 pop {r7,pc}
 3957              	 .cfi_endproc
 3958              	.LFE76:
 3959              	 .fnend
 3960              	 .size osMessagePeek,.-osMessagePeek
 3961              	 .section .text.osRecursiveMutexCreate,"ax",%progbits
 3962              	 .align 1
 3963              	 .global osRecursiveMutexCreate
 3964              	 .syntax unified
 3965              	 .thumb
 3966              	 .thumb_func
 3967              	 .type osRecursiveMutexCreate,%function
 3968              	osRecursiveMutexCreate:
 3969              	 .fnstart
 3970              	.LFB77:
ARM GAS   			page 103


1448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Create and Initialize a Recursive Mutex
1451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
1452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error..
1453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osMutexId osRecursiveMutexCreate (const osMutexDef_t *mutex_def)
1455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 3971              	 .loc 1 1455 1
 3972              	 .cfi_startproc
 3973              	 
 3974              	 
 3975 0000 80B5     	 push {r7,lr}
 3976              	 .save {r7,lr}
 3977              	 .cfi_def_cfa_offset 8
 3978              	 .cfi_offset 7,-8
 3979              	 .cfi_offset 14,-4
 3980              	 .pad #8
 3981 0002 82B0     	 sub sp,sp,#8
 3982              	 .cfi_def_cfa_offset 16
 3983              	 .setfp r7,sp,#0
 3984 0004 00AF     	 add r7,sp,#0
 3985              	 .cfi_def_cfa_register 7
 3986 0006 7860     	 str r0,[r7,#4]
1456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   (void) mutex_def;
1457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return xSemaphoreCreateRecursiveMutex();
 3987              	 .loc 1 1458 10
 3988 0008 0420     	 movs r0,#4
 3989 000a FFF7FEFF 	 bl xQueueCreateMutex
 3990 000e 0346     	 mov r3,r0
1459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return NULL;
1461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif	
1462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 3991              	 .loc 1 1462 1
 3992 0010 1846     	 mov r0,r3
 3993 0012 0837     	 adds r7,r7,#8
 3994              	 .cfi_def_cfa_offset 8
 3995 0014 BD46     	 mov sp,r7
 3996              	 .cfi_def_cfa_register 13
 3997              	 
 3998 0016 80BD     	 pop {r7,pc}
 3999              	 .cfi_endproc
 4000              	.LFE77:
 4001              	 .fnend
 4002              	 .size osRecursiveMutexCreate,.-osRecursiveMutexCreate
 4003              	 .section .text.osRecursiveMutexRelease,"ax",%progbits
 4004              	 .align 1
 4005              	 .global osRecursiveMutexRelease
 4006              	 .syntax unified
 4007              	 .thumb
 4008              	 .thumb_func
 4009              	 .type osRecursiveMutexRelease,%function
 4010              	osRecursiveMutexRelease:
 4011              	 .fnstart
 4012              	.LFB78:
ARM GAS   			page 104


1463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Release a Recursive Mutex
1466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   mutex_id      mutex ID obtained by \ref osRecursiveMutexCreate.
1467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osRecursiveMutexRelease (osMutexId mutex_id)
1470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 4013              	 .loc 1 1470 1
 4014              	 .cfi_startproc
 4015              	 
 4016              	 
 4017 0000 80B5     	 push {r7,lr}
 4018              	 .save {r7,lr}
 4019              	 .cfi_def_cfa_offset 8
 4020              	 .cfi_offset 7,-8
 4021              	 .cfi_offset 14,-4
 4022              	 .pad #16
 4023 0002 84B0     	 sub sp,sp,#16
 4024              	 .cfi_def_cfa_offset 24
 4025              	 .setfp r7,sp,#0
 4026 0004 00AF     	 add r7,sp,#0
 4027              	 .cfi_def_cfa_register 7
 4028 0006 7860     	 str r0,[r7,#4]
1471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   osStatus result = osOK;
 4029              	 .loc 1 1472 12
 4030 0008 0023     	 movs r3,#0
 4031 000a FB60     	 str r3,[r7,#12]
1473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****  
1474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xSemaphoreGiveRecursive(mutex_id) != pdTRUE) 
 4032              	 .loc 1 1474 7
 4033 000c 7868     	 ldr r0,[r7,#4]
 4034 000e FFF7FEFF 	 bl xQueueGiveMutexRecursive
 4035 0012 0346     	 mov r3,r0
 4036              	 .loc 1 1474 41
 4037 0014 012B     	 cmp r3,#1
 4038 0016 14BF     	 ite ne
 4039 0018 0123     	 movne r3,#1
 4040 001a 0023     	 moveq r3,#0
 4041 001c DBB2     	 uxtb r3,r3
 4042              	 .loc 1 1474 3
 4043 001e 002B     	 cmp r3,#0
 4044 0020 01D0     	 beq .L243
1475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     result = osErrorOS;
 4045              	 .loc 1 1476 12
 4046 0022 FF23     	 movs r3,#255
 4047 0024 FB60     	 str r3,[r7,#12]
 4048              	.L243:
1477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return result;
 4049              	 .loc 1 1478 10
 4050 0026 FB68     	 ldr r3,[r7,#12]
1479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return osErrorResource;
1481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
ARM GAS   			page 105


1482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 4051              	 .loc 1 1482 1
 4052 0028 1846     	 mov r0,r3
 4053 002a 1037     	 adds r7,r7,#16
 4054              	 .cfi_def_cfa_offset 8
 4055 002c BD46     	 mov sp,r7
 4056              	 .cfi_def_cfa_register 13
 4057              	 
 4058 002e 80BD     	 pop {r7,pc}
 4059              	 .cfi_endproc
 4060              	.LFE78:
 4061              	 .fnend
 4062              	 .size osRecursiveMutexRelease,.-osRecursiveMutexRelease
 4063              	 .section .text.osRecursiveMutexWait,"ax",%progbits
 4064              	 .align 1
 4065              	 .global osRecursiveMutexWait
 4066              	 .syntax unified
 4067              	 .thumb
 4068              	 .thumb_func
 4069              	 .type osRecursiveMutexWait,%function
 4070              	osRecursiveMutexWait:
 4071              	 .fnstart
 4072              	.LFB79:
1483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 
1484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** /**
1485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @brief  Release a Recursive Mutex
1486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param   mutex_id    mutex ID obtained by \ref osRecursiveMutexCreate.
1487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
1488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** */
1490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** osStatus osRecursiveMutexWait (osMutexId mutex_id, uint32_t millisec)
1491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** {
 4073              	 .loc 1 1491 1
 4074              	 .cfi_startproc
 4075              	 
 4076              	 
 4077 0000 80B5     	 push {r7,lr}
 4078              	 .save {r7,lr}
 4079              	 .cfi_def_cfa_offset 8
 4080              	 .cfi_offset 7,-8
 4081              	 .cfi_offset 14,-4
 4082              	 .pad #16
 4083 0002 84B0     	 sub sp,sp,#16
 4084              	 .cfi_def_cfa_offset 24
 4085              	 .setfp r7,sp,#0
 4086 0004 00AF     	 add r7,sp,#0
 4087              	 .cfi_def_cfa_register 7
 4088 0006 7860     	 str r0,[r7,#4]
 4089 0008 3960     	 str r1,[r7]
1492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   TickType_t ticks;
1494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (mutex_id == NULL)
 4090              	 .loc 1 1495 3
 4091 000a 7B68     	 ldr r3,[r7,#4]
 4092 000c 002B     	 cmp r3,#0
 4093 000e 01D1     	 bne .L246
ARM GAS   			page 106


1496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorParameter;
 4094              	 .loc 1 1497 12
 4095 0010 8023     	 movs r3,#128
 4096 0012 22E0     	 b .L247
 4097              	.L246:
1498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   ticks = 0;
 4098              	 .loc 1 1500 9
 4099 0014 0023     	 movs r3,#0
 4100 0016 FB60     	 str r3,[r7,#12]
1501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (millisec == osWaitForever) 
 4101              	 .loc 1 1501 3
 4102 0018 3B68     	 ldr r3,[r7]
 4103 001a B3F1FF3F 	 cmp r3,#-1
 4104 001e 03D1     	 bne .L248
1502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = portMAX_DELAY;
 4105              	 .loc 1 1503 11
 4106 0020 4FF0FF33 	 mov r3,#-1
 4107 0024 FB60     	 str r3,[r7,#12]
 4108 0026 09E0     	 b .L249
 4109              	.L248:
1504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   else if (millisec != 0) 
 4110              	 .loc 1 1505 8
 4111 0028 3B68     	 ldr r3,[r7]
 4112 002a 002B     	 cmp r3,#0
 4113 002c 06D0     	 beq .L249
1506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 4114              	 .loc 1 1507 11
 4115 002e 3B68     	 ldr r3,[r7]
 4116 0030 FB60     	 str r3,[r7,#12]
1508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     if (ticks == 0) 
 4117              	 .loc 1 1508 5
 4118 0032 FB68     	 ldr r3,[r7,#12]
 4119 0034 002B     	 cmp r3,#0
 4120 0036 01D1     	 bne .L249
1509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     {
1510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****       ticks = 1;
 4121              	 .loc 1 1510 13
 4122 0038 0123     	 movs r3,#1
 4123 003a FB60     	 str r3,[r7,#12]
 4124              	.L249:
1511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     }
1512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   
1514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   if (xSemaphoreTakeRecursive(mutex_id, ticks) != pdTRUE) 
 4125              	 .loc 1 1514 7
 4126 003c F968     	 ldr r1,[r7,#12]
 4127 003e 7868     	 ldr r0,[r7,#4]
 4128 0040 FFF7FEFF 	 bl xQueueTakeMutexRecursive
 4129 0044 0346     	 mov r3,r0
 4130              	 .loc 1 1514 48
 4131 0046 012B     	 cmp r3,#1
ARM GAS   			page 107


 4132 0048 14BF     	 ite ne
 4133 004a 0123     	 movne r3,#1
 4134 004c 0023     	 moveq r3,#0
 4135 004e DBB2     	 uxtb r3,r3
 4136              	 .loc 1 1514 3
 4137 0050 002B     	 cmp r3,#0
 4138 0052 01D0     	 beq .L250
1515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   {
1516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****     return osErrorOS;
 4139              	 .loc 1 1516 12
 4140 0054 FF23     	 movs r3,#255
 4141 0056 00E0     	 b .L247
 4142              	.L250:
1517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   }
1518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c ****   return osOK;
 4143              	 .loc 1 1518 10
 4144 0058 0023     	 movs r3,#0
 4145              	.L247:
1519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #else
1520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** 	return osErrorResource;
1521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** #endif
1522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\CMSIS_RTOS\cmsis_os.c **** }
 4146              	 .loc 1 1522 1
 4147 005a 1846     	 mov r0,r3
 4148 005c 1037     	 adds r7,r7,#16
 4149              	 .cfi_def_cfa_offset 8
 4150 005e BD46     	 mov sp,r7
 4151              	 .cfi_def_cfa_register 13
 4152              	 
 4153 0060 80BD     	 pop {r7,pc}
 4154              	 .cfi_endproc
 4155              	.LFE79:
 4156              	 .fnend
 4157              	 .size osRecursiveMutexWait,.-osRecursiveMutexWait
 4158              	 .text
 4159              	.Letext0:
 4160              	 .file 4 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 4161              	 .file 5 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 4162              	 .file 6 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/projdefs.h"
 4163              	 .file 7 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/task.h"
 4164              	 .file 8 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/timers.h"
 4165              	 .file 9 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/queue.h"
 4166              	 .file 10 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/semphr.h"
 4167              	 .file 11 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gemeenschappelijk\\Third_Party\\FreeRTOS\\Source\\CMSIS_RTOS\\cmsis_os.h"
 4168              	 .section .debug_info,"",%progbits
 4169              	.Ldebug_info0:
 4170 0000 27130000 	 .4byte 0x1327
 4171 0004 0400     	 .2byte 0x4
 4172 0006 00000000 	 .4byte .Ldebug_abbrev0
 4173 000a 04       	 .byte 0x4
 4174 000b 01       	 .uleb128 0x1
 4175 000c 13060000 	 .4byte .LASF194
 4176 0010 04       	 .byte 0x4
 4177 0011 6F090000 	 .4byte .LASF195
 4178 0015 EF010000 	 .4byte .LASF196
 4179 0019 00000000 	 .4byte .Ldebug_ranges0+0
 4180 001d 00000000 	 .4byte 0
ARM GAS   			page 108


 4181 0021 00000000 	 .4byte .Ldebug_line0
 4182 0025 02       	 .uleb128 0x2
 4183 0026 04       	 .byte 0x4
 4184 0027 05       	 .byte 0x5
 4185 0028 696E7400 	 .ascii "int\000"
 4186 002c 03       	 .uleb128 0x3
 4187 002d 04       	 .byte 0x4
 4188 002e 07       	 .byte 0x7
 4189 002f D5000000 	 .4byte .LASF0
 4190 0033 03       	 .uleb128 0x3
 4191 0034 08       	 .byte 0x8
 4192 0035 05       	 .byte 0x5
 4193 0036 05060000 	 .4byte .LASF1
 4194 003a 03       	 .uleb128 0x3
 4195 003b 08       	 .byte 0x8
 4196 003c 04       	 .byte 0x4
 4197 003d 0B080000 	 .4byte .LASF2
 4198 0041 04       	 .uleb128 0x4
 4199 0042 A00A0000 	 .4byte .LASF197
 4200 0046 03       	 .uleb128 0x3
 4201 0047 01       	 .byte 0x1
 4202 0048 06       	 .byte 0x6
 4203 0049 1B0B0000 	 .4byte .LASF3
 4204 004d 05       	 .uleb128 0x5
 4205 004e 02090000 	 .4byte .LASF7
 4206 0052 04       	 .byte 0x4
 4207 0053 2B       	 .byte 0x2b
 4208 0054 18       	 .byte 0x18
 4209 0055 59000000 	 .4byte 0x59
 4210 0059 03       	 .uleb128 0x3
 4211 005a 01       	 .byte 0x1
 4212 005b 08       	 .byte 0x8
 4213 005c 530A0000 	 .4byte .LASF4
 4214 0060 03       	 .uleb128 0x3
 4215 0061 02       	 .byte 0x2
 4216 0062 05       	 .byte 0x5
 4217 0063 5A080000 	 .4byte .LASF5
 4218 0067 03       	 .uleb128 0x3
 4219 0068 02       	 .byte 0x2
 4220 0069 07       	 .byte 0x7
 4221 006a 370B0000 	 .4byte .LASF6
 4222 006e 05       	 .uleb128 0x5
 4223 006f 27010000 	 .4byte .LASF8
 4224 0073 04       	 .byte 0x4
 4225 0074 4D       	 .byte 0x4d
 4226 0075 18       	 .byte 0x18
 4227 0076 7A000000 	 .4byte 0x7a
 4228 007a 03       	 .uleb128 0x3
 4229 007b 04       	 .byte 0x4
 4230 007c 05       	 .byte 0x5
 4231 007d 7D080000 	 .4byte .LASF9
 4232 0081 05       	 .uleb128 0x5
 4233 0082 610A0000 	 .4byte .LASF10
 4234 0086 04       	 .byte 0x4
 4235 0087 4F       	 .byte 0x4f
 4236 0088 19       	 .byte 0x19
 4237 0089 8D000000 	 .4byte 0x8d
ARM GAS   			page 109


 4238 008d 03       	 .uleb128 0x3
 4239 008e 04       	 .byte 0x4
 4240 008f 07       	 .byte 0x7
 4241 0090 5D090000 	 .4byte .LASF11
 4242 0094 03       	 .uleb128 0x3
 4243 0095 08       	 .byte 0x8
 4244 0096 07       	 .byte 0x7
 4245 0097 95030000 	 .4byte .LASF12
 4246 009b 06       	 .uleb128 0x6
 4247 009c 04       	 .byte 0x4
 4248 009d 07       	 .uleb128 0x7
 4249 009e 04       	 .byte 0x4
 4250 009f A3000000 	 .4byte 0xa3
 4251 00a3 03       	 .uleb128 0x3
 4252 00a4 01       	 .byte 0x1
 4253 00a5 08       	 .byte 0x8
 4254 00a6 09050000 	 .4byte .LASF13
 4255 00aa 05       	 .uleb128 0x5
 4256 00ab 92050000 	 .4byte .LASF14
 4257 00af 05       	 .byte 0x5
 4258 00b0 18       	 .byte 0x18
 4259 00b1 13       	 .byte 0x13
 4260 00b2 4D000000 	 .4byte 0x4d
 4261 00b6 05       	 .uleb128 0x5
 4262 00b7 0A0A0000 	 .4byte .LASF15
 4263 00bb 05       	 .byte 0x5
 4264 00bc 2C       	 .byte 0x2c
 4265 00bd 13       	 .byte 0x13
 4266 00be 6E000000 	 .4byte 0x6e
 4267 00c2 05       	 .uleb128 0x5
 4268 00c3 98020000 	 .4byte .LASF16
 4269 00c7 05       	 .byte 0x5
 4270 00c8 30       	 .byte 0x30
 4271 00c9 14       	 .byte 0x14
 4272 00ca 81000000 	 .4byte 0x81
 4273 00ce 05       	 .uleb128 0x5
 4274 00cf 54070000 	 .4byte .LASF17
 4275 00d3 06       	 .byte 0x6
 4276 00d4 4D       	 .byte 0x4d
 4277 00d5 10       	 .byte 0x10
 4278 00d6 DA000000 	 .4byte 0xda
 4279 00da 07       	 .uleb128 0x7
 4280 00db 04       	 .byte 0x4
 4281 00dc E0000000 	 .4byte 0xe0
 4282 00e0 08       	 .uleb128 0x8
 4283 00e1 EB000000 	 .4byte 0xeb
 4284 00e5 09       	 .uleb128 0x9
 4285 00e6 9B000000 	 .4byte 0x9b
 4286 00ea 00       	 .byte 0
 4287 00eb 05       	 .uleb128 0x5
 4288 00ec 2F070000 	 .4byte .LASF18
 4289 00f0 03       	 .byte 0x3
 4290 00f1 62       	 .byte 0x62
 4291 00f2 0E       	 .byte 0xe
 4292 00f3 7A000000 	 .4byte 0x7a
 4293 00f7 05       	 .uleb128 0x5
 4294 00f8 3A050000 	 .4byte .LASF19
ARM GAS   			page 110


 4295 00fc 03       	 .byte 0x3
 4296 00fd 63       	 .byte 0x63
 4297 00fe 17       	 .byte 0x17
 4298 00ff 8D000000 	 .4byte 0x8d
 4299 0103 05       	 .uleb128 0x5
 4300 0104 F7070000 	 .4byte .LASF20
 4301 0108 03       	 .byte 0x3
 4302 0109 69       	 .byte 0x69
 4303 010a 13       	 .byte 0x13
 4304 010b C2000000 	 .4byte 0xc2
 4305 010f 07       	 .uleb128 0x7
 4306 0110 04       	 .byte 0x4
 4307 0111 AA000000 	 .4byte 0xaa
 4308 0115 05       	 .uleb128 0x5
 4309 0116 A8070000 	 .4byte .LASF21
 4310 011a 07       	 .byte 0x7
 4311 011b 67       	 .byte 0x67
 4312 011c 10       	 .byte 0x10
 4313 011d 9B000000 	 .4byte 0x9b
 4314 0121 0A       	 .uleb128 0xa
 4315 0122 07       	 .byte 0x7
 4316 0123 01       	 .byte 0x1
 4317 0124 59000000 	 .4byte 0x59
 4318 0128 07       	 .byte 0x7
 4319 0129 7B       	 .byte 0x7b
 4320 012a 01       	 .byte 0x1
 4321 012b 270B0000 	 .4byte .LASF31
 4322 012f 52010000 	 .4byte 0x152
 4323 0133 0B       	 .uleb128 0xb
 4324 0134 C1000000 	 .4byte .LASF22
 4325 0138 00       	 .byte 0
 4326 0139 0B       	 .uleb128 0xb
 4327 013a 02080000 	 .4byte .LASF23
 4328 013e 01       	 .byte 0x1
 4329 013f 0B       	 .uleb128 0xb
 4330 0140 6C040000 	 .4byte .LASF24
 4331 0144 02       	 .byte 0x2
 4332 0145 0B       	 .uleb128 0xb
 4333 0146 5D030000 	 .4byte .LASF25
 4334 014a 03       	 .byte 0x3
 4335 014b 0B       	 .uleb128 0xb
 4336 014c 18050000 	 .4byte .LASF26
 4337 0150 04       	 .byte 0x4
 4338 0151 00       	 .byte 0
 4339 0152 05       	 .uleb128 0x5
 4340 0153 1E040000 	 .4byte .LASF27
 4341 0157 07       	 .byte 0x7
 4342 0158 81       	 .byte 0x81
 4343 0159 03       	 .byte 0x3
 4344 015a 21010000 	 .4byte 0x121
 4345 015e 05       	 .uleb128 0x5
 4346 015f A1020000 	 .4byte .LASF28
 4347 0163 08       	 .byte 0x8
 4348 0164 76       	 .byte 0x76
 4349 0165 10       	 .byte 0x10
 4350 0166 9B000000 	 .4byte 0x9b
 4351 016a 05       	 .uleb128 0x5
ARM GAS   			page 111


 4352 016b 76050000 	 .4byte .LASF29
 4353 016f 09       	 .byte 0x9
 4354 0170 58       	 .byte 0x58
 4355 0171 10       	 .byte 0x10
 4356 0172 9B000000 	 .4byte 0x9b
 4357 0176 05       	 .uleb128 0x5
 4358 0177 86080000 	 .4byte .LASF30
 4359 017b 0A       	 .byte 0xa
 4360 017c 4F       	 .byte 0x4f
 4361 017d 17       	 .byte 0x17
 4362 017e 6A010000 	 .4byte 0x16a
 4363 0182 0A       	 .uleb128 0xa
 4364 0183 05       	 .byte 0x5
 4365 0184 02       	 .byte 0x2
 4366 0185 60000000 	 .4byte 0x60
 4367 0189 0B       	 .byte 0xb
 4368 018a EB       	 .byte 0xeb
 4369 018b 0F       	 .byte 0xf
 4370 018c 0A010000 	 .4byte .LASF32
 4371 0190 C5010000 	 .4byte 0x1c5
 4372 0194 0C       	 .uleb128 0xc
 4373 0195 0F040000 	 .4byte .LASF33
 4374 0199 7D       	 .sleb128 -3
 4375 019a 0C       	 .uleb128 0xc
 4376 019b 87030000 	 .4byte .LASF34
 4377 019f 7E       	 .sleb128 -2
 4378 01a0 0C       	 .uleb128 0xc
 4379 01a1 8A0A0000 	 .4byte .LASF35
 4380 01a5 7F       	 .sleb128 -1
 4381 01a6 0B       	 .uleb128 0xb
 4382 01a7 C60B0000 	 .4byte .LASF36
 4383 01ab 00       	 .byte 0
 4384 01ac 0B       	 .uleb128 0xb
 4385 01ad 17080000 	 .4byte .LASF37
 4386 01b1 01       	 .byte 0x1
 4387 01b2 0B       	 .uleb128 0xb
 4388 01b3 F4030000 	 .4byte .LASF38
 4389 01b7 02       	 .byte 0x2
 4390 01b8 0B       	 .uleb128 0xb
 4391 01b9 74030000 	 .4byte .LASF39
 4392 01bd 03       	 .byte 0x3
 4393 01be 0B       	 .uleb128 0xb
 4394 01bf F1020000 	 .4byte .LASF40
 4395 01c3 84       	 .byte 0x84
 4396 01c4 00       	 .byte 0
 4397 01c5 05       	 .uleb128 0x5
 4398 01c6 24070000 	 .4byte .LASF41
 4399 01ca 0B       	 .byte 0xb
 4400 01cb F4       	 .byte 0xf4
 4401 01cc 03       	 .byte 0x3
 4402 01cd 82010000 	 .4byte 0x182
 4403 01d1 0A       	 .uleb128 0xa
 4404 01d2 07       	 .byte 0x7
 4405 01d3 04       	 .byte 0x4
 4406 01d4 2C000000 	 .4byte 0x2c
 4407 01d8 0B       	 .byte 0xb
 4408 01d9 FC       	 .byte 0xfc
ARM GAS   			page 112


 4409 01da 0F       	 .byte 0xf
 4410 01db 31010000 	 .4byte .LASF42
 4411 01df 41020000 	 .4byte 0x241
 4412 01e3 0B       	 .uleb128 0xb
 4413 01e4 D8050000 	 .4byte .LASF43
 4414 01e8 00       	 .byte 0
 4415 01e9 0B       	 .uleb128 0xb
 4416 01ea 5E040000 	 .4byte .LASF44
 4417 01ee 08       	 .byte 0x8
 4418 01ef 0B       	 .uleb128 0xb
 4419 01f0 D3020000 	 .4byte .LASF45
 4420 01f4 10       	 .byte 0x10
 4421 01f5 0B       	 .uleb128 0xb
 4422 01f6 370A0000 	 .4byte .LASF46
 4423 01fa 20       	 .byte 0x20
 4424 01fb 0B       	 .uleb128 0xb
 4425 01fc 8C010000 	 .4byte .LASF47
 4426 0200 40       	 .byte 0x40
 4427 0201 0B       	 .uleb128 0xb
 4428 0202 56000000 	 .4byte .LASF48
 4429 0206 80       	 .byte 0x80
 4430 0207 0B       	 .uleb128 0xb
 4431 0208 21030000 	 .4byte .LASF49
 4432 020c 81       	 .byte 0x81
 4433 020d 0B       	 .uleb128 0xb
 4434 020e 0C090000 	 .4byte .LASF50
 4435 0212 C1       	 .byte 0xc1
 4436 0213 0B       	 .uleb128 0xb
 4437 0214 23090000 	 .4byte .LASF51
 4438 0218 82       	 .byte 0x82
 4439 0219 0B       	 .uleb128 0xb
 4440 021a 01030000 	 .4byte .LASF52
 4441 021e 83       	 .byte 0x83
 4442 021f 0B       	 .uleb128 0xb
 4443 0220 C8050000 	 .4byte .LASF53
 4444 0224 84       	 .byte 0x84
 4445 0225 0B       	 .uleb128 0xb
 4446 0226 AA000000 	 .4byte .LASF54
 4447 022a 85       	 .byte 0x85
 4448 022b 0B       	 .uleb128 0xb
 4449 022c B7030000 	 .4byte .LASF55
 4450 0230 86       	 .byte 0x86
 4451 0231 0B       	 .uleb128 0xb
 4452 0232 980B0000 	 .4byte .LASF56
 4453 0236 FF       	 .byte 0xff
 4454 0237 0D       	 .uleb128 0xd
 4455 0238 EA000000 	 .4byte .LASF57
 4456 023c FFFFFF7F 	 .4byte 0x7fffffff
 4457 0240 00       	 .byte 0
 4458 0241 0E       	 .uleb128 0xe
 4459 0242 A1050000 	 .4byte .LASF58
 4460 0246 0B       	 .byte 0xb
 4461 0247 0C01     	 .2byte 0x10c
 4462 0249 03       	 .byte 0x3
 4463 024a D1010000 	 .4byte 0x1d1
 4464 024e 0F       	 .uleb128 0xf
 4465 024f 07       	 .byte 0x7
ARM GAS   			page 113


 4466 0250 01       	 .byte 0x1
 4467 0251 59000000 	 .4byte 0x59
 4468 0255 0B       	 .byte 0xb
 4469 0256 1C01     	 .2byte 0x11c
 4470 0258 0F       	 .byte 0xf
 4471 0259 66050000 	 .4byte .LASF198
 4472 025d 6E020000 	 .4byte 0x26e
 4473 0261 0B       	 .uleb128 0xb
 4474 0262 67000000 	 .4byte .LASF59
 4475 0266 00       	 .byte 0
 4476 0267 0B       	 .uleb128 0xb
 4477 0268 17010000 	 .4byte .LASF60
 4478 026c 01       	 .byte 0x1
 4479 026d 00       	 .byte 0
 4480 026e 0E       	 .uleb128 0xe
 4481 026f 7C0A0000 	 .4byte .LASF61
 4482 0273 0B       	 .byte 0xb
 4483 0274 1F01     	 .2byte 0x11f
 4484 0276 03       	 .byte 0x3
 4485 0277 4E020000 	 .4byte 0x24e
 4486 027b 0E       	 .uleb128 0xe
 4487 027c 430A0000 	 .4byte .LASF62
 4488 0280 0B       	 .byte 0xb
 4489 0281 2301     	 .2byte 0x123
 4490 0283 10       	 .byte 0x10
 4491 0284 88020000 	 .4byte 0x288
 4492 0288 07       	 .uleb128 0x7
 4493 0289 04       	 .byte 0x4
 4494 028a 8E020000 	 .4byte 0x28e
 4495 028e 08       	 .uleb128 0x8
 4496 028f 99020000 	 .4byte 0x299
 4497 0293 09       	 .uleb128 0x9
 4498 0294 99020000 	 .4byte 0x299
 4499 0298 00       	 .byte 0
 4500 0299 07       	 .uleb128 0x7
 4501 029a 04       	 .byte 0x4
 4502 029b 9F020000 	 .4byte 0x29f
 4503 029f 10       	 .uleb128 0x10
 4504 02a0 0E       	 .uleb128 0xe
 4505 02a1 94070000 	 .4byte .LASF63
 4506 02a5 0B       	 .byte 0xb
 4507 02a6 2701     	 .2byte 0x127
 4508 02a8 10       	 .byte 0x10
 4509 02a9 88020000 	 .4byte 0x288
 4510 02ad 0E       	 .uleb128 0xe
 4511 02ae B9040000 	 .4byte .LASF64
 4512 02b2 0B       	 .byte 0xb
 4513 02b3 2D01     	 .2byte 0x12d
 4514 02b5 16       	 .byte 0x16
 4515 02b6 15010000 	 .4byte 0x115
 4516 02ba 0E       	 .uleb128 0xe
 4517 02bb BE050000 	 .4byte .LASF65
 4518 02bf 0B       	 .byte 0xb
 4519 02c0 3101     	 .2byte 0x131
 4520 02c2 17       	 .byte 0x17
 4521 02c3 5E010000 	 .4byte 0x15e
 4522 02c7 0E       	 .uleb128 0xe
ARM GAS   			page 114


 4523 02c8 98080000 	 .4byte .LASF66
 4524 02cc 0B       	 .byte 0xb
 4525 02cd 3501     	 .2byte 0x135
 4526 02cf 1B       	 .byte 0x1b
 4527 02d0 76010000 	 .4byte 0x176
 4528 02d4 0E       	 .uleb128 0xe
 4529 02d5 58010000 	 .4byte .LASF67
 4530 02d9 0B       	 .byte 0xb
 4531 02da 3901     	 .2byte 0x139
 4532 02dc 1B       	 .byte 0x1b
 4533 02dd 76010000 	 .4byte 0x176
 4534 02e1 0E       	 .uleb128 0xe
 4535 02e2 CC040000 	 .4byte .LASF68
 4536 02e6 0B       	 .byte 0xb
 4537 02e7 3D01     	 .2byte 0x13d
 4538 02e9 1C       	 .byte 0x1c
 4539 02ea EE020000 	 .4byte 0x2ee
 4540 02ee 07       	 .uleb128 0x7
 4541 02ef 04       	 .byte 0x4
 4542 02f0 F4020000 	 .4byte 0x2f4
 4543 02f4 11       	 .uleb128 0x11
 4544 02f5 D8070000 	 .4byte .LASF76
 4545 02f9 14       	 .byte 0x14
 4546 02fa 01       	 .byte 0x1
 4547 02fb 0103     	 .2byte 0x301
 4548 02fd 10       	 .byte 0x10
 4549 02fe 49030000 	 .4byte 0x349
 4550 0302 12       	 .uleb128 0x12
 4551 0303 E3070000 	 .4byte .LASF69
 4552 0307 01       	 .byte 0x1
 4553 0308 0203     	 .2byte 0x302
 4554 030a 09       	 .byte 0x9
 4555 030b 9B000000 	 .4byte 0x9b
 4556 030f 00       	 .byte 0
 4557 0310 12       	 .uleb128 0x12
 4558 0311 3D080000 	 .4byte .LASF70
 4559 0315 01       	 .byte 0x1
 4560 0316 0303     	 .2byte 0x303
 4561 0318 0C       	 .byte 0xc
 4562 0319 0F010000 	 .4byte 0x10f
 4563 031d 04       	 .byte 0x4
 4564 031e 12       	 .uleb128 0x12
 4565 031f E2000000 	 .4byte .LASF71
 4566 0323 01       	 .byte 0x1
 4567 0324 0403     	 .2byte 0x304
 4568 0326 0C       	 .byte 0xc
 4569 0327 C2000000 	 .4byte 0xc2
 4570 032b 08       	 .byte 0x8
 4571 032c 12       	 .uleb128 0x12
 4572 032d D5030000 	 .4byte .LASF72
 4573 0331 01       	 .byte 0x1
 4574 0332 0503     	 .2byte 0x305
 4575 0334 0C       	 .byte 0xc
 4576 0335 C2000000 	 .4byte 0xc2
 4577 0339 0C       	 .byte 0xc
 4578 033a 12       	 .uleb128 0x12
 4579 033b 2E000000 	 .4byte .LASF73
ARM GAS   			page 115


 4580 033f 01       	 .byte 0x1
 4581 0340 0603     	 .2byte 0x306
 4582 0342 0C       	 .byte 0xc
 4583 0343 C2000000 	 .4byte 0xc2
 4584 0347 10       	 .byte 0x10
 4585 0348 00       	 .byte 0
 4586 0349 0E       	 .uleb128 0xe
 4587 034a 59050000 	 .4byte .LASF74
 4588 034e 0B       	 .byte 0xb
 4589 034f 4101     	 .2byte 0x141
 4590 0351 17       	 .byte 0x17
 4591 0352 6A010000 	 .4byte 0x16a
 4592 0356 0E       	 .uleb128 0xe
 4593 0357 CB000000 	 .4byte .LASF75
 4594 035b 0B       	 .byte 0xb
 4595 035c 4501     	 .2byte 0x145
 4596 035e 1D       	 .byte 0x1d
 4597 035f 63030000 	 .4byte 0x363
 4598 0363 07       	 .uleb128 0x7
 4599 0364 04       	 .byte 0x4
 4600 0365 69030000 	 .4byte 0x369
 4601 0369 11       	 .uleb128 0x11
 4602 036a 64080000 	 .4byte .LASF77
 4603 036e 0C       	 .byte 0xc
 4604 036f 01       	 .byte 0x1
 4605 0370 0F04     	 .2byte 0x40f
 4606 0372 10       	 .byte 0x10
 4607 0373 A2030000 	 .4byte 0x3a2
 4608 0377 12       	 .uleb128 0x12
 4609 0378 A9010000 	 .4byte .LASF78
 4610 037c 01       	 .byte 0x1
 4611 037d 1004     	 .2byte 0x410
 4612 037f 17       	 .byte 0x17
 4613 0380 07060000 	 .4byte 0x607
 4614 0384 00       	 .byte 0
 4615 0385 12       	 .uleb128 0x12
 4616 0386 4A0B0000 	 .4byte .LASF79
 4617 038a 01       	 .byte 0x1
 4618 038b 1104     	 .2byte 0x411
 4619 038d 11       	 .byte 0x11
 4620 038e 6A010000 	 .4byte 0x16a
 4621 0392 04       	 .byte 0x4
 4622 0393 12       	 .uleb128 0x12
 4623 0394 E3070000 	 .4byte .LASF69
 4624 0398 01       	 .byte 0x1
 4625 0399 1204     	 .2byte 0x412
 4626 039b 0C       	 .byte 0xc
 4627 039c E1020000 	 .4byte 0x2e1
 4628 03a0 08       	 .byte 0x8
 4629 03a1 00       	 .byte 0
 4630 03a2 11       	 .uleb128 0x11
 4631 03a3 8A020000 	 .4byte .LASF80
 4632 03a7 14       	 .byte 0x14
 4633 03a8 0B       	 .byte 0xb
 4634 03a9 4A01     	 .2byte 0x14a
 4635 03ab 10       	 .byte 0x10
 4636 03ac F7030000 	 .4byte 0x3f7
ARM GAS   			page 116


 4637 03b0 12       	 .uleb128 0x12
 4638 03b1 16000000 	 .4byte .LASF81
 4639 03b5 0B       	 .byte 0xb
 4640 03b6 4B01     	 .2byte 0x14b
 4641 03b8 1B       	 .byte 0x1b
 4642 03b9 9D000000 	 .4byte 0x9d
 4643 03bd 00       	 .byte 0
 4644 03be 12       	 .uleb128 0x12
 4645 03bf FD0A0000 	 .4byte .LASF82
 4646 03c3 0B       	 .byte 0xb
 4647 03c4 4C01     	 .2byte 0x14c
 4648 03c6 1A       	 .byte 0x1a
 4649 03c7 7B020000 	 .4byte 0x27b
 4650 03cb 04       	 .byte 0x4
 4651 03cc 12       	 .uleb128 0x12
 4652 03cd 9E070000 	 .4byte .LASF83
 4653 03d1 0B       	 .byte 0xb
 4654 03d2 4D01     	 .2byte 0x14d
 4655 03d4 1A       	 .byte 0x1a
 4656 03d5 C5010000 	 .4byte 0x1c5
 4657 03d9 08       	 .byte 0x8
 4658 03da 12       	 .uleb128 0x12
 4659 03db B3010000 	 .4byte .LASF84
 4660 03df 0B       	 .byte 0xb
 4661 03e0 4E01     	 .2byte 0x14e
 4662 03e2 1A       	 .byte 0x1a
 4663 03e3 C2000000 	 .4byte 0xc2
 4664 03e7 0C       	 .byte 0xc
 4665 03e8 12       	 .uleb128 0x12
 4666 03e9 0C000000 	 .4byte .LASF85
 4667 03ed 0B       	 .byte 0xb
 4668 03ee 4F01     	 .2byte 0x14f
 4669 03f0 1A       	 .byte 0x1a
 4670 03f1 C2000000 	 .4byte 0xc2
 4671 03f5 10       	 .byte 0x10
 4672 03f6 00       	 .byte 0
 4673 03f7 0E       	 .uleb128 0xe
 4674 03f8 9B010000 	 .4byte .LASF86
 4675 03fc 0B       	 .byte 0xb
 4676 03fd 5001     	 .2byte 0x150
 4677 03ff 03       	 .byte 0x3
 4678 0400 A2030000 	 .4byte 0x3a2
 4679 0404 13       	 .uleb128 0x13
 4680 0405 F7030000 	 .4byte 0x3f7
 4681 0409 11       	 .uleb128 0x11
 4682 040a 63070000 	 .4byte .LASF87
 4683 040e 04       	 .byte 0x4
 4684 040f 0B       	 .byte 0xb
 4685 0410 5401     	 .2byte 0x154
 4686 0412 10       	 .byte 0x10
 4687 0413 26040000 	 .4byte 0x426
 4688 0417 12       	 .uleb128 0x12
 4689 0418 52050000 	 .4byte .LASF88
 4690 041c 0B       	 .byte 0xb
 4691 041d 5501     	 .2byte 0x155
 4692 041f 1D       	 .byte 0x1d
 4693 0420 A0020000 	 .4byte 0x2a0
ARM GAS   			page 117


 4694 0424 00       	 .byte 0
 4695 0425 00       	 .byte 0
 4696 0426 0E       	 .uleb128 0xe
 4697 0427 87070000 	 .4byte .LASF89
 4698 042b 0B       	 .byte 0xb
 4699 042c 5601     	 .2byte 0x156
 4700 042e 03       	 .byte 0x3
 4701 042f 09040000 	 .4byte 0x409
 4702 0433 13       	 .uleb128 0x13
 4703 0434 26040000 	 .4byte 0x426
 4704 0438 11       	 .uleb128 0x11
 4705 0439 70080000 	 .4byte .LASF90
 4706 043d 04       	 .byte 0x4
 4707 043e 0B       	 .byte 0xb
 4708 043f 5A01     	 .2byte 0x15a
 4709 0441 10       	 .byte 0x10
 4710 0442 55040000 	 .4byte 0x455
 4711 0446 12       	 .uleb128 0x12
 4712 0447 03040000 	 .4byte .LASF91
 4713 044b 0B       	 .byte 0xb
 4714 044c 5B01     	 .2byte 0x15b
 4715 044e 1E       	 .byte 0x1e
 4716 044f C2000000 	 .4byte 0xc2
 4717 0453 00       	 .byte 0
 4718 0454 00       	 .byte 0
 4719 0455 0E       	 .uleb128 0xe
 4720 0456 7A070000 	 .4byte .LASF92
 4721 045a 0B       	 .byte 0xb
 4722 045b 5C01     	 .2byte 0x15c
 4723 045d 03       	 .byte 0x3
 4724 045e 38040000 	 .4byte 0x438
 4725 0462 13       	 .uleb128 0x13
 4726 0463 55040000 	 .4byte 0x455
 4727 0467 11       	 .uleb128 0x11
 4728 0468 C4030000 	 .4byte .LASF93
 4729 046c 04       	 .byte 0x4
 4730 046d 0B       	 .byte 0xb
 4731 046e 6001     	 .2byte 0x160
 4732 0470 10       	 .byte 0x10
 4733 0471 84040000 	 .4byte 0x484
 4734 0475 12       	 .uleb128 0x12
 4735 0476 03040000 	 .4byte .LASF91
 4736 047a 0B       	 .byte 0xb
 4737 047b 6101     	 .2byte 0x161
 4738 047d 1E       	 .byte 0x1e
 4739 047e C2000000 	 .4byte 0xc2
 4740 0482 00       	 .byte 0
 4741 0483 00       	 .byte 0
 4742 0484 0E       	 .uleb128 0xe
 4743 0485 DB040000 	 .4byte .LASF94
 4744 0489 0B       	 .byte 0xb
 4745 048a 6201     	 .2byte 0x162
 4746 048c 03       	 .byte 0x3
 4747 048d 67040000 	 .4byte 0x467
 4748 0491 13       	 .uleb128 0x13
 4749 0492 84040000 	 .4byte 0x484
 4750 0496 11       	 .uleb128 0x11
ARM GAS   			page 118


 4751 0497 FD040000 	 .4byte .LASF95
 4752 049b 0C       	 .byte 0xc
 4753 049c 0B       	 .byte 0xb
 4754 049d 6601     	 .2byte 0x166
 4755 049f 10       	 .byte 0x10
 4756 04a0 CF040000 	 .4byte 0x4cf
 4757 04a4 12       	 .uleb128 0x12
 4758 04a5 E2000000 	 .4byte .LASF71
 4759 04a9 0B       	 .byte 0xb
 4760 04aa 6701     	 .2byte 0x167
 4761 04ac 1C       	 .byte 0x1c
 4762 04ad C2000000 	 .4byte 0xc2
 4763 04b1 00       	 .byte 0
 4764 04b2 12       	 .uleb128 0x12
 4765 04b3 D5030000 	 .4byte .LASF72
 4766 04b7 0B       	 .byte 0xb
 4767 04b8 6801     	 .2byte 0x168
 4768 04ba 1C       	 .byte 0x1c
 4769 04bb C2000000 	 .4byte 0xc2
 4770 04bf 04       	 .byte 0x4
 4771 04c0 12       	 .uleb128 0x12
 4772 04c1 E3070000 	 .4byte .LASF69
 4773 04c5 0B       	 .byte 0xb
 4774 04c6 6901     	 .2byte 0x169
 4775 04c8 1F       	 .byte 0x1f
 4776 04c9 9B000000 	 .4byte 0x9b
 4777 04cd 08       	 .byte 0x8
 4778 04ce 00       	 .byte 0
 4779 04cf 0E       	 .uleb128 0xe
 4780 04d0 46050000 	 .4byte .LASF96
 4781 04d4 0B       	 .byte 0xb
 4782 04d5 6A01     	 .2byte 0x16a
 4783 04d7 03       	 .byte 0x3
 4784 04d8 96040000 	 .4byte 0x496
 4785 04dc 13       	 .uleb128 0x13
 4786 04dd CF040000 	 .4byte 0x4cf
 4787 04e1 11       	 .uleb128 0x11
 4788 04e2 3A030000 	 .4byte .LASF97
 4789 04e6 08       	 .byte 0x8
 4790 04e7 0B       	 .byte 0xb
 4791 04e8 6E01     	 .2byte 0x16e
 4792 04ea 10       	 .byte 0x10
 4793 04eb 0C050000 	 .4byte 0x50c
 4794 04ef 12       	 .uleb128 0x12
 4795 04f0 A2080000 	 .4byte .LASF98
 4796 04f4 0B       	 .byte 0xb
 4797 04f5 6F01     	 .2byte 0x16f
 4798 04f7 1B       	 .byte 0x1b
 4799 04f8 C2000000 	 .4byte 0xc2
 4800 04fc 00       	 .byte 0
 4801 04fd 12       	 .uleb128 0x12
 4802 04fe D5030000 	 .4byte .LASF72
 4803 0502 0B       	 .byte 0xb
 4804 0503 7001     	 .2byte 0x170
 4805 0505 1C       	 .byte 0x1c
 4806 0506 C2000000 	 .4byte 0xc2
 4807 050a 04       	 .byte 0x4
ARM GAS   			page 119


 4808 050b 00       	 .byte 0
 4809 050c 0E       	 .uleb128 0xe
 4810 050d 37040000 	 .4byte .LASF99
 4811 0511 0B       	 .byte 0xb
 4812 0512 7201     	 .2byte 0x172
 4813 0514 03       	 .byte 0x3
 4814 0515 E1040000 	 .4byte 0x4e1
 4815 0519 13       	 .uleb128 0x13
 4816 051a 0C050000 	 .4byte 0x50c
 4817 051e 11       	 .uleb128 0x11
 4818 051f E2010000 	 .4byte .LASF100
 4819 0523 0C       	 .byte 0xc
 4820 0524 0B       	 .byte 0xb
 4821 0525 7601     	 .2byte 0x176
 4822 0527 10       	 .byte 0x10
 4823 0528 56050000 	 .4byte 0x556
 4824 052c 12       	 .uleb128 0x12
 4825 052d A2080000 	 .4byte .LASF98
 4826 0531 0B       	 .byte 0xb
 4827 0532 7701     	 .2byte 0x177
 4828 0534 1B       	 .byte 0x1b
 4829 0535 C2000000 	 .4byte 0xc2
 4830 0539 00       	 .byte 0
 4831 053a 12       	 .uleb128 0x12
 4832 053b D5030000 	 .4byte .LASF72
 4833 053f 0B       	 .byte 0xb
 4834 0540 7801     	 .2byte 0x178
 4835 0542 1C       	 .byte 0x1c
 4836 0543 C2000000 	 .4byte 0xc2
 4837 0547 04       	 .byte 0x4
 4838 0548 14       	 .uleb128 0x14
 4839 0549 636200   	 .ascii "cb\000"
 4840 054c 0B       	 .byte 0xb
 4841 054d 7901     	 .2byte 0x179
 4842 054f 18       	 .byte 0x18
 4843 0550 56050000 	 .4byte 0x556
 4844 0554 08       	 .byte 0x8
 4845 0555 00       	 .byte 0
 4846 0556 07       	 .uleb128 0x7
 4847 0557 04       	 .byte 0x4
 4848 0558 63030000 	 .4byte 0x363
 4849 055c 0E       	 .uleb128 0xe
 4850 055d 4B010000 	 .4byte .LASF101
 4851 0561 0B       	 .byte 0xb
 4852 0562 7A01     	 .2byte 0x17a
 4853 0564 03       	 .byte 0x3
 4854 0565 1E050000 	 .4byte 0x51e
 4855 0569 13       	 .uleb128 0x13
 4856 056a 5C050000 	 .4byte 0x55c
 4857 056e 15       	 .uleb128 0x15
 4858 056f 0C       	 .byte 0xc
 4859 0570 0B       	 .byte 0xb
 4860 0571 7F01     	 .2byte 0x17f
 4861 0573 11       	 .byte 0x11
 4862 0574 F4040000 	 .4byte .LASF199
 4863 0578 FA050000 	 .4byte 0x5fa
 4864 057c 16       	 .uleb128 0x16
ARM GAS   			page 120


 4865 057d 04       	 .byte 0x4
 4866 057e 0B       	 .byte 0xb
 4867 057f 8101     	 .2byte 0x181
 4868 0581 0A       	 .byte 0xa
 4869 0582 AA050000 	 .4byte 0x5aa
 4870 0586 17       	 .uleb128 0x17
 4871 0587 7600     	 .ascii "v\000"
 4872 0589 0B       	 .byte 0xb
 4873 058a 8201     	 .2byte 0x182
 4874 058c 21       	 .byte 0x21
 4875 058d C2000000 	 .4byte 0xc2
 4876 0591 17       	 .uleb128 0x17
 4877 0592 7000     	 .ascii "p\000"
 4878 0594 0B       	 .byte 0xb
 4879 0595 8301     	 .2byte 0x183
 4880 0597 21       	 .byte 0x21
 4881 0598 9B000000 	 .4byte 0x9b
 4882 059c 18       	 .uleb128 0x18
 4883 059d 32050000 	 .4byte .LASF102
 4884 05a1 0B       	 .byte 0xb
 4885 05a2 8401     	 .2byte 0x184
 4886 05a4 1B       	 .byte 0x1b
 4887 05a5 B6000000 	 .4byte 0xb6
 4888 05a9 00       	 .byte 0
 4889 05aa 16       	 .uleb128 0x16
 4890 05ab 04       	 .byte 0x4
 4891 05ac 0B       	 .byte 0xb
 4892 05ad 8601     	 .2byte 0x186
 4893 05af 0A       	 .byte 0xa
 4894 05b0 CF050000 	 .4byte 0x5cf
 4895 05b4 18       	 .uleb128 0x18
 4896 05b5 C4040000 	 .4byte .LASF103
 4897 05b9 0B       	 .byte 0xb
 4898 05ba 8701     	 .2byte 0x187
 4899 05bc 1B       	 .byte 0x1b
 4900 05bd 56030000 	 .4byte 0x356
 4901 05c1 18       	 .uleb128 0x18
 4902 05c2 C5080000 	 .4byte .LASF104
 4903 05c6 0B       	 .byte 0xb
 4904 05c7 8801     	 .2byte 0x188
 4905 05c9 18       	 .byte 0x18
 4906 05ca 49030000 	 .4byte 0x349
 4907 05ce 00       	 .byte 0
 4908 05cf 12       	 .uleb128 0x12
 4909 05d0 9A050000 	 .4byte .LASF105
 4910 05d4 0B       	 .byte 0xb
 4911 05d5 8001     	 .2byte 0x180
 4912 05d7 1C       	 .byte 0x1c
 4913 05d8 41020000 	 .4byte 0x241
 4914 05dc 00       	 .byte 0
 4915 05dd 12       	 .uleb128 0x12
 4916 05de 09040000 	 .4byte .LASF106
 4917 05e2 0B       	 .byte 0xb
 4918 05e3 8501     	 .2byte 0x185
 4919 05e5 05       	 .byte 0x5
 4920 05e6 7C050000 	 .4byte 0x57c
 4921 05ea 04       	 .byte 0x4
ARM GAS   			page 121


 4922 05eb 14       	 .uleb128 0x14
 4923 05ec 64656600 	 .ascii "def\000"
 4924 05f0 0B       	 .byte 0xb
 4925 05f1 8901     	 .2byte 0x189
 4926 05f3 05       	 .byte 0x5
 4927 05f4 AA050000 	 .4byte 0x5aa
 4928 05f8 08       	 .byte 0x8
 4929 05f9 00       	 .byte 0
 4930 05fa 0E       	 .uleb128 0xe
 4931 05fb D0080000 	 .4byte .LASF107
 4932 05ff 0B       	 .byte 0xb
 4933 0600 8A01     	 .2byte 0x18a
 4934 0602 03       	 .byte 0x3
 4935 0603 6E050000 	 .4byte 0x56e
 4936 0607 07       	 .uleb128 0x7
 4937 0608 04       	 .byte 0x4
 4938 0609 69050000 	 .4byte 0x569
 4939 060d 19       	 .uleb128 0x19
 4940 060e BD010000 	 .4byte .LASF110
 4941 0612 01       	 .byte 0x1
 4942 0613 D205     	 .2byte 0x5d2
 4943 0615 0A       	 .byte 0xa
 4944 0616 41020000 	 .4byte 0x241
 4945 061a 00000000 	 .4byte .LFB79
 4946 061e 62000000 	 .4byte .LFE79-.LFB79
 4947 0622 01       	 .uleb128 0x1
 4948 0623 9C       	 .byte 0x9c
 4949 0624 59060000 	 .4byte 0x659
 4950 0628 1A       	 .uleb128 0x1a
 4951 0629 E2020000 	 .4byte .LASF108
 4952 062d 01       	 .byte 0x1
 4953 062e D205     	 .2byte 0x5d2
 4954 0630 2A       	 .byte 0x2a
 4955 0631 C7020000 	 .4byte 0x2c7
 4956 0635 02       	 .uleb128 0x2
 4957 0636 91       	 .byte 0x91
 4958 0637 6C       	 .sleb128 -20
 4959 0638 1A       	 .uleb128 0x1a
 4960 0639 31030000 	 .4byte .LASF109
 4961 063d 01       	 .byte 0x1
 4962 063e D205     	 .2byte 0x5d2
 4963 0640 3D       	 .byte 0x3d
 4964 0641 C2000000 	 .4byte 0xc2
 4965 0645 02       	 .uleb128 0x2
 4966 0646 91       	 .byte 0x91
 4967 0647 68       	 .sleb128 -24
 4968 0648 1B       	 .uleb128 0x1b
 4969 0649 D5040000 	 .4byte .LASF112
 4970 064d 01       	 .byte 0x1
 4971 064e D505     	 .2byte 0x5d5
 4972 0650 0E       	 .byte 0xe
 4973 0651 03010000 	 .4byte 0x103
 4974 0655 02       	 .uleb128 0x2
 4975 0656 91       	 .byte 0x91
 4976 0657 74       	 .sleb128 -12
 4977 0658 00       	 .byte 0
 4978 0659 19       	 .uleb128 0x19
ARM GAS   			page 122


 4979 065a 1F0A0000 	 .4byte .LASF111
 4980 065e 01       	 .byte 0x1
 4981 065f BD05     	 .2byte 0x5bd
 4982 0661 0A       	 .byte 0xa
 4983 0662 41020000 	 .4byte 0x241
 4984 0666 00000000 	 .4byte .LFB78
 4985 066a 30000000 	 .4byte .LFE78-.LFB78
 4986 066e 01       	 .uleb128 0x1
 4987 066f 9C       	 .byte 0x9c
 4988 0670 95060000 	 .4byte 0x695
 4989 0674 1A       	 .uleb128 0x1a
 4990 0675 E2020000 	 .4byte .LASF108
 4991 0679 01       	 .byte 0x1
 4992 067a BD05     	 .2byte 0x5bd
 4993 067c 2D       	 .byte 0x2d
 4994 067d C7020000 	 .4byte 0x2c7
 4995 0681 02       	 .uleb128 0x2
 4996 0682 91       	 .byte 0x91
 4997 0683 6C       	 .sleb128 -20
 4998 0684 1B       	 .uleb128 0x1b
 4999 0685 56030000 	 .4byte .LASF113
 5000 0689 01       	 .byte 0x1
 5001 068a C005     	 .2byte 0x5c0
 5002 068c 0C       	 .byte 0xc
 5003 068d 41020000 	 .4byte 0x241
 5004 0691 02       	 .uleb128 0x2
 5005 0692 91       	 .byte 0x91
 5006 0693 74       	 .sleb128 -12
 5007 0694 00       	 .byte 0
 5008 0695 19       	 .uleb128 0x19
 5009 0696 66010000 	 .4byte .LASF114
 5010 069a 01       	 .byte 0x1
 5011 069b AE05     	 .2byte 0x5ae
 5012 069d 0B       	 .byte 0xb
 5013 069e C7020000 	 .4byte 0x2c7
 5014 06a2 00000000 	 .4byte .LFB77
 5015 06a6 18000000 	 .4byte .LFE77-.LFB77
 5016 06aa 01       	 .uleb128 0x1
 5017 06ab 9C       	 .byte 0x9c
 5018 06ac C1060000 	 .4byte 0x6c1
 5019 06b0 1A       	 .uleb128 0x1a
 5020 06b1 24000000 	 .4byte .LASF115
 5021 06b5 01       	 .byte 0x1
 5022 06b6 AE05     	 .2byte 0x5ae
 5023 06b8 37       	 .byte 0x37
 5024 06b9 C1060000 	 .4byte 0x6c1
 5025 06bd 02       	 .uleb128 0x2
 5026 06be 91       	 .byte 0x91
 5027 06bf 74       	 .sleb128 -12
 5028 06c0 00       	 .byte 0
 5029 06c1 07       	 .uleb128 0x7
 5030 06c2 04       	 .byte 0x4
 5031 06c3 62040000 	 .4byte 0x462
 5032 06c7 19       	 .uleb128 0x19
 5033 06c8 4E020000 	 .4byte .LASF116
 5034 06cc 01       	 .byte 0x1
 5035 06cd 8505     	 .2byte 0x585
ARM GAS   			page 123


 5036 06cf 09       	 .byte 0x9
 5037 06d0 FA050000 	 .4byte 0x5fa
 5038 06d4 00000000 	 .4byte .LFB76
 5039 06d8 88000000 	 .4byte .LFE76-.LFB76
 5040 06dc 01       	 .uleb128 0x1
 5041 06dd 9C       	 .byte 0x9c
 5042 06de 24070000 	 .4byte 0x724
 5043 06e2 1A       	 .uleb128 0x1a
 5044 06e3 1B000000 	 .4byte .LASF117
 5045 06e7 01       	 .byte 0x1
 5046 06e8 8505     	 .2byte 0x585
 5047 06ea 25       	 .byte 0x25
 5048 06eb 49030000 	 .4byte 0x349
 5049 06ef 02       	 .uleb128 0x2
 5050 06f0 91       	 .byte 0x91
 5051 06f1 68       	 .sleb128 -24
 5052 06f2 1A       	 .uleb128 0x1a
 5053 06f3 31030000 	 .4byte .LASF109
 5054 06f7 01       	 .byte 0x1
 5055 06f8 8505     	 .2byte 0x585
 5056 06fa 38       	 .byte 0x38
 5057 06fb C2000000 	 .4byte 0xc2
 5058 06ff 02       	 .uleb128 0x2
 5059 0700 91       	 .byte 0x91
 5060 0701 64       	 .sleb128 -28
 5061 0702 1B       	 .uleb128 0x1b
 5062 0703 D5040000 	 .4byte .LASF112
 5063 0707 01       	 .byte 0x1
 5064 0708 8705     	 .2byte 0x587
 5065 070a 0E       	 .byte 0xe
 5066 070b 03010000 	 .4byte 0x103
 5067 070f 02       	 .uleb128 0x2
 5068 0710 91       	 .byte 0x91
 5069 0711 74       	 .sleb128 -12
 5070 0712 1B       	 .uleb128 0x1b
 5071 0713 EB020000 	 .4byte .LASF118
 5072 0717 01       	 .byte 0x1
 5073 0718 8805     	 .2byte 0x588
 5074 071a 0B       	 .byte 0xb
 5075 071b FA050000 	 .4byte 0x5fa
 5076 071f 03       	 .uleb128 0x3
 5077 0720 91       	 .byte 0x91
 5078 0721 6C       	 .sleb128 -20
 5079 0722 06       	 .byte 0x6
 5080 0723 00       	 .byte 0
 5081 0724 1C       	 .uleb128 0x1c
 5082 0725 F5080000 	 .4byte .LASF119
 5083 0729 01       	 .byte 0x1
 5084 072a 7705     	 .2byte 0x577
 5085 072c 0A       	 .byte 0xa
 5086 072d 41020000 	 .4byte 0x241
 5087 0731 00000000 	 .4byte .LFB75
 5088 0735 16000000 	 .4byte .LFE75-.LFB75
 5089 0739 01       	 .uleb128 0x1
 5090 073a 9C       	 .byte 0x9c
 5091 073b 50070000 	 .4byte 0x750
 5092 073f 1A       	 .uleb128 0x1a
ARM GAS   			page 124


 5093 0740 BA000000 	 .4byte .LASF120
 5094 0744 01       	 .byte 0x1
 5095 0745 7705     	 .2byte 0x577
 5096 0747 21       	 .byte 0x21
 5097 0748 0F010000 	 .4byte 0x10f
 5098 074c 02       	 .uleb128 0x2
 5099 074d 91       	 .byte 0x91
 5100 074e 74       	 .sleb128 -12
 5101 074f 00       	 .byte 0
 5102 0750 1C       	 .uleb128 0x1c
 5103 0751 41090000 	 .4byte .LASF121
 5104 0755 01       	 .byte 0x1
 5105 0756 6105     	 .2byte 0x561
 5106 0758 0A       	 .byte 0xa
 5107 0759 41020000 	 .4byte 0x241
 5108 075d 00000000 	 .4byte .LFB74
 5109 0761 18000000 	 .4byte .LFE74-.LFB74
 5110 0765 01       	 .uleb128 0x1
 5111 0766 9C       	 .byte 0x9c
 5112 0767 8C070000 	 .4byte 0x78c
 5113 076b 1A       	 .uleb128 0x1a
 5114 076c B4080000 	 .4byte .LASF122
 5115 0770 01       	 .byte 0x1
 5116 0771 6105     	 .2byte 0x561
 5117 0773 22       	 .byte 0x22
 5118 0774 8C070000 	 .4byte 0x78c
 5119 0778 02       	 .uleb128 0x2
 5120 0779 91       	 .byte 0x91
 5121 077a 74       	 .sleb128 -12
 5122 077b 1A       	 .uleb128 0x1a
 5123 077c 31030000 	 .4byte .LASF109
 5124 0780 01       	 .byte 0x1
 5125 0781 6105     	 .2byte 0x561
 5126 0783 3D       	 .byte 0x3d
 5127 0784 C2000000 	 .4byte 0xc2
 5128 0788 02       	 .uleb128 0x2
 5129 0789 91       	 .byte 0x91
 5130 078a 70       	 .sleb128 -16
 5131 078b 00       	 .byte 0
 5132 078c 07       	 .uleb128 0x7
 5133 078d 04       	 .byte 0x4
 5134 078e C2000000 	 .4byte 0xc2
 5135 0792 1D       	 .uleb128 0x1d
 5136 0793 78020000 	 .4byte .LASF123
 5137 0797 01       	 .byte 0x1
 5138 0798 5005     	 .2byte 0x550
 5139 079a 0A       	 .byte 0xa
 5140 079b 41020000 	 .4byte 0x241
 5141 079f 00000000 	 .4byte .LFB73
 5142 07a3 22000000 	 .4byte .LFE73-.LFB73
 5143 07a7 01       	 .uleb128 0x1
 5144 07a8 9C       	 .byte 0x9c
 5145 07a9 1D       	 .uleb128 0x1d
 5146 07aa B20A0000 	 .4byte .LASF124
 5147 07ae 01       	 .byte 0x1
 5148 07af 4505     	 .2byte 0x545
 5149 07b1 0A       	 .byte 0xa
ARM GAS   			page 125


 5150 07b2 41020000 	 .4byte 0x241
 5151 07b6 00000000 	 .4byte .LFB72
 5152 07ba 0E000000 	 .4byte .LFE72-.LFB72
 5153 07be 01       	 .uleb128 0x1
 5154 07bf 9C       	 .byte 0x9c
 5155 07c0 19       	 .uleb128 0x19
 5156 07c1 7D010000 	 .4byte .LASF125
 5157 07c5 01       	 .byte 0x1
 5158 07c6 2D05     	 .2byte 0x52d
 5159 07c8 0A       	 .byte 0xa
 5160 07c9 41020000 	 .4byte 0x241
 5161 07cd 00000000 	 .4byte .LFB71
 5162 07d1 58000000 	 .4byte .LFE71-.LFB71
 5163 07d5 01       	 .uleb128 0x1
 5164 07d6 9C       	 .byte 0x9c
 5165 07d7 EC070000 	 .4byte 0x7ec
 5166 07db 1A       	 .uleb128 0x1a
 5167 07dc 0E050000 	 .4byte .LASF126
 5168 07e0 01       	 .byte 0x1
 5169 07e1 2D05     	 .2byte 0x52d
 5170 07e3 25       	 .byte 0x25
 5171 07e4 AD020000 	 .4byte 0x2ad
 5172 07e8 02       	 .uleb128 0x2
 5173 07e9 91       	 .byte 0x91
 5174 07ea 74       	 .sleb128 -12
 5175 07eb 00       	 .byte 0
 5176 07ec 19       	 .uleb128 0x19
 5177 07ed 6C0A0000 	 .4byte .LASF127
 5178 07f1 01       	 .byte 0x1
 5179 07f2 1D05     	 .2byte 0x51d
 5180 07f4 0A       	 .byte 0xa
 5181 07f5 41020000 	 .4byte 0x241
 5182 07f9 00000000 	 .4byte .LFB70
 5183 07fd 18000000 	 .4byte .LFE70-.LFB70
 5184 0801 01       	 .uleb128 0x1
 5185 0802 9C       	 .byte 0x9c
 5186 0803 18080000 	 .4byte 0x818
 5187 0807 1A       	 .uleb128 0x1a
 5188 0808 0E050000 	 .4byte .LASF126
 5189 080c 01       	 .byte 0x1
 5190 080d 1D05     	 .2byte 0x51d
 5191 080f 26       	 .byte 0x26
 5192 0810 AD020000 	 .4byte 0x2ad
 5193 0814 02       	 .uleb128 0x2
 5194 0815 91       	 .byte 0x91
 5195 0816 74       	 .sleb128 -12
 5196 0817 00       	 .byte 0
 5197 0818 1E       	 .uleb128 0x1e
 5198 0819 D00A0000 	 .4byte .LASF200
 5199 081d 01       	 .byte 0x1
 5200 081e D704     	 .2byte 0x4d7
 5201 0820 06       	 .byte 0x6
 5202 0821 00000000 	 .4byte .LFB69
 5203 0825 20000000 	 .4byte .LFE69-.LFB69
 5204 0829 01       	 .uleb128 0x1
 5205 082a 9C       	 .byte 0x9c
 5206 082b 19       	 .uleb128 0x19
ARM GAS   			page 126


 5207 082c C50A0000 	 .4byte .LASF128
 5208 0830 01       	 .byte 0x1
 5209 0831 C704     	 .2byte 0x4c7
 5210 0833 0A       	 .byte 0xa
 5211 0834 41020000 	 .4byte 0x241
 5212 0838 00000000 	 .4byte .LFB68
 5213 083c 2C000000 	 .4byte .LFE68-.LFB68
 5214 0840 01       	 .uleb128 0x1
 5215 0841 9C       	 .byte 0x9c
 5216 0842 67080000 	 .4byte 0x867
 5217 0846 1A       	 .uleb128 0x1a
 5218 0847 1B000000 	 .4byte .LASF117
 5219 084b 01       	 .byte 0x1
 5220 084c C704     	 .2byte 0x4c7
 5221 084e 20       	 .byte 0x20
 5222 084f 56030000 	 .4byte 0x356
 5223 0853 02       	 .uleb128 0x2
 5224 0854 91       	 .byte 0x91
 5225 0855 74       	 .sleb128 -12
 5226 0856 1A       	 .uleb128 0x1a
 5227 0857 4E090000 	 .4byte .LASF129
 5228 085b 01       	 .byte 0x1
 5229 085c C704     	 .2byte 0x4c7
 5230 085e 30       	 .byte 0x30
 5231 085f 9B000000 	 .4byte 0x9b
 5232 0863 02       	 .uleb128 0x2
 5233 0864 91       	 .byte 0x91
 5234 0865 70       	 .sleb128 -16
 5235 0866 00       	 .byte 0
 5236 0867 19       	 .uleb128 0x19
 5237 0868 AE0B0000 	 .4byte .LASF130
 5238 086c 01       	 .byte 0x1
 5239 086d 8F04     	 .2byte 0x48f
 5240 086f 09       	 .byte 0x9
 5241 0870 FA050000 	 .4byte 0x5fa
 5242 0874 00000000 	 .4byte .LFB67
 5243 0878 F0000000 	 .4byte .LFE67-.LFB67
 5244 087c 01       	 .uleb128 0x1
 5245 087d 9C       	 .byte 0x9c
 5246 087e D4080000 	 .4byte 0x8d4
 5247 0882 1A       	 .uleb128 0x1a
 5248 0883 1B000000 	 .4byte .LASF117
 5249 0887 01       	 .byte 0x1
 5250 0888 8F04     	 .2byte 0x48f
 5251 088a 1E       	 .byte 0x1e
 5252 088b 56030000 	 .4byte 0x356
 5253 088f 02       	 .uleb128 0x2
 5254 0890 91       	 .byte 0x91
 5255 0891 68       	 .sleb128 -24
 5256 0892 1A       	 .uleb128 0x1a
 5257 0893 31030000 	 .4byte .LASF109
 5258 0897 01       	 .byte 0x1
 5259 0898 8F04     	 .2byte 0x48f
 5260 089a 31       	 .byte 0x31
 5261 089b C2000000 	 .4byte 0xc2
 5262 089f 02       	 .uleb128 0x2
 5263 08a0 91       	 .byte 0x91
ARM GAS   			page 127


 5264 08a1 64       	 .sleb128 -28
 5265 08a2 1B       	 .uleb128 0x1b
 5266 08a3 47040000 	 .4byte .LASF131
 5267 08a7 01       	 .byte 0x1
 5268 08a8 9104     	 .2byte 0x491
 5269 08aa 11       	 .byte 0x11
 5270 08ab 7A000000 	 .4byte 0x7a
 5271 08af 02       	 .uleb128 0x2
 5272 08b0 91       	 .byte 0x91
 5273 08b1 70       	 .sleb128 -16
 5274 08b2 1B       	 .uleb128 0x1b
 5275 08b3 D5040000 	 .4byte .LASF112
 5276 08b7 01       	 .byte 0x1
 5277 08b8 9204     	 .2byte 0x492
 5278 08ba 0E       	 .byte 0xe
 5279 08bb 03010000 	 .4byte 0x103
 5280 08bf 02       	 .uleb128 0x2
 5281 08c0 91       	 .byte 0x91
 5282 08c1 74       	 .sleb128 -12
 5283 08c2 1B       	 .uleb128 0x1b
 5284 08c3 EB020000 	 .4byte .LASF118
 5285 08c7 01       	 .byte 0x1
 5286 08c8 9304     	 .2byte 0x493
 5287 08ca 0B       	 .byte 0xb
 5288 08cb FA050000 	 .4byte 0x5fa
 5289 08cf 03       	 .uleb128 0x3
 5290 08d0 91       	 .byte 0x91
 5291 08d1 6C       	 .sleb128 -20
 5292 08d2 06       	 .byte 0x6
 5293 08d3 00       	 .byte 0
 5294 08d4 19       	 .uleb128 0x19
 5295 08d5 B5070000 	 .4byte .LASF132
 5296 08d9 01       	 .byte 0x1
 5297 08da 6E04     	 .2byte 0x46e
 5298 08dc 0A       	 .byte 0xa
 5299 08dd 41020000 	 .4byte 0x241
 5300 08e1 00000000 	 .4byte .LFB66
 5301 08e5 98000000 	 .4byte .LFE66-.LFB66
 5302 08e9 01       	 .uleb128 0x1
 5303 08ea 9C       	 .byte 0x9c
 5304 08eb 20090000 	 .4byte 0x920
 5305 08ef 1A       	 .uleb128 0x1a
 5306 08f0 1B000000 	 .4byte .LASF117
 5307 08f4 01       	 .byte 0x1
 5308 08f5 6E04     	 .2byte 0x46e
 5309 08f7 1F       	 .byte 0x1f
 5310 08f8 56030000 	 .4byte 0x356
 5311 08fc 02       	 .uleb128 0x2
 5312 08fd 91       	 .byte 0x91
 5313 08fe 6C       	 .sleb128 -20
 5314 08ff 1A       	 .uleb128 0x1a
 5315 0900 4E090000 	 .4byte .LASF129
 5316 0904 01       	 .byte 0x1
 5317 0905 6E04     	 .2byte 0x46e
 5318 0907 2F       	 .byte 0x2f
 5319 0908 9B000000 	 .4byte 0x9b
 5320 090c 02       	 .uleb128 0x2
ARM GAS   			page 128


 5321 090d 91       	 .byte 0x91
 5322 090e 68       	 .sleb128 -24
 5323 090f 1B       	 .uleb128 0x1b
 5324 0910 47040000 	 .4byte .LASF131
 5325 0914 01       	 .byte 0x1
 5326 0915 7004     	 .2byte 0x470
 5327 0917 11       	 .byte 0x11
 5328 0918 7A000000 	 .4byte 0x7a
 5329 091c 02       	 .uleb128 0x2
 5330 091d 91       	 .byte 0x91
 5331 091e 74       	 .sleb128 -12
 5332 091f 00       	 .byte 0
 5333 0920 19       	 .uleb128 0x19
 5334 0921 FD000000 	 .4byte .LASF133
 5335 0925 01       	 .byte 0x1
 5336 0926 5904     	 .2byte 0x459
 5337 0928 07       	 .byte 0x7
 5338 0929 9B000000 	 .4byte 0x9b
 5339 092d 00000000 	 .4byte .LFB65
 5340 0931 42000000 	 .4byte .LFE65-.LFB65
 5341 0935 01       	 .uleb128 0x1
 5342 0936 9C       	 .byte 0x9c
 5343 0937 78090000 	 .4byte 0x978
 5344 093b 1A       	 .uleb128 0x1a
 5345 093c 1B000000 	 .4byte .LASF117
 5346 0940 01       	 .byte 0x1
 5347 0941 5904     	 .2byte 0x459
 5348 0943 1F       	 .byte 0x1f
 5349 0944 56030000 	 .4byte 0x356
 5350 0948 02       	 .uleb128 0x2
 5351 0949 91       	 .byte 0x91
 5352 094a 6C       	 .sleb128 -20
 5353 094b 1A       	 .uleb128 0x1a
 5354 094c 31030000 	 .4byte .LASF109
 5355 0950 01       	 .byte 0x1
 5356 0951 5904     	 .2byte 0x459
 5357 0953 32       	 .byte 0x32
 5358 0954 C2000000 	 .4byte 0xc2
 5359 0958 02       	 .uleb128 0x2
 5360 0959 91       	 .byte 0x91
 5361 095a 68       	 .sleb128 -24
 5362 095b 1F       	 .uleb128 0x1f
 5363 095c 6900     	 .ascii "i\000"
 5364 095e 01       	 .byte 0x1
 5365 095f 5B04     	 .2byte 0x45b
 5366 0961 0C       	 .byte 0xc
 5367 0962 C2000000 	 .4byte 0xc2
 5368 0966 02       	 .uleb128 0x2
 5369 0967 91       	 .byte 0x91
 5370 0968 74       	 .sleb128 -12
 5371 0969 1F       	 .uleb128 0x1f
 5372 096a 7000     	 .ascii "p\000"
 5373 096c 01       	 .byte 0x1
 5374 096d 5C04     	 .2byte 0x45c
 5375 096f 09       	 .byte 0x9
 5376 0970 9B000000 	 .4byte 0x9b
 5377 0974 02       	 .uleb128 0x2
ARM GAS   			page 129


 5378 0975 91       	 .byte 0x91
 5379 0976 70       	 .sleb128 -16
 5380 0977 00       	 .byte 0
 5381 0978 19       	 .uleb128 0x19
 5382 0979 A20B0000 	 .4byte .LASF134
 5383 097d 01       	 .byte 0x1
 5384 097e 4304     	 .2byte 0x443
 5385 0980 07       	 .byte 0x7
 5386 0981 9B000000 	 .4byte 0x9b
 5387 0985 00000000 	 .4byte .LFB64
 5388 0989 2C000000 	 .4byte .LFE64-.LFB64
 5389 098d 01       	 .uleb128 0x1
 5390 098e 9C       	 .byte 0x9c
 5391 098f C2090000 	 .4byte 0x9c2
 5392 0993 1A       	 .uleb128 0x1a
 5393 0994 1B000000 	 .4byte .LASF117
 5394 0998 01       	 .byte 0x1
 5395 0999 4304     	 .2byte 0x443
 5396 099b 1E       	 .byte 0x1e
 5397 099c 56030000 	 .4byte 0x356
 5398 09a0 02       	 .uleb128 0x2
 5399 09a1 91       	 .byte 0x91
 5400 09a2 6C       	 .sleb128 -20
 5401 09a3 1A       	 .uleb128 0x1a
 5402 09a4 31030000 	 .4byte .LASF109
 5403 09a8 01       	 .byte 0x1
 5404 09a9 4304     	 .2byte 0x443
 5405 09ab 31       	 .byte 0x31
 5406 09ac C2000000 	 .4byte 0xc2
 5407 09b0 02       	 .uleb128 0x2
 5408 09b1 91       	 .byte 0x91
 5409 09b2 68       	 .sleb128 -24
 5410 09b3 1F       	 .uleb128 0x1f
 5411 09b4 7000     	 .ascii "p\000"
 5412 09b6 01       	 .byte 0x1
 5413 09b7 4604     	 .2byte 0x446
 5414 09b9 09       	 .byte 0x9
 5415 09ba 9B000000 	 .4byte 0x9b
 5416 09be 02       	 .uleb128 0x2
 5417 09bf 91       	 .byte 0x91
 5418 09c0 74       	 .sleb128 -12
 5419 09c1 00       	 .byte 0
 5420 09c2 19       	 .uleb128 0x19
 5421 09c3 5E0B0000 	 .4byte .LASF135
 5422 09c7 01       	 .byte 0x1
 5423 09c8 1C04     	 .2byte 0x41c
 5424 09ca 0B       	 .byte 0xb
 5425 09cb 56030000 	 .4byte 0x356
 5426 09cf 00000000 	 .4byte .LFB63
 5427 09d3 B8000000 	 .4byte .LFE63-.LFB63
 5428 09d7 01       	 .uleb128 0x1
 5429 09d8 9C       	 .byte 0x9c
 5430 09d9 0E0A0000 	 .4byte 0xa0e
 5431 09dd 1A       	 .uleb128 0x1a
 5432 09de A9010000 	 .4byte .LASF78
 5433 09e2 01       	 .byte 0x1
 5434 09e3 1C04     	 .2byte 0x41c
ARM GAS   			page 130


 5435 09e5 2D       	 .byte 0x2d
 5436 09e6 07060000 	 .4byte 0x607
 5437 09ea 02       	 .uleb128 0x2
 5438 09eb 91       	 .byte 0x91
 5439 09ec 5C       	 .sleb128 -36
 5440 09ed 1A       	 .uleb128 0x1a
 5441 09ee 0E050000 	 .4byte .LASF126
 5442 09f2 01       	 .byte 0x1
 5443 09f3 1C04     	 .2byte 0x41c
 5444 09f5 43       	 .byte 0x43
 5445 09f6 AD020000 	 .4byte 0x2ad
 5446 09fa 02       	 .uleb128 0x2
 5447 09fb 91       	 .byte 0x91
 5448 09fc 58       	 .sleb128 -40
 5449 09fd 1B       	 .uleb128 0x1b
 5450 09fe E6080000 	 .4byte .LASF136
 5451 0a02 01       	 .byte 0x1
 5452 0a03 2004     	 .2byte 0x420
 5453 0a05 0F       	 .byte 0xf
 5454 0a06 CF040000 	 .4byte 0x4cf
 5455 0a0a 02       	 .uleb128 0x2
 5456 0a0b 91       	 .byte 0x91
 5457 0a0c 64       	 .sleb128 -28
 5458 0a0d 00       	 .byte 0
 5459 0a0e 19       	 .uleb128 0x19
 5460 0a0f 51040000 	 .4byte .LASF137
 5461 0a13 01       	 .byte 0x1
 5462 0a14 D703     	 .2byte 0x3d7
 5463 0a16 09       	 .byte 0x9
 5464 0a17 FA050000 	 .4byte 0x5fa
 5465 0a1b 00000000 	 .4byte .LFB62
 5466 0a1f F0000000 	 .4byte .LFE62-.LFB62
 5467 0a23 01       	 .uleb128 0x1
 5468 0a24 9C       	 .byte 0x9c
 5469 0a25 7B0A0000 	 .4byte 0xa7b
 5470 0a29 1A       	 .uleb128 0x1a
 5471 0a2a 1B000000 	 .4byte .LASF117
 5472 0a2e 01       	 .byte 0x1
 5473 0a2f D703     	 .2byte 0x3d7
 5474 0a31 24       	 .byte 0x24
 5475 0a32 49030000 	 .4byte 0x349
 5476 0a36 02       	 .uleb128 0x2
 5477 0a37 91       	 .byte 0x91
 5478 0a38 68       	 .sleb128 -24
 5479 0a39 1A       	 .uleb128 0x1a
 5480 0a3a 31030000 	 .4byte .LASF109
 5481 0a3e 01       	 .byte 0x1
 5482 0a3f D703     	 .2byte 0x3d7
 5483 0a41 37       	 .byte 0x37
 5484 0a42 C2000000 	 .4byte 0xc2
 5485 0a46 02       	 .uleb128 0x2
 5486 0a47 91       	 .byte 0x91
 5487 0a48 64       	 .sleb128 -28
 5488 0a49 1B       	 .uleb128 0x1b
 5489 0a4a 47040000 	 .4byte .LASF131
 5490 0a4e 01       	 .byte 0x1
 5491 0a4f D903     	 .2byte 0x3d9
ARM GAS   			page 131


 5492 0a51 11       	 .byte 0x11
 5493 0a52 7A000000 	 .4byte 0x7a
 5494 0a56 02       	 .uleb128 0x2
 5495 0a57 91       	 .byte 0x91
 5496 0a58 70       	 .sleb128 -16
 5497 0a59 1B       	 .uleb128 0x1b
 5498 0a5a D5040000 	 .4byte .LASF112
 5499 0a5e 01       	 .byte 0x1
 5500 0a5f DA03     	 .2byte 0x3da
 5501 0a61 0E       	 .byte 0xe
 5502 0a62 03010000 	 .4byte 0x103
 5503 0a66 02       	 .uleb128 0x2
 5504 0a67 91       	 .byte 0x91
 5505 0a68 74       	 .sleb128 -12
 5506 0a69 1B       	 .uleb128 0x1b
 5507 0a6a EB020000 	 .4byte .LASF118
 5508 0a6e 01       	 .byte 0x1
 5509 0a6f DB03     	 .2byte 0x3db
 5510 0a71 0B       	 .byte 0xb
 5511 0a72 FA050000 	 .4byte 0x5fa
 5512 0a76 03       	 .uleb128 0x3
 5513 0a77 91       	 .byte 0x91
 5514 0a78 6C       	 .sleb128 -20
 5515 0a79 06       	 .byte 0x6
 5516 0a7a 00       	 .byte 0
 5517 0a7b 19       	 .uleb128 0x19
 5518 0a7c 8B0B0000 	 .4byte .LASF138
 5519 0a80 01       	 .byte 0x1
 5520 0a81 B703     	 .2byte 0x3b7
 5521 0a83 0A       	 .byte 0xa
 5522 0a84 41020000 	 .4byte 0x241
 5523 0a88 00000000 	 .4byte .LFB61
 5524 0a8c A0000000 	 .4byte .LFE61-.LFB61
 5525 0a90 01       	 .uleb128 0x1
 5526 0a91 9C       	 .byte 0x9c
 5527 0a92 E70A0000 	 .4byte 0xae7
 5528 0a96 1A       	 .uleb128 0x1a
 5529 0a97 1B000000 	 .4byte .LASF117
 5530 0a9b 01       	 .byte 0x1
 5531 0a9c B703     	 .2byte 0x3b7
 5532 0a9e 25       	 .byte 0x25
 5533 0a9f 49030000 	 .4byte 0x349
 5534 0aa3 02       	 .uleb128 0x2
 5535 0aa4 91       	 .byte 0x91
 5536 0aa5 6C       	 .sleb128 -20
 5537 0aa6 1A       	 .uleb128 0x1a
 5538 0aa7 BF070000 	 .4byte .LASF139
 5539 0aab 01       	 .byte 0x1
 5540 0aac B703     	 .2byte 0x3b7
 5541 0aae 38       	 .byte 0x38
 5542 0aaf C2000000 	 .4byte 0xc2
 5543 0ab3 02       	 .uleb128 0x2
 5544 0ab4 91       	 .byte 0x91
 5545 0ab5 68       	 .sleb128 -24
 5546 0ab6 1A       	 .uleb128 0x1a
 5547 0ab7 31030000 	 .4byte .LASF109
 5548 0abb 01       	 .byte 0x1
ARM GAS   			page 132


 5549 0abc B703     	 .2byte 0x3b7
 5550 0abe 47       	 .byte 0x47
 5551 0abf C2000000 	 .4byte 0xc2
 5552 0ac3 02       	 .uleb128 0x2
 5553 0ac4 91       	 .byte 0x91
 5554 0ac5 64       	 .sleb128 -28
 5555 0ac6 1B       	 .uleb128 0x1b
 5556 0ac7 47040000 	 .4byte .LASF131
 5557 0acb 01       	 .byte 0x1
 5558 0acc B903     	 .2byte 0x3b9
 5559 0ace 11       	 .byte 0x11
 5560 0acf 7A000000 	 .4byte 0x7a
 5561 0ad3 02       	 .uleb128 0x2
 5562 0ad4 91       	 .byte 0x91
 5563 0ad5 70       	 .sleb128 -16
 5564 0ad6 1B       	 .uleb128 0x1b
 5565 0ad7 D5040000 	 .4byte .LASF112
 5566 0adb 01       	 .byte 0x1
 5567 0adc BA03     	 .2byte 0x3ba
 5568 0ade 0E       	 .byte 0xe
 5569 0adf 03010000 	 .4byte 0x103
 5570 0ae3 02       	 .uleb128 0x2
 5571 0ae4 91       	 .byte 0x91
 5572 0ae5 74       	 .sleb128 -12
 5573 0ae6 00       	 .byte 0
 5574 0ae7 19       	 .uleb128 0x19
 5575 0ae8 D2010000 	 .4byte .LASF140
 5576 0aec 01       	 .byte 0x1
 5577 0aed A803     	 .2byte 0x3a8
 5578 0aef 0E       	 .byte 0xe
 5579 0af0 49030000 	 .4byte 0x349
 5580 0af4 00000000 	 .4byte .LFB60
 5581 0af8 24000000 	 .4byte .LFE60-.LFB60
 5582 0afc 01       	 .uleb128 0x1
 5583 0afd 9C       	 .byte 0x9c
 5584 0afe 230B0000 	 .4byte 0xb23
 5585 0b02 1A       	 .uleb128 0x1a
 5586 0b03 A9010000 	 .4byte .LASF78
 5587 0b07 01       	 .byte 0x1
 5588 0b08 A803     	 .2byte 0x3a8
 5589 0b0a 36       	 .byte 0x36
 5590 0b0b 230B0000 	 .4byte 0xb23
 5591 0b0f 02       	 .uleb128 0x2
 5592 0b10 91       	 .byte 0x91
 5593 0b11 74       	 .sleb128 -12
 5594 0b12 1A       	 .uleb128 0x1a
 5595 0b13 0E050000 	 .4byte .LASF126
 5596 0b17 01       	 .byte 0x1
 5597 0b18 A803     	 .2byte 0x3a8
 5598 0b1a 4C       	 .byte 0x4c
 5599 0b1b AD020000 	 .4byte 0x2ad
 5600 0b1f 02       	 .uleb128 0x2
 5601 0b20 91       	 .byte 0x91
 5602 0b21 70       	 .sleb128 -16
 5603 0b22 00       	 .byte 0
 5604 0b23 07       	 .uleb128 0x7
 5605 0b24 04       	 .byte 0x4
ARM GAS   			page 133


 5606 0b25 19050000 	 .4byte 0x519
 5607 0b29 1C       	 .uleb128 0x1c
 5608 0b2a E60B0000 	 .4byte .LASF141
 5609 0b2e 01       	 .byte 0x1
 5610 0b2f 7C03     	 .2byte 0x37c
 5611 0b31 0A       	 .byte 0xa
 5612 0b32 41020000 	 .4byte 0x241
 5613 0b36 00000000 	 .4byte .LFB59
 5614 0b3a 82000000 	 .4byte .LFE59-.LFB59
 5615 0b3e 01       	 .uleb128 0x1
 5616 0b3f 9C       	 .byte 0x9c
 5617 0b40 750B0000 	 .4byte 0xb75
 5618 0b44 1A       	 .uleb128 0x1a
 5619 0b45 EC040000 	 .4byte .LASF142
 5620 0b49 01       	 .byte 0x1
 5621 0b4a 7C03     	 .2byte 0x37c
 5622 0b4c 1F       	 .byte 0x1f
 5623 0b4d E1020000 	 .4byte 0x2e1
 5624 0b51 02       	 .uleb128 0x2
 5625 0b52 91       	 .byte 0x91
 5626 0b53 6C       	 .sleb128 -20
 5627 0b54 1A       	 .uleb128 0x1a
 5628 0b55 EF080000 	 .4byte .LASF143
 5629 0b59 01       	 .byte 0x1
 5630 0b5a 7C03     	 .2byte 0x37c
 5631 0b5c 2E       	 .byte 0x2e
 5632 0b5d 9B000000 	 .4byte 0x9b
 5633 0b61 02       	 .uleb128 0x2
 5634 0b62 91       	 .byte 0x91
 5635 0b63 68       	 .sleb128 -24
 5636 0b64 1B       	 .uleb128 0x1b
 5637 0b65 1B030000 	 .4byte .LASF144
 5638 0b69 01       	 .byte 0x1
 5639 0b6a 7E03     	 .2byte 0x37e
 5640 0b6c 0C       	 .byte 0xc
 5641 0b6d C2000000 	 .4byte 0xc2
 5642 0b71 02       	 .uleb128 0x2
 5643 0b72 91       	 .byte 0x91
 5644 0b73 74       	 .sleb128 -12
 5645 0b74 00       	 .byte 0
 5646 0b75 19       	 .uleb128 0x19
 5647 0b76 3B000000 	 .4byte .LASF145
 5648 0b7a 01       	 .byte 0x1
 5649 0b7b 6903     	 .2byte 0x369
 5650 0b7d 07       	 .byte 0x7
 5651 0b7e 9B000000 	 .4byte 0x9b
 5652 0b82 00000000 	 .4byte .LFB58
 5653 0b86 2C000000 	 .4byte .LFE58-.LFB58
 5654 0b8a 01       	 .uleb128 0x1
 5655 0b8b 9C       	 .byte 0x9c
 5656 0b8c AF0B0000 	 .4byte 0xbaf
 5657 0b90 1A       	 .uleb128 0x1a
 5658 0b91 EC040000 	 .4byte .LASF142
 5659 0b95 01       	 .byte 0x1
 5660 0b96 6903     	 .2byte 0x369
 5661 0b98 1E       	 .byte 0x1e
 5662 0b99 E1020000 	 .4byte 0x2e1
ARM GAS   			page 134


 5663 0b9d 02       	 .uleb128 0x2
 5664 0b9e 91       	 .byte 0x91
 5665 0b9f 6C       	 .sleb128 -20
 5666 0ba0 1F       	 .uleb128 0x1f
 5667 0ba1 7000     	 .ascii "p\000"
 5668 0ba3 01       	 .byte 0x1
 5669 0ba4 6B03     	 .2byte 0x36b
 5670 0ba6 09       	 .byte 0x9
 5671 0ba7 9B000000 	 .4byte 0x9b
 5672 0bab 02       	 .uleb128 0x2
 5673 0bac 91       	 .byte 0x91
 5674 0bad 74       	 .sleb128 -12
 5675 0bae 00       	 .byte 0
 5676 0baf 19       	 .uleb128 0x19
 5677 0bb0 4A030000 	 .4byte .LASF146
 5678 0bb4 01       	 .byte 0x1
 5679 0bb5 3D03     	 .2byte 0x33d
 5680 0bb7 07       	 .byte 0x7
 5681 0bb8 9B000000 	 .4byte 0x9b
 5682 0bbc 00000000 	 .4byte .LFB57
 5683 0bc0 D8000000 	 .4byte .LFE57-.LFB57
 5684 0bc4 01       	 .uleb128 0x1
 5685 0bc5 9C       	 .byte 0x9c
 5686 0bc6 570C0000 	 .4byte 0xc57
 5687 0bca 1A       	 .uleb128 0x1a
 5688 0bcb EC040000 	 .4byte .LASF142
 5689 0bcf 01       	 .byte 0x1
 5690 0bd0 3D03     	 .2byte 0x33d
 5691 0bd2 1D       	 .byte 0x1d
 5692 0bd3 E1020000 	 .4byte 0x2e1
 5693 0bd7 02       	 .uleb128 0x2
 5694 0bd8 91       	 .byte 0x91
 5695 0bd9 54       	 .sleb128 -44
 5696 0bda 1B       	 .uleb128 0x1b
 5697 0bdb 03040000 	 .4byte .LASF91
 5698 0bdf 01       	 .byte 0x1
 5699 0be0 3F03     	 .2byte 0x33f
 5700 0be2 07       	 .byte 0x7
 5701 0be3 25000000 	 .4byte 0x25
 5702 0be7 02       	 .uleb128 0x2
 5703 0be8 91       	 .byte 0x91
 5704 0be9 74       	 .sleb128 -12
 5705 0bea 1F       	 .uleb128 0x1f
 5706 0beb 7000     	 .ascii "p\000"
 5707 0bed 01       	 .byte 0x1
 5708 0bee 4003     	 .2byte 0x340
 5709 0bf0 09       	 .byte 0x9
 5710 0bf1 9B000000 	 .4byte 0x9b
 5711 0bf5 02       	 .uleb128 0x2
 5712 0bf6 91       	 .byte 0x91
 5713 0bf7 70       	 .sleb128 -16
 5714 0bf8 1F       	 .uleb128 0x1f
 5715 0bf9 6900     	 .ascii "i\000"
 5716 0bfb 01       	 .byte 0x1
 5717 0bfc 4103     	 .2byte 0x341
 5718 0bfe 0C       	 .byte 0xc
 5719 0bff C2000000 	 .4byte 0xc2
ARM GAS   			page 135


 5720 0c03 02       	 .uleb128 0x2
 5721 0c04 91       	 .byte 0x91
 5722 0c05 6C       	 .sleb128 -20
 5723 0c06 1B       	 .uleb128 0x1b
 5724 0c07 1B030000 	 .4byte .LASF144
 5725 0c0b 01       	 .byte 0x1
 5726 0c0c 4203     	 .2byte 0x342
 5727 0c0e 0C       	 .byte 0xc
 5728 0c0f C2000000 	 .4byte 0xc2
 5729 0c13 02       	 .uleb128 0x2
 5730 0c14 91       	 .byte 0x91
 5731 0c15 68       	 .sleb128 -24
 5732 0c16 20       	 .uleb128 0x20
 5733 0c17 E6120000 	 .4byte 0x12e6
 5734 0c1b 24000000 	 .4byte .LBB10
 5735 0c1f 1A000000 	 .4byte .LBE10-.LBB10
 5736 0c23 01       	 .byte 0x1
 5737 0c24 4503     	 .2byte 0x345
 5738 0c26 0D       	 .byte 0xd
 5739 0c27 3C0C0000 	 .4byte 0xc3c
 5740 0c2b 21       	 .uleb128 0x21
 5741 0c2c F7120000 	 .4byte 0x12f7
 5742 0c30 02       	 .uleb128 0x2
 5743 0c31 91       	 .byte 0x91
 5744 0c32 64       	 .sleb128 -28
 5745 0c33 21       	 .uleb128 0x21
 5746 0c34 03130000 	 .4byte 0x1303
 5747 0c38 02       	 .uleb128 0x2
 5748 0c39 91       	 .byte 0x91
 5749 0c3a 60       	 .sleb128 -32
 5750 0c3b 00       	 .byte 0
 5751 0c3c 22       	 .uleb128 0x22
 5752 0c3d CC120000 	 .4byte 0x12cc
 5753 0c41 C2000000 	 .4byte .LBB12
 5754 0c45 08000000 	 .4byte .LBE12-.LBB12
 5755 0c49 01       	 .byte 0x1
 5756 0c4a 5A03     	 .2byte 0x35a
 5757 0c4c 05       	 .byte 0x5
 5758 0c4d 23       	 .uleb128 0x23
 5759 0c4e D9120000 	 .4byte 0x12d9
 5760 0c52 02       	 .uleb128 0x2
 5761 0c53 91       	 .byte 0x91
 5762 0c54 5C       	 .sleb128 -36
 5763 0c55 00       	 .byte 0
 5764 0c56 00       	 .byte 0
 5765 0c57 19       	 .uleb128 0x19
 5766 0c58 E10A0000 	 .4byte .LASF147
 5767 0c5c 01       	 .byte 0x1
 5768 0c5d 1003     	 .2byte 0x310
 5769 0c5f 0A       	 .byte 0xa
 5770 0c60 E1020000 	 .4byte 0x2e1
 5771 0c64 00000000 	 .4byte .LFB56
 5772 0c68 BA000000 	 .4byte .LFE56-.LFB56
 5773 0c6c 01       	 .uleb128 0x1
 5774 0c6d 9C       	 .byte 0x9c
 5775 0c6e B10C0000 	 .4byte 0xcb1
 5776 0c72 1A       	 .uleb128 0x1a
ARM GAS   			page 136


 5777 0c73 E6080000 	 .4byte .LASF136
 5778 0c77 01       	 .byte 0x1
 5779 0c78 1003     	 .2byte 0x310
 5780 0c7a 2B       	 .byte 0x2b
 5781 0c7b B10C0000 	 .4byte 0xcb1
 5782 0c7f 02       	 .uleb128 0x2
 5783 0c80 91       	 .byte 0x91
 5784 0c81 64       	 .sleb128 -28
 5785 0c82 1B       	 .uleb128 0x1b
 5786 0c83 EA050000 	 .4byte .LASF148
 5787 0c87 01       	 .byte 0x1
 5788 0c88 1203     	 .2byte 0x312
 5789 0c8a 0C       	 .byte 0xc
 5790 0c8b E1020000 	 .4byte 0x2e1
 5791 0c8f 02       	 .uleb128 0x2
 5792 0c90 91       	 .byte 0x91
 5793 0c91 74       	 .sleb128 -12
 5794 0c92 1B       	 .uleb128 0x1b
 5795 0c93 9A000000 	 .4byte .LASF149
 5796 0c97 01       	 .byte 0x1
 5797 0c98 1303     	 .2byte 0x313
 5798 0c9a 07       	 .byte 0x7
 5799 0c9b 25000000 	 .4byte 0x25
 5800 0c9f 02       	 .uleb128 0x2
 5801 0ca0 91       	 .byte 0x91
 5802 0ca1 6C       	 .sleb128 -20
 5803 0ca2 1F       	 .uleb128 0x1f
 5804 0ca3 6900     	 .ascii "i\000"
 5805 0ca5 01       	 .byte 0x1
 5806 0ca6 1403     	 .2byte 0x314
 5807 0ca8 0C       	 .byte 0xc
 5808 0ca9 C2000000 	 .4byte 0xc2
 5809 0cad 02       	 .uleb128 0x2
 5810 0cae 91       	 .byte 0x91
 5811 0caf 70       	 .sleb128 -16
 5812 0cb0 00       	 .byte 0
 5813 0cb1 07       	 .uleb128 0x7
 5814 0cb2 04       	 .byte 0x4
 5815 0cb3 DC040000 	 .4byte 0x4dc
 5816 0cb7 19       	 .uleb128 0x19
 5817 0cb8 790B0000 	 .4byte .LASF150
 5818 0cbc 01       	 .byte 0x1
 5819 0cbd EB02     	 .2byte 0x2eb
 5820 0cbf 0A       	 .byte 0xa
 5821 0cc0 41020000 	 .4byte 0x241
 5822 0cc4 00000000 	 .4byte .LFB55
 5823 0cc8 30000000 	 .4byte .LFE55-.LFB55
 5824 0ccc 01       	 .uleb128 0x1
 5825 0ccd 9C       	 .byte 0x9c
 5826 0cce E30C0000 	 .4byte 0xce3
 5827 0cd2 1A       	 .uleb128 0x1a
 5828 0cd3 120A0000 	 .4byte .LASF151
 5829 0cd7 01       	 .byte 0x1
 5830 0cd8 EB02     	 .2byte 0x2eb
 5831 0cda 2B       	 .byte 0x2b
 5832 0cdb D4020000 	 .4byte 0x2d4
 5833 0cdf 02       	 .uleb128 0x2
ARM GAS   			page 137


 5834 0ce0 91       	 .byte 0x91
 5835 0ce1 74       	 .sleb128 -12
 5836 0ce2 00       	 .byte 0
 5837 0ce3 19       	 .uleb128 0x19
 5838 0ce4 2E090000 	 .4byte .LASF152
 5839 0ce8 01       	 .byte 0x1
 5840 0ce9 D002     	 .2byte 0x2d0
 5841 0ceb 0A       	 .byte 0xa
 5842 0cec 41020000 	 .4byte 0x241
 5843 0cf0 00000000 	 .4byte .LFB54
 5844 0cf4 8C000000 	 .4byte .LFE54-.LFB54
 5845 0cf8 01       	 .uleb128 0x1
 5846 0cf9 9C       	 .byte 0x9c
 5847 0cfa 2F0D0000 	 .4byte 0xd2f
 5848 0cfe 1A       	 .uleb128 0x1a
 5849 0cff 120A0000 	 .4byte .LASF151
 5850 0d03 01       	 .byte 0x1
 5851 0d04 D002     	 .2byte 0x2d0
 5852 0d06 2C       	 .byte 0x2c
 5853 0d07 D4020000 	 .4byte 0x2d4
 5854 0d0b 02       	 .uleb128 0x2
 5855 0d0c 91       	 .byte 0x91
 5856 0d0d 6C       	 .sleb128 -20
 5857 0d0e 1B       	 .uleb128 0x1b
 5858 0d0f 56030000 	 .4byte .LASF113
 5859 0d13 01       	 .byte 0x1
 5860 0d14 D202     	 .2byte 0x2d2
 5861 0d16 0C       	 .byte 0xc
 5862 0d17 41020000 	 .4byte 0x241
 5863 0d1b 02       	 .uleb128 0x2
 5864 0d1c 91       	 .byte 0x91
 5865 0d1d 74       	 .sleb128 -12
 5866 0d1e 1B       	 .uleb128 0x1b
 5867 0d1f 47040000 	 .4byte .LASF131
 5868 0d23 01       	 .byte 0x1
 5869 0d24 D302     	 .2byte 0x2d3
 5870 0d26 11       	 .byte 0x11
 5871 0d27 7A000000 	 .4byte 0x7a
 5872 0d2b 02       	 .uleb128 0x2
 5873 0d2c 91       	 .byte 0x91
 5874 0d2d 70       	 .sleb128 -16
 5875 0d2e 00       	 .byte 0
 5876 0d2f 19       	 .uleb128 0x19
 5877 0d30 80040000 	 .4byte .LASF153
 5878 0d34 01       	 .byte 0x1
 5879 0d35 A802     	 .2byte 0x2a8
 5880 0d37 09       	 .byte 0x9
 5881 0d38 B6000000 	 .4byte 0xb6
 5882 0d3c 00000000 	 .4byte .LFB53
 5883 0d40 BC000000 	 .4byte .LFE53-.LFB53
 5884 0d44 01       	 .uleb128 0x1
 5885 0d45 9C       	 .byte 0x9c
 5886 0d46 8B0D0000 	 .4byte 0xd8b
 5887 0d4a 1A       	 .uleb128 0x1a
 5888 0d4b 120A0000 	 .4byte .LASF151
 5889 0d4f 01       	 .byte 0x1
 5890 0d50 A802     	 .2byte 0x2a8
ARM GAS   			page 138


 5891 0d52 28       	 .byte 0x28
 5892 0d53 D4020000 	 .4byte 0x2d4
 5893 0d57 02       	 .uleb128 0x2
 5894 0d58 91       	 .byte 0x91
 5895 0d59 6C       	 .sleb128 -20
 5896 0d5a 1A       	 .uleb128 0x1a
 5897 0d5b 31030000 	 .4byte .LASF109
 5898 0d5f 01       	 .byte 0x1
 5899 0d60 A802     	 .2byte 0x2a8
 5900 0d62 3F       	 .byte 0x3f
 5901 0d63 C2000000 	 .4byte 0xc2
 5902 0d67 02       	 .uleb128 0x2
 5903 0d68 91       	 .byte 0x91
 5904 0d69 68       	 .sleb128 -24
 5905 0d6a 1B       	 .uleb128 0x1b
 5906 0d6b D5040000 	 .4byte .LASF112
 5907 0d6f 01       	 .byte 0x1
 5908 0d70 AA02     	 .2byte 0x2aa
 5909 0d72 0E       	 .byte 0xe
 5910 0d73 03010000 	 .4byte 0x103
 5911 0d77 02       	 .uleb128 0x2
 5912 0d78 91       	 .byte 0x91
 5913 0d79 74       	 .sleb128 -12
 5914 0d7a 1B       	 .uleb128 0x1b
 5915 0d7b 47040000 	 .4byte .LASF131
 5916 0d7f 01       	 .byte 0x1
 5917 0d80 AB02     	 .2byte 0x2ab
 5918 0d82 11       	 .byte 0x11
 5919 0d83 7A000000 	 .4byte 0x7a
 5920 0d87 02       	 .uleb128 0x2
 5921 0d88 91       	 .byte 0x91
 5922 0d89 70       	 .sleb128 -16
 5923 0d8a 00       	 .byte 0
 5924 0d8b 19       	 .uleb128 0x19
 5925 0d8c DD030000 	 .4byte .LASF154
 5926 0d90 01       	 .byte 0x1
 5927 0d91 9002     	 .2byte 0x290
 5928 0d93 0F       	 .byte 0xf
 5929 0d94 D4020000 	 .4byte 0x2d4
 5930 0d98 00000000 	 .4byte .LFB52
 5931 0d9c 4A000000 	 .4byte .LFE52-.LFB52
 5932 0da0 01       	 .uleb128 0x1
 5933 0da1 9C       	 .byte 0x9c
 5934 0da2 D70D0000 	 .4byte 0xdd7
 5935 0da6 1A       	 .uleb128 0x1a
 5936 0da7 0D0B0000 	 .4byte .LASF155
 5937 0dab 01       	 .byte 0x1
 5938 0dac 9002     	 .2byte 0x290
 5939 0dae 3A       	 .byte 0x3a
 5940 0daf D70D0000 	 .4byte 0xdd7
 5941 0db3 02       	 .uleb128 0x2
 5942 0db4 91       	 .byte 0x91
 5943 0db5 6C       	 .sleb128 -20
 5944 0db6 1A       	 .uleb128 0x1a
 5945 0db7 15030000 	 .4byte .LASF156
 5946 0dbb 01       	 .byte 0x1
 5947 0dbc 9002     	 .2byte 0x290
ARM GAS   			page 139


 5948 0dbe 51       	 .byte 0x51
 5949 0dbf B6000000 	 .4byte 0xb6
 5950 0dc3 02       	 .uleb128 0x2
 5951 0dc4 91       	 .byte 0x91
 5952 0dc5 68       	 .sleb128 -24
 5953 0dc6 1B       	 .uleb128 0x1b
 5954 0dc7 EF030000 	 .4byte .LASF157
 5955 0dcb 01       	 .byte 0x1
 5956 0dcc 9302     	 .2byte 0x293
 5957 0dce 11       	 .byte 0x11
 5958 0dcf D4020000 	 .4byte 0x2d4
 5959 0dd3 02       	 .uleb128 0x2
 5960 0dd4 91       	 .byte 0x91
 5961 0dd5 74       	 .sleb128 -12
 5962 0dd6 00       	 .byte 0
 5963 0dd7 07       	 .uleb128 0x7
 5964 0dd8 04       	 .byte 0x4
 5965 0dd9 91040000 	 .4byte 0x491
 5966 0ddd 19       	 .uleb128 0x19
 5967 0dde B80B0000 	 .4byte .LASF158
 5968 0de2 01       	 .byte 0x1
 5969 0de3 7A02     	 .2byte 0x27a
 5970 0de5 0A       	 .byte 0xa
 5971 0de6 41020000 	 .4byte 0x241
 5972 0dea 00000000 	 .4byte .LFB51
 5973 0dee 30000000 	 .4byte .LFE51-.LFB51
 5974 0df2 01       	 .uleb128 0x1
 5975 0df3 9C       	 .byte 0x9c
 5976 0df4 090E0000 	 .4byte 0xe09
 5977 0df8 1A       	 .uleb128 0x1a
 5978 0df9 E2020000 	 .4byte .LASF108
 5979 0dfd 01       	 .byte 0x1
 5980 0dfe 7A02     	 .2byte 0x27a
 5981 0e00 23       	 .byte 0x23
 5982 0e01 C7020000 	 .4byte 0x2c7
 5983 0e05 02       	 .uleb128 0x2
 5984 0e06 91       	 .byte 0x91
 5985 0e07 74       	 .sleb128 -12
 5986 0e08 00       	 .byte 0
 5987 0e09 19       	 .uleb128 0x19
 5988 0e0a E8070000 	 .4byte .LASF159
 5989 0e0e 01       	 .byte 0x1
 5990 0e0f 6202     	 .2byte 0x262
 5991 0e11 0A       	 .byte 0xa
 5992 0e12 41020000 	 .4byte 0x241
 5993 0e16 00000000 	 .4byte .LFB50
 5994 0e1a 8C000000 	 .4byte .LFE50-.LFB50
 5995 0e1e 01       	 .uleb128 0x1
 5996 0e1f 9C       	 .byte 0x9c
 5997 0e20 550E0000 	 .4byte 0xe55
 5998 0e24 1A       	 .uleb128 0x1a
 5999 0e25 E2020000 	 .4byte .LASF108
 6000 0e29 01       	 .byte 0x1
 6001 0e2a 6202     	 .2byte 0x262
 6002 0e2c 24       	 .byte 0x24
 6003 0e2d C7020000 	 .4byte 0x2c7
 6004 0e31 02       	 .uleb128 0x2
ARM GAS   			page 140


 6005 0e32 91       	 .byte 0x91
 6006 0e33 6C       	 .sleb128 -20
 6007 0e34 1B       	 .uleb128 0x1b
 6008 0e35 56030000 	 .4byte .LASF113
 6009 0e39 01       	 .byte 0x1
 6010 0e3a 6402     	 .2byte 0x264
 6011 0e3c 0C       	 .byte 0xc
 6012 0e3d 41020000 	 .4byte 0x241
 6013 0e41 02       	 .uleb128 0x2
 6014 0e42 91       	 .byte 0x91
 6015 0e43 74       	 .sleb128 -12
 6016 0e44 1B       	 .uleb128 0x1b
 6017 0e45 47040000 	 .4byte .LASF131
 6018 0e49 01       	 .byte 0x1
 6019 0e4a 6502     	 .2byte 0x265
 6020 0e4c 11       	 .byte 0x11
 6021 0e4d 7A000000 	 .4byte 0x7a
 6022 0e51 02       	 .uleb128 0x2
 6023 0e52 91       	 .byte 0x91
 6024 0e53 70       	 .sleb128 -16
 6025 0e54 00       	 .byte 0
 6026 0e55 19       	 .uleb128 0x19
 6027 0e56 8E000000 	 .4byte .LASF160
 6028 0e5a 01       	 .byte 0x1
 6029 0e5b 3A02     	 .2byte 0x23a
 6030 0e5d 0A       	 .byte 0xa
 6031 0e5e 41020000 	 .4byte 0x241
 6032 0e62 00000000 	 .4byte .LFB49
 6033 0e66 BC000000 	 .4byte .LFE49-.LFB49
 6034 0e6a 01       	 .uleb128 0x1
 6035 0e6b 9C       	 .byte 0x9c
 6036 0e6c B10E0000 	 .4byte 0xeb1
 6037 0e70 1A       	 .uleb128 0x1a
 6038 0e71 E2020000 	 .4byte .LASF108
 6039 0e75 01       	 .byte 0x1
 6040 0e76 3A02     	 .2byte 0x23a
 6041 0e78 21       	 .byte 0x21
 6042 0e79 C7020000 	 .4byte 0x2c7
 6043 0e7d 02       	 .uleb128 0x2
 6044 0e7e 91       	 .byte 0x91
 6045 0e7f 6C       	 .sleb128 -20
 6046 0e80 1A       	 .uleb128 0x1a
 6047 0e81 31030000 	 .4byte .LASF109
 6048 0e85 01       	 .byte 0x1
 6049 0e86 3A02     	 .2byte 0x23a
 6050 0e88 34       	 .byte 0x34
 6051 0e89 C2000000 	 .4byte 0xc2
 6052 0e8d 02       	 .uleb128 0x2
 6053 0e8e 91       	 .byte 0x91
 6054 0e8f 68       	 .sleb128 -24
 6055 0e90 1B       	 .uleb128 0x1b
 6056 0e91 D5040000 	 .4byte .LASF112
 6057 0e95 01       	 .byte 0x1
 6058 0e96 3C02     	 .2byte 0x23c
 6059 0e98 0E       	 .byte 0xe
 6060 0e99 03010000 	 .4byte 0x103
 6061 0e9d 02       	 .uleb128 0x2
ARM GAS   			page 141


 6062 0e9e 91       	 .byte 0x91
 6063 0e9f 74       	 .sleb128 -12
 6064 0ea0 1B       	 .uleb128 0x1b
 6065 0ea1 47040000 	 .4byte .LASF131
 6066 0ea5 01       	 .byte 0x1
 6067 0ea6 3D02     	 .2byte 0x23d
 6068 0ea8 11       	 .byte 0x11
 6069 0ea9 7A000000 	 .4byte 0x7a
 6070 0ead 02       	 .uleb128 0x2
 6071 0eae 91       	 .byte 0x91
 6072 0eaf 70       	 .sleb128 -16
 6073 0eb0 00       	 .byte 0
 6074 0eb1 19       	 .uleb128 0x19
 6075 0eb2 5C020000 	 .4byte .LASF161
 6076 0eb6 01       	 .byte 0x1
 6077 0eb7 2A02     	 .2byte 0x22a
 6078 0eb9 0B       	 .byte 0xb
 6079 0eba C7020000 	 .4byte 0x2c7
 6080 0ebe 00000000 	 .4byte .LFB48
 6081 0ec2 18000000 	 .4byte .LFE48-.LFB48
 6082 0ec6 01       	 .uleb128 0x1
 6083 0ec7 9C       	 .byte 0x9c
 6084 0ec8 DD0E0000 	 .4byte 0xedd
 6085 0ecc 1A       	 .uleb128 0x1a
 6086 0ecd 24000000 	 .4byte .LASF115
 6087 0ed1 01       	 .byte 0x1
 6088 0ed2 2A02     	 .2byte 0x22a
 6089 0ed4 2E       	 .byte 0x2e
 6090 0ed5 C1060000 	 .4byte 0x6c1
 6091 0ed9 02       	 .uleb128 0x2
 6092 0eda 91       	 .byte 0x91
 6093 0edb 74       	 .sleb128 -12
 6094 0edc 00       	 .byte 0
 6095 0edd 19       	 .uleb128 0x19
 6096 0ede DD050000 	 .4byte .LASF162
 6097 0ee2 01       	 .byte 0x1
 6098 0ee3 F401     	 .2byte 0x1f4
 6099 0ee5 09       	 .byte 0x9
 6100 0ee6 FA050000 	 .4byte 0x5fa
 6101 0eea 00000000 	 .4byte .LFB47
 6102 0eee AA000000 	 .4byte .LFE47-.LFB47
 6103 0ef2 01       	 .uleb128 0x1
 6104 0ef3 9C       	 .byte 0x9c
 6105 0ef4 3A0F0000 	 .4byte 0xf3a
 6106 0ef8 1A       	 .uleb128 0x1a
 6107 0ef9 32050000 	 .4byte .LASF102
 6108 0efd 01       	 .byte 0x1
 6109 0efe F401     	 .2byte 0x1f4
 6110 0f00 1F       	 .byte 0x1f
 6111 0f01 B6000000 	 .4byte 0xb6
 6112 0f05 02       	 .uleb128 0x2
 6113 0f06 91       	 .byte 0x91
 6114 0f07 68       	 .sleb128 -24
 6115 0f08 1A       	 .uleb128 0x1a
 6116 0f09 31030000 	 .4byte .LASF109
 6117 0f0d 01       	 .byte 0x1
 6118 0f0e F401     	 .2byte 0x1f4
ARM GAS   			page 142


 6119 0f10 31       	 .byte 0x31
 6120 0f11 C2000000 	 .4byte 0xc2
 6121 0f15 02       	 .uleb128 0x2
 6122 0f16 91       	 .byte 0x91
 6123 0f17 64       	 .sleb128 -28
 6124 0f18 1F       	 .uleb128 0x1f
 6125 0f19 72657400 	 .ascii "ret\000"
 6126 0f1d 01       	 .byte 0x1
 6127 0f1e F601     	 .2byte 0x1f6
 6128 0f20 0B       	 .byte 0xb
 6129 0f21 FA050000 	 .4byte 0x5fa
 6130 0f25 03       	 .uleb128 0x3
 6131 0f26 91       	 .byte 0x91
 6132 0f27 6C       	 .sleb128 -20
 6133 0f28 06       	 .byte 0x6
 6134 0f29 1B       	 .uleb128 0x1b
 6135 0f2a D5040000 	 .4byte .LASF112
 6136 0f2e 01       	 .byte 0x1
 6137 0f2f FA01     	 .2byte 0x1fa
 6138 0f31 0E       	 .byte 0xe
 6139 0f32 03010000 	 .4byte 0x103
 6140 0f36 02       	 .uleb128 0x2
 6141 0f37 91       	 .byte 0x91
 6142 0f38 74       	 .sleb128 -12
 6143 0f39 00       	 .byte 0
 6144 0f3a 19       	 .uleb128 0x19
 6145 0f3b 00000000 	 .4byte .LASF163
 6146 0f3f 01       	 .byte 0x1
 6147 0f40 CA01     	 .2byte 0x1ca
 6148 0f42 09       	 .byte 0x9
 6149 0f43 B6000000 	 .4byte 0xb6
 6150 0f47 00000000 	 .4byte .LFB46
 6151 0f4b 90000000 	 .4byte .LFE46-.LFB46
 6152 0f4f 01       	 .uleb128 0x1
 6153 0f50 9C       	 .byte 0x9c
 6154 0f51 860F0000 	 .4byte 0xf86
 6155 0f55 1A       	 .uleb128 0x1a
 6156 0f56 0E050000 	 .4byte .LASF126
 6157 0f5a 01       	 .byte 0x1
 6158 0f5b CA01     	 .2byte 0x1ca
 6159 0f5d 21       	 .byte 0x21
 6160 0f5e AD020000 	 .4byte 0x2ad
 6161 0f62 02       	 .uleb128 0x2
 6162 0f63 91       	 .byte 0x91
 6163 0f64 6C       	 .sleb128 -20
 6164 0f65 1A       	 .uleb128 0x1a
 6165 0f66 A3000000 	 .4byte .LASF164
 6166 0f6a 01       	 .byte 0x1
 6167 0f6b CA01     	 .2byte 0x1ca
 6168 0f6d 34       	 .byte 0x34
 6169 0f6e B6000000 	 .4byte 0xb6
 6170 0f72 02       	 .uleb128 0x2
 6171 0f73 91       	 .byte 0x91
 6172 0f74 68       	 .sleb128 -24
 6173 0f75 1B       	 .uleb128 0x1b
 6174 0f76 A0040000 	 .4byte .LASF165
 6175 0f7a 01       	 .byte 0x1
ARM GAS   			page 143


 6176 0f7b CD01     	 .2byte 0x1cd
 6177 0f7d 0E       	 .byte 0xe
 6178 0f7e EB000000 	 .4byte 0xeb
 6179 0f82 02       	 .uleb128 0x2
 6180 0f83 91       	 .byte 0x91
 6181 0f84 74       	 .sleb128 -12
 6182 0f85 00       	 .byte 0
 6183 0f86 1C       	 .uleb128 0x1c
 6184 0f87 3A070000 	 .4byte .LASF166
 6185 0f8b 01       	 .byte 0x1
 6186 0f8c AC01     	 .2byte 0x1ac
 6187 0f8e 0A       	 .byte 0xa
 6188 0f8f 41020000 	 .4byte 0x241
 6189 0f93 00000000 	 .4byte .LFB45
 6190 0f97 1E000000 	 .4byte .LFE45-.LFB45
 6191 0f9b 01       	 .uleb128 0x1
 6192 0f9c 9C       	 .byte 0x9c
 6193 0f9d C20F0000 	 .4byte 0xfc2
 6194 0fa1 1A       	 .uleb128 0x1a
 6195 0fa2 77040000 	 .4byte .LASF167
 6196 0fa6 01       	 .byte 0x1
 6197 0fa7 AC01     	 .2byte 0x1ac
 6198 0fa9 23       	 .byte 0x23
 6199 0faa BA020000 	 .4byte 0x2ba
 6200 0fae 02       	 .uleb128 0x2
 6201 0faf 91       	 .byte 0x91
 6202 0fb0 6C       	 .sleb128 -20
 6203 0fb1 1B       	 .uleb128 0x1b
 6204 0fb2 56030000 	 .4byte .LASF113
 6205 0fb6 01       	 .byte 0x1
 6206 0fb7 AE01     	 .2byte 0x1ae
 6207 0fb9 0A       	 .byte 0xa
 6208 0fba 41020000 	 .4byte 0x241
 6209 0fbe 02       	 .uleb128 0x2
 6210 0fbf 91       	 .byte 0x91
 6211 0fc0 74       	 .sleb128 -12
 6212 0fc1 00       	 .byte 0
 6213 0fc2 1C       	 .uleb128 0x1c
 6214 0fc3 48070000 	 .4byte .LASF168
 6215 0fc7 01       	 .byte 0x1
 6216 0fc8 8F01     	 .2byte 0x18f
 6217 0fca 0A       	 .byte 0xa
 6218 0fcb 41020000 	 .4byte 0x241
 6219 0fcf 00000000 	 .4byte .LFB44
 6220 0fd3 1E000000 	 .4byte .LFE44-.LFB44
 6221 0fd7 01       	 .uleb128 0x1
 6222 0fd8 9C       	 .byte 0x9c
 6223 0fd9 FE0F0000 	 .4byte 0xffe
 6224 0fdd 1A       	 .uleb128 0x1a
 6225 0fde 77040000 	 .4byte .LASF167
 6226 0fe2 01       	 .byte 0x1
 6227 0fe3 8F01     	 .2byte 0x18f
 6228 0fe5 21       	 .byte 0x21
 6229 0fe6 BA020000 	 .4byte 0x2ba
 6230 0fea 02       	 .uleb128 0x2
 6231 0feb 91       	 .byte 0x91
 6232 0fec 6C       	 .sleb128 -20
ARM GAS   			page 144


 6233 0fed 1B       	 .uleb128 0x1b
 6234 0fee 56030000 	 .4byte .LASF113
 6235 0ff2 01       	 .byte 0x1
 6236 0ff3 9101     	 .2byte 0x191
 6237 0ff5 0C       	 .byte 0xc
 6238 0ff6 41020000 	 .4byte 0x241
 6239 0ffa 02       	 .uleb128 0x2
 6240 0ffb 91       	 .byte 0x91
 6241 0ffc 74       	 .sleb128 -12
 6242 0ffd 00       	 .byte 0
 6243 0ffe 1C       	 .uleb128 0x1c
 6244 0fff 510B0000 	 .4byte .LASF169
 6245 1003 01       	 .byte 0x1
 6246 1004 6801     	 .2byte 0x168
 6247 1006 0A       	 .byte 0xa
 6248 1007 41020000 	 .4byte 0x241
 6249 100b 00000000 	 .4byte .LFB43
 6250 100f 20000000 	 .4byte .LFE43-.LFB43
 6251 1013 01       	 .uleb128 0x1
 6252 1014 9C       	 .byte 0x9c
 6253 1015 4A100000 	 .4byte 0x104a
 6254 1019 1A       	 .uleb128 0x1a
 6255 101a 77040000 	 .4byte .LASF167
 6256 101e 01       	 .byte 0x1
 6257 101f 6801     	 .2byte 0x168
 6258 1021 22       	 .byte 0x22
 6259 1022 BA020000 	 .4byte 0x2ba
 6260 1026 02       	 .uleb128 0x2
 6261 1027 91       	 .byte 0x91
 6262 1028 6C       	 .sleb128 -20
 6263 1029 1A       	 .uleb128 0x1a
 6264 102a 31030000 	 .4byte .LASF109
 6265 102e 01       	 .byte 0x1
 6266 102f 6801     	 .2byte 0x168
 6267 1031 35       	 .byte 0x35
 6268 1032 C2000000 	 .4byte 0xc2
 6269 1036 02       	 .uleb128 0x2
 6270 1037 91       	 .byte 0x91
 6271 1038 68       	 .sleb128 -24
 6272 1039 1B       	 .uleb128 0x1b
 6273 103a 56030000 	 .4byte .LASF113
 6274 103e 01       	 .byte 0x1
 6275 103f 6A01     	 .2byte 0x16a
 6276 1041 0C       	 .byte 0xc
 6277 1042 41020000 	 .4byte 0x241
 6278 1046 02       	 .uleb128 0x2
 6279 1047 91       	 .byte 0x91
 6280 1048 74       	 .sleb128 -12
 6281 1049 00       	 .byte 0
 6282 104a 1C       	 .uleb128 0x1c
 6283 104b D8080000 	 .4byte .LASF170
 6284 104f 01       	 .byte 0x1
 6285 1050 5401     	 .2byte 0x154
 6286 1052 0B       	 .byte 0xb
 6287 1053 BA020000 	 .4byte 0x2ba
 6288 1057 00000000 	 .4byte .LFB42
 6289 105b 1C000000 	 .4byte .LFE42-.LFB42
ARM GAS   			page 145


 6290 105f 01       	 .uleb128 0x1
 6291 1060 9C       	 .byte 0x9c
 6292 1061 96100000 	 .4byte 0x1096
 6293 1065 1A       	 .uleb128 0x1a
 6294 1066 53090000 	 .4byte .LASF171
 6295 106a 01       	 .byte 0x1
 6296 106b 5401     	 .2byte 0x154
 6297 106d 2E       	 .byte 0x2e
 6298 106e 96100000 	 .4byte 0x1096
 6299 1072 02       	 .uleb128 0x2
 6300 1073 91       	 .byte 0x91
 6301 1074 74       	 .sleb128 -12
 6302 1075 1A       	 .uleb128 0x1a
 6303 1076 4E0A0000 	 .4byte .LASF172
 6304 107a 01       	 .byte 0x1
 6305 107b 5401     	 .2byte 0x154
 6306 107d 47       	 .byte 0x47
 6307 107e 6E020000 	 .4byte 0x26e
 6308 1082 02       	 .uleb128 0x2
 6309 1083 91       	 .byte 0x91
 6310 1084 73       	 .sleb128 -13
 6311 1085 1A       	 .uleb128 0x1a
 6312 1086 85000000 	 .4byte .LASF173
 6313 108a 01       	 .byte 0x1
 6314 108b 5401     	 .2byte 0x154
 6315 108d 53       	 .byte 0x53
 6316 108e 9B000000 	 .4byte 0x9b
 6317 1092 02       	 .uleb128 0x2
 6318 1093 91       	 .byte 0x91
 6319 1094 6C       	 .sleb128 -20
 6320 1095 00       	 .byte 0
 6321 1096 07       	 .uleb128 0x7
 6322 1097 04       	 .byte 0x4
 6323 1098 33040000 	 .4byte 0x433
 6324 109c 19       	 .uleb128 0x19
 6325 109d 050B0000 	 .4byte .LASF174
 6326 10a1 01       	 .byte 0x1
 6327 10a2 3101     	 .2byte 0x131
 6328 10a4 0A       	 .byte 0xa
 6329 10a5 41020000 	 .4byte 0x241
 6330 10a9 00000000 	 .4byte .LFB41
 6331 10ad 28000000 	 .4byte .LFE41-.LFB41
 6332 10b1 01       	 .uleb128 0x1
 6333 10b2 9C       	 .byte 0x9c
 6334 10b3 D8100000 	 .4byte 0x10d8
 6335 10b7 1A       	 .uleb128 0x1a
 6336 10b8 31030000 	 .4byte .LASF109
 6337 10bc 01       	 .byte 0x1
 6338 10bd 3101     	 .2byte 0x131
 6339 10bf 1C       	 .byte 0x1c
 6340 10c0 C2000000 	 .4byte 0xc2
 6341 10c4 02       	 .uleb128 0x2
 6342 10c5 91       	 .byte 0x91
 6343 10c6 6C       	 .sleb128 -20
 6344 10c7 1B       	 .uleb128 0x1b
 6345 10c8 D5040000 	 .4byte .LASF112
 6346 10cc 01       	 .byte 0x1
ARM GAS   			page 146


 6347 10cd 3401     	 .2byte 0x134
 6348 10cf 0E       	 .byte 0xe
 6349 10d0 03010000 	 .4byte 0x103
 6350 10d4 02       	 .uleb128 0x2
 6351 10d5 91       	 .byte 0x91
 6352 10d6 74       	 .sleb128 -12
 6353 10d7 00       	 .byte 0
 6354 10d8 19       	 .uleb128 0x19
 6355 10d9 C4070000 	 .4byte .LASF175
 6356 10dd 01       	 .byte 0x1
 6357 10de 1B01     	 .2byte 0x11b
 6358 10e0 0C       	 .byte 0xc
 6359 10e1 C5010000 	 .4byte 0x1c5
 6360 10e5 00000000 	 .4byte .LFB40
 6361 10e9 48000000 	 .4byte .LFE40-.LFB40
 6362 10ed 01       	 .uleb128 0x1
 6363 10ee 9C       	 .byte 0x9c
 6364 10ef 04110000 	 .4byte 0x1104
 6365 10f3 1A       	 .uleb128 0x1a
 6366 10f4 0E050000 	 .4byte .LASF126
 6367 10f8 01       	 .byte 0x1
 6368 10f9 1B01     	 .2byte 0x11b
 6369 10fb 2C       	 .byte 0x2c
 6370 10fc AD020000 	 .4byte 0x2ad
 6371 1100 02       	 .uleb128 0x2
 6372 1101 91       	 .byte 0x91
 6373 1102 74       	 .sleb128 -12
 6374 1103 00       	 .byte 0
 6375 1104 19       	 .uleb128 0x19
 6376 1105 AA050000 	 .4byte .LASF176
 6377 1109 01       	 .byte 0x1
 6378 110a 0B01     	 .2byte 0x10b
 6379 110c 0A       	 .byte 0xa
 6380 110d 41020000 	 .4byte 0x241
 6381 1111 00000000 	 .4byte .LFB39
 6382 1115 2A000000 	 .4byte .LFE39-.LFB39
 6383 1119 01       	 .uleb128 0x1
 6384 111a 9C       	 .byte 0x9c
 6385 111b 40110000 	 .4byte 0x1140
 6386 111f 1A       	 .uleb128 0x1a
 6387 1120 0E050000 	 .4byte .LASF126
 6388 1124 01       	 .byte 0x1
 6389 1125 0B01     	 .2byte 0x10b
 6390 1127 2A       	 .byte 0x2a
 6391 1128 AD020000 	 .4byte 0x2ad
 6392 112c 02       	 .uleb128 0x2
 6393 112d 91       	 .byte 0x91
 6394 112e 74       	 .sleb128 -12
 6395 112f 1A       	 .uleb128 0x1a
 6396 1130 AB080000 	 .4byte .LASF177
 6397 1134 01       	 .byte 0x1
 6398 1135 0B01     	 .2byte 0x10b
 6399 1137 40       	 .byte 0x40
 6400 1138 C5010000 	 .4byte 0x1c5
 6401 113c 02       	 .uleb128 0x2
 6402 113d 91       	 .byte 0x91
 6403 113e 72       	 .sleb128 -14
ARM GAS   			page 147


 6404 113f 00       	 .byte 0
 6405 1140 24       	 .uleb128 0x24
 6406 1141 84050000 	 .4byte .LASF178
 6407 1145 01       	 .byte 0x1
 6408 1146 FD       	 .byte 0xfd
 6409 1147 0A       	 .byte 0xa
 6410 1148 41020000 	 .4byte 0x241
 6411 114c 00000000 	 .4byte .LFB38
 6412 1150 24000000 	 .4byte .LFE38-.LFB38
 6413 1154 01       	 .uleb128 0x1
 6414 1155 9C       	 .byte 0x9c
 6415 1156 25       	 .uleb128 0x25
 6416 1157 AF020000 	 .4byte .LASF179
 6417 115b 01       	 .byte 0x1
 6418 115c EE       	 .byte 0xee
 6419 115d 0A       	 .byte 0xa
 6420 115e 41020000 	 .4byte 0x241
 6421 1162 00000000 	 .4byte .LFB37
 6422 1166 16000000 	 .4byte .LFE37-.LFB37
 6423 116a 01       	 .uleb128 0x1
 6424 116b 9C       	 .byte 0x9c
 6425 116c 80110000 	 .4byte 0x1180
 6426 1170 26       	 .uleb128 0x26
 6427 1171 0E050000 	 .4byte .LASF126
 6428 1175 01       	 .byte 0x1
 6429 1176 EE       	 .byte 0xee
 6430 1177 28       	 .byte 0x28
 6431 1178 AD020000 	 .4byte 0x2ad
 6432 117c 02       	 .uleb128 0x2
 6433 117d 91       	 .byte 0x91
 6434 117e 74       	 .sleb128 -12
 6435 117f 00       	 .byte 0
 6436 1180 27       	 .uleb128 0x27
 6437 1181 6A020000 	 .4byte .LASF180
 6438 1185 01       	 .byte 0x1
 6439 1186 DF       	 .byte 0xdf
 6440 1187 0C       	 .byte 0xc
 6441 1188 AD020000 	 .4byte 0x2ad
 6442 118c 00000000 	 .4byte .LFB36
 6443 1190 0E000000 	 .4byte .LFE36-.LFB36
 6444 1194 01       	 .uleb128 0x1
 6445 1195 9C       	 .byte 0x9c
 6446 1196 28       	 .uleb128 0x28
 6447 1197 D70B0000 	 .4byte .LASF181
 6448 119b 01       	 .byte 0x1
 6449 119c CC       	 .byte 0xcc
 6450 119d 0C       	 .byte 0xc
 6451 119e AD020000 	 .4byte 0x2ad
 6452 11a2 00000000 	 .4byte .LFB35
 6453 11a6 60000000 	 .4byte .LFE35-.LFB35
 6454 11aa 01       	 .uleb128 0x1
 6455 11ab 9C       	 .byte 0x9c
 6456 11ac DE110000 	 .4byte 0x11de
 6457 11b0 26       	 .uleb128 0x26
 6458 11b1 2C040000 	 .4byte .LASF182
 6459 11b5 01       	 .byte 0x1
 6460 11b6 CC       	 .byte 0xcc
ARM GAS   			page 148


 6461 11b7 31       	 .byte 0x31
 6462 11b8 DE110000 	 .4byte 0x11de
 6463 11bc 02       	 .uleb128 0x2
 6464 11bd 91       	 .byte 0x91
 6465 11be 5C       	 .sleb128 -36
 6466 11bf 26       	 .uleb128 0x26
 6467 11c0 85000000 	 .4byte .LASF173
 6468 11c4 01       	 .byte 0x1
 6469 11c5 CC       	 .byte 0xcc
 6470 11c6 43       	 .byte 0x43
 6471 11c7 9B000000 	 .4byte 0x9b
 6472 11cb 02       	 .uleb128 0x2
 6473 11cc 91       	 .byte 0x91
 6474 11cd 58       	 .sleb128 -40
 6475 11ce 29       	 .uleb128 0x29
 6476 11cf 4A0B0000 	 .4byte .LASF79
 6477 11d3 01       	 .byte 0x1
 6478 11d4 CE       	 .byte 0xce
 6479 11d5 10       	 .byte 0x10
 6480 11d6 15010000 	 .4byte 0x115
 6481 11da 02       	 .uleb128 0x2
 6482 11db 91       	 .byte 0x91
 6483 11dc 64       	 .sleb128 -28
 6484 11dd 00       	 .byte 0
 6485 11de 07       	 .uleb128 0x7
 6486 11df 04       	 .byte 0x4
 6487 11e0 04040000 	 .4byte 0x404
 6488 11e4 27       	 .uleb128 0x27
 6489 11e5 2D080000 	 .4byte .LASF183
 6490 11e9 01       	 .byte 0x1
 6491 11ea BA       	 .byte 0xba
 6492 11eb 0A       	 .byte 0xa
 6493 11ec C2000000 	 .4byte 0xc2
 6494 11f0 00000000 	 .4byte .LFB34
 6495 11f4 2C000000 	 .4byte .LFE34-.LFB34
 6496 11f8 01       	 .uleb128 0x1
 6497 11f9 9C       	 .byte 0x9c
 6498 11fa 27       	 .uleb128 0x27
 6499 11fb 3B010000 	 .4byte .LASF184
 6500 11ff 01       	 .byte 0x1
 6501 1200 A7       	 .byte 0xa7
 6502 1201 09       	 .byte 0x9
 6503 1202 B6000000 	 .4byte 0xb6
 6504 1206 00000000 	 .4byte .LFB33
 6505 120a 22000000 	 .4byte .LFE33-.LFB33
 6506 120e 01       	 .uleb128 0x1
 6507 120f 9C       	 .byte 0x9c
 6508 1210 27       	 .uleb128 0x27
 6509 1211 6B0B0000 	 .4byte .LASF185
 6510 1215 01       	 .byte 0x1
 6511 1216 98       	 .byte 0x98
 6512 1217 0A       	 .byte 0xa
 6513 1218 41020000 	 .4byte 0x241
 6514 121c 00000000 	 .4byte .LFB32
 6515 1220 0E000000 	 .4byte .LFE32-.LFB32
 6516 1224 01       	 .uleb128 0x1
 6517 1225 9C       	 .byte 0x9c
ARM GAS   			page 149


 6518 1226 2A       	 .uleb128 0x2a
 6519 1227 48000000 	 .4byte .LASF186
 6520 122b 01       	 .byte 0x1
 6521 122c 84       	 .byte 0x84
 6522 122d 0C       	 .byte 0xc
 6523 122e 25000000 	 .4byte 0x25
 6524 1232 00000000 	 .4byte .LFB31
 6525 1236 24000000 	 .4byte .LFE31-.LFB31
 6526 123a 01       	 .uleb128 0x1
 6527 123b 9C       	 .byte 0x9c
 6528 123c 5A120000 	 .4byte 0x125a
 6529 1240 2B       	 .uleb128 0x2b
 6530 1241 10130000 	 .4byte 0x1310
 6531 1245 06000000 	 .4byte .LBB8
 6532 1249 08000000 	 .4byte .LBE8-.LBB8
 6533 124d 01       	 .byte 0x1
 6534 124e 86       	 .byte 0x86
 6535 124f 14       	 .byte 0x14
 6536 1250 21       	 .uleb128 0x21
 6537 1251 1D130000 	 .4byte 0x131d
 6538 1255 02       	 .uleb128 0x2
 6539 1256 91       	 .byte 0x91
 6540 1257 74       	 .sleb128 -12
 6541 1258 00       	 .byte 0
 6542 1259 00       	 .byte 0
 6543 125a 2A       	 .uleb128 0x2a
 6544 125b 73000000 	 .4byte .LASF187
 6545 125f 01       	 .byte 0x1
 6546 1260 76       	 .byte 0x76
 6547 1261 13       	 .byte 0x13
 6548 1262 C5010000 	 .4byte 0x1c5
 6549 1266 00000000 	 .4byte .LFB30
 6550 126a 2C000000 	 .4byte .LFE30-.LFB30
 6551 126e 01       	 .uleb128 0x1
 6552 126f 9C       	 .byte 0x9c
 6553 1270 93120000 	 .4byte 0x1293
 6554 1274 26       	 .uleb128 0x26
 6555 1275 70070000 	 .4byte .LASF188
 6556 1279 01       	 .byte 0x1
 6557 127a 76       	 .byte 0x76
 6558 127b 3D       	 .byte 0x3d
 6559 127c 8D000000 	 .4byte 0x8d
 6560 1280 02       	 .uleb128 0x2
 6561 1281 91       	 .byte 0x91
 6562 1282 6C       	 .sleb128 -20
 6563 1283 29       	 .uleb128 0x29
 6564 1284 AB080000 	 .4byte .LASF177
 6565 1288 01       	 .byte 0x1
 6566 1289 78       	 .byte 0x78
 6567 128a 0E       	 .byte 0xe
 6568 128b C5010000 	 .4byte 0x1c5
 6569 128f 02       	 .uleb128 0x2
 6570 1290 91       	 .byte 0x91
 6571 1291 76       	 .sleb128 -10
 6572 1292 00       	 .byte 0
 6573 1293 2A       	 .uleb128 0x2a
 6574 1294 45080000 	 .4byte .LASF189
ARM GAS   			page 150


 6575 1298 01       	 .byte 0x1
 6576 1299 69       	 .byte 0x69
 6577 129a 1F       	 .byte 0x1f
 6578 129b 8D000000 	 .4byte 0x8d
 6579 129f 00000000 	 .4byte .LFB29
 6580 12a3 30000000 	 .4byte .LFE29-.LFB29
 6581 12a7 01       	 .uleb128 0x1
 6582 12a8 9C       	 .byte 0x9c
 6583 12a9 CC120000 	 .4byte 0x12cc
 6584 12ad 26       	 .uleb128 0x26
 6585 12ae AB080000 	 .4byte .LASF177
 6586 12b2 01       	 .byte 0x1
 6587 12b3 69       	 .byte 0x69
 6588 12b4 40       	 .byte 0x40
 6589 12b5 C5010000 	 .4byte 0x1c5
 6590 12b9 02       	 .uleb128 0x2
 6591 12ba 91       	 .byte 0x91
 6592 12bb 6E       	 .sleb128 -18
 6593 12bc 29       	 .uleb128 0x29
 6594 12bd 70070000 	 .4byte .LASF188
 6595 12c1 01       	 .byte 0x1
 6596 12c2 6B       	 .byte 0x6b
 6597 12c3 1A       	 .byte 0x1a
 6598 12c4 8D000000 	 .4byte 0x8d
 6599 12c8 02       	 .uleb128 0x2
 6600 12c9 91       	 .byte 0x91
 6601 12ca 74       	 .sleb128 -12
 6602 12cb 00       	 .byte 0
 6603 12cc 2C       	 .uleb128 0x2c
 6604 12cd 90040000 	 .4byte .LASF192
 6605 12d1 03       	 .byte 0x3
 6606 12d2 F7       	 .byte 0xf7
 6607 12d3 1E       	 .byte 0x1e
 6608 12d4 03       	 .byte 0x3
 6609 12d5 E6120000 	 .4byte 0x12e6
 6610 12d9 2D       	 .uleb128 0x2d
 6611 12da EE0A0000 	 .4byte .LASF201
 6612 12de 03       	 .byte 0x3
 6613 12df F7       	 .byte 0xf7
 6614 12e0 38       	 .byte 0x38
 6615 12e1 C2000000 	 .4byte 0xc2
 6616 12e5 00       	 .byte 0
 6617 12e6 2E       	 .uleb128 0x2e
 6618 12e7 F2050000 	 .4byte .LASF202
 6619 12eb 03       	 .byte 0x3
 6620 12ec E3       	 .byte 0xe3
 6621 12ed 22       	 .byte 0x22
 6622 12ee C2000000 	 .4byte 0xc2
 6623 12f2 03       	 .byte 0x3
 6624 12f3 10130000 	 .4byte 0x1310
 6625 12f7 2F       	 .uleb128 0x2f
 6626 12f8 C1020000 	 .4byte .LASF190
 6627 12fc 03       	 .byte 0x3
 6628 12fd E5       	 .byte 0xe5
 6629 12fe 0A       	 .byte 0xa
 6630 12ff C2000000 	 .4byte 0xc2
 6631 1303 2F       	 .uleb128 0x2f
ARM GAS   			page 151


 6632 1304 17070000 	 .4byte .LASF191
 6633 1308 03       	 .byte 0x3
 6634 1309 E5       	 .byte 0xe5
 6635 130a 1D       	 .byte 0x1d
 6636 130b C2000000 	 .4byte 0xc2
 6637 130f 00       	 .byte 0
 6638 1310 30       	 .uleb128 0x30
 6639 1311 AC030000 	 .4byte .LASF193
 6640 1315 02       	 .byte 0x2
 6641 1316 69       	 .byte 0x69
 6642 1317 3D       	 .byte 0x3d
 6643 1318 C2000000 	 .4byte 0xc2
 6644 131c 03       	 .byte 0x3
 6645 131d 2F       	 .uleb128 0x2f
 6646 131e 56030000 	 .4byte .LASF113
 6647 1322 02       	 .byte 0x2
 6648 1323 6B       	 .byte 0x6b
 6649 1324 0C       	 .byte 0xc
 6650 1325 C2000000 	 .4byte 0xc2
 6651 1329 00       	 .byte 0
 6652 132a 00       	 .byte 0
 6653              	 .section .debug_abbrev,"",%progbits
 6654              	.Ldebug_abbrev0:
 6655 0000 01       	 .uleb128 0x1
 6656 0001 11       	 .uleb128 0x11
 6657 0002 01       	 .byte 0x1
 6658 0003 25       	 .uleb128 0x25
 6659 0004 0E       	 .uleb128 0xe
 6660 0005 13       	 .uleb128 0x13
 6661 0006 0B       	 .uleb128 0xb
 6662 0007 03       	 .uleb128 0x3
 6663 0008 0E       	 .uleb128 0xe
 6664 0009 1B       	 .uleb128 0x1b
 6665 000a 0E       	 .uleb128 0xe
 6666 000b 55       	 .uleb128 0x55
 6667 000c 17       	 .uleb128 0x17
 6668 000d 11       	 .uleb128 0x11
 6669 000e 01       	 .uleb128 0x1
 6670 000f 10       	 .uleb128 0x10
 6671 0010 17       	 .uleb128 0x17
 6672 0011 00       	 .byte 0
 6673 0012 00       	 .byte 0
 6674 0013 02       	 .uleb128 0x2
 6675 0014 24       	 .uleb128 0x24
 6676 0015 00       	 .byte 0
 6677 0016 0B       	 .uleb128 0xb
 6678 0017 0B       	 .uleb128 0xb
 6679 0018 3E       	 .uleb128 0x3e
 6680 0019 0B       	 .uleb128 0xb
 6681 001a 03       	 .uleb128 0x3
 6682 001b 08       	 .uleb128 0x8
 6683 001c 00       	 .byte 0
 6684 001d 00       	 .byte 0
 6685 001e 03       	 .uleb128 0x3
 6686 001f 24       	 .uleb128 0x24
 6687 0020 00       	 .byte 0
 6688 0021 0B       	 .uleb128 0xb
ARM GAS   			page 152


 6689 0022 0B       	 .uleb128 0xb
 6690 0023 3E       	 .uleb128 0x3e
 6691 0024 0B       	 .uleb128 0xb
 6692 0025 03       	 .uleb128 0x3
 6693 0026 0E       	 .uleb128 0xe
 6694 0027 00       	 .byte 0
 6695 0028 00       	 .byte 0
 6696 0029 04       	 .uleb128 0x4
 6697 002a 3B       	 .uleb128 0x3b
 6698 002b 00       	 .byte 0
 6699 002c 03       	 .uleb128 0x3
 6700 002d 0E       	 .uleb128 0xe
 6701 002e 00       	 .byte 0
 6702 002f 00       	 .byte 0
 6703 0030 05       	 .uleb128 0x5
 6704 0031 16       	 .uleb128 0x16
 6705 0032 00       	 .byte 0
 6706 0033 03       	 .uleb128 0x3
 6707 0034 0E       	 .uleb128 0xe
 6708 0035 3A       	 .uleb128 0x3a
 6709 0036 0B       	 .uleb128 0xb
 6710 0037 3B       	 .uleb128 0x3b
 6711 0038 0B       	 .uleb128 0xb
 6712 0039 39       	 .uleb128 0x39
 6713 003a 0B       	 .uleb128 0xb
 6714 003b 49       	 .uleb128 0x49
 6715 003c 13       	 .uleb128 0x13
 6716 003d 00       	 .byte 0
 6717 003e 00       	 .byte 0
 6718 003f 06       	 .uleb128 0x6
 6719 0040 0F       	 .uleb128 0xf
 6720 0041 00       	 .byte 0
 6721 0042 0B       	 .uleb128 0xb
 6722 0043 0B       	 .uleb128 0xb
 6723 0044 00       	 .byte 0
 6724 0045 00       	 .byte 0
 6725 0046 07       	 .uleb128 0x7
 6726 0047 0F       	 .uleb128 0xf
 6727 0048 00       	 .byte 0
 6728 0049 0B       	 .uleb128 0xb
 6729 004a 0B       	 .uleb128 0xb
 6730 004b 49       	 .uleb128 0x49
 6731 004c 13       	 .uleb128 0x13
 6732 004d 00       	 .byte 0
 6733 004e 00       	 .byte 0
 6734 004f 08       	 .uleb128 0x8
 6735 0050 15       	 .uleb128 0x15
 6736 0051 01       	 .byte 0x1
 6737 0052 01       	 .uleb128 0x1
 6738 0053 13       	 .uleb128 0x13
 6739 0054 00       	 .byte 0
 6740 0055 00       	 .byte 0
 6741 0056 09       	 .uleb128 0x9
 6742 0057 05       	 .uleb128 0x5
 6743 0058 00       	 .byte 0
 6744 0059 49       	 .uleb128 0x49
 6745 005a 13       	 .uleb128 0x13
ARM GAS   			page 153


 6746 005b 00       	 .byte 0
 6747 005c 00       	 .byte 0
 6748 005d 0A       	 .uleb128 0xa
 6749 005e 04       	 .uleb128 0x4
 6750 005f 01       	 .byte 0x1
 6751 0060 3E       	 .uleb128 0x3e
 6752 0061 0B       	 .uleb128 0xb
 6753 0062 0B       	 .uleb128 0xb
 6754 0063 0B       	 .uleb128 0xb
 6755 0064 49       	 .uleb128 0x49
 6756 0065 13       	 .uleb128 0x13
 6757 0066 3A       	 .uleb128 0x3a
 6758 0067 0B       	 .uleb128 0xb
 6759 0068 3B       	 .uleb128 0x3b
 6760 0069 0B       	 .uleb128 0xb
 6761 006a 39       	 .uleb128 0x39
 6762 006b 0B       	 .uleb128 0xb
 6763 006c 6E       	 .uleb128 0x6e
 6764 006d 0E       	 .uleb128 0xe
 6765 006e 01       	 .uleb128 0x1
 6766 006f 13       	 .uleb128 0x13
 6767 0070 00       	 .byte 0
 6768 0071 00       	 .byte 0
 6769 0072 0B       	 .uleb128 0xb
 6770 0073 28       	 .uleb128 0x28
 6771 0074 00       	 .byte 0
 6772 0075 03       	 .uleb128 0x3
 6773 0076 0E       	 .uleb128 0xe
 6774 0077 1C       	 .uleb128 0x1c
 6775 0078 0B       	 .uleb128 0xb
 6776 0079 00       	 .byte 0
 6777 007a 00       	 .byte 0
 6778 007b 0C       	 .uleb128 0xc
 6779 007c 28       	 .uleb128 0x28
 6780 007d 00       	 .byte 0
 6781 007e 03       	 .uleb128 0x3
 6782 007f 0E       	 .uleb128 0xe
 6783 0080 1C       	 .uleb128 0x1c
 6784 0081 0D       	 .uleb128 0xd
 6785 0082 00       	 .byte 0
 6786 0083 00       	 .byte 0
 6787 0084 0D       	 .uleb128 0xd
 6788 0085 28       	 .uleb128 0x28
 6789 0086 00       	 .byte 0
 6790 0087 03       	 .uleb128 0x3
 6791 0088 0E       	 .uleb128 0xe
 6792 0089 1C       	 .uleb128 0x1c
 6793 008a 06       	 .uleb128 0x6
 6794 008b 00       	 .byte 0
 6795 008c 00       	 .byte 0
 6796 008d 0E       	 .uleb128 0xe
 6797 008e 16       	 .uleb128 0x16
 6798 008f 00       	 .byte 0
 6799 0090 03       	 .uleb128 0x3
 6800 0091 0E       	 .uleb128 0xe
 6801 0092 3A       	 .uleb128 0x3a
 6802 0093 0B       	 .uleb128 0xb
ARM GAS   			page 154


 6803 0094 3B       	 .uleb128 0x3b
 6804 0095 05       	 .uleb128 0x5
 6805 0096 39       	 .uleb128 0x39
 6806 0097 0B       	 .uleb128 0xb
 6807 0098 49       	 .uleb128 0x49
 6808 0099 13       	 .uleb128 0x13
 6809 009a 00       	 .byte 0
 6810 009b 00       	 .byte 0
 6811 009c 0F       	 .uleb128 0xf
 6812 009d 04       	 .uleb128 0x4
 6813 009e 01       	 .byte 0x1
 6814 009f 3E       	 .uleb128 0x3e
 6815 00a0 0B       	 .uleb128 0xb
 6816 00a1 0B       	 .uleb128 0xb
 6817 00a2 0B       	 .uleb128 0xb
 6818 00a3 49       	 .uleb128 0x49
 6819 00a4 13       	 .uleb128 0x13
 6820 00a5 3A       	 .uleb128 0x3a
 6821 00a6 0B       	 .uleb128 0xb
 6822 00a7 3B       	 .uleb128 0x3b
 6823 00a8 05       	 .uleb128 0x5
 6824 00a9 39       	 .uleb128 0x39
 6825 00aa 0B       	 .uleb128 0xb
 6826 00ab 6E       	 .uleb128 0x6e
 6827 00ac 0E       	 .uleb128 0xe
 6828 00ad 01       	 .uleb128 0x1
 6829 00ae 13       	 .uleb128 0x13
 6830 00af 00       	 .byte 0
 6831 00b0 00       	 .byte 0
 6832 00b1 10       	 .uleb128 0x10
 6833 00b2 26       	 .uleb128 0x26
 6834 00b3 00       	 .byte 0
 6835 00b4 00       	 .byte 0
 6836 00b5 00       	 .byte 0
 6837 00b6 11       	 .uleb128 0x11
 6838 00b7 13       	 .uleb128 0x13
 6839 00b8 01       	 .byte 0x1
 6840 00b9 03       	 .uleb128 0x3
 6841 00ba 0E       	 .uleb128 0xe
 6842 00bb 0B       	 .uleb128 0xb
 6843 00bc 0B       	 .uleb128 0xb
 6844 00bd 3A       	 .uleb128 0x3a
 6845 00be 0B       	 .uleb128 0xb
 6846 00bf 3B       	 .uleb128 0x3b
 6847 00c0 05       	 .uleb128 0x5
 6848 00c1 39       	 .uleb128 0x39
 6849 00c2 0B       	 .uleb128 0xb
 6850 00c3 01       	 .uleb128 0x1
 6851 00c4 13       	 .uleb128 0x13
 6852 00c5 00       	 .byte 0
 6853 00c6 00       	 .byte 0
 6854 00c7 12       	 .uleb128 0x12
 6855 00c8 0D       	 .uleb128 0xd
 6856 00c9 00       	 .byte 0
 6857 00ca 03       	 .uleb128 0x3
 6858 00cb 0E       	 .uleb128 0xe
 6859 00cc 3A       	 .uleb128 0x3a
ARM GAS   			page 155


 6860 00cd 0B       	 .uleb128 0xb
 6861 00ce 3B       	 .uleb128 0x3b
 6862 00cf 05       	 .uleb128 0x5
 6863 00d0 39       	 .uleb128 0x39
 6864 00d1 0B       	 .uleb128 0xb
 6865 00d2 49       	 .uleb128 0x49
 6866 00d3 13       	 .uleb128 0x13
 6867 00d4 38       	 .uleb128 0x38
 6868 00d5 0B       	 .uleb128 0xb
 6869 00d6 00       	 .byte 0
 6870 00d7 00       	 .byte 0
 6871 00d8 13       	 .uleb128 0x13
 6872 00d9 26       	 .uleb128 0x26
 6873 00da 00       	 .byte 0
 6874 00db 49       	 .uleb128 0x49
 6875 00dc 13       	 .uleb128 0x13
 6876 00dd 00       	 .byte 0
 6877 00de 00       	 .byte 0
 6878 00df 14       	 .uleb128 0x14
 6879 00e0 0D       	 .uleb128 0xd
 6880 00e1 00       	 .byte 0
 6881 00e2 03       	 .uleb128 0x3
 6882 00e3 08       	 .uleb128 0x8
 6883 00e4 3A       	 .uleb128 0x3a
 6884 00e5 0B       	 .uleb128 0xb
 6885 00e6 3B       	 .uleb128 0x3b
 6886 00e7 05       	 .uleb128 0x5
 6887 00e8 39       	 .uleb128 0x39
 6888 00e9 0B       	 .uleb128 0xb
 6889 00ea 49       	 .uleb128 0x49
 6890 00eb 13       	 .uleb128 0x13
 6891 00ec 38       	 .uleb128 0x38
 6892 00ed 0B       	 .uleb128 0xb
 6893 00ee 00       	 .byte 0
 6894 00ef 00       	 .byte 0
 6895 00f0 15       	 .uleb128 0x15
 6896 00f1 13       	 .uleb128 0x13
 6897 00f2 01       	 .byte 0x1
 6898 00f3 0B       	 .uleb128 0xb
 6899 00f4 0B       	 .uleb128 0xb
 6900 00f5 3A       	 .uleb128 0x3a
 6901 00f6 0B       	 .uleb128 0xb
 6902 00f7 3B       	 .uleb128 0x3b
 6903 00f8 05       	 .uleb128 0x5
 6904 00f9 39       	 .uleb128 0x39
 6905 00fa 0B       	 .uleb128 0xb
 6906 00fb 6E       	 .uleb128 0x6e
 6907 00fc 0E       	 .uleb128 0xe
 6908 00fd 01       	 .uleb128 0x1
 6909 00fe 13       	 .uleb128 0x13
 6910 00ff 00       	 .byte 0
 6911 0100 00       	 .byte 0
 6912 0101 16       	 .uleb128 0x16
 6913 0102 17       	 .uleb128 0x17
 6914 0103 01       	 .byte 0x1
 6915 0104 0B       	 .uleb128 0xb
 6916 0105 0B       	 .uleb128 0xb
ARM GAS   			page 156


 6917 0106 3A       	 .uleb128 0x3a
 6918 0107 0B       	 .uleb128 0xb
 6919 0108 3B       	 .uleb128 0x3b
 6920 0109 05       	 .uleb128 0x5
 6921 010a 39       	 .uleb128 0x39
 6922 010b 0B       	 .uleb128 0xb
 6923 010c 01       	 .uleb128 0x1
 6924 010d 13       	 .uleb128 0x13
 6925 010e 00       	 .byte 0
 6926 010f 00       	 .byte 0
 6927 0110 17       	 .uleb128 0x17
 6928 0111 0D       	 .uleb128 0xd
 6929 0112 00       	 .byte 0
 6930 0113 03       	 .uleb128 0x3
 6931 0114 08       	 .uleb128 0x8
 6932 0115 3A       	 .uleb128 0x3a
 6933 0116 0B       	 .uleb128 0xb
 6934 0117 3B       	 .uleb128 0x3b
 6935 0118 05       	 .uleb128 0x5
 6936 0119 39       	 .uleb128 0x39
 6937 011a 0B       	 .uleb128 0xb
 6938 011b 49       	 .uleb128 0x49
 6939 011c 13       	 .uleb128 0x13
 6940 011d 00       	 .byte 0
 6941 011e 00       	 .byte 0
 6942 011f 18       	 .uleb128 0x18
 6943 0120 0D       	 .uleb128 0xd
 6944 0121 00       	 .byte 0
 6945 0122 03       	 .uleb128 0x3
 6946 0123 0E       	 .uleb128 0xe
 6947 0124 3A       	 .uleb128 0x3a
 6948 0125 0B       	 .uleb128 0xb
 6949 0126 3B       	 .uleb128 0x3b
 6950 0127 05       	 .uleb128 0x5
 6951 0128 39       	 .uleb128 0x39
 6952 0129 0B       	 .uleb128 0xb
 6953 012a 49       	 .uleb128 0x49
 6954 012b 13       	 .uleb128 0x13
 6955 012c 00       	 .byte 0
 6956 012d 00       	 .byte 0
 6957 012e 19       	 .uleb128 0x19
 6958 012f 2E       	 .uleb128 0x2e
 6959 0130 01       	 .byte 0x1
 6960 0131 3F       	 .uleb128 0x3f
 6961 0132 19       	 .uleb128 0x19
 6962 0133 03       	 .uleb128 0x3
 6963 0134 0E       	 .uleb128 0xe
 6964 0135 3A       	 .uleb128 0x3a
 6965 0136 0B       	 .uleb128 0xb
 6966 0137 3B       	 .uleb128 0x3b
 6967 0138 05       	 .uleb128 0x5
 6968 0139 39       	 .uleb128 0x39
 6969 013a 0B       	 .uleb128 0xb
 6970 013b 49       	 .uleb128 0x49
 6971 013c 13       	 .uleb128 0x13
 6972 013d 11       	 .uleb128 0x11
 6973 013e 01       	 .uleb128 0x1
ARM GAS   			page 157


 6974 013f 12       	 .uleb128 0x12
 6975 0140 06       	 .uleb128 0x6
 6976 0141 40       	 .uleb128 0x40
 6977 0142 18       	 .uleb128 0x18
 6978 0143 9642     	 .uleb128 0x2116
 6979 0145 19       	 .uleb128 0x19
 6980 0146 01       	 .uleb128 0x1
 6981 0147 13       	 .uleb128 0x13
 6982 0148 00       	 .byte 0
 6983 0149 00       	 .byte 0
 6984 014a 1A       	 .uleb128 0x1a
 6985 014b 05       	 .uleb128 0x5
 6986 014c 00       	 .byte 0
 6987 014d 03       	 .uleb128 0x3
 6988 014e 0E       	 .uleb128 0xe
 6989 014f 3A       	 .uleb128 0x3a
 6990 0150 0B       	 .uleb128 0xb
 6991 0151 3B       	 .uleb128 0x3b
 6992 0152 05       	 .uleb128 0x5
 6993 0153 39       	 .uleb128 0x39
 6994 0154 0B       	 .uleb128 0xb
 6995 0155 49       	 .uleb128 0x49
 6996 0156 13       	 .uleb128 0x13
 6997 0157 02       	 .uleb128 0x2
 6998 0158 18       	 .uleb128 0x18
 6999 0159 00       	 .byte 0
 7000 015a 00       	 .byte 0
 7001 015b 1B       	 .uleb128 0x1b
 7002 015c 34       	 .uleb128 0x34
 7003 015d 00       	 .byte 0
 7004 015e 03       	 .uleb128 0x3
 7005 015f 0E       	 .uleb128 0xe
 7006 0160 3A       	 .uleb128 0x3a
 7007 0161 0B       	 .uleb128 0xb
 7008 0162 3B       	 .uleb128 0x3b
 7009 0163 05       	 .uleb128 0x5
 7010 0164 39       	 .uleb128 0x39
 7011 0165 0B       	 .uleb128 0xb
 7012 0166 49       	 .uleb128 0x49
 7013 0167 13       	 .uleb128 0x13
 7014 0168 02       	 .uleb128 0x2
 7015 0169 18       	 .uleb128 0x18
 7016 016a 00       	 .byte 0
 7017 016b 00       	 .byte 0
 7018 016c 1C       	 .uleb128 0x1c
 7019 016d 2E       	 .uleb128 0x2e
 7020 016e 01       	 .byte 0x1
 7021 016f 3F       	 .uleb128 0x3f
 7022 0170 19       	 .uleb128 0x19
 7023 0171 03       	 .uleb128 0x3
 7024 0172 0E       	 .uleb128 0xe
 7025 0173 3A       	 .uleb128 0x3a
 7026 0174 0B       	 .uleb128 0xb
 7027 0175 3B       	 .uleb128 0x3b
 7028 0176 05       	 .uleb128 0x5
 7029 0177 39       	 .uleb128 0x39
 7030 0178 0B       	 .uleb128 0xb
ARM GAS   			page 158


 7031 0179 49       	 .uleb128 0x49
 7032 017a 13       	 .uleb128 0x13
 7033 017b 11       	 .uleb128 0x11
 7034 017c 01       	 .uleb128 0x1
 7035 017d 12       	 .uleb128 0x12
 7036 017e 06       	 .uleb128 0x6
 7037 017f 40       	 .uleb128 0x40
 7038 0180 18       	 .uleb128 0x18
 7039 0181 9742     	 .uleb128 0x2117
 7040 0183 19       	 .uleb128 0x19
 7041 0184 01       	 .uleb128 0x1
 7042 0185 13       	 .uleb128 0x13
 7043 0186 00       	 .byte 0
 7044 0187 00       	 .byte 0
 7045 0188 1D       	 .uleb128 0x1d
 7046 0189 2E       	 .uleb128 0x2e
 7047 018a 00       	 .byte 0
 7048 018b 3F       	 .uleb128 0x3f
 7049 018c 19       	 .uleb128 0x19
 7050 018d 03       	 .uleb128 0x3
 7051 018e 0E       	 .uleb128 0xe
 7052 018f 3A       	 .uleb128 0x3a
 7053 0190 0B       	 .uleb128 0xb
 7054 0191 3B       	 .uleb128 0x3b
 7055 0192 05       	 .uleb128 0x5
 7056 0193 39       	 .uleb128 0x39
 7057 0194 0B       	 .uleb128 0xb
 7058 0195 49       	 .uleb128 0x49
 7059 0196 13       	 .uleb128 0x13
 7060 0197 11       	 .uleb128 0x11
 7061 0198 01       	 .uleb128 0x1
 7062 0199 12       	 .uleb128 0x12
 7063 019a 06       	 .uleb128 0x6
 7064 019b 40       	 .uleb128 0x40
 7065 019c 18       	 .uleb128 0x18
 7066 019d 9642     	 .uleb128 0x2116
 7067 019f 19       	 .uleb128 0x19
 7068 01a0 00       	 .byte 0
 7069 01a1 00       	 .byte 0
 7070 01a2 1E       	 .uleb128 0x1e
 7071 01a3 2E       	 .uleb128 0x2e
 7072 01a4 00       	 .byte 0
 7073 01a5 3F       	 .uleb128 0x3f
 7074 01a6 19       	 .uleb128 0x19
 7075 01a7 03       	 .uleb128 0x3
 7076 01a8 0E       	 .uleb128 0xe
 7077 01a9 3A       	 .uleb128 0x3a
 7078 01aa 0B       	 .uleb128 0xb
 7079 01ab 3B       	 .uleb128 0x3b
 7080 01ac 05       	 .uleb128 0x5
 7081 01ad 39       	 .uleb128 0x39
 7082 01ae 0B       	 .uleb128 0xb
 7083 01af 11       	 .uleb128 0x11
 7084 01b0 01       	 .uleb128 0x1
 7085 01b1 12       	 .uleb128 0x12
 7086 01b2 06       	 .uleb128 0x6
 7087 01b3 40       	 .uleb128 0x40
ARM GAS   			page 159


 7088 01b4 18       	 .uleb128 0x18
 7089 01b5 9642     	 .uleb128 0x2116
 7090 01b7 19       	 .uleb128 0x19
 7091 01b8 00       	 .byte 0
 7092 01b9 00       	 .byte 0
 7093 01ba 1F       	 .uleb128 0x1f
 7094 01bb 34       	 .uleb128 0x34
 7095 01bc 00       	 .byte 0
 7096 01bd 03       	 .uleb128 0x3
 7097 01be 08       	 .uleb128 0x8
 7098 01bf 3A       	 .uleb128 0x3a
 7099 01c0 0B       	 .uleb128 0xb
 7100 01c1 3B       	 .uleb128 0x3b
 7101 01c2 05       	 .uleb128 0x5
 7102 01c3 39       	 .uleb128 0x39
 7103 01c4 0B       	 .uleb128 0xb
 7104 01c5 49       	 .uleb128 0x49
 7105 01c6 13       	 .uleb128 0x13
 7106 01c7 02       	 .uleb128 0x2
 7107 01c8 18       	 .uleb128 0x18
 7108 01c9 00       	 .byte 0
 7109 01ca 00       	 .byte 0
 7110 01cb 20       	 .uleb128 0x20
 7111 01cc 1D       	 .uleb128 0x1d
 7112 01cd 01       	 .byte 0x1
 7113 01ce 31       	 .uleb128 0x31
 7114 01cf 13       	 .uleb128 0x13
 7115 01d0 11       	 .uleb128 0x11
 7116 01d1 01       	 .uleb128 0x1
 7117 01d2 12       	 .uleb128 0x12
 7118 01d3 06       	 .uleb128 0x6
 7119 01d4 58       	 .uleb128 0x58
 7120 01d5 0B       	 .uleb128 0xb
 7121 01d6 59       	 .uleb128 0x59
 7122 01d7 05       	 .uleb128 0x5
 7123 01d8 57       	 .uleb128 0x57
 7124 01d9 0B       	 .uleb128 0xb
 7125 01da 01       	 .uleb128 0x1
 7126 01db 13       	 .uleb128 0x13
 7127 01dc 00       	 .byte 0
 7128 01dd 00       	 .byte 0
 7129 01de 21       	 .uleb128 0x21
 7130 01df 34       	 .uleb128 0x34
 7131 01e0 00       	 .byte 0
 7132 01e1 31       	 .uleb128 0x31
 7133 01e2 13       	 .uleb128 0x13
 7134 01e3 02       	 .uleb128 0x2
 7135 01e4 18       	 .uleb128 0x18
 7136 01e5 00       	 .byte 0
 7137 01e6 00       	 .byte 0
 7138 01e7 22       	 .uleb128 0x22
 7139 01e8 1D       	 .uleb128 0x1d
 7140 01e9 01       	 .byte 0x1
 7141 01ea 31       	 .uleb128 0x31
 7142 01eb 13       	 .uleb128 0x13
 7143 01ec 11       	 .uleb128 0x11
 7144 01ed 01       	 .uleb128 0x1
ARM GAS   			page 160


 7145 01ee 12       	 .uleb128 0x12
 7146 01ef 06       	 .uleb128 0x6
 7147 01f0 58       	 .uleb128 0x58
 7148 01f1 0B       	 .uleb128 0xb
 7149 01f2 59       	 .uleb128 0x59
 7150 01f3 05       	 .uleb128 0x5
 7151 01f4 57       	 .uleb128 0x57
 7152 01f5 0B       	 .uleb128 0xb
 7153 01f6 00       	 .byte 0
 7154 01f7 00       	 .byte 0
 7155 01f8 23       	 .uleb128 0x23
 7156 01f9 05       	 .uleb128 0x5
 7157 01fa 00       	 .byte 0
 7158 01fb 31       	 .uleb128 0x31
 7159 01fc 13       	 .uleb128 0x13
 7160 01fd 02       	 .uleb128 0x2
 7161 01fe 18       	 .uleb128 0x18
 7162 01ff 00       	 .byte 0
 7163 0200 00       	 .byte 0
 7164 0201 24       	 .uleb128 0x24
 7165 0202 2E       	 .uleb128 0x2e
 7166 0203 00       	 .byte 0
 7167 0204 3F       	 .uleb128 0x3f
 7168 0205 19       	 .uleb128 0x19
 7169 0206 03       	 .uleb128 0x3
 7170 0207 0E       	 .uleb128 0xe
 7171 0208 3A       	 .uleb128 0x3a
 7172 0209 0B       	 .uleb128 0xb
 7173 020a 3B       	 .uleb128 0x3b
 7174 020b 0B       	 .uleb128 0xb
 7175 020c 39       	 .uleb128 0x39
 7176 020d 0B       	 .uleb128 0xb
 7177 020e 49       	 .uleb128 0x49
 7178 020f 13       	 .uleb128 0x13
 7179 0210 11       	 .uleb128 0x11
 7180 0211 01       	 .uleb128 0x1
 7181 0212 12       	 .uleb128 0x12
 7182 0213 06       	 .uleb128 0x6
 7183 0214 40       	 .uleb128 0x40
 7184 0215 18       	 .uleb128 0x18
 7185 0216 9742     	 .uleb128 0x2117
 7186 0218 19       	 .uleb128 0x19
 7187 0219 00       	 .byte 0
 7188 021a 00       	 .byte 0
 7189 021b 25       	 .uleb128 0x25
 7190 021c 2E       	 .uleb128 0x2e
 7191 021d 01       	 .byte 0x1
 7192 021e 3F       	 .uleb128 0x3f
 7193 021f 19       	 .uleb128 0x19
 7194 0220 03       	 .uleb128 0x3
 7195 0221 0E       	 .uleb128 0xe
 7196 0222 3A       	 .uleb128 0x3a
 7197 0223 0B       	 .uleb128 0xb
 7198 0224 3B       	 .uleb128 0x3b
 7199 0225 0B       	 .uleb128 0xb
 7200 0226 39       	 .uleb128 0x39
 7201 0227 0B       	 .uleb128 0xb
ARM GAS   			page 161


 7202 0228 49       	 .uleb128 0x49
 7203 0229 13       	 .uleb128 0x13
 7204 022a 11       	 .uleb128 0x11
 7205 022b 01       	 .uleb128 0x1
 7206 022c 12       	 .uleb128 0x12
 7207 022d 06       	 .uleb128 0x6
 7208 022e 40       	 .uleb128 0x40
 7209 022f 18       	 .uleb128 0x18
 7210 0230 9742     	 .uleb128 0x2117
 7211 0232 19       	 .uleb128 0x19
 7212 0233 01       	 .uleb128 0x1
 7213 0234 13       	 .uleb128 0x13
 7214 0235 00       	 .byte 0
 7215 0236 00       	 .byte 0
 7216 0237 26       	 .uleb128 0x26
 7217 0238 05       	 .uleb128 0x5
 7218 0239 00       	 .byte 0
 7219 023a 03       	 .uleb128 0x3
 7220 023b 0E       	 .uleb128 0xe
 7221 023c 3A       	 .uleb128 0x3a
 7222 023d 0B       	 .uleb128 0xb
 7223 023e 3B       	 .uleb128 0x3b
 7224 023f 0B       	 .uleb128 0xb
 7225 0240 39       	 .uleb128 0x39
 7226 0241 0B       	 .uleb128 0xb
 7227 0242 49       	 .uleb128 0x49
 7228 0243 13       	 .uleb128 0x13
 7229 0244 02       	 .uleb128 0x2
 7230 0245 18       	 .uleb128 0x18
 7231 0246 00       	 .byte 0
 7232 0247 00       	 .byte 0
 7233 0248 27       	 .uleb128 0x27
 7234 0249 2E       	 .uleb128 0x2e
 7235 024a 00       	 .byte 0
 7236 024b 3F       	 .uleb128 0x3f
 7237 024c 19       	 .uleb128 0x19
 7238 024d 03       	 .uleb128 0x3
 7239 024e 0E       	 .uleb128 0xe
 7240 024f 3A       	 .uleb128 0x3a
 7241 0250 0B       	 .uleb128 0xb
 7242 0251 3B       	 .uleb128 0x3b
 7243 0252 0B       	 .uleb128 0xb
 7244 0253 39       	 .uleb128 0x39
 7245 0254 0B       	 .uleb128 0xb
 7246 0255 49       	 .uleb128 0x49
 7247 0256 13       	 .uleb128 0x13
 7248 0257 11       	 .uleb128 0x11
 7249 0258 01       	 .uleb128 0x1
 7250 0259 12       	 .uleb128 0x12
 7251 025a 06       	 .uleb128 0x6
 7252 025b 40       	 .uleb128 0x40
 7253 025c 18       	 .uleb128 0x18
 7254 025d 9642     	 .uleb128 0x2116
 7255 025f 19       	 .uleb128 0x19
 7256 0260 00       	 .byte 0
 7257 0261 00       	 .byte 0
 7258 0262 28       	 .uleb128 0x28
ARM GAS   			page 162


 7259 0263 2E       	 .uleb128 0x2e
 7260 0264 01       	 .byte 0x1
 7261 0265 3F       	 .uleb128 0x3f
 7262 0266 19       	 .uleb128 0x19
 7263 0267 03       	 .uleb128 0x3
 7264 0268 0E       	 .uleb128 0xe
 7265 0269 3A       	 .uleb128 0x3a
 7266 026a 0B       	 .uleb128 0xb
 7267 026b 3B       	 .uleb128 0x3b
 7268 026c 0B       	 .uleb128 0xb
 7269 026d 39       	 .uleb128 0x39
 7270 026e 0B       	 .uleb128 0xb
 7271 026f 49       	 .uleb128 0x49
 7272 0270 13       	 .uleb128 0x13
 7273 0271 11       	 .uleb128 0x11
 7274 0272 01       	 .uleb128 0x1
 7275 0273 12       	 .uleb128 0x12
 7276 0274 06       	 .uleb128 0x6
 7277 0275 40       	 .uleb128 0x40
 7278 0276 18       	 .uleb128 0x18
 7279 0277 9642     	 .uleb128 0x2116
 7280 0279 19       	 .uleb128 0x19
 7281 027a 01       	 .uleb128 0x1
 7282 027b 13       	 .uleb128 0x13
 7283 027c 00       	 .byte 0
 7284 027d 00       	 .byte 0
 7285 027e 29       	 .uleb128 0x29
 7286 027f 34       	 .uleb128 0x34
 7287 0280 00       	 .byte 0
 7288 0281 03       	 .uleb128 0x3
 7289 0282 0E       	 .uleb128 0xe
 7290 0283 3A       	 .uleb128 0x3a
 7291 0284 0B       	 .uleb128 0xb
 7292 0285 3B       	 .uleb128 0x3b
 7293 0286 0B       	 .uleb128 0xb
 7294 0287 39       	 .uleb128 0x39
 7295 0288 0B       	 .uleb128 0xb
 7296 0289 49       	 .uleb128 0x49
 7297 028a 13       	 .uleb128 0x13
 7298 028b 02       	 .uleb128 0x2
 7299 028c 18       	 .uleb128 0x18
 7300 028d 00       	 .byte 0
 7301 028e 00       	 .byte 0
 7302 028f 2A       	 .uleb128 0x2a
 7303 0290 2E       	 .uleb128 0x2e
 7304 0291 01       	 .byte 0x1
 7305 0292 03       	 .uleb128 0x3
 7306 0293 0E       	 .uleb128 0xe
 7307 0294 3A       	 .uleb128 0x3a
 7308 0295 0B       	 .uleb128 0xb
 7309 0296 3B       	 .uleb128 0x3b
 7310 0297 0B       	 .uleb128 0xb
 7311 0298 39       	 .uleb128 0x39
 7312 0299 0B       	 .uleb128 0xb
 7313 029a 49       	 .uleb128 0x49
 7314 029b 13       	 .uleb128 0x13
 7315 029c 11       	 .uleb128 0x11
ARM GAS   			page 163


 7316 029d 01       	 .uleb128 0x1
 7317 029e 12       	 .uleb128 0x12
 7318 029f 06       	 .uleb128 0x6
 7319 02a0 40       	 .uleb128 0x40
 7320 02a1 18       	 .uleb128 0x18
 7321 02a2 9742     	 .uleb128 0x2117
 7322 02a4 19       	 .uleb128 0x19
 7323 02a5 01       	 .uleb128 0x1
 7324 02a6 13       	 .uleb128 0x13
 7325 02a7 00       	 .byte 0
 7326 02a8 00       	 .byte 0
 7327 02a9 2B       	 .uleb128 0x2b
 7328 02aa 1D       	 .uleb128 0x1d
 7329 02ab 01       	 .byte 0x1
 7330 02ac 31       	 .uleb128 0x31
 7331 02ad 13       	 .uleb128 0x13
 7332 02ae 11       	 .uleb128 0x11
 7333 02af 01       	 .uleb128 0x1
 7334 02b0 12       	 .uleb128 0x12
 7335 02b1 06       	 .uleb128 0x6
 7336 02b2 58       	 .uleb128 0x58
 7337 02b3 0B       	 .uleb128 0xb
 7338 02b4 59       	 .uleb128 0x59
 7339 02b5 0B       	 .uleb128 0xb
 7340 02b6 57       	 .uleb128 0x57
 7341 02b7 0B       	 .uleb128 0xb
 7342 02b8 00       	 .byte 0
 7343 02b9 00       	 .byte 0
 7344 02ba 2C       	 .uleb128 0x2c
 7345 02bb 2E       	 .uleb128 0x2e
 7346 02bc 01       	 .byte 0x1
 7347 02bd 03       	 .uleb128 0x3
 7348 02be 0E       	 .uleb128 0xe
 7349 02bf 3A       	 .uleb128 0x3a
 7350 02c0 0B       	 .uleb128 0xb
 7351 02c1 3B       	 .uleb128 0x3b
 7352 02c2 0B       	 .uleb128 0xb
 7353 02c3 39       	 .uleb128 0x39
 7354 02c4 0B       	 .uleb128 0xb
 7355 02c5 20       	 .uleb128 0x20
 7356 02c6 0B       	 .uleb128 0xb
 7357 02c7 01       	 .uleb128 0x1
 7358 02c8 13       	 .uleb128 0x13
 7359 02c9 00       	 .byte 0
 7360 02ca 00       	 .byte 0
 7361 02cb 2D       	 .uleb128 0x2d
 7362 02cc 05       	 .uleb128 0x5
 7363 02cd 00       	 .byte 0
 7364 02ce 03       	 .uleb128 0x3
 7365 02cf 0E       	 .uleb128 0xe
 7366 02d0 3A       	 .uleb128 0x3a
 7367 02d1 0B       	 .uleb128 0xb
 7368 02d2 3B       	 .uleb128 0x3b
 7369 02d3 0B       	 .uleb128 0xb
 7370 02d4 39       	 .uleb128 0x39
 7371 02d5 0B       	 .uleb128 0xb
 7372 02d6 49       	 .uleb128 0x49
ARM GAS   			page 164


 7373 02d7 13       	 .uleb128 0x13
 7374 02d8 00       	 .byte 0
 7375 02d9 00       	 .byte 0
 7376 02da 2E       	 .uleb128 0x2e
 7377 02db 2E       	 .uleb128 0x2e
 7378 02dc 01       	 .byte 0x1
 7379 02dd 03       	 .uleb128 0x3
 7380 02de 0E       	 .uleb128 0xe
 7381 02df 3A       	 .uleb128 0x3a
 7382 02e0 0B       	 .uleb128 0xb
 7383 02e1 3B       	 .uleb128 0x3b
 7384 02e2 0B       	 .uleb128 0xb
 7385 02e3 39       	 .uleb128 0x39
 7386 02e4 0B       	 .uleb128 0xb
 7387 02e5 49       	 .uleb128 0x49
 7388 02e6 13       	 .uleb128 0x13
 7389 02e7 20       	 .uleb128 0x20
 7390 02e8 0B       	 .uleb128 0xb
 7391 02e9 01       	 .uleb128 0x1
 7392 02ea 13       	 .uleb128 0x13
 7393 02eb 00       	 .byte 0
 7394 02ec 00       	 .byte 0
 7395 02ed 2F       	 .uleb128 0x2f
 7396 02ee 34       	 .uleb128 0x34
 7397 02ef 00       	 .byte 0
 7398 02f0 03       	 .uleb128 0x3
 7399 02f1 0E       	 .uleb128 0xe
 7400 02f2 3A       	 .uleb128 0x3a
 7401 02f3 0B       	 .uleb128 0xb
 7402 02f4 3B       	 .uleb128 0x3b
 7403 02f5 0B       	 .uleb128 0xb
 7404 02f6 39       	 .uleb128 0x39
 7405 02f7 0B       	 .uleb128 0xb
 7406 02f8 49       	 .uleb128 0x49
 7407 02f9 13       	 .uleb128 0x13
 7408 02fa 00       	 .byte 0
 7409 02fb 00       	 .byte 0
 7410 02fc 30       	 .uleb128 0x30
 7411 02fd 2E       	 .uleb128 0x2e
 7412 02fe 01       	 .byte 0x1
 7413 02ff 03       	 .uleb128 0x3
 7414 0300 0E       	 .uleb128 0xe
 7415 0301 3A       	 .uleb128 0x3a
 7416 0302 0B       	 .uleb128 0xb
 7417 0303 3B       	 .uleb128 0x3b
 7418 0304 0B       	 .uleb128 0xb
 7419 0305 39       	 .uleb128 0x39
 7420 0306 0B       	 .uleb128 0xb
 7421 0307 49       	 .uleb128 0x49
 7422 0308 13       	 .uleb128 0x13
 7423 0309 20       	 .uleb128 0x20
 7424 030a 0B       	 .uleb128 0xb
 7425 030b 00       	 .byte 0
 7426 030c 00       	 .byte 0
 7427 030d 00       	 .byte 0
 7428              	 .section .debug_aranges,"",%progbits
 7429 0000 AC010000 	 .4byte 0x1ac
ARM GAS   			page 165


 7430 0004 0200     	 .2byte 0x2
 7431 0006 00000000 	 .4byte .Ldebug_info0
 7432 000a 04       	 .byte 0x4
 7433 000b 00       	 .byte 0
 7434 000c 0000     	 .2byte 0
 7435 000e 0000     	 .2byte 0
 7436 0010 00000000 	 .4byte .LFB29
 7437 0014 30000000 	 .4byte .LFE29-.LFB29
 7438 0018 00000000 	 .4byte .LFB30
 7439 001c 2C000000 	 .4byte .LFE30-.LFB30
 7440 0020 00000000 	 .4byte .LFB31
 7441 0024 24000000 	 .4byte .LFE31-.LFB31
 7442 0028 00000000 	 .4byte .LFB32
 7443 002c 0E000000 	 .4byte .LFE32-.LFB32
 7444 0030 00000000 	 .4byte .LFB33
 7445 0034 22000000 	 .4byte .LFE33-.LFB33
 7446 0038 00000000 	 .4byte .LFB34
 7447 003c 2C000000 	 .4byte .LFE34-.LFB34
 7448 0040 00000000 	 .4byte .LFB35
 7449 0044 60000000 	 .4byte .LFE35-.LFB35
 7450 0048 00000000 	 .4byte .LFB36
 7451 004c 0E000000 	 .4byte .LFE36-.LFB36
 7452 0050 00000000 	 .4byte .LFB37
 7453 0054 16000000 	 .4byte .LFE37-.LFB37
 7454 0058 00000000 	 .4byte .LFB38
 7455 005c 24000000 	 .4byte .LFE38-.LFB38
 7456 0060 00000000 	 .4byte .LFB39
 7457 0064 2A000000 	 .4byte .LFE39-.LFB39
 7458 0068 00000000 	 .4byte .LFB40
 7459 006c 48000000 	 .4byte .LFE40-.LFB40
 7460 0070 00000000 	 .4byte .LFB41
 7461 0074 28000000 	 .4byte .LFE41-.LFB41
 7462 0078 00000000 	 .4byte .LFB42
 7463 007c 1C000000 	 .4byte .LFE42-.LFB42
 7464 0080 00000000 	 .4byte .LFB43
 7465 0084 20000000 	 .4byte .LFE43-.LFB43
 7466 0088 00000000 	 .4byte .LFB44
 7467 008c 1E000000 	 .4byte .LFE44-.LFB44
 7468 0090 00000000 	 .4byte .LFB45
 7469 0094 1E000000 	 .4byte .LFE45-.LFB45
 7470 0098 00000000 	 .4byte .LFB46
 7471 009c 90000000 	 .4byte .LFE46-.LFB46
 7472 00a0 00000000 	 .4byte .LFB47
 7473 00a4 AA000000 	 .4byte .LFE47-.LFB47
 7474 00a8 00000000 	 .4byte .LFB48
 7475 00ac 18000000 	 .4byte .LFE48-.LFB48
 7476 00b0 00000000 	 .4byte .LFB49
 7477 00b4 BC000000 	 .4byte .LFE49-.LFB49
 7478 00b8 00000000 	 .4byte .LFB50
 7479 00bc 8C000000 	 .4byte .LFE50-.LFB50
 7480 00c0 00000000 	 .4byte .LFB51
 7481 00c4 30000000 	 .4byte .LFE51-.LFB51
 7482 00c8 00000000 	 .4byte .LFB52
 7483 00cc 4A000000 	 .4byte .LFE52-.LFB52
 7484 00d0 00000000 	 .4byte .LFB53
 7485 00d4 BC000000 	 .4byte .LFE53-.LFB53
 7486 00d8 00000000 	 .4byte .LFB54
ARM GAS   			page 166


 7487 00dc 8C000000 	 .4byte .LFE54-.LFB54
 7488 00e0 00000000 	 .4byte .LFB55
 7489 00e4 30000000 	 .4byte .LFE55-.LFB55
 7490 00e8 00000000 	 .4byte .LFB56
 7491 00ec BA000000 	 .4byte .LFE56-.LFB56
 7492 00f0 00000000 	 .4byte .LFB57
 7493 00f4 D8000000 	 .4byte .LFE57-.LFB57
 7494 00f8 00000000 	 .4byte .LFB58
 7495 00fc 2C000000 	 .4byte .LFE58-.LFB58
 7496 0100 00000000 	 .4byte .LFB59
 7497 0104 82000000 	 .4byte .LFE59-.LFB59
 7498 0108 00000000 	 .4byte .LFB60
 7499 010c 24000000 	 .4byte .LFE60-.LFB60
 7500 0110 00000000 	 .4byte .LFB61
 7501 0114 A0000000 	 .4byte .LFE61-.LFB61
 7502 0118 00000000 	 .4byte .LFB62
 7503 011c F0000000 	 .4byte .LFE62-.LFB62
 7504 0120 00000000 	 .4byte .LFB63
 7505 0124 B8000000 	 .4byte .LFE63-.LFB63
 7506 0128 00000000 	 .4byte .LFB64
 7507 012c 2C000000 	 .4byte .LFE64-.LFB64
 7508 0130 00000000 	 .4byte .LFB65
 7509 0134 42000000 	 .4byte .LFE65-.LFB65
 7510 0138 00000000 	 .4byte .LFB66
 7511 013c 98000000 	 .4byte .LFE66-.LFB66
 7512 0140 00000000 	 .4byte .LFB67
 7513 0144 F0000000 	 .4byte .LFE67-.LFB67
 7514 0148 00000000 	 .4byte .LFB68
 7515 014c 2C000000 	 .4byte .LFE68-.LFB68
 7516 0150 00000000 	 .4byte .LFB69
 7517 0154 20000000 	 .4byte .LFE69-.LFB69
 7518 0158 00000000 	 .4byte .LFB70
 7519 015c 18000000 	 .4byte .LFE70-.LFB70
 7520 0160 00000000 	 .4byte .LFB71
 7521 0164 58000000 	 .4byte .LFE71-.LFB71
 7522 0168 00000000 	 .4byte .LFB72
 7523 016c 0E000000 	 .4byte .LFE72-.LFB72
 7524 0170 00000000 	 .4byte .LFB73
 7525 0174 22000000 	 .4byte .LFE73-.LFB73
 7526 0178 00000000 	 .4byte .LFB74
 7527 017c 18000000 	 .4byte .LFE74-.LFB74
 7528 0180 00000000 	 .4byte .LFB75
 7529 0184 16000000 	 .4byte .LFE75-.LFB75
 7530 0188 00000000 	 .4byte .LFB76
 7531 018c 88000000 	 .4byte .LFE76-.LFB76
 7532 0190 00000000 	 .4byte .LFB77
 7533 0194 18000000 	 .4byte .LFE77-.LFB77
 7534 0198 00000000 	 .4byte .LFB78
 7535 019c 30000000 	 .4byte .LFE78-.LFB78
 7536 01a0 00000000 	 .4byte .LFB79
 7537 01a4 62000000 	 .4byte .LFE79-.LFB79
 7538 01a8 00000000 	 .4byte 0
 7539 01ac 00000000 	 .4byte 0
 7540              	 .section .debug_ranges,"",%progbits
 7541              	.Ldebug_ranges0:
 7542 0000 00000000 	 .4byte .LFB29
 7543 0004 30000000 	 .4byte .LFE29
ARM GAS   			page 167


 7544 0008 00000000 	 .4byte .LFB30
 7545 000c 2C000000 	 .4byte .LFE30
 7546 0010 00000000 	 .4byte .LFB31
 7547 0014 24000000 	 .4byte .LFE31
 7548 0018 00000000 	 .4byte .LFB32
 7549 001c 0E000000 	 .4byte .LFE32
 7550 0020 00000000 	 .4byte .LFB33
 7551 0024 22000000 	 .4byte .LFE33
 7552 0028 00000000 	 .4byte .LFB34
 7553 002c 2C000000 	 .4byte .LFE34
 7554 0030 00000000 	 .4byte .LFB35
 7555 0034 60000000 	 .4byte .LFE35
 7556 0038 00000000 	 .4byte .LFB36
 7557 003c 0E000000 	 .4byte .LFE36
 7558 0040 00000000 	 .4byte .LFB37
 7559 0044 16000000 	 .4byte .LFE37
 7560 0048 00000000 	 .4byte .LFB38
 7561 004c 24000000 	 .4byte .LFE38
 7562 0050 00000000 	 .4byte .LFB39
 7563 0054 2A000000 	 .4byte .LFE39
 7564 0058 00000000 	 .4byte .LFB40
 7565 005c 48000000 	 .4byte .LFE40
 7566 0060 00000000 	 .4byte .LFB41
 7567 0064 28000000 	 .4byte .LFE41
 7568 0068 00000000 	 .4byte .LFB42
 7569 006c 1C000000 	 .4byte .LFE42
 7570 0070 00000000 	 .4byte .LFB43
 7571 0074 20000000 	 .4byte .LFE43
 7572 0078 00000000 	 .4byte .LFB44
 7573 007c 1E000000 	 .4byte .LFE44
 7574 0080 00000000 	 .4byte .LFB45
 7575 0084 1E000000 	 .4byte .LFE45
 7576 0088 00000000 	 .4byte .LFB46
 7577 008c 90000000 	 .4byte .LFE46
 7578 0090 00000000 	 .4byte .LFB47
 7579 0094 AA000000 	 .4byte .LFE47
 7580 0098 00000000 	 .4byte .LFB48
 7581 009c 18000000 	 .4byte .LFE48
 7582 00a0 00000000 	 .4byte .LFB49
 7583 00a4 BC000000 	 .4byte .LFE49
 7584 00a8 00000000 	 .4byte .LFB50
 7585 00ac 8C000000 	 .4byte .LFE50
 7586 00b0 00000000 	 .4byte .LFB51
 7587 00b4 30000000 	 .4byte .LFE51
 7588 00b8 00000000 	 .4byte .LFB52
 7589 00bc 4A000000 	 .4byte .LFE52
 7590 00c0 00000000 	 .4byte .LFB53
 7591 00c4 BC000000 	 .4byte .LFE53
 7592 00c8 00000000 	 .4byte .LFB54
 7593 00cc 8C000000 	 .4byte .LFE54
 7594 00d0 00000000 	 .4byte .LFB55
 7595 00d4 30000000 	 .4byte .LFE55
 7596 00d8 00000000 	 .4byte .LFB56
 7597 00dc BA000000 	 .4byte .LFE56
 7598 00e0 00000000 	 .4byte .LFB57
 7599 00e4 D8000000 	 .4byte .LFE57
 7600 00e8 00000000 	 .4byte .LFB58
ARM GAS   			page 168


 7601 00ec 2C000000 	 .4byte .LFE58
 7602 00f0 00000000 	 .4byte .LFB59
 7603 00f4 82000000 	 .4byte .LFE59
 7604 00f8 00000000 	 .4byte .LFB60
 7605 00fc 24000000 	 .4byte .LFE60
 7606 0100 00000000 	 .4byte .LFB61
 7607 0104 A0000000 	 .4byte .LFE61
 7608 0108 00000000 	 .4byte .LFB62
 7609 010c F0000000 	 .4byte .LFE62
 7610 0110 00000000 	 .4byte .LFB63
 7611 0114 B8000000 	 .4byte .LFE63
 7612 0118 00000000 	 .4byte .LFB64
 7613 011c 2C000000 	 .4byte .LFE64
 7614 0120 00000000 	 .4byte .LFB65
 7615 0124 42000000 	 .4byte .LFE65
 7616 0128 00000000 	 .4byte .LFB66
 7617 012c 98000000 	 .4byte .LFE66
 7618 0130 00000000 	 .4byte .LFB67
 7619 0134 F0000000 	 .4byte .LFE67
 7620 0138 00000000 	 .4byte .LFB68
 7621 013c 2C000000 	 .4byte .LFE68
 7622 0140 00000000 	 .4byte .LFB69
 7623 0144 20000000 	 .4byte .LFE69
 7624 0148 00000000 	 .4byte .LFB70
 7625 014c 18000000 	 .4byte .LFE70
 7626 0150 00000000 	 .4byte .LFB71
 7627 0154 58000000 	 .4byte .LFE71
 7628 0158 00000000 	 .4byte .LFB72
 7629 015c 0E000000 	 .4byte .LFE72
 7630 0160 00000000 	 .4byte .LFB73
 7631 0164 22000000 	 .4byte .LFE73
 7632 0168 00000000 	 .4byte .LFB74
 7633 016c 18000000 	 .4byte .LFE74
 7634 0170 00000000 	 .4byte .LFB75
 7635 0174 16000000 	 .4byte .LFE75
 7636 0178 00000000 	 .4byte .LFB76
 7637 017c 88000000 	 .4byte .LFE76
 7638 0180 00000000 	 .4byte .LFB77
 7639 0184 18000000 	 .4byte .LFE77
 7640 0188 00000000 	 .4byte .LFB78
 7641 018c 30000000 	 .4byte .LFE78
 7642 0190 00000000 	 .4byte .LFB79
 7643 0194 62000000 	 .4byte .LFE79
 7644 0198 00000000 	 .4byte 0
 7645 019c 00000000 	 .4byte 0
 7646              	 .section .debug_line,"",%progbits
 7647              	.Ldebug_line0:
 7648 0000 4A0E0000 	 .section .debug_str,"MS",%progbits,1
 7648      03001F03 
 7648      00000201 
 7648      FB0E0D00 
 7648      01010101 
 7649              	.LASF163:
 7650 0000 6F735369 	 .ascii "osSignalSet\000"
 7650      676E616C 
 7650      53657400 
 7651              	.LASF85:
ARM GAS   			page 169


 7652 000c 73746163 	 .ascii "stacksize\000"
 7652      6B73697A 
 7652      6500
 7653              	.LASF81:
 7654 0016 6E616D65 	 .ascii "name\000"
 7654      00
 7655              	.LASF117:
 7656 001b 71756575 	 .ascii "queue_id\000"
 7656      655F6964 
 7656      00
 7657              	.LASF115:
 7658 0024 6D757465 	 .ascii "mutex_def\000"
 7658      785F6465 
 7658      6600
 7659              	.LASF73:
 7660 002e 63757272 	 .ascii "currentIndex\000"
 7660      656E7449 
 7660      6E646578 
 7660      00
 7661              	.LASF145:
 7662 003b 6F73506F 	 .ascii "osPoolCAlloc\000"
 7662      6F6C4341 
 7662      6C6C6F63 
 7662      00
 7663              	.LASF186:
 7664 0048 696E4861 	 .ascii "inHandlerMode\000"
 7664      6E646C65 
 7664      724D6F64 
 7664      6500
 7665              	.LASF48:
 7666 0056 6F734572 	 .ascii "osErrorParameter\000"
 7666      726F7250 
 7666      6172616D 
 7666      65746572 
 7666      00
 7667              	.LASF59:
 7668 0067 6F735469 	 .ascii "osTimerOnce\000"
 7668      6D65724F 
 7668      6E636500 
 7669              	.LASF187:
 7670 0073 6D616B65 	 .ascii "makeCmsisPriority\000"
 7670      436D7369 
 7670      73507269 
 7670      6F726974 
 7670      7900
 7671              	.LASF173:
 7672 0085 61726775 	 .ascii "argument\000"
 7672      6D656E74 
 7672      00
 7673              	.LASF160:
 7674 008e 6F734D75 	 .ascii "osMutexWait\000"
 7674      74657857 
 7674      61697400 
 7675              	.LASF149:
 7676 009a 6974656D 	 .ascii "itemSize\000"
 7676      53697A65 
 7676      00
ARM GAS   			page 170


 7677              	.LASF164:
 7678 00a3 7369676E 	 .ascii "signal\000"
 7678      616C00
 7679              	.LASF54:
 7680 00aa 6F734572 	 .ascii "osErrorNoMemory\000"
 7680      726F724E 
 7680      6F4D656D 
 7680      6F727900 
 7681              	.LASF120:
 7682 00ba 62756666 	 .ascii "buffer\000"
 7682      657200
 7683              	.LASF22:
 7684 00c1 654E6F41 	 .ascii "eNoAction\000"
 7684      6374696F 
 7684      6E00
 7685              	.LASF75:
 7686 00cb 6F734D61 	 .ascii "osMailQId\000"
 7686      696C5149 
 7686      6400
 7687              	.LASF0:
 7688 00d5 756E7369 	 .ascii "unsigned int\000"
 7688      676E6564 
 7688      20696E74 
 7688      00
 7689              	.LASF71:
 7690 00e2 706F6F6C 	 .ascii "pool_sz\000"
 7690      5F737A00 
 7691              	.LASF57:
 7692 00ea 6F735F73 	 .ascii "os_status_reserved\000"
 7692      74617475 
 7692      735F7265 
 7692      73657276 
 7692      656400
 7693              	.LASF133:
 7694 00fd 6F734D61 	 .ascii "osMailCAlloc\000"
 7694      696C4341 
 7694      6C6C6F63 
 7694      00
 7695              	.LASF32:
 7696 010a 31306F73 	 .ascii "10osPriority\000"
 7696      5072696F 
 7696      72697479 
 7696      00
 7697              	.LASF60:
 7698 0117 6F735469 	 .ascii "osTimerPeriodic\000"
 7698      6D657250 
 7698      6572696F 
 7698      64696300 
 7699              	.LASF8:
 7700 0127 5F5F696E 	 .ascii "__int32_t\000"
 7700      7433325F 
 7700      7400
 7701              	.LASF42:
 7702 0131 386F7353 	 .ascii "8osStatus\000"
 7702      74617475 
 7702      7300
 7703              	.LASF184:
ARM GAS   			page 171


 7704 013b 6F734B65 	 .ascii "osKernelRunning\000"
 7704      726E656C 
 7704      52756E6E 
 7704      696E6700 
 7705              	.LASF101:
 7706 014b 6F734D61 	 .ascii "osMailQDef_t\000"
 7706      696C5144 
 7706      65665F74 
 7706      00
 7707              	.LASF67:
 7708 0158 6F735365 	 .ascii "osSemaphoreId\000"
 7708      6D617068 
 7708      6F726549 
 7708      6400
 7709              	.LASF114:
 7710 0166 6F735265 	 .ascii "osRecursiveMutexCreate\000"
 7710      63757273 
 7710      6976654D 
 7710      75746578 
 7710      43726561 
 7711              	.LASF125:
 7712 017d 6F735468 	 .ascii "osThreadResume\000"
 7712      72656164 
 7712      52657375 
 7712      6D6500
 7713              	.LASF47:
 7714 018c 6F734576 	 .ascii "osEventTimeout\000"
 7714      656E7454 
 7714      696D656F 
 7714      757400
 7715              	.LASF86:
 7716 019b 6F735468 	 .ascii "osThreadDef_t\000"
 7716      72656164 
 7716      4465665F 
 7716      7400
 7717              	.LASF78:
 7718 01a9 71756575 	 .ascii "queue_def\000"
 7718      655F6465 
 7718      6600
 7719              	.LASF84:
 7720 01b3 696E7374 	 .ascii "instances\000"
 7720      616E6365 
 7720      7300
 7721              	.LASF110:
 7722 01bd 6F735265 	 .ascii "osRecursiveMutexWait\000"
 7722      63757273 
 7722      6976654D 
 7722      75746578 
 7722      57616974 
 7723              	.LASF140:
 7724 01d2 6F734D65 	 .ascii "osMessageCreate\000"
 7724      73736167 
 7724      65437265 
 7724      61746500 
 7725              	.LASF100:
 7726 01e2 6F735F6D 	 .ascii "os_mailQ_def\000"
 7726      61696C51 
ARM GAS   			page 172


 7726      5F646566 
 7726      00
 7727              	.LASF196:
 7728 01ef 433A5C55 	 .ascii "C:\\Users\\niels\\DOCUME~1\\ELEKTR~1\\JAAR2~1\\ECS\\"
 7728      73657273 
 7728      5C6E6965 
 7728      6C735C44 
 7728      4F43554D 
 7729 021c 4543534C 	 .ascii "ECSL\\software\\STM32\\PRACTI~1\\CLion\\Debug\\Free"
 7729      5C736F66 
 7729      74776172 
 7729      655C5354 
 7729      4D33325C 
 7730 0249 52544F53 	 .ascii "RTOS\000"
 7730      00
 7731              	.LASF116:
 7732 024e 6F734D65 	 .ascii "osMessagePeek\000"
 7732      73736167 
 7732      65506565 
 7732      6B00
 7733              	.LASF161:
 7734 025c 6F734D75 	 .ascii "osMutexCreate\000"
 7734      74657843 
 7734      72656174 
 7734      6500
 7735              	.LASF180:
 7736 026a 6F735468 	 .ascii "osThreadGetId\000"
 7736      72656164 
 7736      47657449 
 7736      6400
 7737              	.LASF123:
 7738 0278 6F735468 	 .ascii "osThreadResumeAll\000"
 7738      72656164 
 7738      52657375 
 7738      6D65416C 
 7738      6C00
 7739              	.LASF80:
 7740 028a 6F735F74 	 .ascii "os_thread_def\000"
 7740      68726561 
 7740      645F6465 
 7740      6600
 7741              	.LASF16:
 7742 0298 75696E74 	 .ascii "uint32_t\000"
 7742      33325F74 
 7742      00
 7743              	.LASF28:
 7744 02a1 54696D65 	 .ascii "TimerHandle_t\000"
 7744      7248616E 
 7744      646C655F 
 7744      7400
 7745              	.LASF179:
 7746 02af 6F735468 	 .ascii "osThreadTerminate\000"
 7746      72656164 
 7746      5465726D 
 7746      696E6174 
 7746      6500
 7747              	.LASF190:
ARM GAS   			page 173


 7748 02c1 756C4F72 	 .ascii "ulOriginalBASEPRI\000"
 7748      6967696E 
 7748      616C4241 
 7748      53455052 
 7748      4900
 7749              	.LASF45:
 7750 02d3 6F734576 	 .ascii "osEventMessage\000"
 7750      656E744D 
 7750      65737361 
 7750      676500
 7751              	.LASF108:
 7752 02e2 6D757465 	 .ascii "mutex_id\000"
 7752      785F6964 
 7752      00
 7753              	.LASF118:
 7754 02eb 6576656E 	 .ascii "event\000"
 7754      7400
 7755              	.LASF40:
 7756 02f1 6F735072 	 .ascii "osPriorityError\000"
 7756      696F7269 
 7756      74794572 
 7756      726F7200 
 7757              	.LASF52:
 7758 0301 6F734572 	 .ascii "osErrorISRRecursive\000"
 7758      726F7249 
 7758      53525265 
 7758      63757273 
 7758      69766500 
 7759              	.LASF156:
 7760 0315 636F756E 	 .ascii "count\000"
 7760      7400
 7761              	.LASF144:
 7762 031b 696E6465 	 .ascii "index\000"
 7762      7800
 7763              	.LASF49:
 7764 0321 6F734572 	 .ascii "osErrorResource\000"
 7764      726F7252 
 7764      65736F75 
 7764      72636500 
 7765              	.LASF109:
 7766 0331 6D696C6C 	 .ascii "millisec\000"
 7766      69736563 
 7766      00
 7767              	.LASF97:
 7768 033a 6F735F6D 	 .ascii "os_messageQ_def\000"
 7768      65737361 
 7768      6765515F 
 7768      64656600 
 7769              	.LASF146:
 7770 034a 6F73506F 	 .ascii "osPoolAlloc\000"
 7770      6F6C416C 
 7770      6C6F6300 
 7771              	.LASF113:
 7772 0356 72657375 	 .ascii "result\000"
 7772      6C7400
 7773              	.LASF25:
 7774 035d 65536574 	 .ascii "eSetValueWithOverwrite\000"
ARM GAS   			page 174


 7774      56616C75 
 7774      65576974 
 7774      684F7665 
 7774      72777269 
 7775              	.LASF39:
 7776 0374 6F735072 	 .ascii "osPriorityRealtime\000"
 7776      696F7269 
 7776      74795265 
 7776      616C7469 
 7776      6D6500
 7777              	.LASF34:
 7778 0387 6F735072 	 .ascii "osPriorityLow\000"
 7778      696F7269 
 7778      74794C6F 
 7778      7700
 7779              	.LASF12:
 7780 0395 6C6F6E67 	 .ascii "long long unsigned int\000"
 7780      206C6F6E 
 7780      6720756E 
 7780      7369676E 
 7780      65642069 
 7781              	.LASF193:
 7782 03ac 5F5F6765 	 .ascii "__get_IPSR\000"
 7782      745F4950 
 7782      535200
 7783              	.LASF55:
 7784 03b7 6F734572 	 .ascii "osErrorValue\000"
 7784      726F7256 
 7784      616C7565 
 7784      00
 7785              	.LASF93:
 7786 03c4 6F735F73 	 .ascii "os_semaphore_def\000"
 7786      656D6170 
 7786      686F7265 
 7786      5F646566 
 7786      00
 7787              	.LASF72:
 7788 03d5 6974656D 	 .ascii "item_sz\000"
 7788      5F737A00 
 7789              	.LASF154:
 7790 03dd 6F735365 	 .ascii "osSemaphoreCreate\000"
 7790      6D617068 
 7790      6F726543 
 7790      72656174 
 7790      6500
 7791              	.LASF157:
 7792 03ef 73656D61 	 .ascii "sema\000"
 7792      00
 7793              	.LASF38:
 7794 03f4 6F735072 	 .ascii "osPriorityHigh\000"
 7794      696F7269 
 7794      74794869 
 7794      676800
 7795              	.LASF91:
 7796 0403 64756D6D 	 .ascii "dummy\000"
 7796      7900
 7797              	.LASF106:
ARM GAS   			page 175


 7798 0409 76616C75 	 .ascii "value\000"
 7798      6500
 7799              	.LASF33:
 7800 040f 6F735072 	 .ascii "osPriorityIdle\000"
 7800      696F7269 
 7800      74794964 
 7800      6C6500
 7801              	.LASF27:
 7802 041e 654E6F74 	 .ascii "eNotifyAction\000"
 7802      69667941 
 7802      6374696F 
 7802      6E00
 7803              	.LASF182:
 7804 042c 74687265 	 .ascii "thread_def\000"
 7804      61645F64 
 7804      656600
 7805              	.LASF99:
 7806 0437 6F734D65 	 .ascii "osMessageQDef_t\000"
 7806      73736167 
 7806      65514465 
 7806      665F7400 
 7807              	.LASF131:
 7808 0447 7461736B 	 .ascii "taskWoken\000"
 7808      576F6B65 
 7808      6E00
 7809              	.LASF137:
 7810 0451 6F734D65 	 .ascii "osMessageGet\000"
 7810      73736167 
 7810      65476574 
 7810      00
 7811              	.LASF44:
 7812 045e 6F734576 	 .ascii "osEventSignal\000"
 7812      656E7453 
 7812      69676E61 
 7812      6C00
 7813              	.LASF24:
 7814 046c 65496E63 	 .ascii "eIncrement\000"
 7814      72656D65 
 7814      6E7400
 7815              	.LASF167:
 7816 0477 74696D65 	 .ascii "timer_id\000"
 7816      725F6964 
 7816      00
 7817              	.LASF153:
 7818 0480 6F735365 	 .ascii "osSemaphoreWait\000"
 7818      6D617068 
 7818      6F726557 
 7818      61697400 
 7819              	.LASF192:
 7820 0490 76506F72 	 .ascii "vPortSetBASEPRI\000"
 7820      74536574 
 7820      42415345 
 7820      50524900 
 7821              	.LASF165:
 7822 04a0 78486967 	 .ascii "xHigherPriorityTaskWoken\000"
 7822      68657250 
 7822      72696F72 
ARM GAS   			page 176


 7822      69747954 
 7822      61736B57 
 7823              	.LASF64:
 7824 04b9 6F735468 	 .ascii "osThreadId\000"
 7824      72656164 
 7824      496400
 7825              	.LASF103:
 7826 04c4 6D61696C 	 .ascii "mail_id\000"
 7826      5F696400 
 7827              	.LASF68:
 7828 04cc 6F73506F 	 .ascii "osPoolId\000"
 7828      6F6C4964 
 7828      00
 7829              	.LASF112:
 7830 04d5 7469636B 	 .ascii "ticks\000"
 7830      7300
 7831              	.LASF94:
 7832 04db 6F735365 	 .ascii "osSemaphoreDef_t\000"
 7832      6D617068 
 7832      6F726544 
 7832      65665F74 
 7832      00
 7833              	.LASF142:
 7834 04ec 706F6F6C 	 .ascii "pool_id\000"
 7834      5F696400 
 7835              	.LASF199:
 7836 04f4 376F7345 	 .ascii "7osEvent\000"
 7836      76656E74 
 7836      00
 7837              	.LASF95:
 7838 04fd 6F735F70 	 .ascii "os_pool_def\000"
 7838      6F6F6C5F 
 7838      64656600 
 7839              	.LASF13:
 7840 0509 63686172 	 .ascii "char\000"
 7840      00
 7841              	.LASF126:
 7842 050e 74687265 	 .ascii "thread_id\000"
 7842      61645F69 
 7842      6400
 7843              	.LASF26:
 7844 0518 65536574 	 .ascii "eSetValueWithoutOverwrite\000"
 7844      56616C75 
 7844      65576974 
 7844      686F7574 
 7844      4F766572 
 7845              	.LASF102:
 7846 0532 7369676E 	 .ascii "signals\000"
 7846      616C7300 
 7847              	.LASF19:
 7848 053a 55426173 	 .ascii "UBaseType_t\000"
 7848      65547970 
 7848      655F7400 
 7849              	.LASF96:
 7850 0546 6F73506F 	 .ascii "osPoolDef_t\000"
 7850      6F6C4465 
 7850      665F7400 
ARM GAS   			page 177


 7851              	.LASF88:
 7852 0552 7074696D 	 .ascii "ptimer\000"
 7852      657200
 7853              	.LASF74:
 7854 0559 6F734D65 	 .ascii "osMessageQId\000"
 7854      73736167 
 7854      65514964 
 7854      00
 7855              	.LASF198:
 7856 0566 31336F73 	 .ascii "13os_timer_type\000"
 7856      5F74696D 
 7856      65725F74 
 7856      79706500 
 7857              	.LASF29:
 7858 0576 51756575 	 .ascii "QueueHandle_t\000"
 7858      6548616E 
 7858      646C655F 
 7858      7400
 7859              	.LASF178:
 7860 0584 6F735468 	 .ascii "osThreadYield\000"
 7860      72656164 
 7860      5969656C 
 7860      6400
 7861              	.LASF14:
 7862 0592 75696E74 	 .ascii "uint8_t\000"
 7862      385F7400 
 7863              	.LASF105:
 7864 059a 73746174 	 .ascii "status\000"
 7864      757300
 7865              	.LASF58:
 7866 05a1 6F735374 	 .ascii "osStatus\000"
 7866      61747573 
 7866      00
 7867              	.LASF176:
 7868 05aa 6F735468 	 .ascii "osThreadSetPriority\000"
 7868      72656164 
 7868      53657450 
 7868      72696F72 
 7868      69747900 
 7869              	.LASF65:
 7870 05be 6F735469 	 .ascii "osTimerId\000"
 7870      6D657249 
 7870      6400
 7871              	.LASF53:
 7872 05c8 6F734572 	 .ascii "osErrorPriority\000"
 7872      726F7250 
 7872      72696F72 
 7872      69747900 
 7873              	.LASF43:
 7874 05d8 6F734F4B 	 .ascii "osOK\000"
 7874      00
 7875              	.LASF162:
 7876 05dd 6F735369 	 .ascii "osSignalWait\000"
 7876      676E616C 
 7876      57616974 
 7876      00
 7877              	.LASF148:
ARM GAS   			page 178


 7878 05ea 74686550 	 .ascii "thePool\000"
 7878      6F6F6C00 
 7879              	.LASF202:
 7880 05f2 756C506F 	 .ascii "ulPortRaiseBASEPRI\000"
 7880      72745261 
 7880      69736542 
 7880      41534550 
 7880      524900
 7881              	.LASF1:
 7882 0605 6C6F6E67 	 .ascii "long long int\000"
 7882      206C6F6E 
 7882      6720696E 
 7882      7400
 7883              	.LASF194:
 7884 0613 474E5520 	 .ascii "GNU C++14 10.3.1 20210824 (release) -mcpu=cortex-m4"
 7884      432B2B31 
 7884      34203130 
 7884      2E332E31 
 7884      20323032 
 7885 0646 202D6D66 	 .ascii " -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mfix-cortex-m3"
 7885      6C6F6174 
 7885      2D616269 
 7885      3D686172 
 7885      64202D6D 
 7886 0679 2D6C6472 	 .ascii "-ldrd -mthumb -mno-unaligned-access -mapcs-frame -m"
 7886      64202D6D 
 7886      7468756D 
 7886      62202D6D 
 7886      6E6F2D75 
 7887 06ac 61726368 	 .ascii "arch=armv7e-m+fp -g -g -O0 -fsingle-precision-const"
 7887      3D61726D 
 7887      7637652D 
 7887      6D2B6670 
 7887      202D6720 
 7888 06df 616E7420 	 .ascii "ant -funsigned-char -ffunction-sections -fdata-sect"
 7888      2D66756E 
 7888      7369676E 
 7888      65642D63 
 7888      68617220 
 7889 0712 696F6E73 	 .ascii "ions\000"
 7889      00
 7890              	.LASF191:
 7891 0717 756C4E65 	 .ascii "ulNewBASEPRI\000"
 7891      77424153 
 7891      45505249 
 7891      00
 7892              	.LASF41:
 7893 0724 6F735072 	 .ascii "osPriority\000"
 7893      696F7269 
 7893      747900
 7894              	.LASF18:
 7895 072f 42617365 	 .ascii "BaseType_t\000"
 7895      54797065 
 7895      5F7400
 7896              	.LASF166:
 7897 073a 6F735469 	 .ascii "osTimerDelete\000"
 7897      6D657244 
ARM GAS   			page 179


 7897      656C6574 
 7897      6500
 7898              	.LASF168:
 7899 0748 6F735469 	 .ascii "osTimerStop\000"
 7899      6D657253 
 7899      746F7000 
 7900              	.LASF17:
 7901 0754 5461736B 	 .ascii "TaskFunction_t\000"
 7901      46756E63 
 7901      74696F6E 
 7901      5F7400
 7902              	.LASF87:
 7903 0763 6F735F74 	 .ascii "os_timer_def\000"
 7903      696D6572 
 7903      5F646566 
 7903      00
 7904              	.LASF188:
 7905 0770 66707269 	 .ascii "fpriority\000"
 7905      6F726974 
 7905      7900
 7906              	.LASF92:
 7907 077a 6F734D75 	 .ascii "osMutexDef_t\000"
 7907      74657844 
 7907      65665F74 
 7907      00
 7908              	.LASF89:
 7909 0787 6F735469 	 .ascii "osTimerDef_t\000"
 7909      6D657244 
 7909      65665F74 
 7909      00
 7910              	.LASF63:
 7911 0794 6F735F70 	 .ascii "os_ptimer\000"
 7911      74696D65 
 7911      7200
 7912              	.LASF83:
 7913 079e 74707269 	 .ascii "tpriority\000"
 7913      6F726974 
 7913      7900
 7914              	.LASF21:
 7915 07a8 5461736B 	 .ascii "TaskHandle_t\000"
 7915      48616E64 
 7915      6C655F74 
 7915      00
 7916              	.LASF132:
 7917 07b5 6F734D61 	 .ascii "osMailPut\000"
 7917      696C5075 
 7917      7400
 7918              	.LASF139:
 7919 07bf 696E666F 	 .ascii "info\000"
 7919      00
 7920              	.LASF175:
 7921 07c4 6F735468 	 .ascii "osThreadGetPriority\000"
 7921      72656164 
 7921      47657450 
 7921      72696F72 
 7921      69747900 
 7922              	.LASF76:
ARM GAS   			page 180


 7923 07d8 6F735F70 	 .ascii "os_pool_cb\000"
 7923      6F6F6C5F 
 7923      636200
 7924              	.LASF69:
 7925 07e3 706F6F6C 	 .ascii "pool\000"
 7925      00
 7926              	.LASF159:
 7927 07e8 6F734D75 	 .ascii "osMutexRelease\000"
 7927      74657852 
 7927      656C6561 
 7927      736500
 7928              	.LASF20:
 7929 07f7 5469636B 	 .ascii "TickType_t\000"
 7929      54797065 
 7929      5F7400
 7930              	.LASF23:
 7931 0802 65536574 	 .ascii "eSetBits\000"
 7931      42697473 
 7931      00
 7932              	.LASF2:
 7933 080b 6C6F6E67 	 .ascii "long double\000"
 7933      20646F75 
 7933      626C6500 
 7934              	.LASF37:
 7935 0817 6F735072 	 .ascii "osPriorityAboveNormal\000"
 7935      696F7269 
 7935      74794162 
 7935      6F76654E 
 7935      6F726D61 
 7936              	.LASF183:
 7937 082d 6F734B65 	 .ascii "osKernelSysTick\000"
 7937      726E656C 
 7937      53797354 
 7937      69636B00 
 7938              	.LASF70:
 7939 083d 6D61726B 	 .ascii "markers\000"
 7939      65727300 
 7940              	.LASF189:
 7941 0845 6D616B65 	 .ascii "makeFreeRtosPriority\000"
 7941      46726565 
 7941      52746F73 
 7941      5072696F 
 7941      72697479 
 7942              	.LASF5:
 7943 085a 73686F72 	 .ascii "short int\000"
 7943      7420696E 
 7943      7400
 7944              	.LASF77:
 7945 0864 6F735F6D 	 .ascii "os_mailQ_cb\000"
 7945      61696C51 
 7945      5F636200 
 7946              	.LASF90:
 7947 0870 6F735F6D 	 .ascii "os_mutex_def\000"
 7947      75746578 
 7947      5F646566 
 7947      00
 7948              	.LASF9:
ARM GAS   			page 181


 7949 087d 6C6F6E67 	 .ascii "long int\000"
 7949      20696E74 
 7949      00
 7950              	.LASF30:
 7951 0886 53656D61 	 .ascii "SemaphoreHandle_t\000"
 7951      70686F72 
 7951      6548616E 
 7951      646C655F 
 7951      7400
 7952              	.LASF66:
 7953 0898 6F734D75 	 .ascii "osMutexId\000"
 7953      74657849 
 7953      6400
 7954              	.LASF98:
 7955 08a2 71756575 	 .ascii "queue_sz\000"
 7955      655F737A 
 7955      00
 7956              	.LASF177:
 7957 08ab 7072696F 	 .ascii "priority\000"
 7957      72697479 
 7957      00
 7958              	.LASF122:
 7959 08b4 50726576 	 .ascii "PreviousWakeTime\000"
 7959      696F7573 
 7959      57616B65 
 7959      54696D65 
 7959      00
 7960              	.LASF104:
 7961 08c5 6D657373 	 .ascii "message_id\000"
 7961      6167655F 
 7961      696400
 7962              	.LASF107:
 7963 08d0 6F734576 	 .ascii "osEvent\000"
 7963      656E7400 
 7964              	.LASF170:
 7965 08d8 6F735469 	 .ascii "osTimerCreate\000"
 7965      6D657243 
 7965      72656174 
 7965      6500
 7966              	.LASF136:
 7967 08e6 706F6F6C 	 .ascii "pool_def\000"
 7967      5F646566 
 7967      00
 7968              	.LASF143:
 7969 08ef 626C6F63 	 .ascii "block\000"
 7969      6B00
 7970              	.LASF119:
 7971 08f5 6F735468 	 .ascii "osThreadList\000"
 7971      72656164 
 7971      4C697374 
 7971      00
 7972              	.LASF7:
 7973 0902 5F5F7569 	 .ascii "__uint8_t\000"
 7973      6E74385F 
 7973      7400
 7974              	.LASF50:
 7975 090c 6F734572 	 .ascii "osErrorTimeoutResource\000"
ARM GAS   			page 182


 7975      726F7254 
 7975      696D656F 
 7975      75745265 
 7975      736F7572 
 7976              	.LASF51:
 7977 0923 6F734572 	 .ascii "osErrorISR\000"
 7977      726F7249 
 7977      535200
 7978              	.LASF152:
 7979 092e 6F735365 	 .ascii "osSemaphoreRelease\000"
 7979      6D617068 
 7979      6F726552 
 7979      656C6561 
 7979      736500
 7980              	.LASF121:
 7981 0941 6F734465 	 .ascii "osDelayUntil\000"
 7981      6C617955 
 7981      6E74696C 
 7981      00
 7982              	.LASF129:
 7983 094e 6D61696C 	 .ascii "mail\000"
 7983      00
 7984              	.LASF171:
 7985 0953 74696D65 	 .ascii "timer_def\000"
 7985      725F6465 
 7985      6600
 7986              	.LASF11:
 7987 095d 6C6F6E67 	 .ascii "long unsigned int\000"
 7987      20756E73 
 7987      69676E65 
 7987      6420696E 
 7987      7400
 7988              	.LASF195:
 7989 096f 433A5C55 	 .ascii "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar "
 7989      73657273 
 7989      5C6E6965 
 7989      6C735C44 
 7989      6F63756D 
 7990 099d 325C4543 	 .ascii "2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gem"
 7990      535C4543 
 7990      534C5C73 
 7990      6F667477 
 7990      6172655C 
 7991 09c9 65656E73 	 .ascii "eenschappelijk\\Third_Party\\FreeRTOS\\Source\\CMSI"
 7991      63686170 
 7991      70656C69 
 7991      6A6B5C54 
 7991      68697264 
 7992 09f8 535F5254 	 .ascii "S_RTOS\\cmsis_os.c\000"
 7992      4F535C63 
 7992      6D736973 
 7992      5F6F732E 
 7992      6300
 7993              	.LASF15:
 7994 0a0a 696E7433 	 .ascii "int32_t\000"
 7994      325F7400 
 7995              	.LASF151:
ARM GAS   			page 183


 7996 0a12 73656D61 	 .ascii "semaphore_id\000"
 7996      70686F72 
 7996      655F6964 
 7996      00
 7997              	.LASF111:
 7998 0a1f 6F735265 	 .ascii "osRecursiveMutexRelease\000"
 7998      63757273 
 7998      6976654D 
 7998      75746578 
 7998      52656C65 
 7999              	.LASF46:
 8000 0a37 6F734576 	 .ascii "osEventMail\000"
 8000      656E744D 
 8000      61696C00 
 8001              	.LASF62:
 8002 0a43 6F735F70 	 .ascii "os_pthread\000"
 8002      74687265 
 8002      616400
 8003              	.LASF172:
 8004 0a4e 74797065 	 .ascii "type\000"
 8004      00
 8005              	.LASF4:
 8006 0a53 756E7369 	 .ascii "unsigned char\000"
 8006      676E6564 
 8006      20636861 
 8006      7200
 8007              	.LASF10:
 8008 0a61 5F5F7569 	 .ascii "__uint32_t\000"
 8008      6E743332 
 8008      5F7400
 8009              	.LASF127:
 8010 0a6c 6F735468 	 .ascii "osThreadSuspend\000"
 8010      72656164 
 8010      53757370 
 8010      656E6400 
 8011              	.LASF61:
 8012 0a7c 6F735F74 	 .ascii "os_timer_type\000"
 8012      696D6572 
 8012      5F747970 
 8012      6500
 8013              	.LASF35:
 8014 0a8a 6F735072 	 .ascii "osPriorityBelowNormal\000"
 8014      696F7269 
 8014      74794265 
 8014      6C6F774E 
 8014      6F726D61 
 8015              	.LASF197:
 8016 0aa0 6465636C 	 .ascii "decltype(nullptr)\000"
 8016      74797065 
 8016      286E756C 
 8016      6C707472 
 8016      2900
 8017              	.LASF124:
 8018 0ab2 6F735468 	 .ascii "osThreadSuspendAll\000"
 8018      72656164 
 8018      53757370 
 8018      656E6441 
ARM GAS   			page 184


 8018      6C6C00
 8019              	.LASF128:
 8020 0ac5 6F734D61 	 .ascii "osMailFree\000"
 8020      696C4672 
 8020      656500
 8021              	.LASF200:
 8022 0ad0 6F735379 	 .ascii "osSystickHandler\000"
 8022      73746963 
 8022      6B48616E 
 8022      646C6572 
 8022      00
 8023              	.LASF147:
 8024 0ae1 6F73506F 	 .ascii "osPoolCreate\000"
 8024      6F6C4372 
 8024      65617465 
 8024      00
 8025              	.LASF201:
 8026 0aee 756C4E65 	 .ascii "ulNewMaskValue\000"
 8026      774D6173 
 8026      6B56616C 
 8026      756500
 8027              	.LASF82:
 8028 0afd 70746872 	 .ascii "pthread\000"
 8028      65616400 
 8029              	.LASF174:
 8030 0b05 6F734465 	 .ascii "osDelay\000"
 8030      6C617900 
 8031              	.LASF155:
 8032 0b0d 73656D61 	 .ascii "semaphore_def\000"
 8032      70686F72 
 8032      655F6465 
 8032      6600
 8033              	.LASF3:
 8034 0b1b 7369676E 	 .ascii "signed char\000"
 8034      65642063 
 8034      68617200 
 8035              	.LASF31:
 8036 0b27 3133654E 	 .ascii "13eNotifyAction\000"
 8036      6F746966 
 8036      79416374 
 8036      696F6E00 
 8037              	.LASF6:
 8038 0b37 73686F72 	 .ascii "short unsigned int\000"
 8038      7420756E 
 8038      7369676E 
 8038      65642069 
 8038      6E7400
 8039              	.LASF79:
 8040 0b4a 68616E64 	 .ascii "handle\000"
 8040      6C6500
 8041              	.LASF169:
 8042 0b51 6F735469 	 .ascii "osTimerStart\000"
 8042      6D657253 
 8042      74617274 
 8042      00
 8043              	.LASF135:
 8044 0b5e 6F734D61 	 .ascii "osMailCreate\000"
ARM GAS   			page 185


 8044      696C4372 
 8044      65617465 
 8044      00
 8045              	.LASF185:
 8046 0b6b 6F734B65 	 .ascii "osKernelStart\000"
 8046      726E656C 
 8046      53746172 
 8046      7400
 8047              	.LASF150:
 8048 0b79 6F735365 	 .ascii "osSemaphoreDelete\000"
 8048      6D617068 
 8048      6F726544 
 8048      656C6574 
 8048      6500
 8049              	.LASF138:
 8050 0b8b 6F734D65 	 .ascii "osMessagePut\000"
 8050      73736167 
 8050      65507574 
 8050      00
 8051              	.LASF56:
 8052 0b98 6F734572 	 .ascii "osErrorOS\000"
 8052      726F724F 
 8052      5300
 8053              	.LASF134:
 8054 0ba2 6F734D61 	 .ascii "osMailAlloc\000"
 8054      696C416C 
 8054      6C6F6300 
 8055              	.LASF130:
 8056 0bae 6F734D61 	 .ascii "osMailGet\000"
 8056      696C4765 
 8056      7400
 8057              	.LASF158:
 8058 0bb8 6F734D75 	 .ascii "osMutexDelete\000"
 8058      74657844 
 8058      656C6574 
 8058      6500
 8059              	.LASF36:
 8060 0bc6 6F735072 	 .ascii "osPriorityNormal\000"
 8060      696F7269 
 8060      74794E6F 
 8060      726D616C 
 8060      00
 8061              	.LASF181:
 8062 0bd7 6F735468 	 .ascii "osThreadCreate\000"
 8062      72656164 
 8062      43726561 
 8062      746500
 8063              	.LASF141:
 8064 0be6 6F73506F 	 .ascii "osPoolFree\000"
 8064      6F6C4672 
 8064      656500
 8065              	 .ident "GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
