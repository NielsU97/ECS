ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .arch armv7e-m
   3              	 .fpu fpv4-sp-d16
   4              	 .eabi_attribute 27,1
   5              	 .eabi_attribute 28,1
   6              	 .eabi_attribute 20,1
   7              	 .eabi_attribute 21,1
   8              	 .eabi_attribute 23,3
   9              	 .eabi_attribute 24,1
  10              	 .eabi_attribute 25,1
  11              	 .eabi_attribute 26,1
  12              	 .eabi_attribute 30,6
  13              	 .eabi_attribute 34,0
  14              	 .eabi_attribute 18,4
  15              	 .file "queue.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global xQueueRegistry
  20              	 .section .bss.xQueueRegistry,"aw",%nobits
  21              	 .align 2
  22              	 .type xQueueRegistry,%object
  23              	 .size xQueueRegistry,64
  24              	xQueueRegistry:
  25 0000 00000000 	 .space 64
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              	 .section .text.xQueueGenericReset,"ax",%progbits
  27              	 .align 1
  28              	 .global xQueueGenericReset
  29              	 .syntax unified
  30              	 .thumb
  31              	 .thumb_func
  32              	 .type xQueueGenericReset,%function
  33              	xQueueGenericReset:
  34              	 .fnstart
  35              	.LFB11:
  36              	 .file 1 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gemeenschappelijk\\Third_Party\\FreeRTOS\\Source\\queue.c"
   1:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
   2:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     All rights reserved
   4:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
   5:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
   7:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     This file is part of the FreeRTOS distribution.
   8:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
   9:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  13:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     ***************************************************************************
  14:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
ARM GAS   			page 2


  18:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     ***************************************************************************
  19:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  20:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     link: http://www.freertos.org/a00114.html
  24:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  25:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     ***************************************************************************
  26:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *                                                                       *
  27:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    platform software that is more than just the market leader, it     *
  30:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    is the industry's de facto standard.                               *
  31:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *                                                                       *
  32:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****      *                                                                       *
  37:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     ***************************************************************************
  38:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  39:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     defined configASSERT()?
  42:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  43:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     embedded software for free we request you assist our global community by
  45:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     participating in the support forum.
  46:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  47:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  52:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  56:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  59:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  63:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     mission critical applications that require provable dependability.
  66:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  67:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****     1 tab == 4 spaces!
  68:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** */
  69:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  70:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #include <stdlib.h>
  71:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #include <string.h>
  72:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  73:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS   			page 3


  75:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** task.h is included from an application file. */
  76:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  78:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #include "FreeRTOS.h"
  79:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #include "task.h"
  80:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #include "queue.h"
  81:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  82:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#include "croutine.h"
  84:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif
  85:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  86:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** header files above, but not in this file, in order to generate the correct
  89:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** privileged Vs unprivileged linkage and placement. */
  90:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  92:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  93:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  94:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define queueUNLOCKED					( ( BaseType_t ) -1 )
  95:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseType_t ) 0 )
  96:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
  97:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** alternative implementation would be to use a union, but use of a union is
 105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** against the coding standard (although an exception to the standard has been
 106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** permitted where the dual use also significantly changes the type of the
 107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** structure member). */
 108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define pxMutexHolder					pcTail
 109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define uxQueueType						pcHead
 110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** zero. */
 114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	performed just because a higher priority task has been woken. */
 120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #else
 122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif
 124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Definition of the queue used by the scheduler.
 127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** typedef struct QueueDefinition
 131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
ARM GAS   			page 4


 132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	} u;
 141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	volatile BaseType_t xRxLock;	/*< Stores the number of items received from the queue (removed from 
 150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	volatile BaseType_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the
 151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		UBaseType_t uxQueueNumber;
 154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		uint8_t ucQueueType;
 155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#endif
 156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#endif
 160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } xQUEUE;
 162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** name below to enable the use of older kernel aware debuggers. */
 165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** typedef xQUEUE Queue_t;
 166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	more user friendly. */
 178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		QueueHandle_t xHandle;
 182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	} xQueueRegistryItem;
 183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	debuggers. */
 187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
ARM GAS   			page 5


 189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	array position being vacant. */
 192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  *
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  *
 216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * back of the queue.
 223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Copies an item out of a queue.
 228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/*
 233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	 * the queue set that the queue contains data.
 235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	 */
 236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif
 238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*
 242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  * accessing the queue event lists.
 244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c ****  */
 245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #define prvLockQueue( pxQueue )								\
ARM GAS   			page 6


 246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();									\
 247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{														\
 248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{													\
 250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}													\
 252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{													\
 254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}													\
 256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}														\
 257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL()
 258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
  37              	 .loc 1 261 1
  38              	 .cfi_startproc
  39              	 
  40              	 
  41 0000 80B5     	 push {r7,lr}
  42              	 .save {r7,lr}
  43              	 .cfi_def_cfa_offset 8
  44              	 .cfi_offset 7,-8
  45              	 .cfi_offset 14,-4
  46              	 .pad #16
  47 0002 84B0     	 sub sp,sp,#16
  48              	 .cfi_def_cfa_offset 24
  49              	 .setfp r7,sp,#0
  50 0004 00AF     	 add r7,sp,#0
  51              	 .cfi_def_cfa_register 7
  52 0006 7860     	 str r0,[r7,#4]
  53 0008 3960     	 str r1,[r7]
 262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  54              	 .loc 1 262 17
  55 000a 7B68     	 ldr r3,[r7,#4]
  56 000c FB60     	 str r3,[r7,#12]
 263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
  57              	 .loc 1 264 2
  58 000e FB68     	 ldr r3,[r7,#12]
  59 0010 002B     	 cmp r3,#0
  60 0012 0AD1     	 bne .L2
  61              	.LBB82:
  62              	.LBB83:
  63              	 .file 2 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*
   2:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     All rights reserved
   4:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   5:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   7:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   9:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
ARM GAS   			page 7


  12:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  13:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  14:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  19:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  20:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  25:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  26:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  27:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    is the industry's de facto standard.                               *
  31:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  32:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  37:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  38:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  39:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     defined configASSERT()?
  42:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  43:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     embedded software for free we request you assist our global community by
  45:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     participating in the support forum.
  46:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  47:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  52:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  56:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  59:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  63:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     mission critical applications that require provable dependability.
  66:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  67:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     1 tab == 4 spaces!
  68:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** */
ARM GAS   			page 8


  69:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  70:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  71:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef PORTMACRO_H
  72:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define PORTMACRO_H
  73:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  74:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef __cplusplus
  75:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern "C" {
  76:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
  77:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  78:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------
  79:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * Port specific definitions.
  80:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  81:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * given hardware and compiler.
  83:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  84:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * These settings should not be altered.
  85:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *-----------------------------------------------------------
  86:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  */
  87:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  88:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Type definitions. */
  89:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCHAR		char
  90:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portFLOAT		float
  91:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDOUBLE		double
  92:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portLONG		long
  93:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSHORT		short
  94:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBASE_TYPE	long
  96:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  97:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef long BaseType_t;
  99:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef unsigned long UBaseType_t;
 100:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 101:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint16_t TickType_t;
 103:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #else
 105:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint32_t TickType_t;
 106:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 108:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	not need to be guarded with a critical section. */
 110:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 112:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 113:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 114:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specifics. */
 115:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 119:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 120:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Scheduler utilities. */
 121:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD() 															\
 122:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {																				\
 123:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 																				\
ARM GAS   			page 9


 126:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "dsb" );													\
 129:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "isb" );													\
 130:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 131:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 132:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 137:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 138:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Critical section management. */
 139:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortEnterCritical( void );
 140:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortExitCritical( void );
 141:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 148:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 149:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 150:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** (which build with all the ports) will build. */
 153:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 157:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Tickless idle/low power functionality. */
 158:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 162:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 163:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 164:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specific optimisations. */
 165:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 168:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 169:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 171:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Generic helper function. */
 172:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 174:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	uint8_t ucReturn;
 175:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 176:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		return ucReturn;
 178:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 179:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 180:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Check the configuration. */
 181:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
ARM GAS   			page 10


 183:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#endif
 184:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 185:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 189:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/*-----------------------------------------------------------*/
 190:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 191:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31 - ucPort
 192:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 193:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 195:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 196:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 197:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef configASSERT
 198:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 201:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 202:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* portNOP() is not required by this port. */
 203:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNOP()
 204:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 205:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portFORCE_INLINE
 206:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 207:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 208:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 209:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 210:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 211:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 212:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 213:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulNewBASEPRI;
 214:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
  64              	 .loc 2 215 2
  65              	 .syntax unified
  66              	
  67 0014 4FF01003 	 mov r3,#16
  68 0018 83F31188 	 msr basepri,r3
  69 001c BFF36F8F 	 isb 
  70 0020 BFF34F8F 	 dsb 
  71              	
  72              	
  73              	 .thumb
  74              	 .syntax unified
  75 0024 BB60     	 str r3,[r7,#8]
 216:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 217:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %0, %1												\n"	\
 218:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0											\n" \
 219:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 220:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 221:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 222:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
  76              	 .loc 2 223 1
  77 0026 00BF     	 nop
  78              	.L3:
  79              	.LBE83:
ARM GAS   			page 11


  80              	.LBE82:
  81              	 .loc 1 264 2 discriminator 1
  82 0028 FEE7     	 b .L3
  83              	.L2:
 265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
  84              	 .loc 1 266 2
  85 002a FFF7FEFF 	 bl vPortEnterCritical
 267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  86              	 .loc 1 268 30
  87 002e FB68     	 ldr r3,[r7,#12]
  88 0030 1A68     	 ldr r2,[r3]
  89              	 .loc 1 268 50
  90 0032 FB68     	 ldr r3,[r7,#12]
  91 0034 DB6B     	 ldr r3,[r3,#60]
  92              	 .loc 1 268 70
  93 0036 F968     	 ldr r1,[r7,#12]
  94 0038 096C     	 ldr r1,[r1,#64]
  95              	 .loc 1 268 59
  96 003a 01FB03F3 	 mul r3,r1,r3
  97              	 .loc 1 268 37
  98 003e 1A44     	 add r2,r2,r3
  99              	 .loc 1 268 19
 100 0040 FB68     	 ldr r3,[r7,#12]
 101 0042 5A60     	 str r2,[r3,#4]
 269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 102              	 .loc 1 269 30
 103 0044 FB68     	 ldr r3,[r7,#12]
 104 0046 0022     	 movs r2,#0
 105 0048 9A63     	 str r2,[r3,#56]
 270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 106              	 .loc 1 270 33
 107 004a FB68     	 ldr r3,[r7,#12]
 108 004c 1A68     	 ldr r2,[r3]
 109              	 .loc 1 270 22
 110 004e FB68     	 ldr r3,[r7,#12]
 111 0050 9A60     	 str r2,[r3,#8]
 271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 112              	 .loc 1 271 36
 113 0052 FB68     	 ldr r3,[r7,#12]
 114 0054 1A68     	 ldr r2,[r3]
 115              	 .loc 1 271 58
 116 0056 FB68     	 ldr r3,[r7,#12]
 117 0058 DB6B     	 ldr r3,[r3,#60]
 118              	 .loc 1 271 67
 119 005a 013B     	 subs r3,r3,#1
 120              	 .loc 1 271 101
 121 005c F968     	 ldr r1,[r7,#12]
 122 005e 096C     	 ldr r1,[r1,#64]
 123              	 .loc 1 271 90
 124 0060 01FB03F3 	 mul r3,r1,r3
 125              	 .loc 1 271 43
 126 0064 1A44     	 add r2,r2,r3
 127              	 .loc 1 271 25
 128 0066 FB68     	 ldr r3,[r7,#12]
 129 0068 DA60     	 str r2,[r3,#12]
ARM GAS   			page 12


 272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 130              	 .loc 1 272 20
 131 006a FB68     	 ldr r3,[r7,#12]
 132 006c 4FF0FF32 	 mov r2,#-1
 133 0070 5A64     	 str r2,[r3,#68]
 273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 134              	 .loc 1 273 20
 135 0072 FB68     	 ldr r3,[r7,#12]
 136 0074 4FF0FF32 	 mov r2,#-1
 137 0078 9A64     	 str r2,[r3,#72]
 274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( xNewQueue == pdFALSE )
 138              	 .loc 1 275 3
 139 007a 3B68     	 ldr r3,[r7]
 140 007c 002B     	 cmp r3,#0
 141 007e 19D1     	 bne .L4
 276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			the tasks will remain blocked as after this function exits the queue
 279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			the queue, then one should be unblocked as after this function exits
 281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			it will be possible to write to it. */
 282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 142              	 .loc 1 282 8
 143 0080 FB68     	 ldr r3,[r7,#12]
 144 0082 1B69     	 ldr r3,[r3,#16]
 145              	 .loc 1 282 4
 146 0084 002B     	 cmp r3,#0
 147 0086 1FD0     	 beq .L5
 283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 148              	 .loc 1 284 35
 149 0088 FB68     	 ldr r3,[r7,#12]
 150 008a 1033     	 adds r3,r3,#16
 151              	 .loc 1 284 33
 152 008c 1846     	 mov r0,r3
 153 008e FFF7FEFF 	 bl xTaskRemoveFromEventList
 154 0092 0346     	 mov r3,r0
 155              	 .loc 1 284 71
 156 0094 012B     	 cmp r3,#1
 157 0096 0CBF     	 ite eq
 158 0098 0123     	 moveq r3,#1
 159 009a 0023     	 movne r3,#0
 160 009c DBB2     	 uxtb r3,r3
 161              	 .loc 1 284 5
 162 009e 002B     	 cmp r3,#0
 163 00a0 12D0     	 beq .L5
 285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 164              	 .loc 1 286 6
 165 00a2 0D4B     	 ldr r3,.L7
 166 00a4 4FF08052 	 mov r2,#268435456
 167 00a8 1A60     	 str r2,[r3]
 168              	 .syntax unified
 169              	
 170 00aa BFF34F8F 	 dsb
 171              	
ARM GAS   			page 13


 172              	
 173 00ae BFF36F8F 	 isb
 174              	
 175              	 .thumb
 176              	 .syntax unified
 177 00b2 09E0     	 b .L5
 178              	.L4:
 287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
 289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
 291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
 296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Ensure the event queues start in the correct state. */
 301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 179              	 .loc 1 301 19
 180 00b4 FB68     	 ldr r3,[r7,#12]
 181 00b6 1033     	 adds r3,r3,#16
 182 00b8 1846     	 mov r0,r3
 183 00ba FFF7FEFF 	 bl vListInitialise
 302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 184              	 .loc 1 302 19
 185 00be FB68     	 ldr r3,[r7,#12]
 186 00c0 2433     	 adds r3,r3,#36
 187 00c2 1846     	 mov r0,r3
 188 00c4 FFF7FEFF 	 bl vListInitialise
 189              	.L5:
 303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 190              	 .loc 1 305 2
 191 00c8 FFF7FEFF 	 bl vPortExitCritical
 306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* A value is returned for calling semantic consistency with previous
 308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	versions. */
 309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return pdPASS;
 192              	 .loc 1 309 9
 193 00cc 0123     	 movs r3,#1
 310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 194              	 .loc 1 310 1
 195 00ce 1846     	 mov r0,r3
 196 00d0 1037     	 adds r7,r7,#16
 197              	 .cfi_def_cfa_offset 8
 198 00d2 BD46     	 mov sp,r7
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 00d4 80BD     	 pop {r7,pc}
 202              	.L8:
 203 00d6 00BF     	 .align 2
 204              	.L7:
ARM GAS   			page 14


 205 00d8 04ED00E0 	 .word -536810236
 206              	 .cfi_endproc
 207              	.LFE11:
 208              	 .fnend
 209              	 .size xQueueGenericReset,.-xQueueGenericReset
 210              	 .section .text.xQueueGenericCreate,"ax",%progbits
 211              	 .align 1
 212              	 .global xQueueGenericCreate
 213              	 .syntax unified
 214              	 .thumb
 215              	 .thumb_func
 216              	 .type xQueueGenericCreate,%function
 217              	xQueueGenericCreate:
 218              	 .fnstart
 219              	.LFB12:
 311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, c
 314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 220              	 .loc 1 314 1
 221              	 .cfi_startproc
 222              	 
 223              	 
 224 0000 80B5     	 push {r7,lr}
 225              	 .save {r7,lr}
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229              	 .pad #40
 230 0002 8AB0     	 sub sp,sp,#40
 231              	 .cfi_def_cfa_offset 48
 232              	 .setfp r7,sp,#0
 233 0004 00AF     	 add r7,sp,#0
 234              	 .cfi_def_cfa_register 7
 235 0006 F860     	 str r0,[r7,#12]
 236 0008 B960     	 str r1,[r7,#8]
 237 000a 1346     	 mov r3,r2
 238 000c FB71     	 strb r3,[r7,#7]
 315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t *pxNewQueue;
 316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** size_t xQueueSizeInBytes;
 317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** QueueHandle_t xReturn = NULL;
 239              	 .loc 1 317 15
 240 000e 0023     	 movs r3,#0
 241 0010 3B62     	 str r3,[r7,#32]
 318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Remove compiler warnings about unused parameters should
 320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	( void ) ucQueueType;
 322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 242              	 .loc 1 323 2
 243 0012 FB68     	 ldr r3,[r7,#12]
 244 0014 002B     	 cmp r3,#0
 245 0016 0AD1     	 bne .L10
 246              	.LBB84:
 247              	.LBB85:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
ARM GAS   			page 15


 248              	 .loc 2 215 2
 249              	 .syntax unified
 250              	
 251 0018 4FF01003 	 mov r3,#16
 252 001c 83F31188 	 msr basepri,r3
 253 0020 BFF36F8F 	 isb 
 254 0024 BFF34F8F 	 dsb 
 255              	
 256              	
 257              	 .thumb
 258              	 .syntax unified
 259 0028 BB61     	 str r3,[r7,#24]
 260              	 .loc 2 223 1
 261 002a 00BF     	 nop
 262              	.L11:
 263              	.LBE85:
 264              	.LBE84:
 265              	 .loc 1 323 2 discriminator 1
 266 002c FEE7     	 b .L11
 267              	.L10:
 324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 268              	 .loc 1 325 2
 269 002e BB68     	 ldr r3,[r7,#8]
 270 0030 002B     	 cmp r3,#0
 271 0032 02D1     	 bne .L12
 326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* There is not going to be a queue storage area. */
 328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xQueueSizeInBytes = ( size_t ) 0;
 272              	 .loc 1 328 21
 273 0034 0023     	 movs r3,#0
 274 0036 7B62     	 str r3,[r7,#36]
 275 0038 05E0     	 b .L13
 276              	.L12:
 329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else
 331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* The queue is one byte longer than asked for to make wrap checking
 333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		easier/faster. */
 334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA 
 277              	 .loc 1 334 50
 278 003a FB68     	 ldr r3,[r7,#12]
 279 003c BA68     	 ldr r2,[r7,#8]
 280 003e 02FB03F3 	 mul r3,r2,r3
 281              	 .loc 1 334 21
 282 0042 0133     	 adds r3,r3,#1
 283 0044 7B62     	 str r3,[r7,#36]
 284              	.L13:
 335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Allocate the new queue structure and storage area. */
 338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 285              	 .loc 1 338 41
 286 0046 7B6A     	 ldr r3,[r7,#36]
 287 0048 5433     	 adds r3,r3,#84
 288 004a 1846     	 mov r0,r3
 289 004c FFF7FEFF 	 bl pvPortMalloc
ARM GAS   			page 16


 290 0050 0346     	 mov r3,r0
 291 0052 FB61     	 str r3,[r7,#28]
 339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( pxNewQueue != NULL )
 292              	 .loc 1 340 2
 293 0054 FB69     	 ldr r3,[r7,#28]
 294 0056 002B     	 cmp r3,#0
 295 0058 1BD0     	 beq .L14
 341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 296              	 .loc 1 342 3
 297 005a BB68     	 ldr r3,[r7,#8]
 298 005c 002B     	 cmp r3,#0
 299 005e 03D1     	 bne .L15
 343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* No RAM was allocated for the queue storage area, but PC head
 345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			cannot be set to NULL because NULL is used as a key to say the queue
 346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			is used as a mutex.  Therefore just set pcHead to point to the queue
 347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			as a benign value that is known to be within the memory map. */
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 300              	 .loc 1 348 23
 301 0060 FB69     	 ldr r3,[r7,#28]
 302 0062 FA69     	 ldr r2,[r7,#28]
 303 0064 1A60     	 str r2,[r3]
 304 0066 04E0     	 b .L16
 305              	.L15:
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Jump past the queue structure to find the location of the queue
 353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			storage area. */
 354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->pcHead = ( ( int8_t * ) pxNewQueue ) + sizeof( Queue_t );
 306              	 .loc 1 354 53
 307 0068 FB69     	 ldr r3,[r7,#28]
 308 006a 03F15402 	 add r2,r3,#84
 309              	 .loc 1 354 23
 310 006e FB69     	 ldr r3,[r7,#28]
 311 0070 1A60     	 str r2,[r3]
 312              	.L16:
 355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Initialise the queue members as described above where the queue type
 358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		is defined. */
 359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxNewQueue->uxLength = uxQueueLength;
 313              	 .loc 1 359 24
 314 0072 FB69     	 ldr r3,[r7,#28]
 315 0074 FA68     	 ldr r2,[r7,#12]
 316 0076 DA63     	 str r2,[r3,#60]
 360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxNewQueue->uxItemSize = uxItemSize;
 317              	 .loc 1 360 26
 318 0078 FB69     	 ldr r3,[r7,#28]
 319 007a BA68     	 ldr r2,[r7,#8]
 320 007c 1A64     	 str r2,[r3,#64]
 361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 321              	 .loc 1 361 30
 322 007e 0121     	 movs r1,#1
 323 0080 F869     	 ldr r0,[r7,#28]
ARM GAS   			page 17


 324 0082 FFF7FEFF 	 bl xQueueGenericReset
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
 364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->ucQueueType = ucQueueType;
 325              	 .loc 1 365 28
 326 0086 FB69     	 ldr r3,[r7,#28]
 327 0088 FA79     	 ldrb r2,[r7,#7]
 328 008a 83F85020 	 strb r2,[r3,#80]
 366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#endif /* configUSE_TRACE_FACILITY */
 368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#if( configUSE_QUEUE_SETS == 1 )
 370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->pxQueueSetContainer = NULL;
 372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#endif /* configUSE_QUEUE_SETS */
 374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		traceQUEUE_CREATE( pxNewQueue );
 376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xReturn = pxNewQueue;
 329              	 .loc 1 376 11
 330 008e FB69     	 ldr r3,[r7,#28]
 331 0090 3B62     	 str r3,[r7,#32]
 332              	.L14:
 377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else
 379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		mtCOVERAGE_TEST_MARKER();
 381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( xReturn );
 333              	 .loc 1 383 2
 334 0092 3B6A     	 ldr r3,[r7,#32]
 335 0094 002B     	 cmp r3,#0
 336 0096 0AD1     	 bne .L17
 337              	.LBB86:
 338              	.LBB87:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 339              	 .loc 2 215 2
 340              	 .syntax unified
 341              	
 342 0098 4FF01003 	 mov r3,#16
 343 009c 83F31188 	 msr basepri,r3
 344 00a0 BFF36F8F 	 isb 
 345 00a4 BFF34F8F 	 dsb 
 346              	
 347              	
 348              	 .thumb
 349              	 .syntax unified
 350 00a8 7B61     	 str r3,[r7,#20]
 351              	 .loc 2 223 1
 352 00aa 00BF     	 nop
 353              	.L18:
 354              	.LBE87:
 355              	.LBE86:
 356              	 .loc 1 383 2 discriminator 2
 357 00ac FEE7     	 b .L18
ARM GAS   			page 18


 358              	.L17:
 384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 359              	 .loc 1 385 9
 360 00ae 3B6A     	 ldr r3,[r7,#32]
 386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 361              	 .loc 1 386 1
 362 00b0 1846     	 mov r0,r3
 363 00b2 2837     	 adds r7,r7,#40
 364              	 .cfi_def_cfa_offset 8
 365 00b4 BD46     	 mov sp,r7
 366              	 .cfi_def_cfa_register 13
 367              	 
 368 00b6 80BD     	 pop {r7,pc}
 369              	 .cfi_endproc
 370              	.LFE12:
 371              	 .fnend
 372              	 .size xQueueGenericCreate,.-xQueueGenericCreate
 373              	 .section .text.xQueueCreateMutex,"ax",%progbits
 374              	 .align 1
 375              	 .global xQueueCreateMutex
 376              	 .syntax unified
 377              	 .thumb
 378              	 .thumb_func
 379              	 .type xQueueCreateMutex,%function
 380              	xQueueCreateMutex:
 381              	 .fnstart
 382              	.LFB13:
 387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_MUTEXES == 1 )
 390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 383              	 .loc 1 392 2
 384              	 .cfi_startproc
 385              	 
 386              	 
 387 0000 80B5     	 push {r7,lr}
 388              	 .save {r7,lr}
 389              	 .cfi_def_cfa_offset 8
 390              	 .cfi_offset 7,-8
 391              	 .cfi_offset 14,-4
 392              	 .pad #16
 393 0002 84B0     	 sub sp,sp,#16
 394              	 .cfi_def_cfa_offset 24
 395              	 .setfp r7,sp,#0
 396 0004 00AF     	 add r7,sp,#0
 397              	 .cfi_def_cfa_register 7
 398 0006 0346     	 mov r3,r0
 399 0008 FB71     	 strb r3,[r7,#7]
 393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t *pxNewQueue;
 394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Prevent compiler warnings about unused parameters if
 396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( void ) ucQueueType;
 398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
ARM GAS   			page 19


 399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Allocate the new queue structure. */
 400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 400              	 .loc 1 400 42
 401 000a 5420     	 movs r0,#84
 402 000c FFF7FEFF 	 bl pvPortMalloc
 403 0010 0346     	 mov r3,r0
 404 0012 FB60     	 str r3,[r7,#12]
 401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxNewQueue != NULL )
 405              	 .loc 1 401 3
 406 0014 FB68     	 ldr r3,[r7,#12]
 407 0016 002B     	 cmp r3,#0
 408 0018 30D0     	 beq .L21
 402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Information required for priority inheritance. */
 404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 409              	 .loc 1 404 30
 410 001a FB68     	 ldr r3,[r7,#12]
 411 001c 0022     	 movs r2,#0
 412 001e 5A60     	 str r2,[r3,#4]
 405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 413              	 .loc 1 405 28
 414 0020 FB68     	 ldr r3,[r7,#12]
 415 0022 0022     	 movs r2,#0
 416 0024 1A60     	 str r2,[r3]
 406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			of the queue. */
 409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 417              	 .loc 1 409 26
 418 0026 FB68     	 ldr r3,[r7,#12]
 419 0028 0022     	 movs r2,#0
 420 002a 9A60     	 str r2,[r3,#8]
 410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 421              	 .loc 1 410 29
 422 002c FB68     	 ldr r3,[r7,#12]
 423 002e 0022     	 movs r2,#0
 424 0030 DA60     	 str r2,[r3,#12]
 411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			an item size of 0 as nothing is actually copied into or out
 414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			of the mutex. */
 415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 425              	 .loc 1 415 34
 426 0032 FB68     	 ldr r3,[r7,#12]
 427 0034 0022     	 movs r2,#0
 428 0036 9A63     	 str r2,[r3,#56]
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->uxLength = ( UBaseType_t ) 1U;
 429              	 .loc 1 416 25
 430 0038 FB68     	 ldr r3,[r7,#12]
 431 003a 0122     	 movs r2,#1
 432 003c DA63     	 str r2,[r3,#60]
 417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->uxItemSize = ( UBaseType_t ) 0U;
 433              	 .loc 1 417 27
 434 003e FB68     	 ldr r3,[r7,#12]
 435 0040 0022     	 movs r2,#0
 436 0042 1A64     	 str r2,[r3,#64]
 418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
ARM GAS   			page 20


 437              	 .loc 1 418 24
 438 0044 FB68     	 ldr r3,[r7,#12]
 439 0046 4FF0FF32 	 mov r2,#-1
 440 004a 5A64     	 str r2,[r3,#68]
 419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 441              	 .loc 1 419 24
 442 004c FB68     	 ldr r3,[r7,#12]
 443 004e 4FF0FF32 	 mov r2,#-1
 444 0052 9A64     	 str r2,[r3,#72]
 420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 445              	 .loc 1 423 29
 446 0054 FB68     	 ldr r3,[r7,#12]
 447 0056 FA79     	 ldrb r2,[r7,#7]
 448 0058 83F85020 	 strb r2,[r3,#80]
 424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#endif
 426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#endif
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Ensure the event queues start with the correct state. */
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 449              	 .loc 1 434 19
 450 005c FB68     	 ldr r3,[r7,#12]
 451 005e 1033     	 adds r3,r3,#16
 452 0060 1846     	 mov r0,r3
 453 0062 FFF7FEFF 	 bl vListInitialise
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 454              	 .loc 1 435 19
 455 0066 FB68     	 ldr r3,[r7,#12]
 456 0068 2433     	 adds r3,r3,#36
 457 006a 1846     	 mov r0,r3
 458 006c FFF7FEFF 	 bl vListInitialise
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Start with the semaphore in the expected state. */
 440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 459              	 .loc 1 440 30
 460 0070 0023     	 movs r3,#0
 461 0072 0022     	 movs r2,#0
 462 0074 0021     	 movs r1,#0
 463 0076 F868     	 ldr r0,[r7,#12]
 464 0078 FFF7FEFF 	 bl xQueueGenericSend
 465              	.L21:
 441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceCREATE_MUTEX_FAILED();
 445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
ARM GAS   			page 21


 447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return pxNewQueue;
 466              	 .loc 1 447 10
 467 007c FB68     	 ldr r3,[r7,#12]
 448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 468              	 .loc 1 448 2
 469 007e 1846     	 mov r0,r3
 470 0080 1037     	 adds r7,r7,#16
 471              	 .cfi_def_cfa_offset 8
 472 0082 BD46     	 mov sp,r7
 473              	 .cfi_def_cfa_register 13
 474              	 
 475 0084 80BD     	 pop {r7,pc}
 476              	 .cfi_endproc
 477              	.LFE13:
 478              	 .fnend
 479              	 .size xQueueCreateMutex,.-xQueueCreateMutex
 480              	 .section .text.xQueueGiveMutexRecursive,"ax",%progbits
 481              	 .align 1
 482              	 .global xQueueGiveMutexRecursive
 483              	 .syntax unified
 484              	 .thumb
 485              	 .thumb_func
 486              	 .type xQueueGiveMutexRecursive,%function
 487              	xQueueGiveMutexRecursive:
 488              	 .fnstart
 489              	.LFB14:
 449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_MUTEXES */
 451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	void *pxReturn;
 458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		identity of the mutex holder, as the holder may change between the
 463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		following critical section exiting and the function returning. */
 464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskENTER_CRITICAL();
 465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxReturn = NULL;
 473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskEXIT_CRITICAL();
 476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return pxReturn;
 478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
ARM GAS   			page 22


 480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif
 481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 490              	 .loc 1 486 2
 491              	 .cfi_startproc
 492              	 
 493              	 
 494 0000 90B5     	 push {r4,r7,lr}
 495              	 .save {r4,r7,lr}
 496              	 .cfi_def_cfa_offset 12
 497              	 .cfi_offset 4,-12
 498              	 .cfi_offset 7,-8
 499              	 .cfi_offset 14,-4
 500              	 .pad #28
 501 0002 87B0     	 sub sp,sp,#28
 502              	 .cfi_def_cfa_offset 40
 503              	 .setfp r7,sp,#0
 504 0004 00AF     	 add r7,sp,#0
 505              	 .cfi_def_cfa_register 7
 506 0006 7860     	 str r0,[r7,#4]
 487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xReturn;
 488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 507              	 .loc 1 488 18
 508 0008 7B68     	 ldr r3,[r7,#4]
 509 000a 3B61     	 str r3,[r7,#16]
 489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( pxMutex );
 510              	 .loc 1 490 3
 511 000c 3B69     	 ldr r3,[r7,#16]
 512 000e 002B     	 cmp r3,#0
 513 0010 0AD1     	 bne .L24
 514              	.LBB88:
 515              	.LBB89:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 516              	 .loc 2 215 2
 517              	 .syntax unified
 518              	
 519 0012 4FF01003 	 mov r3,#16
 520 0016 83F31188 	 msr basepri,r3
 521 001a BFF36F8F 	 isb 
 522 001e BFF34F8F 	 dsb 
 523              	
 524              	
 525              	 .thumb
 526              	 .syntax unified
 527 0022 FB60     	 str r3,[r7,#12]
 528              	 .loc 2 223 1
 529 0024 00BF     	 nop
 530              	.L25:
 531              	.LBE89:
 532              	.LBE88:
 533              	 .loc 1 490 3 discriminator 1
 534 0026 FEE7     	 b .L25
ARM GAS   			page 23


 535              	.L24:
 491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		this is the only condition we are interested in it does not matter if
 496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 536              	 .loc 1 498 16
 537 0028 3B69     	 ldr r3,[r7,#16]
 538 002a 5C68     	 ldr r4,[r3,#4]
 539              	 .loc 1 498 69
 540 002c FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 541 0030 0346     	 mov r3,r0
 542              	 .loc 1 498 30
 543 0032 9C42     	 cmp r4,r3
 544 0034 0CBF     	 ite eq
 545 0036 0123     	 moveq r3,#1
 546 0038 0023     	 movne r3,#0
 547 003a DBB2     	 uxtb r3,r3
 548              	 .loc 1 498 3
 549 003c 002B     	 cmp r3,#0
 550 003e 11D0     	 beq .L26
 499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			uxRecursiveCallCount member. */
 507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 551              	 .loc 1 507 17
 552 0040 3B69     	 ldr r3,[r7,#16]
 553 0042 DB68     	 ldr r3,[r3,#12]
 554              	 .loc 1 507 39
 555 0044 5A1E     	 subs r2,r3,#1
 556 0046 3B69     	 ldr r3,[r7,#16]
 557 0048 DA60     	 str r2,[r3,#12]
 508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Have we unwound the call count? */
 510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 558              	 .loc 1 510 19
 559 004a 3B69     	 ldr r3,[r7,#16]
 560 004c DB68     	 ldr r3,[r3,#12]
 561              	 .loc 1 510 4
 562 004e 002B     	 cmp r3,#0
 563 0050 05D1     	 bne .L27
 511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				task that might be waiting to access the mutex. */
 514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 564              	 .loc 1 514 31
 565 0052 0023     	 movs r3,#0
 566 0054 0022     	 movs r2,#0
 567 0056 0021     	 movs r1,#0
ARM GAS   			page 24


 568 0058 3869     	 ldr r0,[r7,#16]
 569 005a FFF7FEFF 	 bl xQueueGenericSend
 570              	.L27:
 515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
 519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 571              	 .loc 1 521 12
 572 005e 0123     	 movs r3,#1
 573 0060 7B61     	 str r3,[r7,#20]
 574 0062 01E0     	 b .L28
 575              	.L26:
 522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* The mutex cannot be given because the calling task is not the
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			holder. */
 527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFAIL;
 576              	 .loc 1 527 12
 577 0064 0023     	 movs r3,#0
 578 0066 7B61     	 str r3,[r7,#20]
 579              	.L28:
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xReturn;
 580              	 .loc 1 532 10
 581 0068 7B69     	 ldr r3,[r7,#20]
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 582              	 .loc 1 533 2
 583 006a 1846     	 mov r0,r3
 584 006c 1C37     	 adds r7,r7,#28
 585              	 .cfi_def_cfa_offset 12
 586 006e BD46     	 mov sp,r7
 587              	 .cfi_def_cfa_register 13
 588              	 
 589 0070 90BD     	 pop {r4,r7,pc}
 590              	 .cfi_endproc
 591              	.LFE14:
 592              	 .fnend
 593              	 .size xQueueGiveMutexRecursive,.-xQueueGiveMutexRecursive
 594              	 .section .text.xQueueTakeMutexRecursive,"ax",%progbits
 595              	 .align 1
 596              	 .global xQueueTakeMutexRecursive
 597              	 .syntax unified
 598              	 .thumb
 599              	 .thumb_func
 600              	 .type xQueueTakeMutexRecursive,%function
 601              	xQueueTakeMutexRecursive:
 602              	 .fnstart
 603              	.LFB15:
 534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
ARM GAS   			page 25


 536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 604              	 .loc 1 541 2
 605              	 .cfi_startproc
 606              	 
 607              	 
 608 0000 90B5     	 push {r4,r7,lr}
 609              	 .save {r4,r7,lr}
 610              	 .cfi_def_cfa_offset 12
 611              	 .cfi_offset 4,-12
 612              	 .cfi_offset 7,-8
 613              	 .cfi_offset 14,-4
 614              	 .pad #28
 615 0002 87B0     	 sub sp,sp,#28
 616              	 .cfi_def_cfa_offset 40
 617              	 .setfp r7,sp,#0
 618 0004 00AF     	 add r7,sp,#0
 619              	 .cfi_def_cfa_register 7
 620 0006 7860     	 str r0,[r7,#4]
 621 0008 3960     	 str r1,[r7]
 542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xReturn;
 543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 622              	 .loc 1 543 18
 623 000a 7B68     	 ldr r3,[r7,#4]
 624 000c 3B61     	 str r3,[r7,#16]
 544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( pxMutex );
 625              	 .loc 1 545 3
 626 000e 3B69     	 ldr r3,[r7,#16]
 627 0010 002B     	 cmp r3,#0
 628 0012 0AD1     	 bne .L31
 629              	.LBB90:
 630              	.LBB91:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 631              	 .loc 2 215 2
 632              	 .syntax unified
 633              	
 634 0014 4FF01003 	 mov r3,#16
 635 0018 83F31188 	 msr basepri,r3
 636 001c BFF36F8F 	 isb 
 637 0020 BFF34F8F 	 dsb 
 638              	
 639              	
 640              	 .thumb
 641              	 .syntax unified
 642 0024 FB60     	 str r3,[r7,#12]
 643              	 .loc 2 223 1
 644 0026 00BF     	 nop
 645              	.L32:
 646              	.LBE91:
 647              	.LBE90:
 648              	 .loc 1 545 3 discriminator 1
 649 0028 FEE7     	 b .L32
ARM GAS   			page 26


 650              	.L31:
 546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Comments regarding mutual exclusion as per those within
 548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xQueueGiveMutexRecursive(). */
 549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 651              	 .loc 1 552 16
 652 002a 3B69     	 ldr r3,[r7,#16]
 653 002c 5C68     	 ldr r4,[r3,#4]
 654              	 .loc 1 552 69
 655 002e FFF7FEFF 	 bl xTaskGetCurrentTaskHandle
 656 0032 0346     	 mov r3,r0
 657              	 .loc 1 552 30
 658 0034 9C42     	 cmp r4,r3
 659 0036 0CBF     	 ite eq
 660 0038 0123     	 moveq r3,#1
 661 003a 0023     	 movne r3,#0
 662 003c DBB2     	 uxtb r3,r3
 663              	 .loc 1 552 3
 664 003e 002B     	 cmp r3,#0
 665 0040 07D0     	 beq .L33
 553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 666              	 .loc 1 554 17
 667 0042 3B69     	 ldr r3,[r7,#16]
 668 0044 DB68     	 ldr r3,[r3,#12]
 669              	 .loc 1 554 39
 670 0046 5A1C     	 adds r2,r3,#1
 671 0048 3B69     	 ldr r3,[r7,#16]
 672 004a DA60     	 str r2,[r3,#12]
 555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 673              	 .loc 1 555 12
 674 004c 0123     	 movs r3,#1
 675 004e 7B61     	 str r3,[r7,#20]
 676 0050 0FE0     	 b .L34
 677              	.L33:
 556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 678              	 .loc 1 559 34
 679 0052 0023     	 movs r3,#0
 680 0054 3A68     	 ldr r2,[r7]
 681 0056 0021     	 movs r1,#0
 682 0058 3869     	 ldr r0,[r7,#16]
 683 005a FFF7FEFF 	 bl xQueueGenericReceive
 684 005e 0346     	 mov r3,r0
 685 0060 7B61     	 str r3,[r7,#20]
 560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			obtained.  The calling task may have entered the Blocked state
 563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			before reaching here. */
 564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( xReturn == pdPASS )
 686              	 .loc 1 564 4
 687 0062 7B69     	 ldr r3,[r7,#20]
ARM GAS   			page 27


 688 0064 012B     	 cmp r3,#1
 689 0066 04D1     	 bne .L34
 565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 690              	 .loc 1 566 18
 691 0068 3B69     	 ldr r3,[r7,#16]
 692 006a DB68     	 ldr r3,[r3,#12]
 693              	 .loc 1 566 40
 694 006c 5A1C     	 adds r2,r3,#1
 695 006e 3B69     	 ldr r3,[r7,#16]
 696 0070 DA60     	 str r2,[r3,#12]
 697              	.L34:
 567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xReturn;
 698              	 .loc 1 574 10
 699 0072 7B69     	 ldr r3,[r7,#20]
 575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 700              	 .loc 1 575 2
 701 0074 1846     	 mov r0,r3
 702 0076 1C37     	 adds r7,r7,#28
 703              	 .cfi_def_cfa_offset 12
 704 0078 BD46     	 mov sp,r7
 705              	 .cfi_def_cfa_register 13
 706              	 
 707 007a 90BD     	 pop {r4,r7,pc}
 708              	 .cfi_endproc
 709              	.LFE15:
 710              	 .fnend
 711              	 .size xQueueTakeMutexRecursive,.-xQueueTakeMutexRecursive
 712              	 .section .text.xQueueCreateCountingSemaphore,"ax",%progbits
 713              	 .align 1
 714              	 .global xQueueCreateCountingSemaphore
 715              	 .syntax unified
 716              	 .thumb
 717              	 .thumb_func
 718              	 .type xQueueCreateCountingSemaphore,%function
 719              	xQueueCreateCountingSemaphore:
 720              	 .fnstart
 721              	.LFB16:
 576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 722              	 .loc 1 583 2
 723              	 .cfi_startproc
 724              	 
 725              	 
ARM GAS   			page 28


 726 0000 80B5     	 push {r7,lr}
 727              	 .save {r7,lr}
 728              	 .cfi_def_cfa_offset 8
 729              	 .cfi_offset 7,-8
 730              	 .cfi_offset 14,-4
 731              	 .pad #24
 732 0002 86B0     	 sub sp,sp,#24
 733              	 .cfi_def_cfa_offset 32
 734              	 .setfp r7,sp,#0
 735 0004 00AF     	 add r7,sp,#0
 736              	 .cfi_def_cfa_register 7
 737 0006 7860     	 str r0,[r7,#4]
 738 0008 3960     	 str r1,[r7]
 584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	QueueHandle_t xHandle;
 585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( uxMaxCount != 0 );
 739              	 .loc 1 586 3
 740 000a 7B68     	 ldr r3,[r7,#4]
 741 000c 002B     	 cmp r3,#0
 742 000e 0AD1     	 bne .L37
 743              	.LBB92:
 744              	.LBB93:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 745              	 .loc 2 215 2
 746              	 .syntax unified
 747              	
 748 0010 4FF01003 	 mov r3,#16
 749 0014 83F31188 	 msr basepri,r3
 750 0018 BFF36F8F 	 isb 
 751 001c BFF34F8F 	 dsb 
 752              	
 753              	
 754              	 .thumb
 755              	 .syntax unified
 756 0020 3B61     	 str r3,[r7,#16]
 757              	 .loc 2 223 1
 758 0022 00BF     	 nop
 759              	.L38:
 760              	.LBE93:
 761              	.LBE92:
 762              	 .loc 1 586 3 discriminator 1
 763 0024 FEE7     	 b .L38
 764              	.L37:
 587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 765              	 .loc 1 587 3
 766 0026 3A68     	 ldr r2,[r7]
 767 0028 7B68     	 ldr r3,[r7,#4]
 768 002a 9A42     	 cmp r2,r3
 769 002c 0AD9     	 bls .L39
 770              	.LBB94:
 771              	.LBB95:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 772              	 .loc 2 215 2
 773              	 .syntax unified
 774              	
 775 002e 4FF01003 	 mov r3,#16
 776 0032 83F31188 	 msr basepri,r3
ARM GAS   			page 29


 777 0036 BFF36F8F 	 isb 
 778 003a BFF34F8F 	 dsb 
 779              	
 780              	
 781              	 .thumb
 782              	 .syntax unified
 783 003e FB60     	 str r3,[r7,#12]
 784              	 .loc 2 223 1
 785 0040 00BF     	 nop
 786              	.L40:
 787              	.LBE95:
 788              	.LBE94:
 789              	 .loc 1 587 3 discriminator 2
 790 0042 FEE7     	 b .L40
 791              	.L39:
 588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 792              	 .loc 1 589 32
 793 0044 0222     	 movs r2,#2
 794 0046 0021     	 movs r1,#0
 795 0048 7868     	 ldr r0,[r7,#4]
 796 004a FFF7FEFF 	 bl xQueueGenericCreate
 797 004e 0346     	 mov r3,r0
 798 0050 7B61     	 str r3,[r7,#20]
 590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( xHandle != NULL )
 799              	 .loc 1 591 3
 800 0052 7B69     	 ldr r3,[r7,#20]
 801 0054 002B     	 cmp r3,#0
 802 0056 02D0     	 beq .L41
 592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 803              	 .loc 1 593 49
 804 0058 7B69     	 ldr r3,[r7,#20]
 805 005a 3A68     	 ldr r2,[r7]
 806 005c 9A63     	 str r2,[r3,#56]
 807              	.L41:
 594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( xHandle );
 808              	 .loc 1 602 3
 809 005e 7B69     	 ldr r3,[r7,#20]
 810 0060 002B     	 cmp r3,#0
 811 0062 0AD1     	 bne .L42
 812              	.LBB96:
 813              	.LBB97:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 814              	 .loc 2 215 2
 815              	 .syntax unified
 816              	
 817 0064 4FF01003 	 mov r3,#16
ARM GAS   			page 30


 818 0068 83F31188 	 msr basepri,r3
 819 006c BFF36F8F 	 isb 
 820 0070 BFF34F8F 	 dsb 
 821              	
 822              	
 823              	 .thumb
 824              	 .syntax unified
 825 0074 BB60     	 str r3,[r7,#8]
 826              	 .loc 2 223 1
 827 0076 00BF     	 nop
 828              	.L43:
 829              	.LBE97:
 830              	.LBE96:
 831              	 .loc 1 602 3 discriminator 3
 832 0078 FEE7     	 b .L43
 833              	.L42:
 603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xHandle;
 834              	 .loc 1 603 10
 835 007a 7B69     	 ldr r3,[r7,#20]
 604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 836              	 .loc 1 604 2
 837 007c 1846     	 mov r0,r3
 838 007e 1837     	 adds r7,r7,#24
 839              	 .cfi_def_cfa_offset 8
 840 0080 BD46     	 mov sp,r7
 841              	 .cfi_def_cfa_register 13
 842              	 
 843 0082 80BD     	 pop {r7,pc}
 844              	 .cfi_endproc
 845              	.LFE16:
 846              	 .fnend
 847              	 .size xQueueCreateCountingSemaphore,.-xQueueCreateCountingSemaphore
 848              	 .section .text.xQueueGenericSend,"ax",%progbits
 849              	 .align 1
 850              	 .global xQueueGenericSend
 851              	 .syntax unified
 852              	 .thumb
 853              	 .thumb_func
 854              	 .type xQueueGenericSend,%function
 855              	xQueueGenericSend:
 856              	 .fnstart
 857              	.LFB17:
 605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 858              	 .loc 1 610 1
 859              	 .cfi_startproc
 860              	 
 861              	 
 862 0000 80B5     	 push {r7,lr}
 863              	 .save {r7,lr}
 864              	 .cfi_def_cfa_offset 8
 865              	 .cfi_offset 7,-8
 866              	 .cfi_offset 14,-4
ARM GAS   			page 31


 867              	 .pad #56
 868 0002 8EB0     	 sub sp,sp,#56
 869              	 .cfi_def_cfa_offset 64
 870              	 .setfp r7,sp,#0
 871 0004 00AF     	 add r7,sp,#0
 872              	 .cfi_def_cfa_register 7
 873 0006 F860     	 str r0,[r7,#12]
 874 0008 B960     	 str r1,[r7,#8]
 875 000a 7A60     	 str r2,[r7,#4]
 876 000c 3B60     	 str r3,[r7]
 611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 877              	 .loc 1 611 12
 878 000e 0023     	 movs r3,#0
 879 0010 7B63     	 str r3,[r7,#52]
 612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** TimeOut_t xTimeOut;
 613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 880              	 .loc 1 613 17
 881 0012 FB68     	 ldr r3,[r7,#12]
 882 0014 3B63     	 str r3,[r7,#48]
 614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 883              	 .loc 1 615 2
 884 0016 3B6B     	 ldr r3,[r7,#48]
 885 0018 002B     	 cmp r3,#0
 886 001a 0AD1     	 bne .L46
 887              	.LBB98:
 888              	.LBB99:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 889              	 .loc 2 215 2
 890              	 .syntax unified
 891              	
 892 001c 4FF01003 	 mov r3,#16
 893 0020 83F31188 	 msr basepri,r3
 894 0024 BFF36F8F 	 isb 
 895 0028 BFF34F8F 	 dsb 
 896              	
 897              	
 898              	 .thumb
 899              	 .syntax unified
 900 002c BB62     	 str r3,[r7,#40]
 901              	 .loc 2 223 1
 902 002e 00BF     	 nop
 903              	.L47:
 904              	.LBE99:
 905              	.LBE98:
 906              	 .loc 1 615 2 discriminator 1
 907 0030 FEE7     	 b .L47
 908              	.L46:
 616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 909              	 .loc 1 616 2
 910 0032 BB68     	 ldr r3,[r7,#8]
 911 0034 002B     	 cmp r3,#0
 912 0036 03D1     	 bne .L48
 913              	 .loc 1 616 2 is_stmt 0 discriminator 2
 914 0038 3B6B     	 ldr r3,[r7,#48]
 915 003a 1B6C     	 ldr r3,[r3,#64]
 916 003c 002B     	 cmp r3,#0
ARM GAS   			page 32


 917 003e 01D1     	 bne .L49
 918              	.L48:
 919              	 .loc 1 616 2 discriminator 3
 920 0040 0123     	 movs r3,#1
 921 0042 00E0     	 b .L50
 922              	.L49:
 923              	 .loc 1 616 2 discriminator 4
 924 0044 0023     	 movs r3,#0
 925              	.L50:
 926              	 .loc 1 616 2 discriminator 6
 927 0046 002B     	 cmp r3,#0
 928 0048 0AD1     	 bne .L51
 929              	.LBB100:
 930              	.LBB101:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 931              	 .loc 2 215 2 is_stmt 1
 932              	 .syntax unified
 933              	
 934 004a 4FF01003 	 mov r3,#16
 935 004e 83F31188 	 msr basepri,r3
 936 0052 BFF36F8F 	 isb 
 937 0056 BFF34F8F 	 dsb 
 938              	
 939              	
 940              	 .thumb
 941              	 .syntax unified
 942 005a 7B62     	 str r3,[r7,#36]
 943              	 .loc 2 223 1
 944 005c 00BF     	 nop
 945              	.L52:
 946              	.LBE101:
 947              	.LBE100:
 948              	 .loc 1 616 2 discriminator 2
 949 005e FEE7     	 b .L52
 950              	.L51:
 617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 951              	 .loc 1 617 2
 952 0060 3B68     	 ldr r3,[r7]
 953 0062 022B     	 cmp r3,#2
 954 0064 03D1     	 bne .L53
 955              	 .loc 1 617 2 is_stmt 0 discriminator 2
 956 0066 3B6B     	 ldr r3,[r7,#48]
 957 0068 DB6B     	 ldr r3,[r3,#60]
 958 006a 012B     	 cmp r3,#1
 959 006c 01D1     	 bne .L54
 960              	.L53:
 961              	 .loc 1 617 2 discriminator 3
 962 006e 0123     	 movs r3,#1
 963 0070 00E0     	 b .L55
 964              	.L54:
 965              	 .loc 1 617 2 discriminator 4
 966 0072 0023     	 movs r3,#0
 967              	.L55:
 968              	 .loc 1 617 2 discriminator 6
 969 0074 002B     	 cmp r3,#0
 970 0076 0AD1     	 bne .L56
 971              	.LBB102:
ARM GAS   			page 33


 972              	.LBB103:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 973              	 .loc 2 215 2 is_stmt 1
 974              	 .syntax unified
 975              	
 976 0078 4FF01003 	 mov r3,#16
 977 007c 83F31188 	 msr basepri,r3
 978 0080 BFF36F8F 	 isb 
 979 0084 BFF34F8F 	 dsb 
 980              	
 981              	
 982              	 .thumb
 983              	 .syntax unified
 984 0088 3B62     	 str r3,[r7,#32]
 985              	 .loc 2 223 1
 986 008a 00BF     	 nop
 987              	.L57:
 988              	.LBE103:
 989              	.LBE102:
 990              	 .loc 1 617 2 discriminator 3
 991 008c FEE7     	 b .L57
 992              	.L56:
 618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 993              	 .loc 1 620 3
 994 008e FFF7FEFF 	 bl xTaskGetSchedulerState
 995 0092 0346     	 mov r3,r0
 996 0094 002B     	 cmp r3,#0
 997 0096 02D1     	 bne .L58
 998              	 .loc 1 620 3 is_stmt 0 discriminator 3
 999 0098 7B68     	 ldr r3,[r7,#4]
 1000 009a 002B     	 cmp r3,#0
 1001 009c 01D1     	 bne .L59
 1002              	.L58:
 1003              	 .loc 1 620 3 discriminator 4
 1004 009e 0123     	 movs r3,#1
 1005 00a0 00E0     	 b .L60
 1006              	.L59:
 1007              	 .loc 1 620 3 discriminator 5
 1008 00a2 0023     	 movs r3,#0
 1009              	.L60:
 1010              	 .loc 1 620 3 discriminator 7
 1011 00a4 002B     	 cmp r3,#0
 1012 00a6 0CBF     	 ite eq
 1013 00a8 0123     	 moveq r3,#1
 1014 00aa 0023     	 movne r3,#0
 1015 00ac DBB2     	 uxtb r3,r3
 1016 00ae 002B     	 cmp r3,#0
 1017 00b0 0AD0     	 beq .L61
 1018              	.LBB104:
 1019              	.LBB105:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1020              	 .loc 2 215 2 is_stmt 1
 1021              	 .syntax unified
 1022              	
 1023 00b2 4FF01003 	 mov r3,#16
ARM GAS   			page 34


 1024 00b6 83F31188 	 msr basepri,r3
 1025 00ba BFF36F8F 	 isb 
 1026 00be BFF34F8F 	 dsb 
 1027              	
 1028              	
 1029              	 .thumb
 1030              	 .syntax unified
 1031 00c2 FB61     	 str r3,[r7,#28]
 1032              	 .loc 2 223 1
 1033 00c4 00BF     	 nop
 1034              	.L62:
 1035              	.LBE105:
 1036              	.LBE104:
 1037              	 .loc 1 620 3 discriminator 4
 1038 00c6 FEE7     	 b .L62
 1039              	.L61:
 621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#endif
 623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	statements within the function itself.  This is done in the interest
 627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	of execution time efficiency. */
 628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	for( ;; )
 629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskENTER_CRITICAL();
 1040              	 .loc 1 630 3
 1041 00c8 FFF7FEFF 	 bl vPortEnterCritical
 631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Is there room on the queue now?  The running task must be the
 633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			highest priority task wanting to access the queue.  If the head item
 634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			in the queue is to be overwritten then it does not matter if the
 635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			queue is full. */
 636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1042              	 .loc 1 636 19
 1043 00cc 3B6B     	 ldr r3,[r7,#48]
 1044 00ce 9A6B     	 ldr r2,[r3,#56]
 1045              	 .loc 1 636 48
 1046 00d0 3B6B     	 ldr r3,[r7,#48]
 1047 00d2 DB6B     	 ldr r3,[r3,#60]
 1048              	 .loc 1 636 59
 1049 00d4 9A42     	 cmp r2,r3
 1050 00d6 02D3     	 bcc .L63
 1051              	 .loc 1 636 59 is_stmt 0 discriminator 2
 1052 00d8 3B68     	 ldr r3,[r7]
 1053 00da 022B     	 cmp r3,#2
 1054 00dc 01D1     	 bne .L64
 1055              	.L63:
 1056              	 .loc 1 636 59 discriminator 3
 1057 00de 0123     	 movs r3,#1
 1058 00e0 00E0     	 b .L65
 1059              	.L64:
 1060              	 .loc 1 636 59 discriminator 4
 1061 00e2 0023     	 movs r3,#0
 1062              	.L65:
 1063              	 .loc 1 636 4 is_stmt 1 discriminator 6
 1064 00e4 002B     	 cmp r3,#0
ARM GAS   			page 35


 1065 00e6 2FD0     	 beq .L66
 637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				traceQUEUE_SEND( pxQueue );
 639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1066              	 .loc 1 639 40
 1067 00e8 3A68     	 ldr r2,[r7]
 1068 00ea B968     	 ldr r1,[r7,#8]
 1069 00ec 386B     	 ldr r0,[r7,#48]
 1070 00ee FFF7FEFF 	 bl _ZL18prvCopyDataToQueueP15QueueDefinitionPKvl
 1071 00f2 0346     	 mov r3,r0
 1072 00f4 FB62     	 str r3,[r7,#44]
 640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The queue is a member of a queue set, and posting
 648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							to the queue set caused a higher priority task to
 649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							unblock. A context switch is required. */
 650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
 653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
 655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
 658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* If there was a task waiting for data to arrive on the
 660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						queue then unblock it now. */
 661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								/* The unblocked task has a priority higher than
 666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								our own so yield immediately.  Yes it is ok to
 667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								do this from within the critical section - the
 668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								kernel takes care of that. */
 669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
 672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
 674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else if( xYieldRequired != pdFALSE )
 677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* This path is a special case that will only get
 679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							executed if the task was holding multiple mutexes
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							and the mutexes were given back in an order that is
 681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							different to that in which they were taken. */
 682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
 685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
ARM GAS   			page 36


 686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
 687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#else /* configUSE_QUEUE_SETS */
 691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* If there was a task waiting for data to arrive on the
 693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					queue then unblock it now. */
 694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1073              	 .loc 1 694 10
 1074 00f6 3B6B     	 ldr r3,[r7,#48]
 1075 00f8 5B6A     	 ldr r3,[r3,#36]
 1076              	 .loc 1 694 6
 1077 00fa 002B     	 cmp r3,#0
 1078 00fc 15D0     	 beq .L67
 695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 1079              	 .loc 1 696 37
 1080 00fe 3B6B     	 ldr r3,[r7,#48]
 1081 0100 2433     	 adds r3,r3,#36
 1082              	 .loc 1 696 35
 1083 0102 1846     	 mov r0,r3
 1084 0104 FFF7FEFF 	 bl xTaskRemoveFromEventList
 1085 0108 0346     	 mov r3,r0
 1086              	 .loc 1 696 76
 1087 010a 012B     	 cmp r3,#1
 1088 010c 0CBF     	 ite eq
 1089 010e 0123     	 moveq r3,#1
 1090 0110 0023     	 movne r3,#0
 1091 0112 DBB2     	 uxtb r3,r3
 1092              	 .loc 1 696 7
 1093 0114 002B     	 cmp r3,#0
 1094 0116 13D0     	 beq .L68
 697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The unblocked task has a priority higher than
 699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							our own so yield immediately.  Yes it is ok to do
 700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							this from within the critical section - the kernel
 701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							takes care of that. */
 702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1095              	 .loc 1 702 8
 1096 0118 494B     	 ldr r3,.L78
 1097 011a 4FF08052 	 mov r2,#268435456
 1098 011e 1A60     	 str r2,[r3]
 1099              	 .syntax unified
 1100              	
 1101 0120 BFF34F8F 	 dsb
 1102              	
 1103              	
 1104 0124 BFF36F8F 	 isb
 1105              	
 1106              	 .thumb
 1107              	 .syntax unified
 1108 0128 0AE0     	 b .L68
 1109              	.L67:
 703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
 705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
ARM GAS   			page 37


 706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
 707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else if( xYieldRequired != pdFALSE )
 1110              	 .loc 1 709 11
 1111 012a FB6A     	 ldr r3,[r7,#44]
 1112 012c 002B     	 cmp r3,#0
 1113 012e 07D0     	 beq .L68
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* This path is a special case that will only get
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						executed if the task was holding multiple mutexes and
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						the mutexes were given back in an order that is
 714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						different to that in which they were taken. */
 715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 1114              	 .loc 1 715 7
 1115 0130 434B     	 ldr r3,.L78
 1116 0132 4FF08052 	 mov r2,#268435456
 1117 0136 1A60     	 str r2,[r3]
 1118              	 .syntax unified
 1119              	
 1120 0138 BFF34F8F 	 dsb
 1121              	
 1122              	
 1123 013c BFF36F8F 	 isb
 1124              	
 1125              	 .thumb
 1126              	 .syntax unified
 1127              	.L68:
 716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
 718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
 720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				taskEXIT_CRITICAL();
 1128              	 .loc 1 724 5
 1129 0140 FFF7FEFF 	 bl vPortExitCritical
 725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				return pdPASS;
 1130              	 .loc 1 725 12
 1131 0144 0123     	 movs r3,#1
 1132 0146 76E0     	 b .L77
 1133              	.L66:
 726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1134              	 .loc 1 729 22
 1135 0148 7B68     	 ldr r3,[r7,#4]
 1136              	 .loc 1 729 5
 1137 014a 002B     	 cmp r3,#0
 1138 014c 03D1     	 bne .L70
 730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The queue was full and no block time is specified (or
 732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the block time has expired) so leave now. */
 733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
ARM GAS   			page 38


 1139              	 .loc 1 733 6
 1140 014e FFF7FEFF 	 bl vPortExitCritical
 734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Return to the original privilege level before exiting
 736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the function. */
 737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_FULL;
 1141              	 .loc 1 738 13
 1142 0152 0023     	 movs r3,#0
 1143 0154 6FE0     	 b .L77
 1144              	.L70:
 739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1145              	 .loc 1 740 10
 1146 0156 7B6B     	 ldr r3,[r7,#52]
 1147 0158 002B     	 cmp r3,#0
 1148 015a 06D1     	 bne .L71
 741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The queue was full and a block time was specified so
 743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					configure the timeout structure. */
 744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1149              	 .loc 1 744 26
 1150 015c 07F11403 	 add r3,r7,#20
 1151 0160 1846     	 mov r0,r3
 1152 0162 FFF7FEFF 	 bl vTaskSetTimeOutState
 745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					xEntryTimeSet = pdTRUE;
 1153              	 .loc 1 745 20
 1154 0166 0123     	 movs r3,#1
 1155 0168 7B63     	 str r3,[r7,#52]
 1156              	.L71:
 746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
 748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Entry time was already set. */
 750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
 751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskEXIT_CRITICAL();
 1157              	 .loc 1 754 3
 1158 016a FFF7FEFF 	 bl vPortExitCritical
 755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 756:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 757:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		now the critical section has been exited. */
 758:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 759:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		vTaskSuspendAll();
 1159              	 .loc 1 759 18
 1160 016e FFF7FEFF 	 bl vTaskSuspendAll
 760:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		prvLockQueue( pxQueue );
 1161              	 .loc 1 760 3
 1162 0172 FFF7FEFF 	 bl vPortEnterCritical
 1163 0176 3B6B     	 ldr r3,[r7,#48]
 1164 0178 5B6C     	 ldr r3,[r3,#68]
 1165 017a B3F1FF3F 	 cmp r3,#-1
 1166 017e 0CBF     	 ite eq
 1167 0180 0123     	 moveq r3,#1
 1168 0182 0023     	 movne r3,#0
ARM GAS   			page 39


 1169 0184 DBB2     	 uxtb r3,r3
 1170 0186 002B     	 cmp r3,#0
 1171 0188 02D0     	 beq .L72
 1172              	 .loc 1 760 3 is_stmt 0 discriminator 2
 1173 018a 3B6B     	 ldr r3,[r7,#48]
 1174 018c 0022     	 movs r2,#0
 1175 018e 5A64     	 str r2,[r3,#68]
 1176              	.L72:
 1177              	 .loc 1 760 3 discriminator 4
 1178 0190 3B6B     	 ldr r3,[r7,#48]
 1179 0192 9B6C     	 ldr r3,[r3,#72]
 1180 0194 B3F1FF3F 	 cmp r3,#-1
 1181 0198 0CBF     	 ite eq
 1182 019a 0123     	 moveq r3,#1
 1183 019c 0023     	 movne r3,#0
 1184 019e DBB2     	 uxtb r3,r3
 1185 01a0 002B     	 cmp r3,#0
 1186 01a2 02D0     	 beq .L73
 1187              	 .loc 1 760 3 discriminator 5
 1188 01a4 3B6B     	 ldr r3,[r7,#48]
 1189 01a6 0022     	 movs r2,#0
 1190 01a8 9A64     	 str r2,[r3,#72]
 1191              	.L73:
 1192              	 .loc 1 760 3 discriminator 7
 1193 01aa FFF7FEFF 	 bl vPortExitCritical
 761:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 762:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 763:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1194              	 .loc 1 763 27 is_stmt 1 discriminator 7
 1195 01ae 3A1D     	 adds r2,r7,#4
 1196 01b0 07F11403 	 add r3,r7,#20
 1197 01b4 1146     	 mov r1,r2
 1198 01b6 1846     	 mov r0,r3
 1199 01b8 FFF7FEFF 	 bl xTaskCheckForTimeOut
 1200 01bc 0346     	 mov r3,r0
 1201              	 .loc 1 763 56 discriminator 7
 1202 01be 002B     	 cmp r3,#0
 1203 01c0 0CBF     	 ite eq
 1204 01c2 0123     	 moveq r3,#1
 1205 01c4 0023     	 movne r3,#0
 1206 01c6 DBB2     	 uxtb r3,r3
 1207              	 .loc 1 763 3 discriminator 7
 1208 01c8 002B     	 cmp r3,#0
 1209 01ca 2ED0     	 beq .L74
 764:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 765:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 1210              	 .loc 1 765 22
 1211 01cc 386B     	 ldr r0,[r7,#48]
 1212 01ce FFF7FEFF 	 bl _ZL14prvIsQueueFullPK15QueueDefinition
 1213 01d2 0346     	 mov r3,r0
 1214              	 .loc 1 765 34
 1215 01d4 002B     	 cmp r3,#0
 1216 01d6 14BF     	 ite ne
 1217 01d8 0123     	 movne r3,#1
 1218 01da 0023     	 moveq r3,#0
 1219 01dc DBB2     	 uxtb r3,r3
 1220              	 .loc 1 765 4
ARM GAS   			page 40


 1221 01de 002B     	 cmp r3,#0
 1222 01e0 1DD0     	 beq .L75
 766:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 767:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 768:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 1223              	 .loc 1 768 26
 1224 01e2 3B6B     	 ldr r3,[r7,#48]
 1225 01e4 1033     	 adds r3,r3,#16
 1226 01e6 7A68     	 ldr r2,[r7,#4]
 1227 01e8 1146     	 mov r1,r2
 1228 01ea 1846     	 mov r0,r3
 1229 01ec FFF7FEFF 	 bl vTaskPlaceOnEventList
 769:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 770:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Unlocking the queue means queue events can effect the
 771:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				event list.  It is possible	that interrupts occurring now
 772:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				remove this task from the event	list again - but as the
 773:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				scheduler is suspended the task will go onto the pending
 774:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				ready last instead of the actual ready list. */
 775:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvUnlockQueue( pxQueue );
 1230              	 .loc 1 775 19
 1231 01f0 386B     	 ldr r0,[r7,#48]
 1232 01f2 FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
 776:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 777:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 778:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				ready list into the ready list - so it is feasible that this
 779:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				task is already in a ready list before it yields - in which
 780:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				case the yield will not cause a context switch unless there
 781:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				is also a higher priority task in the pending ready list. */
 782:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1233              	 .loc 1 782 23
 1234 01f6 FFF7FEFF 	 bl xTaskResumeAll
 1235 01fa 0346     	 mov r3,r0
 1236              	 .loc 1 782 26
 1237 01fc 002B     	 cmp r3,#0
 1238 01fe 0CBF     	 ite eq
 1239 0200 0123     	 moveq r3,#1
 1240 0202 0023     	 movne r3,#0
 1241 0204 DBB2     	 uxtb r3,r3
 1242              	 .loc 1 782 5
 1243 0206 002B     	 cmp r3,#0
 1244 0208 3FF45EAF 	 beq .L61
 783:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 784:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portYIELD_WITHIN_API();
 1245              	 .loc 1 784 6
 1246 020c 0C4B     	 ldr r3,.L78
 1247 020e 4FF08052 	 mov r2,#268435456
 1248 0212 1A60     	 str r2,[r3]
 1249              	 .syntax unified
 1250              	
 1251 0214 BFF34F8F 	 dsb
 1252              	
 1253              	
 1254 0218 BFF36F8F 	 isb
 1255              	
 1256              	 .thumb
 1257              	 .syntax unified
 1258 021c 54E7     	 b .L61
ARM GAS   			page 41


 1259              	.L75:
 785:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 786:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 787:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
 788:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 789:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Try again. */
 790:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvUnlockQueue( pxQueue );
 1260              	 .loc 1 790 19
 1261 021e 386B     	 ldr r0,[r7,#48]
 1262 0220 FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
 791:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				( void ) xTaskResumeAll();
 1263              	 .loc 1 791 28
 1264 0224 FFF7FEFF 	 bl xTaskResumeAll
 1265 0228 4EE7     	 b .L61
 1266              	.L74:
 792:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 793:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 794:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
 795:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 796:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* The timeout has expired. */
 797:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			prvUnlockQueue( pxQueue );
 1267              	 .loc 1 797 18
 1268 022a 386B     	 ldr r0,[r7,#48]
 1269 022c FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
 798:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( void ) xTaskResumeAll();
 1270              	 .loc 1 798 27
 1271 0230 FFF7FEFF 	 bl xTaskResumeAll
 799:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 800:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Return to the original privilege level before exiting the
 801:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			function. */
 802:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 803:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			return errQUEUE_FULL;
 1272              	 .loc 1 803 11
 1273 0234 0023     	 movs r3,#0
 1274              	.L77:
 804:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 805:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 806:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 1275              	 .loc 1 806 1 discriminator 7
 1276 0236 1846     	 mov r0,r3
 1277 0238 3837     	 adds r7,r7,#56
 1278              	 .cfi_def_cfa_offset 8
 1279 023a BD46     	 mov sp,r7
 1280              	 .cfi_def_cfa_register 13
 1281              	 
 1282 023c 80BD     	 pop {r7,pc}
 1283              	.L79:
 1284 023e 00BF     	 .align 2
 1285              	.L78:
 1286 0240 04ED00E0 	 .word -536810236
 1287              	 .cfi_endproc
 1288              	.LFE17:
 1289              	 .fnend
 1290              	 .size xQueueGenericSend,.-xQueueGenericSend
 1291              	 .section .text.xQueueGenericSendFromISR,"ax",%progbits
 1292              	 .align 1
 1293              	 .global xQueueGenericSendFromISR
ARM GAS   			page 42


 1294              	 .syntax unified
 1295              	 .thumb
 1296              	 .thumb_func
 1297              	 .type xQueueGenericSendFromISR,%function
 1298              	xQueueGenericSendFromISR:
 1299              	 .fnstart
 1300              	.LFB18:
 807:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 808:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 809:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 810:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 811:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_
 812:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 813:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 814:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	TimeOut_t xTimeOut;
 815:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 816:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 817:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( pxQueue );
 818:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 819:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 820:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		for( ;; )
 821:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 822:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskENTER_CRITICAL();
 823:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 824:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Is there room on the queue now?  To be running we must be
 825:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				the highest priority task wanting to access the queue. */
 826:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 827:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 828:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_SEND( pxQueue );
 829:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 830:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 831:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* If there was a task waiting for data to arrive on the
 832:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					queue then unblock it now. */
 833:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 834:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 835:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 836:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 837:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The unblocked task has a priority higher than
 838:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							our own so yield immediately. */
 839:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							portYIELD_WITHIN_API();
 840:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 841:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
 842:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 843:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
 844:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 845:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 846:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
 847:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 848:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
 849:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 850:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 851:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
 852:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return pdPASS;
 853:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 854:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
 855:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 856:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
ARM GAS   			page 43


 857:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 858:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						taskEXIT_CRITICAL();
 859:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						return errQUEUE_FULL;
 860:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 861:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 862:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 863:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 864:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						xEntryTimeSet = pdTRUE;
 865:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 866:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 867:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 868:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskEXIT_CRITICAL();
 869:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 870:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskENTER_CRITICAL();
 871:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 872:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 873:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 874:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 875:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 876:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 877:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 878:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						portYIELD_WITHIN_API();
 879:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 880:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
 881:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 882:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
 883:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 884:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 885:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
 886:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 887:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
 888:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 889:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_FULL;
 890:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 891:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
 892:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskEXIT_CRITICAL();
 893:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
 894:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 895:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 896:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 897:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
 898:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 899:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 900:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 901:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicks
 902:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 903:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xEntryTimeSet = pdFALSE;
 904:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	TimeOut_t xTimeOut;
 905:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	int8_t *pcOriginalReadPosition;
 906:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 907:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 908:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( pxQueue );
 909:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 910:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 911:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		for( ;; )
 912:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 913:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskENTER_CRITICAL();
ARM GAS   			page 44


 914:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
 915:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 916:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 917:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Remember our read position in case we are just peeking. */
 918:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 919:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 920:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 921:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 922:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xJustPeeking == pdFALSE )
 923:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 924:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 925:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 926:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* Data is actually being removed (not just peeked). */
 927:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						--( pxQueue->uxMessagesWaiting );
 928:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 929:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 930:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 931:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 932:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 933:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								/* Record the information required to implement
 934:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								priority inheritance should it become necessary. */
 935:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 936:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 937:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
 938:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 939:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
 940:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 941:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 942:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						#endif
 943:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 944:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 945:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 946:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 947:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 948:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								portYIELD_WITHIN_API();
 949:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 950:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
 951:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 952:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
 953:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 954:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 955:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 956:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
 957:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 958:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						traceQUEUE_PEEK( pxQueue );
 959:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 960:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The data is not being removed, so reset our read
 961:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						pointer. */
 962:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 963:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 964:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The data is being left in the queue, so see if there are
 965:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						any other tasks waiting for the data. */
 966:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 967:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 968:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* Tasks that are removed from the event list will get added to
 969:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							the pending ready list as the scheduler is still suspended. */
 970:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS   			page 45


 971:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 972:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								/* The task waiting has a higher priority than this task. */
 973:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								portYIELD_WITHIN_API();
 974:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 975:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
 976:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
 977:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
 978:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
 979:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 980:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
 981:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
 982:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
 983:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
 984:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 985:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
 986:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
 987:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return pdPASS;
 988:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 989:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
 990:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
 991:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xTicksToWait == ( TickType_t ) 0 )
 992:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 993:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						taskEXIT_CRITICAL();
 994:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 995:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						return errQUEUE_EMPTY;
 996:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
 997:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 998:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
 999:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
1000:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						xEntryTimeSet = pdTRUE;
1001:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1002:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1003:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1004:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskEXIT_CRITICAL();
1005:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1006:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskENTER_CRITICAL();
1007:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1008:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1009:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1010:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1011:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1012:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1013:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1014:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1015:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1016:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1017:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1018:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								taskENTER_CRITICAL();
1019:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								{
1020:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								}
1022:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								taskEXIT_CRITICAL();
1023:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1024:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1025:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1027:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
ARM GAS   			page 46


1028:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1029:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						#endif
1030:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1031:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1032:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						portYIELD_WITHIN_API();
1033:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1034:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1035:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1036:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1037:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1038:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1039:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1040:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1041:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
1042:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1043:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_EMPTY;
1044:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1045:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1046:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			taskEXIT_CRITICAL();
1047:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1048:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1049:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1050:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1051:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1052:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1053:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1054:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
1055:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 1301              	 .loc 1 1055 1
 1302              	 .cfi_startproc
 1303              	 
 1304              	 
 1305 0000 80B5     	 push {r7,lr}
 1306              	 .save {r7,lr}
 1307              	 .cfi_def_cfa_offset 8
 1308              	 .cfi_offset 7,-8
 1309              	 .cfi_offset 14,-4
 1310              	 .pad #56
 1311 0002 8EB0     	 sub sp,sp,#56
 1312              	 .cfi_def_cfa_offset 64
 1313              	 .setfp r7,sp,#0
 1314 0004 00AF     	 add r7,sp,#0
 1315              	 .cfi_def_cfa_register 7
 1316 0006 F860     	 str r0,[r7,#12]
 1317 0008 B960     	 str r1,[r7,#8]
 1318 000a 7A60     	 str r2,[r7,#4]
 1319 000c 3B60     	 str r3,[r7]
1056:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
1057:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxSavedInterruptStatus;
1058:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1320              	 .loc 1 1058 17
 1321 000e FB68     	 ldr r3,[r7,#12]
 1322 0010 3B63     	 str r3,[r7,#48]
1059:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1060:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 1323              	 .loc 1 1060 2
 1324 0012 3B6B     	 ldr r3,[r7,#48]
ARM GAS   			page 47


 1325 0014 002B     	 cmp r3,#0
 1326 0016 0AD1     	 bne .L81
 1327              	.LBB106:
 1328              	.LBB107:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1329              	 .loc 2 215 2
 1330              	 .syntax unified
 1331              	
 1332 0018 4FF01003 	 mov r3,#16
 1333 001c 83F31188 	 msr basepri,r3
 1334 0020 BFF36F8F 	 isb 
 1335 0024 BFF34F8F 	 dsb 
 1336              	
 1337              	
 1338              	 .thumb
 1339              	 .syntax unified
 1340 0028 BB62     	 str r3,[r7,#40]
 1341              	 .loc 2 223 1
 1342 002a 00BF     	 nop
 1343              	.L82:
 1344              	.LBE107:
 1345              	.LBE106:
 1346              	 .loc 1 1060 2 discriminator 1
 1347 002c FEE7     	 b .L82
 1348              	.L81:
1061:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1349              	 .loc 1 1061 2
 1350 002e BB68     	 ldr r3,[r7,#8]
 1351 0030 002B     	 cmp r3,#0
 1352 0032 03D1     	 bne .L83
 1353              	 .loc 1 1061 2 is_stmt 0 discriminator 2
 1354 0034 3B6B     	 ldr r3,[r7,#48]
 1355 0036 1B6C     	 ldr r3,[r3,#64]
 1356 0038 002B     	 cmp r3,#0
 1357 003a 01D1     	 bne .L84
 1358              	.L83:
 1359              	 .loc 1 1061 2 discriminator 3
 1360 003c 0123     	 movs r3,#1
 1361 003e 00E0     	 b .L85
 1362              	.L84:
 1363              	 .loc 1 1061 2 discriminator 4
 1364 0040 0023     	 movs r3,#0
 1365              	.L85:
 1366              	 .loc 1 1061 2 discriminator 6
 1367 0042 002B     	 cmp r3,#0
 1368 0044 0AD1     	 bne .L86
 1369              	.LBB108:
 1370              	.LBB109:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1371              	 .loc 2 215 2 is_stmt 1
 1372              	 .syntax unified
 1373              	
 1374 0046 4FF01003 	 mov r3,#16
 1375 004a 83F31188 	 msr basepri,r3
 1376 004e BFF36F8F 	 isb 
 1377 0052 BFF34F8F 	 dsb 
 1378              	
ARM GAS   			page 48


 1379              	
 1380              	 .thumb
 1381              	 .syntax unified
 1382 0056 7B62     	 str r3,[r7,#36]
 1383              	 .loc 2 223 1
 1384 0058 00BF     	 nop
 1385              	.L87:
 1386              	.LBE109:
 1387              	.LBE108:
 1388              	 .loc 1 1061 2 discriminator 2
 1389 005a FEE7     	 b .L87
 1390              	.L86:
1062:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1391              	 .loc 1 1062 2
 1392 005c 3B68     	 ldr r3,[r7]
 1393 005e 022B     	 cmp r3,#2
 1394 0060 03D1     	 bne .L88
 1395              	 .loc 1 1062 2 is_stmt 0 discriminator 2
 1396 0062 3B6B     	 ldr r3,[r7,#48]
 1397 0064 DB6B     	 ldr r3,[r3,#60]
 1398 0066 012B     	 cmp r3,#1
 1399 0068 01D1     	 bne .L89
 1400              	.L88:
 1401              	 .loc 1 1062 2 discriminator 3
 1402 006a 0123     	 movs r3,#1
 1403 006c 00E0     	 b .L90
 1404              	.L89:
 1405              	 .loc 1 1062 2 discriminator 4
 1406 006e 0023     	 movs r3,#0
 1407              	.L90:
 1408              	 .loc 1 1062 2 discriminator 6
 1409 0070 002B     	 cmp r3,#0
 1410 0072 0AD1     	 bne .L91
 1411              	.LBB110:
 1412              	.LBB111:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1413              	 .loc 2 215 2 is_stmt 1
 1414              	 .syntax unified
 1415              	
 1416 0074 4FF01003 	 mov r3,#16
 1417 0078 83F31188 	 msr basepri,r3
 1418 007c BFF36F8F 	 isb 
 1419 0080 BFF34F8F 	 dsb 
 1420              	
 1421              	
 1422              	 .thumb
 1423              	 .syntax unified
 1424 0084 3B62     	 str r3,[r7,#32]
 1425              	 .loc 2 223 1
 1426 0086 00BF     	 nop
 1427              	.L92:
 1428              	.LBE111:
 1429              	.LBE110:
 1430              	 .loc 1 1062 2 discriminator 3
 1431 0088 FEE7     	 b .L92
 1432              	.L91:
1063:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
ARM GAS   			page 49


1064:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1065:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1066:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1067:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1068:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1069:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1070:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1071:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	assigned a priority above the configured maximum system call priority.
1072:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1073:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1074:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1075:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1076:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1077:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1078:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1433              	 .loc 1 1078 2
 1434 008a FFF7FEFF 	 bl vPortValidateInterruptPriority
 1435              	.LBB112:
 1436              	.LBB113:
 224:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 225:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 226:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 227:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 228:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 229:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 230:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 1437              	 .loc 2 231 2
 1438              	 .syntax unified
 1439              	
 1440 008e EFF31182 	 mrs r2,basepri
 1441 0092 4FF01003 	 mov r3,#16
 1442 0096 83F31188 	 msr basepri,r3
 1443 009a BFF36F8F 	 isb 
 1444 009e BFF34F8F 	 dsb 
 1445              	
 1446              	
 1447              	 .thumb
 1448              	 .syntax unified
 1449 00a2 FA61     	 str r2,[r7,#28]
 1450 00a4 BB61     	 str r3,[r7,#24]
 232:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 233:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mrs %0, basepri											\n" \
 234:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %1, %2												\n"	\
 235:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %1											\n" \
 236:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 237:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 238:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 239:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 240:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 241:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 242:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	warnings. */
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return ulOriginalBASEPRI;
 1451              	 .loc 2 243 9
 1452 00a6 FB69     	 ldr r3,[r7,#28]
 1453              	.LBE113:
 1454              	.LBE112:
ARM GAS   			page 50


1079:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1080:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1081:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1082:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	post). */
1085:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1455              	 .loc 1 1085 27
 1456 00a8 FB62     	 str r3,[r7,#44]
1086:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1087:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 1457              	 .loc 1 1087 18
 1458 00aa 3B6B     	 ldr r3,[r7,#48]
 1459 00ac 9A6B     	 ldr r2,[r3,#56]
 1460              	 .loc 1 1087 47
 1461 00ae 3B6B     	 ldr r3,[r7,#48]
 1462 00b0 DB6B     	 ldr r3,[r3,#60]
 1463              	 .loc 1 1087 58
 1464 00b2 9A42     	 cmp r2,r3
 1465 00b4 02D3     	 bcc .L94
 1466              	 .loc 1 1087 58 is_stmt 0 discriminator 2
 1467 00b6 3B68     	 ldr r3,[r7]
 1468 00b8 022B     	 cmp r3,#2
 1469 00ba 01D1     	 bne .L95
 1470              	.L94:
 1471              	 .loc 1 1087 58 discriminator 3
 1472 00bc 0123     	 movs r3,#1
 1473 00be 00E0     	 b .L96
 1474              	.L95:
 1475              	 .loc 1 1087 58 discriminator 4
 1476 00c0 0023     	 movs r3,#0
 1477              	.L96:
 1478              	 .loc 1 1087 3 is_stmt 1 discriminator 6
 1479 00c2 002B     	 cmp r3,#0
 1480 00c4 2ED0     	 beq .L97
1088:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1089:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1090:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1091:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
1092:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
1093:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
1094:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			called here even though the disinherit function does not check if
1095:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1096:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 1481              	 .loc 1 1096 31
 1482 00c6 3A68     	 ldr r2,[r7]
 1483 00c8 B968     	 ldr r1,[r7,#8]
 1484 00ca 386B     	 ldr r0,[r7,#48]
 1485 00cc FFF7FEFF 	 bl _ZL18prvCopyDataToQueueP15QueueDefinitionPKvl
1097:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1098:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1099:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			be done when the queue is unlocked later. */
1100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1486              	 .loc 1 1100 17
 1487 00d0 3B6B     	 ldr r3,[r7,#48]
 1488 00d2 9B6C     	 ldr r3,[r3,#72]
 1489              	 .loc 1 1100 25
ARM GAS   			page 51


 1490 00d4 B3F1FF3F 	 cmp r3,#-1
 1491 00d8 0CBF     	 ite eq
 1492 00da 0123     	 moveq r3,#1
 1493 00dc 0023     	 movne r3,#0
 1494 00de DBB2     	 uxtb r3,r3
 1495              	 .loc 1 1100 4
 1496 00e0 002B     	 cmp r3,#0
 1497 00e2 17D0     	 beq .L98
1101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The queue is a member of a queue set, and posting
1109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							to the queue set caused a higher priority task to
1110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							unblock.  A context switch is required. */
1111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								/* The task waiting has a higher priority so
1132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								record that a context switch is required. */
1133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								{
1135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								}
1137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								else
1138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								{
1139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 									mtCOVERAGE_TEST_MARKER();
1140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								}
1141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS   			page 52


1150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#else /* configUSE_QUEUE_SETS */
1154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1498              	 .loc 1 1155 10
 1499 00e4 3B6B     	 ldr r3,[r7,#48]
 1500 00e6 5B6A     	 ldr r3,[r3,#36]
 1501              	 .loc 1 1155 6
 1502 00e8 002B     	 cmp r3,#0
 1503 00ea 18D0     	 beq .L99
1156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1504              	 .loc 1 1157 37
 1505 00ec 3B6B     	 ldr r3,[r7,#48]
 1506 00ee 2433     	 adds r3,r3,#36
 1507              	 .loc 1 1157 35
 1508 00f0 1846     	 mov r0,r3
 1509 00f2 FFF7FEFF 	 bl xTaskRemoveFromEventList
 1510 00f6 0346     	 mov r3,r0
 1511              	 .loc 1 1157 76
 1512 00f8 002B     	 cmp r3,#0
 1513 00fa 14BF     	 ite ne
 1514 00fc 0123     	 movne r3,#1
 1515 00fe 0023     	 moveq r3,#0
 1516 0100 DBB2     	 uxtb r3,r3
 1517              	 .loc 1 1157 7
 1518 0102 002B     	 cmp r3,#0
 1519 0104 0BD0     	 beq .L99
1158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The task waiting has a higher priority so record that a
1160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							context	switch is required. */
1161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1520              	 .loc 1 1161 8
 1521 0106 7B68     	 ldr r3,[r7,#4]
 1522 0108 002B     	 cmp r3,#0
 1523 010a 08D0     	 beq .L99
1162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1524              	 .loc 1 1163 36
 1525 010c 7B68     	 ldr r3,[r7,#4]
 1526 010e 0122     	 movs r2,#1
 1527 0110 1A60     	 str r2,[r3]
 1528 0112 04E0     	 b .L99
 1529              	.L98:
1164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
ARM GAS   			page 53


1175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				knows that data was posted while it was locked. */
1186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				++( pxQueue->xTxLock );
 1530              	 .loc 1 1186 18
 1531 0114 3B6B     	 ldr r3,[r7,#48]
 1532 0116 9B6C     	 ldr r3,[r3,#72]
 1533              	 .loc 1 1186 5
 1534 0118 5A1C     	 adds r2,r3,#1
 1535 011a 3B6B     	 ldr r3,[r7,#48]
 1536 011c 9A64     	 str r2,[r3,#72]
 1537              	.L99:
1187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 1538              	 .loc 1 1189 12
 1539 011e 0123     	 movs r3,#1
 1540 0120 7B63     	 str r3,[r7,#52]
 1541 0122 01E0     	 b .L100
 1542              	.L97:
1190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = errQUEUE_FULL;
 1543              	 .loc 1 1194 12
 1544 0124 0023     	 movs r3,#0
 1545 0126 7B63     	 str r3,[r7,#52]
 1546              	.L100:
 1547 0128 FB6A     	 ldr r3,[r7,#44]
 1548 012a 7B61     	 str r3,[r7,#20]
 1549              	.LBB114:
 1550              	.LBB115:
 244:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 245:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 246:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 247:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 248:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 1551              	 .loc 2 249 2
 1552 012c 7B69     	 ldr r3,[r7,#20]
 1553              	 .syntax unified
 1554              	
 1555 012e 83F31188 	 msr basepri,r3
 1556              	
 250:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 251:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue )
 252:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 253:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
ARM GAS   			page 54


 1557              	 .loc 2 253 1
 1558              	 .thumb
 1559              	 .syntax unified
 1560 0132 00BF     	 nop
 1561              	.LBE115:
 1562              	.LBE114:
1195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 1563              	 .loc 1 1199 9
 1564 0134 7B6B     	 ldr r3,[r7,#52]
1200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 1565              	 .loc 1 1200 1
 1566 0136 1846     	 mov r0,r3
 1567 0138 3837     	 adds r7,r7,#56
 1568              	 .cfi_def_cfa_offset 8
 1569 013a BD46     	 mov sp,r7
 1570              	 .cfi_def_cfa_register 13
 1571              	 
 1572 013c 80BD     	 pop {r7,pc}
 1573              	 .cfi_endproc
 1574              	.LFE18:
 1575              	 .fnend
 1576              	 .size xQueueGenericSendFromISR,.-xQueueGenericSendFromISR
 1577              	 .section .text.xQueueGiveFromISR,"ax",%progbits
 1578              	 .align 1
 1579              	 .global xQueueGiveFromISR
 1580              	 .syntax unified
 1581              	 .thumb
 1582              	 .thumb_func
 1583              	 .type xQueueGiveFromISR,%function
 1584              	xQueueGiveFromISR:
 1585              	 .fnstart
 1586              	.LFB19:
1201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 1587              	 .loc 1 1204 1
 1588              	 .cfi_startproc
 1589              	 
 1590              	 
 1591 0000 80B5     	 push {r7,lr}
 1592              	 .save {r7,lr}
 1593              	 .cfi_def_cfa_offset 8
 1594              	 .cfi_offset 7,-8
 1595              	 .cfi_offset 14,-4
 1596              	 .pad #48
 1597 0002 8CB0     	 sub sp,sp,#48
 1598              	 .cfi_def_cfa_offset 56
 1599              	 .setfp r7,sp,#0
 1600 0004 00AF     	 add r7,sp,#0
 1601              	 .cfi_def_cfa_register 7
 1602 0006 7860     	 str r0,[r7,#4]
 1603 0008 3960     	 str r1,[r7]
ARM GAS   			page 55


1205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
1206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxSavedInterruptStatus;
1207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1604              	 .loc 1 1207 17
 1605 000a 7B68     	 ldr r3,[r7,#4]
 1606 000c BB62     	 str r3,[r7,#40]
1208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	read, instead return a flag to say whether a context switch is required or
1212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	post). */
1214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 1607              	 .loc 1 1215 2
 1608 000e BB6A     	 ldr r3,[r7,#40]
 1609 0010 002B     	 cmp r3,#0
 1610 0012 0AD1     	 bne .L103
 1611              	.LBB116:
 1612              	.LBB117:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1613              	 .loc 2 215 2
 1614              	 .syntax unified
 1615              	
 1616 0014 4FF01003 	 mov r3,#16
 1617 0018 83F31188 	 msr basepri,r3
 1618 001c BFF36F8F 	 isb 
 1619 0020 BFF34F8F 	 dsb 
 1620              	
 1621              	
 1622              	 .thumb
 1623              	 .syntax unified
 1624 0024 3B62     	 str r3,[r7,#32]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1625              	 .loc 2 223 1
 1626 0026 00BF     	 nop
 1627              	.L104:
 1628              	.LBE117:
 1629              	.LBE116:
 1630              	 .loc 1 1215 2 discriminator 1
 1631 0028 FEE7     	 b .L104
 1632              	.L103:
1216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if the item size is not 0. */
1219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 1633              	 .loc 1 1219 2
 1634 002a BB6A     	 ldr r3,[r7,#40]
 1635 002c 1B6C     	 ldr r3,[r3,#64]
 1636 002e 002B     	 cmp r3,#0
 1637 0030 0AD0     	 beq .L105
 1638              	.LBB118:
 1639              	.LBB119:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1640              	 .loc 2 215 2
 1641              	 .syntax unified
 1642              	
ARM GAS   			page 56


 1643 0032 4FF01003 	 mov r3,#16
 1644 0036 83F31188 	 msr basepri,r3
 1645 003a BFF36F8F 	 isb 
 1646 003e BFF34F8F 	 dsb 
 1647              	
 1648              	
 1649              	 .thumb
 1650              	 .syntax unified
 1651 0042 FB61     	 str r3,[r7,#28]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1652              	 .loc 2 223 1
 1653 0044 00BF     	 nop
 1654              	.L106:
 1655              	.LBE119:
 1656              	.LBE118:
 1657              	 .loc 1 1219 2 discriminator 2
 1658 0046 FEE7     	 b .L106
 1659              	.L105:
1220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	interrupts, only tasks. */
1224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
 1660              	 .loc 1 1224 2
 1661 0048 BB6A     	 ldr r3,[r7,#40]
 1662 004a 1B68     	 ldr r3,[r3]
 1663 004c 002B     	 cmp r3,#0
 1664 004e 03D1     	 bne .L107
 1665              	 .loc 1 1224 2 is_stmt 0 discriminator 2
 1666 0050 BB6A     	 ldr r3,[r7,#40]
 1667 0052 5B68     	 ldr r3,[r3,#4]
 1668 0054 002B     	 cmp r3,#0
 1669 0056 01D1     	 bne .L108
 1670              	.L107:
 1671              	 .loc 1 1224 2 discriminator 3
 1672 0058 0123     	 movs r3,#1
 1673 005a 00E0     	 b .L109
 1674              	.L108:
 1675              	 .loc 1 1224 2 discriminator 4
 1676 005c 0023     	 movs r3,#0
 1677              	.L109:
 1678              	 .loc 1 1224 2 discriminator 6
 1679 005e 002B     	 cmp r3,#0
 1680 0060 0AD1     	 bne .L110
 1681              	.LBB120:
 1682              	.LBB121:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1683              	 .loc 2 215 2 is_stmt 1
 1684              	 .syntax unified
 1685              	
 1686 0062 4FF01003 	 mov r3,#16
 1687 0066 83F31188 	 msr basepri,r3
 1688 006a BFF36F8F 	 isb 
 1689 006e BFF34F8F 	 dsb 
 1690              	
 1691              	
 1692              	 .thumb
ARM GAS   			page 57


 1693              	 .syntax unified
 1694 0072 BB61     	 str r3,[r7,#24]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1695              	 .loc 2 223 1
 1696 0074 00BF     	 nop
 1697              	.L111:
 1698              	.LBE121:
 1699              	.LBE120:
 1700              	 .loc 1 1224 2 discriminator 3
 1701 0076 FEE7     	 b .L111
 1702              	.L110:
1225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	assigned a priority above the configured maximum system call priority.
1234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1703              	 .loc 1 1240 2
 1704 0078 FFF7FEFF 	 bl vPortValidateInterruptPriority
 1705              	.LBB122:
 1706              	.LBB123:
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1707              	 .loc 2 231 2
 1708              	 .syntax unified
 1709              	
 1710 007c EFF31182 	 mrs r2,basepri
 1711 0080 4FF01003 	 mov r3,#16
 1712 0084 83F31188 	 msr basepri,r3
 1713 0088 BFF36F8F 	 isb 
 1714 008c BFF34F8F 	 dsb 
 1715              	
 1716              	
 1717              	 .thumb
 1718              	 .syntax unified
 1719 0090 7A61     	 str r2,[r7,#20]
 1720 0092 3B61     	 str r3,[r7,#16]
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 1721              	 .loc 2 243 9
 1722 0094 7B69     	 ldr r3,[r7,#20]
 1723              	.LBE123:
 1724              	.LBE122:
1241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1725              	 .loc 1 1242 27
 1726 0096 7B62     	 str r3,[r7,#36]
1243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
ARM GAS   			page 58


1245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		space'. */
1247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 1727              	 .loc 1 1247 16
 1728 0098 BB6A     	 ldr r3,[r7,#40]
 1729 009a 9A6B     	 ldr r2,[r3,#56]
 1730              	 .loc 1 1247 45
 1731 009c BB6A     	 ldr r3,[r7,#40]
 1732 009e DB6B     	 ldr r3,[r3,#60]
 1733              	 .loc 1 1247 34
 1734 00a0 9A42     	 cmp r2,r3
 1735 00a2 34BF     	 ite cc
 1736 00a4 0123     	 movcc r3,#1
 1737 00a6 0023     	 movcs r3,#0
 1738 00a8 DBB2     	 uxtb r3,r3
 1739              	 .loc 1 1247 3
 1740 00aa 002B     	 cmp r3,#0
 1741 00ac 2ED0     	 beq .L113
1248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			messages (semaphores) available. */
1257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			++( pxQueue->uxMessagesWaiting );
 1742              	 .loc 1 1257 17
 1743 00ae BB6A     	 ldr r3,[r7,#40]
 1744 00b0 9B6B     	 ldr r3,[r3,#56]
 1745              	 .loc 1 1257 4
 1746 00b2 5A1C     	 adds r2,r3,#1
 1747 00b4 BB6A     	 ldr r3,[r7,#40]
 1748 00b6 9A63     	 str r2,[r3,#56]
1258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			be done when the queue is unlocked later. */
1261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1749              	 .loc 1 1261 17
 1750 00b8 BB6A     	 ldr r3,[r7,#40]
 1751 00ba 9B6C     	 ldr r3,[r3,#72]
 1752              	 .loc 1 1261 25
 1753 00bc B3F1FF3F 	 cmp r3,#-1
 1754 00c0 0CBF     	 ite eq
 1755 00c2 0123     	 moveq r3,#1
 1756 00c4 0023     	 movne r3,#0
 1757 00c6 DBB2     	 uxtb r3,r3
 1758              	 .loc 1 1261 4
 1759 00c8 002B     	 cmp r3,#0
 1760 00ca 17D0     	 beq .L114
1262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
ARM GAS   			page 59


1268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The semaphore is a member of a queue set, and
1270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							posting	to the queue set caused a higher priority
1271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							task to	unblock.  A context switch is required. */
1272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								/* The task waiting has a higher priority so
1293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								record that a context switch is required. */
1294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								{
1296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								}
1298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								else
1299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								{
1300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 									mtCOVERAGE_TEST_MARKER();
1301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								}
1302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#else /* configUSE_QUEUE_SETS */
1315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1761              	 .loc 1 1316 10
 1762 00cc BB6A     	 ldr r3,[r7,#40]
 1763 00ce 5B6A     	 ldr r3,[r3,#36]
 1764              	 .loc 1 1316 6
 1765 00d0 002B     	 cmp r3,#0
 1766 00d2 18D0     	 beq .L115
1317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
ARM GAS   			page 60


 1767              	 .loc 1 1318 37
 1768 00d4 BB6A     	 ldr r3,[r7,#40]
 1769 00d6 2433     	 adds r3,r3,#36
 1770              	 .loc 1 1318 35
 1771 00d8 1846     	 mov r0,r3
 1772 00da FFF7FEFF 	 bl xTaskRemoveFromEventList
 1773 00de 0346     	 mov r3,r0
 1774              	 .loc 1 1318 76
 1775 00e0 002B     	 cmp r3,#0
 1776 00e2 14BF     	 ite ne
 1777 00e4 0123     	 movne r3,#1
 1778 00e6 0023     	 moveq r3,#0
 1779 00e8 DBB2     	 uxtb r3,r3
 1780              	 .loc 1 1318 7
 1781 00ea 002B     	 cmp r3,#0
 1782 00ec 0BD0     	 beq .L115
1319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The task waiting has a higher priority so record that a
1321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							context	switch is required. */
1322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1783              	 .loc 1 1322 8
 1784 00ee 3B68     	 ldr r3,[r7]
 1785 00f0 002B     	 cmp r3,#0
 1786 00f2 08D0     	 beq .L115
1323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1787              	 .loc 1 1324 36
 1788 00f4 3B68     	 ldr r3,[r7]
 1789 00f6 0122     	 movs r2,#1
 1790 00f8 1A60     	 str r2,[r3]
 1791 00fa 04E0     	 b .L115
 1792              	.L114:
1325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							else
1327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							{
1328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 								mtCOVERAGE_TEST_MARKER();
1329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							}
1330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				knows that data was posted while it was locked. */
1347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				++( pxQueue->xTxLock );
 1793              	 .loc 1 1347 18
 1794 00fc BB6A     	 ldr r3,[r7,#40]
ARM GAS   			page 61


 1795 00fe 9B6C     	 ldr r3,[r3,#72]
 1796              	 .loc 1 1347 5
 1797 0100 5A1C     	 adds r2,r3,#1
 1798 0102 BB6A     	 ldr r3,[r7,#40]
 1799 0104 9A64     	 str r2,[r3,#72]
 1800              	.L115:
1348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 1801              	 .loc 1 1350 12
 1802 0106 0123     	 movs r3,#1
 1803 0108 FB62     	 str r3,[r7,#44]
 1804 010a 01E0     	 b .L116
 1805              	.L113:
1351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = errQUEUE_FULL;
 1806              	 .loc 1 1355 12
 1807 010c 0023     	 movs r3,#0
 1808 010e FB62     	 str r3,[r7,#44]
 1809              	.L116:
 1810 0110 7B6A     	 ldr r3,[r7,#36]
 1811 0112 FB60     	 str r3,[r7,#12]
 1812              	.LBB124:
 1813              	.LBB125:
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1814              	 .loc 2 249 2
 1815 0114 FB68     	 ldr r3,[r7,#12]
 1816              	 .syntax unified
 1817              	
 1818 0116 83F31188 	 msr basepri,r3
 1819              	
 1820              	 .loc 2 253 1
 1821              	 .thumb
 1822              	 .syntax unified
 1823 011a 00BF     	 nop
 1824              	.LBE125:
 1825              	.LBE124:
1356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 1826              	 .loc 1 1360 9
 1827 011c FB6A     	 ldr r3,[r7,#44]
1361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 1828              	 .loc 1 1361 1
 1829 011e 1846     	 mov r0,r3
 1830 0120 3037     	 adds r7,r7,#48
 1831              	 .cfi_def_cfa_offset 8
 1832 0122 BD46     	 mov sp,r7
 1833              	 .cfi_def_cfa_register 13
 1834              	 
 1835 0124 80BD     	 pop {r7,pc}
 1836              	 .cfi_endproc
ARM GAS   			page 62


 1837              	.LFE19:
 1838              	 .fnend
 1839              	 .size xQueueGiveFromISR,.-xQueueGiveFromISR
 1840              	 .section .text.xQueueGenericReceive,"ax",%progbits
 1841              	 .align 1
 1842              	 .global xQueueGenericReceive
 1843              	 .syntax unified
 1844              	 .thumb
 1845              	 .thumb_func
 1846              	 .type xQueueGenericReceive,%function
 1847              	xQueueGenericReceive:
 1848              	 .fnstart
 1849              	.LFB20:
1362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 1850              	 .loc 1 1365 1
 1851              	 .cfi_startproc
 1852              	 
 1853              	 
 1854 0000 80B5     	 push {r7,lr}
 1855              	 .save {r7,lr}
 1856              	 .cfi_def_cfa_offset 8
 1857              	 .cfi_offset 7,-8
 1858              	 .cfi_offset 14,-4
 1859              	 .pad #48
 1860 0002 8CB0     	 sub sp,sp,#48
 1861              	 .cfi_def_cfa_offset 56
 1862              	 .setfp r7,sp,#0
 1863 0004 00AF     	 add r7,sp,#0
 1864              	 .cfi_def_cfa_register 7
 1865 0006 F860     	 str r0,[r7,#12]
 1866 0008 B960     	 str r1,[r7,#8]
 1867 000a 7A60     	 str r2,[r7,#4]
 1868 000c 3B60     	 str r3,[r7]
1366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1869              	 .loc 1 1366 12
 1870 000e 0023     	 movs r3,#0
 1871 0010 FB62     	 str r3,[r7,#44]
1367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** TimeOut_t xTimeOut;
1368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** int8_t *pcOriginalReadPosition;
1369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1872              	 .loc 1 1369 17
 1873 0012 FB68     	 ldr r3,[r7,#12]
 1874 0014 BB62     	 str r3,[r7,#40]
1370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 1875              	 .loc 1 1371 2
 1876 0016 BB6A     	 ldr r3,[r7,#40]
 1877 0018 002B     	 cmp r3,#0
 1878 001a 0AD1     	 bne .L119
 1879              	.LBB126:
 1880              	.LBB127:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1881              	 .loc 2 215 2
 1882              	 .syntax unified
ARM GAS   			page 63


 1883              	
 1884 001c 4FF01003 	 mov r3,#16
 1885 0020 83F31188 	 msr basepri,r3
 1886 0024 BFF36F8F 	 isb 
 1887 0028 BFF34F8F 	 dsb 
 1888              	
 1889              	
 1890              	 .thumb
 1891              	 .syntax unified
 1892 002c 3B62     	 str r3,[r7,#32]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1893              	 .loc 2 223 1
 1894 002e 00BF     	 nop
 1895              	.L120:
 1896              	.LBE127:
 1897              	.LBE126:
 1898              	 .loc 1 1371 2 discriminator 1
 1899 0030 FEE7     	 b .L120
 1900              	.L119:
1372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1901              	 .loc 1 1372 2
 1902 0032 BB68     	 ldr r3,[r7,#8]
 1903 0034 002B     	 cmp r3,#0
 1904 0036 03D1     	 bne .L121
 1905              	 .loc 1 1372 2 is_stmt 0 discriminator 2
 1906 0038 BB6A     	 ldr r3,[r7,#40]
 1907 003a 1B6C     	 ldr r3,[r3,#64]
 1908 003c 002B     	 cmp r3,#0
 1909 003e 01D1     	 bne .L122
 1910              	.L121:
 1911              	 .loc 1 1372 2 discriminator 3
 1912 0040 0123     	 movs r3,#1
 1913 0042 00E0     	 b .L123
 1914              	.L122:
 1915              	 .loc 1 1372 2 discriminator 4
 1916 0044 0023     	 movs r3,#0
 1917              	.L123:
 1918              	 .loc 1 1372 2 discriminator 6
 1919 0046 002B     	 cmp r3,#0
 1920 0048 0AD1     	 bne .L124
 1921              	.LBB128:
 1922              	.LBB129:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1923              	 .loc 2 215 2 is_stmt 1
 1924              	 .syntax unified
 1925              	
 1926 004a 4FF01003 	 mov r3,#16
 1927 004e 83F31188 	 msr basepri,r3
 1928 0052 BFF36F8F 	 isb 
 1929 0056 BFF34F8F 	 dsb 
 1930              	
 1931              	
 1932              	 .thumb
 1933              	 .syntax unified
 1934 005a FB61     	 str r3,[r7,#28]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1935              	 .loc 2 223 1
ARM GAS   			page 64


 1936 005c 00BF     	 nop
 1937              	.L125:
 1938              	.LBE129:
 1939              	.LBE128:
 1940              	 .loc 1 1372 2 discriminator 2
 1941 005e FEE7     	 b .L125
 1942              	.L124:
1373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1943              	 .loc 1 1375 3
 1944 0060 FFF7FEFF 	 bl xTaskGetSchedulerState
 1945 0064 0346     	 mov r3,r0
 1946 0066 002B     	 cmp r3,#0
 1947 0068 02D1     	 bne .L126
 1948              	 .loc 1 1375 3 is_stmt 0 discriminator 3
 1949 006a 7B68     	 ldr r3,[r7,#4]
 1950 006c 002B     	 cmp r3,#0
 1951 006e 01D1     	 bne .L127
 1952              	.L126:
 1953              	 .loc 1 1375 3 discriminator 4
 1954 0070 0123     	 movs r3,#1
 1955 0072 00E0     	 b .L128
 1956              	.L127:
 1957              	 .loc 1 1375 3 discriminator 5
 1958 0074 0023     	 movs r3,#0
 1959              	.L128:
 1960              	 .loc 1 1375 3 discriminator 7
 1961 0076 002B     	 cmp r3,#0
 1962 0078 0CBF     	 ite eq
 1963 007a 0123     	 moveq r3,#1
 1964 007c 0023     	 movne r3,#0
 1965 007e DBB2     	 uxtb r3,r3
 1966 0080 002B     	 cmp r3,#0
 1967 0082 0AD0     	 beq .L129
 1968              	.LBB130:
 1969              	.LBB131:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1970              	 .loc 2 215 2 is_stmt 1
 1971              	 .syntax unified
 1972              	
 1973 0084 4FF01003 	 mov r3,#16
 1974 0088 83F31188 	 msr basepri,r3
 1975 008c BFF36F8F 	 isb 
 1976 0090 BFF34F8F 	 dsb 
 1977              	
 1978              	
 1979              	 .thumb
 1980              	 .syntax unified
 1981 0094 BB61     	 str r3,[r7,#24]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1982              	 .loc 2 223 1
 1983 0096 00BF     	 nop
 1984              	.L130:
 1985              	.LBE131:
 1986              	.LBE130:
 1987              	 .loc 1 1375 3 discriminator 3
ARM GAS   			page 65


 1988 0098 FEE7     	 b .L130
 1989              	.L129:
1376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#endif
1378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	statements within the function itself.  This is done in the interest
1381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	of execution time efficiency. */
1382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	for( ;; )
1384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskENTER_CRITICAL();
 1990              	 .loc 1 1385 3
 1991 009a FFF7FEFF 	 bl vPortEnterCritical
1386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			must be	the highest priority task wanting to access the queue. */
1389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 1992              	 .loc 1 1389 17
 1993 009e BB6A     	 ldr r3,[r7,#40]
 1994 00a0 9B6B     	 ldr r3,[r3,#56]
 1995              	 .loc 1 1389 35
 1996 00a2 002B     	 cmp r3,#0
 1997 00a4 14BF     	 ite ne
 1998 00a6 0123     	 movne r3,#1
 1999 00a8 0023     	 moveq r3,#0
 2000 00aa DBB2     	 uxtb r3,r3
 2001              	 .loc 1 1389 4
 2002 00ac 002B     	 cmp r3,#0
 2003 00ae 51D0     	 beq .L131
1390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Remember the read position in case the queue is only being
1392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				peeked. */
1393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 2004              	 .loc 1 1393 28
 2005 00b0 BB6A     	 ldr r3,[r7,#40]
 2006 00b2 DB68     	 ldr r3,[r3,#12]
 2007 00b4 7B62     	 str r3,[r7,#36]
1394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 2008              	 .loc 1 1395 25
 2009 00b6 B968     	 ldr r1,[r7,#8]
 2010 00b8 B86A     	 ldr r0,[r7,#40]
 2011 00ba FFF7FEFF 	 bl _ZL20prvCopyDataFromQueueP15QueueDefinitionPv
1396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xJustPeeking == pdFALSE )
 2012              	 .loc 1 1397 5
 2013 00be 3B68     	 ldr r3,[r7]
 2014 00c0 002B     	 cmp r3,#0
 2015 00c2 27D1     	 bne .L132
1398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Actually removing data, not just peeking. */
1402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					--( pxQueue->uxMessagesWaiting );
 2016              	 .loc 1 1402 19
 2017 00c4 BB6A     	 ldr r3,[r7,#40]
ARM GAS   			page 66


 2018 00c6 9B6B     	 ldr r3,[r3,#56]
 2019              	 .loc 1 1402 6
 2020 00c8 5A1E     	 subs r2,r3,#1
 2021 00ca BB6A     	 ldr r3,[r7,#40]
 2022 00cc 9A63     	 str r2,[r3,#56]
1403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2023              	 .loc 1 1406 20
 2024 00ce BB6A     	 ldr r3,[r7,#40]
 2025 00d0 1B68     	 ldr r3,[r3]
 2026              	 .loc 1 1406 7
 2027 00d2 002B     	 cmp r3,#0
 2028 00d4 04D1     	 bne .L133
1407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* Record the information required to implement
1409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							priority inheritance should it become necessary. */
1410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
 2029              	 .loc 1 1410 75
 2030 00d6 FFF7FEFF 	 bl pvTaskIncrementMutexHeldCount
 2031 00da 0246     	 mov r2,r0
 2032              	 .loc 1 1410 31
 2033 00dc BB6A     	 ldr r3,[r7,#40]
 2034 00de 5A60     	 str r2,[r3,#4]
 2035              	.L133:
1411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					#endif /* configUSE_MUTEXES */
1418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2036              	 .loc 1 1419 10
 2037 00e0 BB6A     	 ldr r3,[r7,#40]
 2038 00e2 1B69     	 ldr r3,[r3,#16]
 2039              	 .loc 1 1419 6
 2040 00e4 002B     	 cmp r3,#0
 2041 00e6 31D0     	 beq .L134
1420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 2042              	 .loc 1 1421 37
 2043 00e8 BB6A     	 ldr r3,[r7,#40]
 2044 00ea 1033     	 adds r3,r3,#16
 2045              	 .loc 1 1421 35
 2046 00ec 1846     	 mov r0,r3
 2047 00ee FFF7FEFF 	 bl xTaskRemoveFromEventList
 2048 00f2 0346     	 mov r3,r0
 2049              	 .loc 1 1421 73
 2050 00f4 012B     	 cmp r3,#1
 2051 00f6 0CBF     	 ite eq
 2052 00f8 0123     	 moveq r3,#1
 2053 00fa 0023     	 movne r3,#0
 2054 00fc DBB2     	 uxtb r3,r3
 2055              	 .loc 1 1421 7
ARM GAS   			page 67


 2056 00fe 002B     	 cmp r3,#0
 2057 0100 24D0     	 beq .L134
1422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 2058              	 .loc 1 1423 8
 2059 0102 584B     	 ldr r3,.L145
 2060 0104 4FF08052 	 mov r2,#268435456
 2061 0108 1A60     	 str r2,[r3]
 2062              	 .syntax unified
 2063              	
 2064 010a BFF34F8F 	 dsb
 2065              	
 2066              	
 2067 010e BFF36F8F 	 isb
 2068              	
 2069              	 .thumb
 2070              	 .syntax unified
 2071 0112 1BE0     	 b .L134
 2072              	.L132:
1424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_PEEK( pxQueue );
1438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The data is not being removed, so reset the read
1440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					pointer. */
1441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2073              	 .loc 1 1441 28
 2074 0114 BB6A     	 ldr r3,[r7,#40]
 2075 0116 7A6A     	 ldr r2,[r7,#36]
 2076 0118 DA60     	 str r2,[r3,#12]
1442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The data is being left in the queue, so see if there are
1444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					any other tasks waiting for the data. */
1445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2077              	 .loc 1 1445 10
 2078 011a BB6A     	 ldr r3,[r7,#40]
 2079 011c 5B6A     	 ldr r3,[r3,#36]
 2080              	 .loc 1 1445 6
 2081 011e 002B     	 cmp r3,#0
 2082 0120 14D0     	 beq .L134
1446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2083              	 .loc 1 1447 37
 2084 0122 BB6A     	 ldr r3,[r7,#40]
 2085 0124 2433     	 adds r3,r3,#36
 2086              	 .loc 1 1447 35
ARM GAS   			page 68


 2087 0126 1846     	 mov r0,r3
 2088 0128 FFF7FEFF 	 bl xTaskRemoveFromEventList
 2089 012c 0346     	 mov r3,r0
 2090              	 .loc 1 1447 76
 2091 012e 002B     	 cmp r3,#0
 2092 0130 14BF     	 ite ne
 2093 0132 0123     	 movne r3,#1
 2094 0134 0023     	 moveq r3,#0
 2095 0136 DBB2     	 uxtb r3,r3
 2096              	 .loc 1 1447 7
 2097 0138 002B     	 cmp r3,#0
 2098 013a 07D0     	 beq .L134
1448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The task waiting has a higher priority than this task. */
1450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 2099              	 .loc 1 1450 8
 2100 013c 494B     	 ldr r3,.L145
 2101 013e 4FF08052 	 mov r2,#268435456
 2102 0142 1A60     	 str r2,[r3]
 2103              	 .syntax unified
 2104              	
 2105 0144 BFF34F8F 	 dsb
 2106              	
 2107              	
 2108 0148 BFF36F8F 	 isb
 2109              	
 2110              	 .thumb
 2111              	 .syntax unified
 2112              	.L134:
1451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				taskEXIT_CRITICAL();
 2113              	 .loc 1 1463 5
 2114 014c FFF7FEFF 	 bl vPortExitCritical
1464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				return pdPASS;
 2115              	 .loc 1 1464 12
 2116 0150 0123     	 movs r3,#1
 2117 0152 83E0     	 b .L144
 2118              	.L131:
1465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 2119              	 .loc 1 1468 22
 2120 0154 7B68     	 ldr r3,[r7,#4]
 2121              	 .loc 1 1468 5
 2122 0156 002B     	 cmp r3,#0
ARM GAS   			page 69


 2123 0158 03D1     	 bne .L136
1469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The queue was empty and no block time is specified (or
1471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the block time has expired) so leave now. */
1472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					taskEXIT_CRITICAL();
 2124              	 .loc 1 1472 6
 2125 015a FFF7FEFF 	 bl vPortExitCritical
1473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_EMPTY;
 2126              	 .loc 1 1474 13
 2127 015e 0023     	 movs r3,#0
 2128 0160 7CE0     	 b .L144
 2129              	.L136:
1475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 2130              	 .loc 1 1476 10
 2131 0162 FB6A     	 ldr r3,[r7,#44]
 2132 0164 002B     	 cmp r3,#0
 2133 0166 06D1     	 bne .L137
1477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* The queue was empty and a block time was specified so
1479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					configure the timeout structure. */
1480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 2134              	 .loc 1 1480 26
 2135 0168 07F11003 	 add r3,r7,#16
 2136 016c 1846     	 mov r0,r3
 2137 016e FFF7FEFF 	 bl vTaskSetTimeOutState
1481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					xEntryTimeSet = pdTRUE;
 2138              	 .loc 1 1481 20
 2139 0172 0123     	 movs r3,#1
 2140 0174 FB62     	 str r3,[r7,#44]
 2141              	.L137:
1482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Entry time was already set. */
1486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
1487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		taskEXIT_CRITICAL();
 2142              	 .loc 1 1490 3
 2143 0176 FFF7FEFF 	 bl vPortExitCritical
1491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		now the critical section has been exited. */
1494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		vTaskSuspendAll();
 2144              	 .loc 1 1495 18
 2145 017a FFF7FEFF 	 bl vTaskSuspendAll
1496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		prvLockQueue( pxQueue );
 2146              	 .loc 1 1496 3
 2147 017e FFF7FEFF 	 bl vPortEnterCritical
 2148 0182 BB6A     	 ldr r3,[r7,#40]
 2149 0184 5B6C     	 ldr r3,[r3,#68]
 2150 0186 B3F1FF3F 	 cmp r3,#-1
 2151 018a 0CBF     	 ite eq
ARM GAS   			page 70


 2152 018c 0123     	 moveq r3,#1
 2153 018e 0023     	 movne r3,#0
 2154 0190 DBB2     	 uxtb r3,r3
 2155 0192 002B     	 cmp r3,#0
 2156 0194 02D0     	 beq .L138
 2157              	 .loc 1 1496 3 is_stmt 0 discriminator 2
 2158 0196 BB6A     	 ldr r3,[r7,#40]
 2159 0198 0022     	 movs r2,#0
 2160 019a 5A64     	 str r2,[r3,#68]
 2161              	.L138:
 2162              	 .loc 1 1496 3 discriminator 4
 2163 019c BB6A     	 ldr r3,[r7,#40]
 2164 019e 9B6C     	 ldr r3,[r3,#72]
 2165 01a0 B3F1FF3F 	 cmp r3,#-1
 2166 01a4 0CBF     	 ite eq
 2167 01a6 0123     	 moveq r3,#1
 2168 01a8 0023     	 movne r3,#0
 2169 01aa DBB2     	 uxtb r3,r3
 2170 01ac 002B     	 cmp r3,#0
 2171 01ae 02D0     	 beq .L139
 2172              	 .loc 1 1496 3 discriminator 5
 2173 01b0 BB6A     	 ldr r3,[r7,#40]
 2174 01b2 0022     	 movs r2,#0
 2175 01b4 9A64     	 str r2,[r3,#72]
 2176              	.L139:
 2177              	 .loc 1 1496 3 discriminator 7
 2178 01b6 FFF7FEFF 	 bl vPortExitCritical
1497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 2179              	 .loc 1 1499 27 is_stmt 1 discriminator 7
 2180 01ba 3A1D     	 adds r2,r7,#4
 2181 01bc 07F11003 	 add r3,r7,#16
 2182 01c0 1146     	 mov r1,r2
 2183 01c2 1846     	 mov r0,r3
 2184 01c4 FFF7FEFF 	 bl xTaskCheckForTimeOut
 2185 01c8 0346     	 mov r3,r0
 2186              	 .loc 1 1499 56 discriminator 7
 2187 01ca 002B     	 cmp r3,#0
 2188 01cc 0CBF     	 ite eq
 2189 01ce 0123     	 moveq r3,#1
 2190 01d0 0023     	 movne r3,#0
 2191 01d2 DBB2     	 uxtb r3,r3
 2192              	 .loc 1 1499 3 discriminator 7
 2193 01d4 002B     	 cmp r3,#0
 2194 01d6 3BD0     	 beq .L140
1500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 2195              	 .loc 1 1501 23
 2196 01d8 B86A     	 ldr r0,[r7,#40]
 2197 01da FFF7FEFF 	 bl _ZL15prvIsQueueEmptyPK15QueueDefinition
 2198 01de 0346     	 mov r3,r0
 2199              	 .loc 1 1501 35
 2200 01e0 002B     	 cmp r3,#0
 2201 01e2 14BF     	 ite ne
 2202 01e4 0123     	 movne r3,#1
 2203 01e6 0023     	 moveq r3,#0
ARM GAS   			page 71


 2204 01e8 DBB2     	 uxtb r3,r3
 2205              	 .loc 1 1501 4
 2206 01ea 002B     	 cmp r3,#0
 2207 01ec 2AD0     	 beq .L141
1502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 2208              	 .loc 1 1507 19
 2209 01ee BB6A     	 ldr r3,[r7,#40]
 2210 01f0 1B68     	 ldr r3,[r3]
 2211              	 .loc 1 1507 6
 2212 01f2 002B     	 cmp r3,#0
 2213 01f4 08D1     	 bne .L142
1508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						taskENTER_CRITICAL();
 2214              	 .loc 1 1509 7
 2215 01f6 FFF7FEFF 	 bl vPortEnterCritical
1510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 2216              	 .loc 1 1511 50
 2217 01fa BB6A     	 ldr r3,[r7,#40]
 2218 01fc 5B68     	 ldr r3,[r3,#4]
 2219              	 .loc 1 1511 28
 2220 01fe 1846     	 mov r0,r3
 2221 0200 FFF7FEFF 	 bl vTaskPriorityInherit
1512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						taskEXIT_CRITICAL();
 2222              	 .loc 1 1513 7
 2223 0204 FFF7FEFF 	 bl vPortExitCritical
 2224              	.L142:
1514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				#endif
1521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 2225              	 .loc 1 1522 26
 2226 0208 BB6A     	 ldr r3,[r7,#40]
 2227 020a 2433     	 adds r3,r3,#36
 2228 020c 7A68     	 ldr r2,[r7,#4]
 2229 020e 1146     	 mov r1,r2
 2230 0210 1846     	 mov r0,r3
 2231 0212 FFF7FEFF 	 bl vTaskPlaceOnEventList
1523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvUnlockQueue( pxQueue );
 2232              	 .loc 1 1523 19
 2233 0216 B86A     	 ldr r0,[r7,#40]
 2234 0218 FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
1524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2235              	 .loc 1 1524 23
 2236 021c FFF7FEFF 	 bl xTaskResumeAll
 2237 0220 0346     	 mov r3,r0
ARM GAS   			page 72


 2238              	 .loc 1 1524 26
 2239 0222 002B     	 cmp r3,#0
 2240 0224 0CBF     	 ite eq
 2241 0226 0123     	 moveq r3,#1
 2242 0228 0023     	 movne r3,#0
 2243 022a DBB2     	 uxtb r3,r3
 2244              	 .loc 1 1524 5
 2245 022c 002B     	 cmp r3,#0
 2246 022e 3FF434AF 	 beq .L129
1525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portYIELD_WITHIN_API();
 2247              	 .loc 1 1526 6
 2248 0232 0C4B     	 ldr r3,.L145
 2249 0234 4FF08052 	 mov r2,#268435456
 2250 0238 1A60     	 str r2,[r3]
 2251              	 .syntax unified
 2252              	
 2253 023a BFF34F8F 	 dsb
 2254              	
 2255              	
 2256 023e BFF36F8F 	 isb
 2257              	
 2258              	 .thumb
 2259              	 .syntax unified
 2260 0242 2AE7     	 b .L129
 2261              	.L141:
1527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
1531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Try again. */
1536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvUnlockQueue( pxQueue );
 2262              	 .loc 1 1536 19
 2263 0244 B86A     	 ldr r0,[r7,#40]
 2264 0246 FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
1537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				( void ) xTaskResumeAll();
 2265              	 .loc 1 1537 28
 2266 024a FFF7FEFF 	 bl xTaskResumeAll
 2267 024e 24E7     	 b .L129
 2268              	.L140:
1538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			prvUnlockQueue( pxQueue );
 2269              	 .loc 1 1542 18
 2270 0250 B86A     	 ldr r0,[r7,#40]
 2271 0252 FFF7FEFF 	 bl _ZL14prvUnlockQueueP15QueueDefinition
1543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( void ) xTaskResumeAll();
 2272              	 .loc 1 1543 27
 2273 0256 FFF7FEFF 	 bl xTaskResumeAll
1544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			return errQUEUE_EMPTY;
ARM GAS   			page 73


 2274              	 .loc 1 1545 11
 2275 025a 0023     	 movs r3,#0
 2276              	.L144:
1546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 2277              	 .loc 1 1548 1 discriminator 7
 2278 025c 1846     	 mov r0,r3
 2279 025e 3037     	 adds r7,r7,#48
 2280              	 .cfi_def_cfa_offset 8
 2281 0260 BD46     	 mov sp,r7
 2282              	 .cfi_def_cfa_register 13
 2283              	 
 2284 0262 80BD     	 pop {r7,pc}
 2285              	.L146:
 2286              	 .align 2
 2287              	.L145:
 2288 0264 04ED00E0 	 .word -536810236
 2289              	 .cfi_endproc
 2290              	.LFE20:
 2291              	 .fnend
 2292              	 .size xQueueGenericReceive,.-xQueueGenericReceive
 2293              	 .section .text.xQueueReceiveFromISR,"ax",%progbits
 2294              	 .align 1
 2295              	 .global xQueueReceiveFromISR
 2296              	 .syntax unified
 2297              	 .thumb
 2298              	 .thumb_func
 2299              	 .type xQueueReceiveFromISR,%function
 2300              	xQueueReceiveFromISR:
 2301              	 .fnstart
 2302              	.LFB21:
1549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2303              	 .loc 1 1552 1
 2304              	 .cfi_startproc
 2305              	 
 2306              	 
 2307 0000 80B5     	 push {r7,lr}
 2308              	 .save {r7,lr}
 2309              	 .cfi_def_cfa_offset 8
 2310              	 .cfi_offset 7,-8
 2311              	 .cfi_offset 14,-4
 2312              	 .pad #48
 2313 0002 8CB0     	 sub sp,sp,#48
 2314              	 .cfi_def_cfa_offset 56
 2315              	 .setfp r7,sp,#0
 2316 0004 00AF     	 add r7,sp,#0
 2317              	 .cfi_def_cfa_register 7
 2318 0006 F860     	 str r0,[r7,#12]
 2319 0008 B960     	 str r1,[r7,#8]
 2320 000a 7A60     	 str r2,[r7,#4]
1553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
1554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxSavedInterruptStatus;
1555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS   			page 74


 2321              	 .loc 1 1555 17
 2322 000c FB68     	 ldr r3,[r7,#12]
 2323 000e BB62     	 str r3,[r7,#40]
1556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 2324              	 .loc 1 1557 2
 2325 0010 BB6A     	 ldr r3,[r7,#40]
 2326 0012 002B     	 cmp r3,#0
 2327 0014 0AD1     	 bne .L148
 2328              	.LBB132:
 2329              	.LBB133:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2330              	 .loc 2 215 2
 2331              	 .syntax unified
 2332              	
 2333 0016 4FF01003 	 mov r3,#16
 2334 001a 83F31188 	 msr basepri,r3
 2335 001e BFF36F8F 	 isb 
 2336 0022 BFF34F8F 	 dsb 
 2337              	
 2338              	
 2339              	 .thumb
 2340              	 .syntax unified
 2341 0026 3B62     	 str r3,[r7,#32]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2342              	 .loc 2 223 1
 2343 0028 00BF     	 nop
 2344              	.L149:
 2345              	.LBE133:
 2346              	.LBE132:
 2347              	 .loc 1 1557 2 discriminator 1
 2348 002a FEE7     	 b .L149
 2349              	.L148:
1558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2350              	 .loc 1 1558 2
 2351 002c BB68     	 ldr r3,[r7,#8]
 2352 002e 002B     	 cmp r3,#0
 2353 0030 03D1     	 bne .L150
 2354              	 .loc 1 1558 2 is_stmt 0 discriminator 2
 2355 0032 BB6A     	 ldr r3,[r7,#40]
 2356 0034 1B6C     	 ldr r3,[r3,#64]
 2357 0036 002B     	 cmp r3,#0
 2358 0038 01D1     	 bne .L151
 2359              	.L150:
 2360              	 .loc 1 1558 2 discriminator 3
 2361 003a 0123     	 movs r3,#1
 2362 003c 00E0     	 b .L152
 2363              	.L151:
 2364              	 .loc 1 1558 2 discriminator 4
 2365 003e 0023     	 movs r3,#0
 2366              	.L152:
 2367              	 .loc 1 1558 2 discriminator 6
 2368 0040 002B     	 cmp r3,#0
 2369 0042 0AD1     	 bne .L153
 2370              	.LBB134:
 2371              	.LBB135:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
ARM GAS   			page 75


 2372              	 .loc 2 215 2 is_stmt 1
 2373              	 .syntax unified
 2374              	
 2375 0044 4FF01003 	 mov r3,#16
 2376 0048 83F31188 	 msr basepri,r3
 2377 004c BFF36F8F 	 isb 
 2378 0050 BFF34F8F 	 dsb 
 2379              	
 2380              	
 2381              	 .thumb
 2382              	 .syntax unified
 2383 0054 FB61     	 str r3,[r7,#28]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2384              	 .loc 2 223 1
 2385 0056 00BF     	 nop
 2386              	.L154:
 2387              	.LBE135:
 2388              	.LBE134:
 2389              	 .loc 1 1558 2 discriminator 2
 2390 0058 FEE7     	 b .L154
 2391              	.L153:
1559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	assigned a priority above the configured maximum system call priority.
1568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2392              	 .loc 1 1574 2
 2393 005a FFF7FEFF 	 bl vPortValidateInterruptPriority
 2394              	.LBB136:
 2395              	.LBB137:
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2396              	 .loc 2 231 2
 2397              	 .syntax unified
 2398              	
 2399 005e EFF31182 	 mrs r2,basepri
 2400 0062 4FF01003 	 mov r3,#16
 2401 0066 83F31188 	 msr basepri,r3
 2402 006a BFF36F8F 	 isb 
 2403 006e BFF34F8F 	 dsb 
 2404              	
 2405              	
 2406              	 .thumb
 2407              	 .syntax unified
 2408 0072 BA61     	 str r2,[r7,#24]
 2409 0074 7B61     	 str r3,[r7,#20]
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
ARM GAS   			page 76


 2410              	 .loc 2 243 9
 2411 0076 BB69     	 ldr r3,[r7,#24]
 2412              	.LBE137:
 2413              	.LBE136:
1575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2414              	 .loc 1 1576 27
 2415 0078 7B62     	 str r3,[r7,#36]
1577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 2416              	 .loc 1 1579 16
 2417 007a BB6A     	 ldr r3,[r7,#40]
 2418 007c 9B6B     	 ldr r3,[r3,#56]
 2419              	 .loc 1 1579 34
 2420 007e 002B     	 cmp r3,#0
 2421 0080 14BF     	 ite ne
 2422 0082 0123     	 movne r3,#1
 2423 0084 0023     	 moveq r3,#0
 2424 0086 DBB2     	 uxtb r3,r3
 2425              	 .loc 1 1579 3
 2426 0088 002B     	 cmp r3,#0
 2427 008a 32D0     	 beq .L156
1580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2428              	 .loc 1 1583 24
 2429 008c B968     	 ldr r1,[r7,#8]
 2430 008e B86A     	 ldr r0,[r7,#40]
 2431 0090 FFF7FEFF 	 bl _ZL20prvCopyDataFromQueueP15QueueDefinitionPv
1584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			--( pxQueue->uxMessagesWaiting );
 2432              	 .loc 1 1584 17
 2433 0094 BB6A     	 ldr r3,[r7,#40]
 2434 0096 9B6B     	 ldr r3,[r3,#56]
 2435              	 .loc 1 1584 4
 2436 0098 5A1E     	 subs r2,r3,#1
 2437 009a BB6A     	 ldr r3,[r7,#40]
 2438 009c 9A63     	 str r2,[r3,#56]
1585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* If the queue is locked the event list will not be modified.
1587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			Instead update the lock count so the task that unlocks the queue
1588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			will know that an ISR has removed data while the queue was
1589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			locked. */
1590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 2439              	 .loc 1 1590 17
 2440 009e BB6A     	 ldr r3,[r7,#40]
 2441 00a0 5B6C     	 ldr r3,[r3,#68]
 2442              	 .loc 1 1590 25
 2443 00a2 B3F1FF3F 	 cmp r3,#-1
 2444 00a6 0CBF     	 ite eq
 2445 00a8 0123     	 moveq r3,#1
 2446 00aa 0023     	 movne r3,#0
 2447 00ac DBB2     	 uxtb r3,r3
 2448              	 .loc 1 1590 4
 2449 00ae 002B     	 cmp r3,#0
 2450 00b0 17D0     	 beq .L157
ARM GAS   			page 77


1591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2451              	 .loc 1 1592 9
 2452 00b2 BB6A     	 ldr r3,[r7,#40]
 2453 00b4 1B69     	 ldr r3,[r3,#16]
 2454              	 .loc 1 1592 5
 2455 00b6 002B     	 cmp r3,#0
 2456 00b8 18D0     	 beq .L158
1593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2457              	 .loc 1 1594 36
 2458 00ba BB6A     	 ldr r3,[r7,#40]
 2459 00bc 1033     	 adds r3,r3,#16
 2460              	 .loc 1 1594 34
 2461 00be 1846     	 mov r0,r3
 2462 00c0 FFF7FEFF 	 bl xTaskRemoveFromEventList
 2463 00c4 0346     	 mov r3,r0
 2464              	 .loc 1 1594 72
 2465 00c6 002B     	 cmp r3,#0
 2466 00c8 14BF     	 ite ne
 2467 00ca 0123     	 movne r3,#1
 2468 00cc 0023     	 moveq r3,#0
 2469 00ce DBB2     	 uxtb r3,r3
 2470              	 .loc 1 1594 6
 2471 00d0 002B     	 cmp r3,#0
 2472 00d2 0BD0     	 beq .L158
1595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The task waiting has a higher priority than us so
1597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						force a context switch. */
1598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 2473              	 .loc 1 1598 7
 2474 00d4 7B68     	 ldr r3,[r7,#4]
 2475 00d6 002B     	 cmp r3,#0
 2476 00d8 08D0     	 beq .L158
1599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 2477              	 .loc 1 1600 35
 2478 00da 7B68     	 ldr r3,[r7,#4]
 2479 00dc 0122     	 movs r2,#1
 2480 00de 1A60     	 str r2,[r3]
 2481 00e0 04E0     	 b .L158
 2482              	.L157:
1601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
1615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
ARM GAS   			page 78


1616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				knows that data was removed while it was locked. */
1621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				++( pxQueue->xRxLock );
 2483              	 .loc 1 1621 18
 2484 00e2 BB6A     	 ldr r3,[r7,#40]
 2485 00e4 5B6C     	 ldr r3,[r3,#68]
 2486              	 .loc 1 1621 5
 2487 00e6 5A1C     	 adds r2,r3,#1
 2488 00e8 BB6A     	 ldr r3,[r7,#40]
 2489 00ea 5A64     	 str r2,[r3,#68]
 2490              	.L158:
1622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 2491              	 .loc 1 1624 12
 2492 00ec 0123     	 movs r3,#1
 2493 00ee FB62     	 str r3,[r7,#44]
 2494 00f0 01E0     	 b .L159
 2495              	.L156:
1625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFAIL;
 2496              	 .loc 1 1628 12
 2497 00f2 0023     	 movs r3,#0
 2498 00f4 FB62     	 str r3,[r7,#44]
 2499              	.L159:
 2500 00f6 7B6A     	 ldr r3,[r7,#36]
 2501 00f8 3B61     	 str r3,[r7,#16]
 2502              	.LBB138:
 2503              	.LBB139:
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2504              	 .loc 2 249 2
 2505 00fa 3B69     	 ldr r3,[r7,#16]
 2506              	 .syntax unified
 2507              	
 2508 00fc 83F31188 	 msr basepri,r3
 2509              	
 2510              	 .loc 2 253 1
 2511              	 .thumb
 2512              	 .syntax unified
 2513 0100 00BF     	 nop
 2514              	.LBE139:
 2515              	.LBE138:
1629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 2516              	 .loc 1 1634 9
 2517 0102 FB6A     	 ldr r3,[r7,#44]
1635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 2518              	 .loc 1 1635 1
ARM GAS   			page 79


 2519 0104 1846     	 mov r0,r3
 2520 0106 3037     	 adds r7,r7,#48
 2521              	 .cfi_def_cfa_offset 8
 2522 0108 BD46     	 mov sp,r7
 2523              	 .cfi_def_cfa_register 13
 2524              	 
 2525 010a 80BD     	 pop {r7,pc}
 2526              	 .cfi_endproc
 2527              	.LFE21:
 2528              	 .fnend
 2529              	 .size xQueueReceiveFromISR,.-xQueueReceiveFromISR
 2530              	 .section .text.xQueuePeekFromISR,"ax",%progbits
 2531              	 .align 1
 2532              	 .global xQueuePeekFromISR
 2533              	 .syntax unified
 2534              	 .thumb
 2535              	 .thumb_func
 2536              	 .type xQueuePeekFromISR,%function
 2537              	xQueuePeekFromISR:
 2538              	 .fnstart
 2539              	.LFB22:
1636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2540              	 .loc 1 1639 1
 2541              	 .cfi_startproc
 2542              	 
 2543              	 
 2544 0000 80B5     	 push {r7,lr}
 2545              	 .save {r7,lr}
 2546              	 .cfi_def_cfa_offset 8
 2547              	 .cfi_offset 7,-8
 2548              	 .cfi_offset 14,-4
 2549              	 .pad #48
 2550 0002 8CB0     	 sub sp,sp,#48
 2551              	 .cfi_def_cfa_offset 56
 2552              	 .setfp r7,sp,#0
 2553 0004 00AF     	 add r7,sp,#0
 2554              	 .cfi_def_cfa_register 7
 2555 0006 7860     	 str r0,[r7,#4]
 2556 0008 3960     	 str r1,[r7]
1640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
1641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxSavedInterruptStatus;
1642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** int8_t *pcOriginalReadPosition;
1643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2557              	 .loc 1 1643 17
 2558 000a 7B68     	 ldr r3,[r7,#4]
 2559 000c BB62     	 str r3,[r7,#40]
1644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 2560              	 .loc 1 1645 2
 2561 000e BB6A     	 ldr r3,[r7,#40]
 2562 0010 002B     	 cmp r3,#0
 2563 0012 0AD1     	 bne .L162
 2564              	.LBB140:
 2565              	.LBB141:
ARM GAS   			page 80


 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2566              	 .loc 2 215 2
 2567              	 .syntax unified
 2568              	
 2569 0014 4FF01003 	 mov r3,#16
 2570 0018 83F31188 	 msr basepri,r3
 2571 001c BFF36F8F 	 isb 
 2572 0020 BFF34F8F 	 dsb 
 2573              	
 2574              	
 2575              	 .thumb
 2576              	 .syntax unified
 2577 0024 FB61     	 str r3,[r7,#28]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2578              	 .loc 2 223 1
 2579 0026 00BF     	 nop
 2580              	.L163:
 2581              	.LBE141:
 2582              	.LBE140:
 2583              	 .loc 1 1645 2 discriminator 1
 2584 0028 FEE7     	 b .L163
 2585              	.L162:
1646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 2586              	 .loc 1 1646 2
 2587 002a 3B68     	 ldr r3,[r7]
 2588 002c 002B     	 cmp r3,#0
 2589 002e 03D1     	 bne .L164
 2590              	 .loc 1 1646 2 is_stmt 0 discriminator 2
 2591 0030 BB6A     	 ldr r3,[r7,#40]
 2592 0032 1B6C     	 ldr r3,[r3,#64]
 2593 0034 002B     	 cmp r3,#0
 2594 0036 01D1     	 bne .L165
 2595              	.L164:
 2596              	 .loc 1 1646 2 discriminator 3
 2597 0038 0123     	 movs r3,#1
 2598 003a 00E0     	 b .L166
 2599              	.L165:
 2600              	 .loc 1 1646 2 discriminator 4
 2601 003c 0023     	 movs r3,#0
 2602              	.L166:
 2603              	 .loc 1 1646 2 discriminator 6
 2604 003e 002B     	 cmp r3,#0
 2605 0040 0AD1     	 bne .L167
 2606              	.LBB142:
 2607              	.LBB143:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2608              	 .loc 2 215 2 is_stmt 1
 2609              	 .syntax unified
 2610              	
 2611 0042 4FF01003 	 mov r3,#16
 2612 0046 83F31188 	 msr basepri,r3
 2613 004a BFF36F8F 	 isb 
 2614 004e BFF34F8F 	 dsb 
 2615              	
 2616              	
 2617              	 .thumb
 2618              	 .syntax unified
ARM GAS   			page 81


 2619 0052 BB61     	 str r3,[r7,#24]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2620              	 .loc 2 223 1
 2621 0054 00BF     	 nop
 2622              	.L168:
 2623              	.LBE143:
 2624              	.LBE142:
 2625              	 .loc 1 1646 2 discriminator 2
 2626 0056 FEE7     	 b .L168
 2627              	.L167:
1647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 2628              	 .loc 1 1647 2
 2629 0058 BB6A     	 ldr r3,[r7,#40]
 2630 005a 1B6C     	 ldr r3,[r3,#64]
 2631 005c 002B     	 cmp r3,#0
 2632 005e 0AD1     	 bne .L169
 2633              	.LBB144:
 2634              	.LBB145:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2635              	 .loc 2 215 2
 2636              	 .syntax unified
 2637              	
 2638 0060 4FF01003 	 mov r3,#16
 2639 0064 83F31188 	 msr basepri,r3
 2640 0068 BFF36F8F 	 isb 
 2641 006c BFF34F8F 	 dsb 
 2642              	
 2643              	
 2644              	 .thumb
 2645              	 .syntax unified
 2646 0070 7B61     	 str r3,[r7,#20]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2647              	 .loc 2 223 1
 2648 0072 00BF     	 nop
 2649              	.L170:
 2650              	.LBE145:
 2651              	.LBE144:
 2652              	 .loc 1 1647 2 discriminator 3
 2653 0074 FEE7     	 b .L170
 2654              	.L169:
1648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	assigned a priority above the configured maximum system call priority.
1657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2655              	 .loc 1 1663 2
ARM GAS   			page 82


 2656 0076 FFF7FEFF 	 bl vPortValidateInterruptPriority
 2657              	.LBB146:
 2658              	.LBB147:
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2659              	 .loc 2 231 2
 2660              	 .syntax unified
 2661              	
 2662 007a EFF31182 	 mrs r2,basepri
 2663 007e 4FF01003 	 mov r3,#16
 2664 0082 83F31188 	 msr basepri,r3
 2665 0086 BFF36F8F 	 isb 
 2666 008a BFF34F8F 	 dsb 
 2667              	
 2668              	
 2669              	 .thumb
 2670              	 .syntax unified
 2671 008e 3A61     	 str r2,[r7,#16]
 2672 0090 FB60     	 str r3,[r7,#12]
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 2673              	 .loc 2 243 9
 2674 0092 3B69     	 ldr r3,[r7,#16]
 2675              	.LBE147:
 2676              	.LBE146:
1664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2677              	 .loc 1 1665 27
 2678 0094 7B62     	 str r3,[r7,#36]
1666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 2679              	 .loc 1 1668 16
 2680 0096 BB6A     	 ldr r3,[r7,#40]
 2681 0098 9B6B     	 ldr r3,[r3,#56]
 2682              	 .loc 1 1668 34
 2683 009a 002B     	 cmp r3,#0
 2684 009c 14BF     	 ite ne
 2685 009e 0123     	 movne r3,#1
 2686 00a0 0023     	 moveq r3,#0
 2687 00a2 DBB2     	 uxtb r3,r3
 2688              	 .loc 1 1668 3
 2689 00a4 002B     	 cmp r3,#0
 2690 00a6 0CD0     	 beq .L172
1669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Remember the read position so it can be reset as nothing is
1673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			actually being removed from the queue. */
1674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 2691              	 .loc 1 1674 27
 2692 00a8 BB6A     	 ldr r3,[r7,#40]
 2693 00aa DB68     	 ldr r3,[r3,#12]
 2694 00ac 3B62     	 str r3,[r7,#32]
1675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2695              	 .loc 1 1675 24
 2696 00ae 3968     	 ldr r1,[r7]
 2697 00b0 B86A     	 ldr r0,[r7,#40]
 2698 00b2 FFF7FEFF 	 bl _ZL20prvCopyDataFromQueueP15QueueDefinitionPv
ARM GAS   			page 83


1676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2699              	 .loc 1 1676 26
 2700 00b6 BB6A     	 ldr r3,[r7,#40]
 2701 00b8 3A6A     	 ldr r2,[r7,#32]
 2702 00ba DA60     	 str r2,[r3,#12]
1677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
 2703              	 .loc 1 1678 12
 2704 00bc 0123     	 movs r3,#1
 2705 00be FB62     	 str r3,[r7,#44]
 2706 00c0 01E0     	 b .L173
 2707              	.L172:
1679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFAIL;
 2708              	 .loc 1 1682 12
 2709 00c2 0023     	 movs r3,#0
 2710 00c4 FB62     	 str r3,[r7,#44]
 2711              	.L173:
 2712 00c6 7B6A     	 ldr r3,[r7,#36]
 2713 00c8 BB60     	 str r3,[r7,#8]
 2714              	.LBB148:
 2715              	.LBB149:
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2716              	 .loc 2 249 2
 2717 00ca BB68     	 ldr r3,[r7,#8]
 2718              	 .syntax unified
 2719              	
 2720 00cc 83F31188 	 msr basepri,r3
 2721              	
 2722              	 .loc 2 253 1
 2723              	 .thumb
 2724              	 .syntax unified
 2725 00d0 00BF     	 nop
 2726              	.LBE149:
 2727              	.LBE148:
1683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 2728              	 .loc 1 1688 9
 2729 00d2 FB6A     	 ldr r3,[r7,#44]
1689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 2730              	 .loc 1 1689 1
 2731 00d4 1846     	 mov r0,r3
 2732 00d6 3037     	 adds r7,r7,#48
 2733              	 .cfi_def_cfa_offset 8
 2734 00d8 BD46     	 mov sp,r7
 2735              	 .cfi_def_cfa_register 13
 2736              	 
 2737 00da 80BD     	 pop {r7,pc}
 2738              	 .cfi_endproc
 2739              	.LFE22:
 2740              	 .fnend
ARM GAS   			page 84


 2741              	 .size xQueuePeekFromISR,.-xQueuePeekFromISR
 2742              	 .section .text.uxQueueMessagesWaiting,"ax",%progbits
 2743              	 .align 1
 2744              	 .global uxQueueMessagesWaiting
 2745              	 .syntax unified
 2746              	 .thumb
 2747              	 .thumb_func
 2748              	 .type uxQueueMessagesWaiting,%function
 2749              	uxQueueMessagesWaiting:
 2750              	 .fnstart
 2751              	.LFB23:
1690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2752              	 .loc 1 1693 1
 2753              	 .cfi_startproc
 2754              	 
 2755              	 
 2756 0000 80B5     	 push {r7,lr}
 2757              	 .save {r7,lr}
 2758              	 .cfi_def_cfa_offset 8
 2759              	 .cfi_offset 7,-8
 2760              	 .cfi_offset 14,-4
 2761              	 .pad #16
 2762 0002 84B0     	 sub sp,sp,#16
 2763              	 .cfi_def_cfa_offset 24
 2764              	 .setfp r7,sp,#0
 2765 0004 00AF     	 add r7,sp,#0
 2766              	 .cfi_def_cfa_register 7
 2767 0006 7860     	 str r0,[r7,#4]
1694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxReturn;
1695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( xQueue );
 2768              	 .loc 1 1696 2
 2769 0008 7B68     	 ldr r3,[r7,#4]
 2770 000a 002B     	 cmp r3,#0
 2771 000c 0AD1     	 bne .L176
 2772              	.LBB150:
 2773              	.LBB151:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2774              	 .loc 2 215 2
 2775              	 .syntax unified
 2776              	
 2777 000e 4FF01003 	 mov r3,#16
 2778 0012 83F31188 	 msr basepri,r3
 2779 0016 BFF36F8F 	 isb 
 2780 001a BFF34F8F 	 dsb 
 2781              	
 2782              	
 2783              	 .thumb
 2784              	 .syntax unified
 2785 001e BB60     	 str r3,[r7,#8]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2786              	 .loc 2 223 1
 2787 0020 00BF     	 nop
 2788              	.L177:
ARM GAS   			page 85


 2789              	.LBE151:
 2790              	.LBE150:
 2791              	 .loc 1 1696 2 discriminator 1
 2792 0022 FEE7     	 b .L177
 2793              	.L176:
1697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 2794              	 .loc 1 1698 2
 2795 0024 FFF7FEFF 	 bl vPortEnterCritical
1699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 2796              	 .loc 1 1700 12
 2797 0028 7B68     	 ldr r3,[r7,#4]
 2798 002a 9B6B     	 ldr r3,[r3,#56]
 2799 002c FB60     	 str r3,[r7,#12]
1701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 2800              	 .loc 1 1702 2
 2801 002e FFF7FEFF 	 bl vPortExitCritical
1703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return uxReturn;
 2802              	 .loc 1 1704 9
 2803 0032 FB68     	 ldr r3,[r7,#12]
1705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2804              	 .loc 1 1705 1
 2805 0034 1846     	 mov r0,r3
 2806 0036 1037     	 adds r7,r7,#16
 2807              	 .cfi_def_cfa_offset 8
 2808 0038 BD46     	 mov sp,r7
 2809              	 .cfi_def_cfa_register 13
 2810              	 
 2811 003a 80BD     	 pop {r7,pc}
 2812              	 .cfi_endproc
 2813              	.LFE23:
 2814              	 .fnend
 2815              	 .size uxQueueMessagesWaiting,.-uxQueueMessagesWaiting
 2816              	 .section .text.uxQueueSpacesAvailable,"ax",%progbits
 2817              	 .align 1
 2818              	 .global uxQueueSpacesAvailable
 2819              	 .syntax unified
 2820              	 .thumb
 2821              	 .thumb_func
 2822              	 .type uxQueueSpacesAvailable,%function
 2823              	uxQueueSpacesAvailable:
 2824              	 .fnstart
 2825              	.LFB24:
1706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2826              	 .loc 1 1709 1
 2827              	 .cfi_startproc
 2828              	 
 2829              	 
 2830 0000 80B5     	 push {r7,lr}
 2831              	 .save {r7,lr}
 2832              	 .cfi_def_cfa_offset 8
ARM GAS   			page 86


 2833              	 .cfi_offset 7,-8
 2834              	 .cfi_offset 14,-4
 2835              	 .pad #24
 2836 0002 86B0     	 sub sp,sp,#24
 2837              	 .cfi_def_cfa_offset 32
 2838              	 .setfp r7,sp,#0
 2839 0004 00AF     	 add r7,sp,#0
 2840              	 .cfi_def_cfa_register 7
 2841 0006 7860     	 str r0,[r7,#4]
1710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxReturn;
1711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t *pxQueue;
1712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 2842              	 .loc 1 1713 10
 2843 0008 7B68     	 ldr r3,[r7,#4]
 2844 000a 7B61     	 str r3,[r7,#20]
1714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 2845              	 .loc 1 1714 2
 2846 000c 7B69     	 ldr r3,[r7,#20]
 2847 000e 002B     	 cmp r3,#0
 2848 0010 0AD1     	 bne .L180
 2849              	.LBB152:
 2850              	.LBB153:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2851              	 .loc 2 215 2
 2852              	 .syntax unified
 2853              	
 2854 0012 4FF01003 	 mov r3,#16
 2855 0016 83F31188 	 msr basepri,r3
 2856 001a BFF36F8F 	 isb 
 2857 001e BFF34F8F 	 dsb 
 2858              	
 2859              	
 2860              	 .thumb
 2861              	 .syntax unified
 2862 0022 FB60     	 str r3,[r7,#12]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2863              	 .loc 2 223 1
 2864 0024 00BF     	 nop
 2865              	.L181:
 2866              	.LBE153:
 2867              	.LBE152:
 2868              	 .loc 1 1714 2 discriminator 1
 2869 0026 FEE7     	 b .L181
 2870              	.L180:
1715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 2871              	 .loc 1 1716 2
 2872 0028 FFF7FEFF 	 bl vPortEnterCritical
1717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 2873              	 .loc 1 1718 23
 2874 002c 7B69     	 ldr r3,[r7,#20]
 2875 002e DA6B     	 ldr r2,[r3,#60]
 2876              	 .loc 1 1718 43
 2877 0030 7B69     	 ldr r3,[r7,#20]
 2878 0032 9B6B     	 ldr r3,[r3,#56]
ARM GAS   			page 87


 2879              	 .loc 1 1718 12
 2880 0034 D31A     	 subs r3,r2,r3
 2881 0036 3B61     	 str r3,[r7,#16]
1719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 2882              	 .loc 1 1720 2
 2883 0038 FFF7FEFF 	 bl vPortExitCritical
1721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return uxReturn;
 2884              	 .loc 1 1722 9
 2885 003c 3B69     	 ldr r3,[r7,#16]
1723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2886              	 .loc 1 1723 1
 2887 003e 1846     	 mov r0,r3
 2888 0040 1837     	 adds r7,r7,#24
 2889              	 .cfi_def_cfa_offset 8
 2890 0042 BD46     	 mov sp,r7
 2891              	 .cfi_def_cfa_register 13
 2892              	 
 2893 0044 80BD     	 pop {r7,pc}
 2894              	 .cfi_endproc
 2895              	.LFE24:
 2896              	 .fnend
 2897              	 .size uxQueueSpacesAvailable,.-uxQueueSpacesAvailable
 2898              	 .section .text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2899              	 .align 1
 2900              	 .global uxQueueMessagesWaitingFromISR
 2901              	 .syntax unified
 2902              	 .thumb
 2903              	 .thumb_func
 2904              	 .type uxQueueMessagesWaitingFromISR,%function
 2905              	uxQueueMessagesWaitingFromISR:
 2906              	 .fnstart
 2907              	.LFB25:
1724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2908              	 .loc 1 1727 1
 2909              	 .cfi_startproc
 2910              	 
 2911              	 
 2912              	 
 2913 0000 80B4     	 push {r7}
 2914              	 .cfi_def_cfa_offset 4
 2915              	 .cfi_offset 7,-4
 2916 0002 85B0     	 sub sp,sp,#20
 2917              	 .cfi_def_cfa_offset 24
 2918 0004 00AF     	 add r7,sp,#0
 2919              	 .cfi_def_cfa_register 7
 2920 0006 7860     	 str r0,[r7,#4]
1728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** UBaseType_t uxReturn;
1729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( xQueue );
 2921              	 .loc 1 1730 2
 2922 0008 7B68     	 ldr r3,[r7,#4]
 2923 000a 002B     	 cmp r3,#0
ARM GAS   			page 88


 2924 000c 0AD1     	 bne .L184
 2925              	.LBB154:
 2926              	.LBB155:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 2927              	 .loc 2 215 2
 2928              	 .syntax unified
 2929              	
 2930 000e 4FF01003 	 mov r3,#16
 2931 0012 83F31188 	 msr basepri,r3
 2932 0016 BFF36F8F 	 isb 
 2933 001a BFF34F8F 	 dsb 
 2934              	
 2935              	
 2936              	 .thumb
 2937              	 .syntax unified
 2938 001e BB60     	 str r3,[r7,#8]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 2939              	 .loc 2 223 1
 2940 0020 00BF     	 nop
 2941              	.L185:
 2942              	.LBE155:
 2943              	.LBE154:
 2944              	 .loc 1 1730 2 discriminator 1
 2945 0022 FEE7     	 b .L185
 2946              	.L184:
1731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 2947              	 .loc 1 1732 11
 2948 0024 7B68     	 ldr r3,[r7,#4]
 2949 0026 9B6B     	 ldr r3,[r3,#56]
 2950 0028 FB60     	 str r3,[r7,#12]
1733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return uxReturn;
 2951              	 .loc 1 1734 9
 2952 002a FB68     	 ldr r3,[r7,#12]
1735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 2953              	 .loc 1 1735 1
 2954 002c 1846     	 mov r0,r3
 2955 002e 1437     	 adds r7,r7,#20
 2956              	 .cfi_def_cfa_offset 4
 2957 0030 BD46     	 mov sp,r7
 2958              	 .cfi_def_cfa_register 13
 2959              	 
 2960 0032 5DF8047B 	 ldr r7,[sp],#4
 2961              	 .cfi_restore 7
 2962              	 .cfi_def_cfa_offset 0
 2963 0036 7047     	 bx lr
 2964              	 .cfi_endproc
 2965              	.LFE25:
 2966              	 .cantunwind
 2967              	 .fnend
 2968              	 .size uxQueueMessagesWaitingFromISR,.-uxQueueMessagesWaitingFromISR
 2969              	 .section .text.vQueueDelete,"ax",%progbits
 2970              	 .align 1
 2971              	 .global vQueueDelete
 2972              	 .syntax unified
 2973              	 .thumb
ARM GAS   			page 89


 2974              	 .thumb_func
 2975              	 .type vQueueDelete,%function
 2976              	vQueueDelete:
 2977              	 .fnstart
 2978              	.LFB26:
1736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 2979              	 .loc 1 1739 1
 2980              	 .cfi_startproc
 2981              	 
 2982              	 
 2983 0000 80B5     	 push {r7,lr}
 2984              	 .save {r7,lr}
 2985              	 .cfi_def_cfa_offset 8
 2986              	 .cfi_offset 7,-8
 2987              	 .cfi_offset 14,-4
 2988              	 .pad #16
 2989 0002 84B0     	 sub sp,sp,#16
 2990              	 .cfi_def_cfa_offset 24
 2991              	 .setfp r7,sp,#0
 2992 0004 00AF     	 add r7,sp,#0
 2993              	 .cfi_def_cfa_register 7
 2994 0006 7860     	 str r0,[r7,#4]
1740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2995              	 .loc 1 1740 17
 2996 0008 7B68     	 ldr r3,[r7,#4]
 2997 000a FB60     	 str r3,[r7,#12]
1741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( pxQueue );
 2998              	 .loc 1 1742 2
 2999 000c FB68     	 ldr r3,[r7,#12]
 3000 000e 002B     	 cmp r3,#0
 3001 0010 0AD1     	 bne .L188
 3002              	.LBB156:
 3003              	.LBB157:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 3004              	 .loc 2 215 2
 3005              	 .syntax unified
 3006              	
 3007 0012 4FF01003 	 mov r3,#16
 3008 0016 83F31188 	 msr basepri,r3
 3009 001a BFF36F8F 	 isb 
 3010 001e BFF34F8F 	 dsb 
 3011              	
 3012              	
 3013              	 .thumb
 3014              	 .syntax unified
 3015 0022 BB60     	 str r3,[r7,#8]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 3016              	 .loc 2 223 1
 3017 0024 00BF     	 nop
 3018              	.L189:
 3019              	.LBE157:
 3020              	.LBE156:
 3021              	 .loc 1 1742 2 discriminator 1
ARM GAS   			page 90


 3022 0026 FEE7     	 b .L189
 3023              	.L188:
1743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	traceQUEUE_DELETE( pxQueue );
1745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		vQueueUnregisterQueue( pxQueue );
 3024              	 .loc 1 1747 24
 3025 0028 F868     	 ldr r0,[r7,#12]
 3026 002a FFF7FEFF 	 bl vQueueUnregisterQueue
1748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	#endif
1750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	vPortFree( pxQueue );
 3027              	 .loc 1 1750 11
 3028 002e F868     	 ldr r0,[r7,#12]
 3029 0030 FFF7FEFF 	 bl vPortFree
1751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 3030              	 .loc 1 1751 1
 3031 0034 00BF     	 nop
 3032 0036 1037     	 adds r7,r7,#16
 3033              	 .cfi_def_cfa_offset 8
 3034 0038 BD46     	 mov sp,r7
 3035              	 .cfi_def_cfa_register 13
 3036              	 
 3037 003a 80BD     	 pop {r7,pc}
 3038              	 .cfi_endproc
 3039              	.LFE26:
 3040              	 .fnend
 3041              	 .size vQueueDelete,.-vQueueDelete
 3042              	 .section .text.uxQueueGetQueueNumber,"ax",%progbits
 3043              	 .align 1
 3044              	 .global uxQueueGetQueueNumber
 3045              	 .syntax unified
 3046              	 .thumb
 3047              	 .thumb_func
 3048              	 .type uxQueueGetQueueNumber,%function
 3049              	uxQueueGetQueueNumber:
 3050              	 .fnstart
 3051              	.LFB27:
1752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1756:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1757:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 3052              	 .loc 1 1757 2
 3053              	 .cfi_startproc
 3054              	 
 3055              	 
 3056              	 
 3057 0000 80B4     	 push {r7}
 3058              	 .cfi_def_cfa_offset 4
 3059              	 .cfi_offset 7,-4
 3060 0002 83B0     	 sub sp,sp,#12
 3061              	 .cfi_def_cfa_offset 16
 3062 0004 00AF     	 add r7,sp,#0
 3063              	 .cfi_def_cfa_register 7
ARM GAS   			page 91


 3064 0006 7860     	 str r0,[r7,#4]
1758:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3065              	 .loc 1 1758 36
 3066 0008 7B68     	 ldr r3,[r7,#4]
 3067 000a DB6C     	 ldr r3,[r3,#76]
1759:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 3068              	 .loc 1 1759 2
 3069 000c 1846     	 mov r0,r3
 3070 000e 0C37     	 adds r7,r7,#12
 3071              	 .cfi_def_cfa_offset 4
 3072 0010 BD46     	 mov sp,r7
 3073              	 .cfi_def_cfa_register 13
 3074              	 
 3075 0012 5DF8047B 	 ldr r7,[sp],#4
 3076              	 .cfi_restore 7
 3077              	 .cfi_def_cfa_offset 0
 3078 0016 7047     	 bx lr
 3079              	 .cfi_endproc
 3080              	.LFE27:
 3081              	 .cantunwind
 3082              	 .fnend
 3083              	 .size uxQueueGetQueueNumber,.-uxQueueGetQueueNumber
 3084              	 .section .text.vQueueSetQueueNumber,"ax",%progbits
 3085              	 .align 1
 3086              	 .global vQueueSetQueueNumber
 3087              	 .syntax unified
 3088              	 .thumb
 3089              	 .thumb_func
 3090              	 .type vQueueSetQueueNumber,%function
 3091              	vQueueSetQueueNumber:
 3092              	 .fnstart
 3093              	.LFB28:
1760:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1761:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_TRACE_FACILITY */
1762:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1763:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1764:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1765:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1766:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1767:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 3094              	 .loc 1 1767 2
 3095              	 .cfi_startproc
 3096              	 
 3097              	 
 3098              	 
 3099 0000 80B4     	 push {r7}
 3100              	 .cfi_def_cfa_offset 4
 3101              	 .cfi_offset 7,-4
 3102 0002 83B0     	 sub sp,sp,#12
 3103              	 .cfi_def_cfa_offset 16
 3104 0004 00AF     	 add r7,sp,#0
 3105              	 .cfi_def_cfa_register 7
 3106 0006 7860     	 str r0,[r7,#4]
 3107 0008 3960     	 str r1,[r7]
1768:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3108              	 .loc 1 1768 43
 3109 000a 7B68     	 ldr r3,[r7,#4]
ARM GAS   			page 92


 3110 000c 3A68     	 ldr r2,[r7]
 3111 000e DA64     	 str r2,[r3,#76]
1769:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 3112              	 .loc 1 1769 2
 3113 0010 00BF     	 nop
 3114 0012 0C37     	 adds r7,r7,#12
 3115              	 .cfi_def_cfa_offset 4
 3116 0014 BD46     	 mov sp,r7
 3117              	 .cfi_def_cfa_register 13
 3118              	 
 3119 0016 5DF8047B 	 ldr r7,[sp],#4
 3120              	 .cfi_restore 7
 3121              	 .cfi_def_cfa_offset 0
 3122 001a 7047     	 bx lr
 3123              	 .cfi_endproc
 3124              	.LFE28:
 3125              	 .cantunwind
 3126              	 .fnend
 3127              	 .size vQueueSetQueueNumber,.-vQueueSetQueueNumber
 3128              	 .section .text.ucQueueGetQueueType,"ax",%progbits
 3129              	 .align 1
 3130              	 .global ucQueueGetQueueType
 3131              	 .syntax unified
 3132              	 .thumb
 3133              	 .thumb_func
 3134              	 .type ucQueueGetQueueType,%function
 3135              	ucQueueGetQueueType:
 3136              	 .fnstart
 3137              	.LFB29:
1770:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1771:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_TRACE_FACILITY */
1772:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1773:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1774:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1775:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1776:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1777:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 3138              	 .loc 1 1777 2
 3139              	 .cfi_startproc
 3140              	 
 3141              	 
 3142              	 
 3143 0000 80B4     	 push {r7}
 3144              	 .cfi_def_cfa_offset 4
 3145              	 .cfi_offset 7,-4
 3146 0002 83B0     	 sub sp,sp,#12
 3147              	 .cfi_def_cfa_offset 16
 3148 0004 00AF     	 add r7,sp,#0
 3149              	 .cfi_def_cfa_register 7
 3150 0006 7860     	 str r0,[r7,#4]
1778:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3151              	 .loc 1 1778 36
 3152 0008 7B68     	 ldr r3,[r7,#4]
 3153 000a 93F85030 	 ldrb r3,[r3,#80]
1779:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 3154              	 .loc 1 1779 2
 3155 000e 1846     	 mov r0,r3
ARM GAS   			page 93


 3156 0010 0C37     	 adds r7,r7,#12
 3157              	 .cfi_def_cfa_offset 4
 3158 0012 BD46     	 mov sp,r7
 3159              	 .cfi_def_cfa_register 13
 3160              	 
 3161 0014 5DF8047B 	 ldr r7,[sp],#4
 3162              	 .cfi_restore 7
 3163              	 .cfi_def_cfa_offset 0
 3164 0018 7047     	 bx lr
 3165              	 .cfi_endproc
 3166              	.LFE29:
 3167              	 .cantunwind
 3168              	 .fnend
 3169              	 .size ucQueueGetQueueType,.-ucQueueGetQueueType
 3170              	 .section .text._ZL18prvCopyDataToQueueP15QueueDefinitionPKvl,"ax",%progbits
 3171              	 .align 1
 3172              	 .syntax unified
 3173              	 .thumb
 3174              	 .thumb_func
 3175              	 .type _ZL18prvCopyDataToQueueP15QueueDefinitionPKvl,%function
 3176              	_ZL18prvCopyDataToQueueP15QueueDefinitionPKvl:
 3177              	 .fnstart
 3178              	.LFB30:
1780:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1781:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_TRACE_FACILITY */
1782:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1783:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1784:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1785:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3179              	 .loc 1 1785 1
 3180              	 .cfi_startproc
 3181              	 
 3182              	 
 3183 0000 80B5     	 push {r7,lr}
 3184              	 .save {r7,lr}
 3185              	 .cfi_def_cfa_offset 8
 3186              	 .cfi_offset 7,-8
 3187              	 .cfi_offset 14,-4
 3188              	 .pad #24
 3189 0002 86B0     	 sub sp,sp,#24
 3190              	 .cfi_def_cfa_offset 32
 3191              	 .setfp r7,sp,#0
 3192 0004 00AF     	 add r7,sp,#0
 3193              	 .cfi_def_cfa_register 7
 3194 0006 F860     	 str r0,[r7,#12]
 3195 0008 B960     	 str r1,[r7,#8]
 3196 000a 7A60     	 str r2,[r7,#4]
1786:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn = pdFALSE;
 3197              	 .loc 1 1786 12
 3198 000c 0023     	 movs r3,#0
 3199 000e 7B61     	 str r3,[r7,#20]
1787:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1788:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 3200              	 .loc 1 1788 15
 3201 0010 FB68     	 ldr r3,[r7,#12]
 3202 0012 1B6C     	 ldr r3,[r3,#64]
 3203              	 .loc 1 1788 2
ARM GAS   			page 94


 3204 0014 002B     	 cmp r3,#0
 3205 0016 0ED1     	 bne .L196
1789:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1790:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1791:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1792:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 3206              	 .loc 1 1792 17
 3207 0018 FB68     	 ldr r3,[r7,#12]
 3208 001a 1B68     	 ldr r3,[r3]
 3209              	 .loc 1 1792 4
 3210 001c 002B     	 cmp r3,#0
 3211 001e 56D1     	 bne .L197
1793:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1794:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* The mutex is no longer being held. */
1795:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 3212              	 .loc 1 1795 60
 3213 0020 FB68     	 ldr r3,[r7,#12]
 3214 0022 5B68     	 ldr r3,[r3,#4]
 3215              	 .loc 1 1795 38
 3216 0024 1846     	 mov r0,r3
 3217 0026 FFF7FEFF 	 bl xTaskPriorityDisinherit
 3218 002a 0346     	 mov r3,r0
 3219 002c 7B61     	 str r3,[r7,#20]
1796:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxQueue->pxMutexHolder = NULL;
 3220              	 .loc 1 1796 28
 3221 002e FB68     	 ldr r3,[r7,#12]
 3222 0030 0022     	 movs r2,#0
 3223 0032 5A60     	 str r2,[r3,#4]
 3224 0034 4BE0     	 b .L197
 3225              	.L196:
1797:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1798:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1799:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1800:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
1801:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1802:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1803:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		#endif /* configUSE_MUTEXES */
1804:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1805:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 3226              	 .loc 1 1805 7
 3227 0036 7B68     	 ldr r3,[r7,#4]
 3228 0038 002B     	 cmp r3,#0
 3229 003a 19D1     	 bne .L198
1806:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1807:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 3230              	 .loc 1 1807 40
 3231 003c FB68     	 ldr r3,[r7,#12]
 3232 003e 9868     	 ldr r0,[r3,#8]
 3233              	 .loc 1 1807 86
 3234 0040 FB68     	 ldr r3,[r7,#12]
 3235 0042 1B6C     	 ldr r3,[r3,#64]
 3236              	 .loc 1 1807 18
 3237 0044 1A46     	 mov r2,r3
 3238 0046 B968     	 ldr r1,[r7,#8]
 3239 0048 FFF7FEFF 	 bl memcpy
1808:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 3240              	 .loc 1 1808 22
ARM GAS   			page 95


 3241 004c FB68     	 ldr r3,[r7,#12]
 3242 004e 9A68     	 ldr r2,[r3,#8]
 3243              	 .loc 1 1808 34
 3244 0050 FB68     	 ldr r3,[r7,#12]
 3245 0052 1B6C     	 ldr r3,[r3,#64]
 3246              	 .loc 1 1808 22
 3247 0054 1A44     	 add r2,r2,r3
 3248 0056 FB68     	 ldr r3,[r7,#12]
 3249 0058 9A60     	 str r2,[r3,#8]
1809:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 3250              	 .loc 1 1809 16
 3251 005a FB68     	 ldr r3,[r7,#12]
 3252 005c 9A68     	 ldr r2,[r3,#8]
 3253              	 .loc 1 1809 38
 3254 005e FB68     	 ldr r3,[r7,#12]
 3255 0060 5B68     	 ldr r3,[r3,#4]
 3256              	 .loc 1 1809 3
 3257 0062 9A42     	 cmp r2,r3
 3258 0064 33D3     	 bcc .L197
1810:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1811:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 3259              	 .loc 1 1811 34
 3260 0066 FB68     	 ldr r3,[r7,#12]
 3261 0068 1A68     	 ldr r2,[r3]
 3262              	 .loc 1 1811 23
 3263 006a FB68     	 ldr r3,[r7,#12]
 3264 006c 9A60     	 str r2,[r3,#8]
 3265 006e 2EE0     	 b .L197
 3266              	.L198:
1812:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1813:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1814:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1815:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			mtCOVERAGE_TEST_MARKER();
1816:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1817:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1818:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else
1819:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1820:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 3267              	 .loc 1 1820 42
 3268 0070 FB68     	 ldr r3,[r7,#12]
 3269 0072 D868     	 ldr r0,[r3,#12]
 3270              	 .loc 1 1820 89
 3271 0074 FB68     	 ldr r3,[r7,#12]
 3272 0076 1B6C     	 ldr r3,[r3,#64]
 3273              	 .loc 1 1820 18
 3274 0078 1A46     	 mov r2,r3
 3275 007a B968     	 ldr r1,[r7,#8]
 3276 007c FFF7FEFF 	 bl memcpy
1821:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 3277              	 .loc 1 1821 25
 3278 0080 FB68     	 ldr r3,[r7,#12]
 3279 0082 DA68     	 ldr r2,[r3,#12]
 3280              	 .loc 1 1821 37
 3281 0084 FB68     	 ldr r3,[r7,#12]
 3282 0086 1B6C     	 ldr r3,[r3,#64]
 3283              	 .loc 1 1821 25
 3284 0088 5B42     	 rsbs r3,r3,#0
ARM GAS   			page 96


 3285 008a 1A44     	 add r2,r2,r3
 3286 008c FB68     	 ldr r3,[r7,#12]
 3287 008e DA60     	 str r2,[r3,#12]
1822:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 3288              	 .loc 1 1822 18
 3289 0090 FB68     	 ldr r3,[r7,#12]
 3290 0092 DA68     	 ldr r2,[r3,#12]
 3291              	 .loc 1 1822 40
 3292 0094 FB68     	 ldr r3,[r7,#12]
 3293 0096 1B68     	 ldr r3,[r3]
 3294              	 .loc 1 1822 3
 3295 0098 9A42     	 cmp r2,r3
 3296 009a 07D2     	 bcs .L199
1823:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1824:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 3297              	 .loc 1 1824 39
 3298 009c FB68     	 ldr r3,[r7,#12]
 3299 009e 5A68     	 ldr r2,[r3,#4]
 3300              	 .loc 1 1824 57
 3301 00a0 FB68     	 ldr r3,[r7,#12]
 3302 00a2 1B6C     	 ldr r3,[r3,#64]
 3303              	 .loc 1 1824 46
 3304 00a4 5B42     	 rsbs r3,r3,#0
 3305 00a6 1A44     	 add r2,r2,r3
 3306              	 .loc 1 1824 26
 3307 00a8 FB68     	 ldr r3,[r7,#12]
 3308 00aa DA60     	 str r2,[r3,#12]
 3309              	.L199:
1825:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1826:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1827:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1828:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			mtCOVERAGE_TEST_MARKER();
1829:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1830:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1831:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( xPosition == queueOVERWRITE )
 3310              	 .loc 1 1831 3
 3311 00ac 7B68     	 ldr r3,[r7,#4]
 3312 00ae 022B     	 cmp r3,#2
 3313 00b0 0DD1     	 bne .L197
1832:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1833:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 3314              	 .loc 1 1833 17
 3315 00b2 FB68     	 ldr r3,[r7,#12]
 3316 00b4 9B6B     	 ldr r3,[r3,#56]
 3317              	 .loc 1 1833 35
 3318 00b6 002B     	 cmp r3,#0
 3319 00b8 14BF     	 ite ne
 3320 00ba 0123     	 movne r3,#1
 3321 00bc 0023     	 moveq r3,#0
 3322 00be DBB2     	 uxtb r3,r3
 3323              	 .loc 1 1833 4
 3324 00c0 002B     	 cmp r3,#0
 3325 00c2 04D0     	 beq .L197
1834:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1835:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* An item is not being added but overwritten, so subtract
1836:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				one from the recorded number of items in the queue so when
1837:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				one is added again below the number of recorded items remains
ARM GAS   			page 97


1838:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				correct. */
1839:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				--( pxQueue->uxMessagesWaiting );
 3326              	 .loc 1 1839 18
 3327 00c4 FB68     	 ldr r3,[r7,#12]
 3328 00c6 9B6B     	 ldr r3,[r3,#56]
 3329              	 .loc 1 1839 5
 3330 00c8 5A1E     	 subs r2,r3,#1
 3331 00ca FB68     	 ldr r3,[r7,#12]
 3332 00cc 9A63     	 str r2,[r3,#56]
 3333              	.L197:
1840:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1841:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1842:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1843:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
1844:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1845:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1846:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
1847:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1848:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			mtCOVERAGE_TEST_MARKER();
1849:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1850:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1851:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1852:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	++( pxQueue->uxMessagesWaiting );
 3334              	 .loc 1 1852 15
 3335 00ce FB68     	 ldr r3,[r7,#12]
 3336 00d0 9B6B     	 ldr r3,[r3,#56]
 3337              	 .loc 1 1852 2
 3338 00d2 5A1C     	 adds r2,r3,#1
 3339 00d4 FB68     	 ldr r3,[r7,#12]
 3340 00d6 9A63     	 str r2,[r3,#56]
1853:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1854:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 3341              	 .loc 1 1854 9
 3342 00d8 7B69     	 ldr r3,[r7,#20]
1855:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 3343              	 .loc 1 1855 1
 3344 00da 1846     	 mov r0,r3
 3345 00dc 1837     	 adds r7,r7,#24
 3346              	 .cfi_def_cfa_offset 8
 3347 00de BD46     	 mov sp,r7
 3348              	 .cfi_def_cfa_register 13
 3349              	 
 3350 00e0 80BD     	 pop {r7,pc}
 3351              	 .cfi_endproc
 3352              	.LFE30:
 3353              	 .fnend
 3354              	 .size _ZL18prvCopyDataToQueueP15QueueDefinitionPKvl,.-_ZL18prvCopyDataToQueueP15QueueDefinitionPKvl
 3355              	 .section .text._ZL20prvCopyDataFromQueueP15QueueDefinitionPv,"ax",%progbits
 3356              	 .align 1
 3357              	 .syntax unified
 3358              	 .thumb
 3359              	 .thumb_func
 3360              	 .type _ZL20prvCopyDataFromQueueP15QueueDefinitionPv,%function
 3361              	_ZL20prvCopyDataFromQueueP15QueueDefinitionPv:
 3362              	 .fnstart
 3363              	.LFB31:
1856:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
ARM GAS   			page 98


1857:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1858:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1859:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3364              	 .loc 1 1859 1
 3365              	 .cfi_startproc
 3366              	 
 3367              	 
 3368 0000 80B5     	 push {r7,lr}
 3369              	 .cfi_def_cfa_offset 8
 3370              	 .cfi_offset 7,-8
 3371              	 .cfi_offset 14,-4
 3372 0002 82B0     	 sub sp,sp,#8
 3373              	 .cfi_def_cfa_offset 16
 3374 0004 00AF     	 add r7,sp,#0
 3375              	 .cfi_def_cfa_register 7
 3376 0006 7860     	 str r0,[r7,#4]
 3377 0008 3960     	 str r1,[r7]
1860:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 3378              	 .loc 1 1860 15
 3379 000a 7B68     	 ldr r3,[r7,#4]
 3380 000c 1B6C     	 ldr r3,[r3,#64]
 3381              	 .loc 1 1860 2
 3382 000e 002B     	 cmp r3,#0
 3383 0010 18D0     	 beq .L204
1861:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1862:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 3384              	 .loc 1 1862 25
 3385 0012 7B68     	 ldr r3,[r7,#4]
 3386 0014 DA68     	 ldr r2,[r3,#12]
 3387              	 .loc 1 1862 37
 3388 0016 7B68     	 ldr r3,[r7,#4]
 3389 0018 1B6C     	 ldr r3,[r3,#64]
 3390              	 .loc 1 1862 25
 3391 001a 1A44     	 add r2,r2,r3
 3392 001c 7B68     	 ldr r3,[r7,#4]
 3393 001e DA60     	 str r2,[r3,#12]
1863:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 3394              	 .loc 1 1863 18
 3395 0020 7B68     	 ldr r3,[r7,#4]
 3396 0022 DA68     	 ldr r2,[r3,#12]
 3397              	 .loc 1 1863 41
 3398 0024 7B68     	 ldr r3,[r7,#4]
 3399 0026 5B68     	 ldr r3,[r3,#4]
 3400              	 .loc 1 1863 3
 3401 0028 9A42     	 cmp r2,r3
 3402 002a 03D3     	 bcc .L203
1864:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1865:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 3403              	 .loc 1 1865 37
 3404 002c 7B68     	 ldr r3,[r7,#4]
 3405 002e 1A68     	 ldr r2,[r3]
 3406              	 .loc 1 1865 26
 3407 0030 7B68     	 ldr r3,[r7,#4]
 3408 0032 DA60     	 str r2,[r3,#12]
 3409              	.L203:
1866:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1867:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
ARM GAS   			page 99


1868:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1869:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			mtCOVERAGE_TEST_MARKER();
1870:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1871:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 3410              	 .loc 1 1871 63
 3411 0034 7B68     	 ldr r3,[r7,#4]
 3412 0036 D968     	 ldr r1,[r3,#12]
 3413              	 .loc 1 1871 95
 3414 0038 7B68     	 ldr r3,[r7,#4]
 3415 003a 1B6C     	 ldr r3,[r3,#64]
 3416              	 .loc 1 1871 18
 3417 003c 1A46     	 mov r2,r3
 3418 003e 3868     	 ldr r0,[r7]
 3419 0040 FFF7FEFF 	 bl memcpy
 3420              	.L204:
1872:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1873:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 3421              	 .loc 1 1873 1
 3422 0044 00BF     	 nop
 3423 0046 0837     	 adds r7,r7,#8
 3424              	 .cfi_def_cfa_offset 8
 3425 0048 BD46     	 mov sp,r7
 3426              	 .cfi_def_cfa_register 13
 3427              	 
 3428 004a 80BD     	 pop {r7,pc}
 3429              	 .cfi_endproc
 3430              	.LFE31:
 3431              	 .cantunwind
 3432              	 .fnend
 3433              	 .size _ZL20prvCopyDataFromQueueP15QueueDefinitionPv,.-_ZL20prvCopyDataFromQueueP15QueueDefinitionPv
 3434              	 .section .text._ZL14prvUnlockQueueP15QueueDefinition,"ax",%progbits
 3435              	 .align 1
 3436              	 .syntax unified
 3437              	 .thumb
 3438              	 .thumb_func
 3439              	 .type _ZL14prvUnlockQueueP15QueueDefinition,%function
 3440              	_ZL14prvUnlockQueueP15QueueDefinition:
 3441              	 .fnstart
 3442              	.LFB32:
1874:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1875:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1876:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1877:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3443              	 .loc 1 1877 1
 3444              	 .cfi_startproc
 3445              	 
 3446              	 
 3447 0000 80B5     	 push {r7,lr}
 3448              	 .save {r7,lr}
 3449              	 .cfi_def_cfa_offset 8
 3450              	 .cfi_offset 7,-8
 3451              	 .cfi_offset 14,-4
 3452              	 .pad #8
 3453 0002 82B0     	 sub sp,sp,#8
 3454              	 .cfi_def_cfa_offset 16
 3455              	 .setfp r7,sp,#0
 3456 0004 00AF     	 add r7,sp,#0
ARM GAS   			page 100


 3457              	 .cfi_def_cfa_register 7
 3458 0006 7860     	 str r0,[r7,#4]
1878:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1879:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1880:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* The lock counts contains the number of extra data items placed or
1881:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1882:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	locked items can be added or removed, but the event lists cannot be
1883:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	updated. */
1884:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 3459              	 .loc 1 1884 2
 3460 0008 FFF7FEFF 	 bl vPortEnterCritical
 3461              	.L209:
1885:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1886:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* See if data was added to the queue while it was locked. */
1887:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 3462              	 .loc 1 1887 19
 3463 000c 7B68     	 ldr r3,[r7,#4]
 3464 000e 9B6C     	 ldr r3,[r3,#72]
 3465              	 .loc 1 1887 27
 3466 0010 002B     	 cmp r3,#0
 3467 0012 CCBF     	 ite gt
 3468 0014 0123     	 movgt r3,#1
 3469 0016 0023     	 movle r3,#0
 3470 0018 DBB2     	 uxtb r3,r3
 3471 001a 002B     	 cmp r3,#0
 3472 001c 19D0     	 beq .L206
1888:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1889:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1890:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			blocked waiting for data to become available? */
1891:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1892:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1893:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1894:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1895:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1896:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1897:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The queue is a member of a queue set, and posting to
1898:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						the queue set caused a higher priority task to unblock.
1899:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						A context switch is required. */
1900:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskMissedYield();
1901:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1902:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1903:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1904:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1905:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1906:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1907:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1908:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1909:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* Tasks that are removed from the event list will get added to
1910:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the pending ready list as the scheduler is still suspended. */
1911:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1912:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1913:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1914:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1915:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							/* The task waiting has a higher priority so record that a
1916:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							context	switch is required. */
1917:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							vTaskMissedYield();
1918:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
ARM GAS   			page 101


1919:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						else
1920:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						{
1921:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 							mtCOVERAGE_TEST_MARKER();
1922:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						}
1923:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1924:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1925:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1926:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						break;
1927:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1928:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1929:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1930:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#else /* configUSE_QUEUE_SETS */
1931:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1932:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Tasks that are removed from the event list will get added to
1933:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				the pending ready list as the scheduler is still suspended. */
1934:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 3473              	 .loc 1 1934 9
 3474 001e 7B68     	 ldr r3,[r7,#4]
 3475 0020 5B6A     	 ldr r3,[r3,#36]
 3476              	 .loc 1 1934 5
 3477 0022 002B     	 cmp r3,#0
 3478 0024 14D0     	 beq .L215
1935:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1936:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 3479              	 .loc 1 1936 36
 3480 0026 7B68     	 ldr r3,[r7,#4]
 3481 0028 2433     	 adds r3,r3,#36
 3482              	 .loc 1 1936 34
 3483 002a 1846     	 mov r0,r3
 3484 002c FFF7FEFF 	 bl xTaskRemoveFromEventList
 3485 0030 0346     	 mov r3,r0
 3486              	 .loc 1 1936 75
 3487 0032 002B     	 cmp r3,#0
 3488 0034 14BF     	 ite ne
 3489 0036 0123     	 movne r3,#1
 3490 0038 0023     	 moveq r3,#0
 3491 003a DBB2     	 uxtb r3,r3
 3492              	 .loc 1 1936 6
 3493 003c 002B     	 cmp r3,#0
 3494 003e 01D0     	 beq .L208
1937:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1938:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The task waiting has a higher priority so record that a
1939:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						context	switch is required. */
1940:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						vTaskMissedYield();
 3495              	 .loc 1 1940 23
 3496 0040 FFF7FEFF 	 bl vTaskMissedYield
 3497              	.L208:
1941:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1942:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
1943:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
1944:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
1945:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
1946:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1947:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1948:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1949:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					break;
1950:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
ARM GAS   			page 102


1951:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1952:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1953:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1954:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			--( pxQueue->xTxLock );
 3498              	 .loc 1 1954 17
 3499 0044 7B68     	 ldr r3,[r7,#4]
 3500 0046 9B6C     	 ldr r3,[r3,#72]
 3501              	 .loc 1 1954 4
 3502 0048 5A1E     	 subs r2,r3,#1
 3503 004a 7B68     	 ldr r3,[r7,#4]
 3504 004c 9A64     	 str r2,[r3,#72]
1887:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 3505              	 .loc 1 1887 3
 3506 004e DDE7     	 b .L209
 3507              	.L215:
1949:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
 3508              	 .loc 1 1949 6
 3509 0050 00BF     	 nop
 3510              	.L206:
1955:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1956:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1957:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 3511              	 .loc 1 1957 20
 3512 0052 7B68     	 ldr r3,[r7,#4]
 3513 0054 4FF0FF32 	 mov r2,#-1
 3514 0058 9A64     	 str r2,[r3,#72]
1958:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
1959:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 3515              	 .loc 1 1959 2
 3516 005a FFF7FEFF 	 bl vPortExitCritical
1960:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1961:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	/* Do the same for the Rx lock. */
1962:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 3517              	 .loc 1 1962 2
 3518 005e FFF7FEFF 	 bl vPortEnterCritical
 3519              	.L214:
1963:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1964:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 3520              	 .loc 1 1964 19
 3521 0062 7B68     	 ldr r3,[r7,#4]
 3522 0064 5B6C     	 ldr r3,[r3,#68]
 3523              	 .loc 1 1964 27
 3524 0066 002B     	 cmp r3,#0
 3525 0068 CCBF     	 ite gt
 3526 006a 0123     	 movgt r3,#1
 3527 006c 0023     	 movle r3,#0
 3528 006e DBB2     	 uxtb r3,r3
 3529 0070 002B     	 cmp r3,#0
 3530 0072 19D0     	 beq .L210
1965:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1966:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 3531              	 .loc 1 1966 8
 3532 0074 7B68     	 ldr r3,[r7,#4]
 3533 0076 1B69     	 ldr r3,[r3,#16]
 3534              	 .loc 1 1966 4
 3535 0078 002B     	 cmp r3,#0
 3536 007a 14D0     	 beq .L216
ARM GAS   			page 103


1967:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1968:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 3537              	 .loc 1 1968 35
 3538 007c 7B68     	 ldr r3,[r7,#4]
 3539 007e 1033     	 adds r3,r3,#16
 3540              	 .loc 1 1968 33
 3541 0080 1846     	 mov r0,r3
 3542 0082 FFF7FEFF 	 bl xTaskRemoveFromEventList
 3543 0086 0346     	 mov r3,r0
 3544              	 .loc 1 1968 71
 3545 0088 002B     	 cmp r3,#0
 3546 008a 14BF     	 ite ne
 3547 008c 0123     	 movne r3,#1
 3548 008e 0023     	 moveq r3,#0
 3549 0090 DBB2     	 uxtb r3,r3
 3550              	 .loc 1 1968 5
 3551 0092 002B     	 cmp r3,#0
 3552 0094 01D0     	 beq .L212
1969:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1970:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					vTaskMissedYield();
 3553              	 .loc 1 1970 22
 3554 0096 FFF7FEFF 	 bl vTaskMissedYield
 3555              	.L212:
1971:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1972:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
1973:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
1974:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
1975:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
1976:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1977:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				--( pxQueue->xRxLock );
 3556              	 .loc 1 1977 18
 3557 009a 7B68     	 ldr r3,[r7,#4]
 3558 009c 5B6C     	 ldr r3,[r3,#68]
 3559              	 .loc 1 1977 5
 3560 009e 5A1E     	 subs r2,r3,#1
 3561 00a0 7B68     	 ldr r3,[r7,#4]
 3562 00a2 5A64     	 str r2,[r3,#68]
1964:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 3563              	 .loc 1 1964 3
 3564 00a4 DDE7     	 b .L214
 3565              	.L216:
1978:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1979:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
1980:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
1981:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				break;
 3566              	 .loc 1 1981 5
 3567 00a6 00BF     	 nop
 3568              	.L210:
1982:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
1983:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
1984:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1985:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 3569              	 .loc 1 1985 20
 3570 00a8 7B68     	 ldr r3,[r7,#4]
 3571 00aa 4FF0FF32 	 mov r2,#-1
 3572 00ae 5A64     	 str r2,[r3,#68]
1986:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
ARM GAS   			page 104


1987:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 3573              	 .loc 1 1987 2
 3574 00b0 FFF7FEFF 	 bl vPortExitCritical
1988:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 3575              	 .loc 1 1988 1
 3576 00b4 00BF     	 nop
 3577 00b6 0837     	 adds r7,r7,#8
 3578              	 .cfi_def_cfa_offset 8
 3579 00b8 BD46     	 mov sp,r7
 3580              	 .cfi_def_cfa_register 13
 3581              	 
 3582 00ba 80BD     	 pop {r7,pc}
 3583              	 .cfi_endproc
 3584              	.LFE32:
 3585              	 .fnend
 3586              	 .size _ZL14prvUnlockQueueP15QueueDefinition,.-_ZL14prvUnlockQueueP15QueueDefinition
 3587              	 .section .text._ZL15prvIsQueueEmptyPK15QueueDefinition,"ax",%progbits
 3588              	 .align 1
 3589              	 .syntax unified
 3590              	 .thumb
 3591              	 .thumb_func
 3592              	 .type _ZL15prvIsQueueEmptyPK15QueueDefinition,%function
 3593              	_ZL15prvIsQueueEmptyPK15QueueDefinition:
 3594              	 .fnstart
 3595              	.LFB33:
1989:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
1990:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1991:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1992:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3596              	 .loc 1 1992 1
 3597              	 .cfi_startproc
 3598              	 
 3599              	 
 3600 0000 80B5     	 push {r7,lr}
 3601              	 .save {r7,lr}
 3602              	 .cfi_def_cfa_offset 8
 3603              	 .cfi_offset 7,-8
 3604              	 .cfi_offset 14,-4
 3605              	 .pad #16
 3606 0002 84B0     	 sub sp,sp,#16
 3607              	 .cfi_def_cfa_offset 24
 3608              	 .setfp r7,sp,#0
 3609 0004 00AF     	 add r7,sp,#0
 3610              	 .cfi_def_cfa_register 7
 3611 0006 7860     	 str r0,[r7,#4]
1993:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
1994:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
1995:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 3612              	 .loc 1 1995 2
 3613 0008 FFF7FEFF 	 bl vPortEnterCritical
1996:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
1997:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 3614              	 .loc 1 1997 16
 3615 000c 7B68     	 ldr r3,[r7,#4]
 3616 000e 9B6B     	 ldr r3,[r3,#56]
 3617              	 .loc 1 1997 34
 3618 0010 002B     	 cmp r3,#0
ARM GAS   			page 105


 3619 0012 0CBF     	 ite eq
 3620 0014 0123     	 moveq r3,#1
 3621 0016 0023     	 movne r3,#0
 3622 0018 DBB2     	 uxtb r3,r3
 3623              	 .loc 1 1997 3
 3624 001a 002B     	 cmp r3,#0
 3625 001c 02D0     	 beq .L218
1998:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
1999:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdTRUE;
 3626              	 .loc 1 1999 12
 3627 001e 0123     	 movs r3,#1
 3628 0020 FB60     	 str r3,[r7,#12]
 3629 0022 01E0     	 b .L219
 3630              	.L218:
2000:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2001:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
2002:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2003:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFALSE;
 3631              	 .loc 1 2003 12
 3632 0024 0023     	 movs r3,#0
 3633 0026 FB60     	 str r3,[r7,#12]
 3634              	.L219:
2004:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2005:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2006:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 3635              	 .loc 1 2006 2
 3636 0028 FFF7FEFF 	 bl vPortExitCritical
2007:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2008:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 3637              	 .loc 1 2008 9
 3638 002c FB68     	 ldr r3,[r7,#12]
2009:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
 3639              	 .loc 1 2009 1
 3640 002e 1846     	 mov r0,r3
 3641 0030 1037     	 adds r7,r7,#16
 3642              	 .cfi_def_cfa_offset 8
 3643 0032 BD46     	 mov sp,r7
 3644              	 .cfi_def_cfa_register 13
 3645              	 
 3646 0034 80BD     	 pop {r7,pc}
 3647              	 .cfi_endproc
 3648              	.LFE33:
 3649              	 .fnend
 3650              	 .size _ZL15prvIsQueueEmptyPK15QueueDefinition,.-_ZL15prvIsQueueEmptyPK15QueueDefinition
 3651              	 .section .text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3652              	 .align 1
 3653              	 .global xQueueIsQueueEmptyFromISR
 3654              	 .syntax unified
 3655              	 .thumb
 3656              	 .thumb_func
 3657              	 .type xQueueIsQueueEmptyFromISR,%function
 3658              	xQueueIsQueueEmptyFromISR:
 3659              	 .fnstart
 3660              	.LFB34:
2010:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2011:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2012:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
ARM GAS   			page 106


2013:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3661              	 .loc 1 2013 1
 3662              	 .cfi_startproc
 3663              	 
 3664              	 
 3665              	 
 3666 0000 80B4     	 push {r7}
 3667              	 .cfi_def_cfa_offset 4
 3668              	 .cfi_offset 7,-4
 3669 0002 85B0     	 sub sp,sp,#20
 3670              	 .cfi_def_cfa_offset 24
 3671 0004 00AF     	 add r7,sp,#0
 3672              	 .cfi_def_cfa_register 7
 3673 0006 7860     	 str r0,[r7,#4]
2014:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
2015:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2016:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( xQueue );
 3674              	 .loc 1 2016 2
 3675 0008 7B68     	 ldr r3,[r7,#4]
 3676 000a 002B     	 cmp r3,#0
 3677 000c 0AD1     	 bne .L222
 3678              	.LBB158:
 3679              	.LBB159:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 3680              	 .loc 2 215 2
 3681              	 .syntax unified
 3682              	
 3683 000e 4FF01003 	 mov r3,#16
 3684 0012 83F31188 	 msr basepri,r3
 3685 0016 BFF36F8F 	 isb 
 3686 001a BFF34F8F 	 dsb 
 3687              	
 3688              	
 3689              	 .thumb
 3690              	 .syntax unified
 3691 001e BB60     	 str r3,[r7,#8]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 3692              	 .loc 2 223 1
 3693 0020 00BF     	 nop
 3694              	.L223:
 3695              	.LBE159:
 3696              	.LBE158:
 3697              	 .loc 1 2016 2 discriminator 1
 3698 0022 FEE7     	 b .L223
 3699              	.L222:
2017:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3700              	 .loc 1 2017 32
 3701 0024 7B68     	 ldr r3,[r7,#4]
 3702 0026 9B6B     	 ldr r3,[r3,#56]
 3703              	 .loc 1 2017 50
 3704 0028 002B     	 cmp r3,#0
 3705 002a 0CBF     	 ite eq
 3706 002c 0123     	 moveq r3,#1
 3707 002e 0023     	 movne r3,#0
 3708 0030 DBB2     	 uxtb r3,r3
 3709              	 .loc 1 2017 2
 3710 0032 002B     	 cmp r3,#0
ARM GAS   			page 107


 3711 0034 02D0     	 beq .L224
2018:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2019:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xReturn = pdTRUE;
 3712              	 .loc 1 2019 11
 3713 0036 0123     	 movs r3,#1
 3714 0038 FB60     	 str r3,[r7,#12]
 3715 003a 01E0     	 b .L225
 3716              	.L224:
2020:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2021:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else
2022:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2023:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xReturn = pdFALSE;
 3717              	 .loc 1 2023 11
 3718 003c 0023     	 movs r3,#0
 3719 003e FB60     	 str r3,[r7,#12]
 3720              	.L225:
2024:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2025:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2026:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 3721              	 .loc 1 2026 9
 3722 0040 FB68     	 ldr r3,[r7,#12]
2027:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3723              	 .loc 1 2027 1
 3724 0042 1846     	 mov r0,r3
 3725 0044 1437     	 adds r7,r7,#20
 3726              	 .cfi_def_cfa_offset 4
 3727 0046 BD46     	 mov sp,r7
 3728              	 .cfi_def_cfa_register 13
 3729              	 
 3730 0048 5DF8047B 	 ldr r7,[sp],#4
 3731              	 .cfi_restore 7
 3732              	 .cfi_def_cfa_offset 0
 3733 004c 7047     	 bx lr
 3734              	 .cfi_endproc
 3735              	.LFE34:
 3736              	 .cantunwind
 3737              	 .fnend
 3738              	 .size xQueueIsQueueEmptyFromISR,.-xQueueIsQueueEmptyFromISR
 3739              	 .section .text._ZL14prvIsQueueFullPK15QueueDefinition,"ax",%progbits
 3740              	 .align 1
 3741              	 .syntax unified
 3742              	 .thumb
 3743              	 .thumb_func
 3744              	 .type _ZL14prvIsQueueFullPK15QueueDefinition,%function
 3745              	_ZL14prvIsQueueFullPK15QueueDefinition:
 3746              	 .fnstart
 3747              	.LFB35:
2028:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2029:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2030:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2031:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3748              	 .loc 1 2031 1
 3749              	 .cfi_startproc
 3750              	 
 3751              	 
 3752 0000 80B5     	 push {r7,lr}
 3753              	 .save {r7,lr}
ARM GAS   			page 108


 3754              	 .cfi_def_cfa_offset 8
 3755              	 .cfi_offset 7,-8
 3756              	 .cfi_offset 14,-4
 3757              	 .pad #16
 3758 0002 84B0     	 sub sp,sp,#16
 3759              	 .cfi_def_cfa_offset 24
 3760              	 .setfp r7,sp,#0
 3761 0004 00AF     	 add r7,sp,#0
 3762              	 .cfi_def_cfa_register 7
 3763 0006 7860     	 str r0,[r7,#4]
2032:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
2033:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2034:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskENTER_CRITICAL();
 3764              	 .loc 1 2034 2
 3765 0008 FFF7FEFF 	 bl vPortEnterCritical
2035:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2036:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3766              	 .loc 1 2036 16
 3767 000c 7B68     	 ldr r3,[r7,#4]
 3768 000e 9A6B     	 ldr r2,[r3,#56]
 3769              	 .loc 1 2036 46
 3770 0010 7B68     	 ldr r3,[r7,#4]
 3771 0012 DB6B     	 ldr r3,[r3,#60]
 3772              	 .loc 1 2036 34
 3773 0014 9A42     	 cmp r2,r3
 3774 0016 0CBF     	 ite eq
 3775 0018 0123     	 moveq r3,#1
 3776 001a 0023     	 movne r3,#0
 3777 001c DBB2     	 uxtb r3,r3
 3778              	 .loc 1 2036 3
 3779 001e 002B     	 cmp r3,#0
 3780 0020 02D0     	 beq .L228
2037:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2038:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdTRUE;
 3781              	 .loc 1 2038 12
 3782 0022 0123     	 movs r3,#1
 3783 0024 FB60     	 str r3,[r7,#12]
 3784 0026 01E0     	 b .L229
 3785              	.L228:
2039:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2040:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
2041:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2042:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFALSE;
 3786              	 .loc 1 2042 12
 3787 0028 0023     	 movs r3,#0
 3788 002a FB60     	 str r3,[r7,#12]
 3789              	.L229:
2043:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2044:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2045:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	taskEXIT_CRITICAL();
 3790              	 .loc 1 2045 2
 3791 002c FFF7FEFF 	 bl vPortExitCritical
2046:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2047:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 3792              	 .loc 1 2047 9
 3793 0030 FB68     	 ldr r3,[r7,#12]
2048:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** }
ARM GAS   			page 109


 3794              	 .loc 1 2048 1
 3795 0032 1846     	 mov r0,r3
 3796 0034 1037     	 adds r7,r7,#16
 3797              	 .cfi_def_cfa_offset 8
 3798 0036 BD46     	 mov sp,r7
 3799              	 .cfi_def_cfa_register 13
 3800              	 
 3801 0038 80BD     	 pop {r7,pc}
 3802              	 .cfi_endproc
 3803              	.LFE35:
 3804              	 .fnend
 3805              	 .size _ZL14prvIsQueueFullPK15QueueDefinition,.-_ZL14prvIsQueueFullPK15QueueDefinition
 3806              	 .section .text.xQueueIsQueueFullFromISR,"ax",%progbits
 3807              	 .align 1
 3808              	 .global xQueueIsQueueFullFromISR
 3809              	 .syntax unified
 3810              	 .thumb
 3811              	 .thumb_func
 3812              	 .type xQueueIsQueueFullFromISR,%function
 3813              	xQueueIsQueueFullFromISR:
 3814              	 .fnstart
 3815              	.LFB36:
2049:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2050:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2051:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2052:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** {
 3816              	 .loc 1 2052 1
 3817              	 .cfi_startproc
 3818              	 
 3819              	 
 3820              	 
 3821 0000 80B4     	 push {r7}
 3822              	 .cfi_def_cfa_offset 4
 3823              	 .cfi_offset 7,-4
 3824 0002 85B0     	 sub sp,sp,#20
 3825              	 .cfi_def_cfa_offset 24
 3826 0004 00AF     	 add r7,sp,#0
 3827              	 .cfi_def_cfa_register 7
 3828 0006 7860     	 str r0,[r7,#4]
2053:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** BaseType_t xReturn;
2054:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2055:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	configASSERT( xQueue );
 3829              	 .loc 1 2055 2
 3830 0008 7B68     	 ldr r3,[r7,#4]
 3831 000a 002B     	 cmp r3,#0
 3832 000c 0AD1     	 bne .L232
 3833              	.LBB160:
 3834              	.LBB161:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 3835              	 .loc 2 215 2
 3836              	 .syntax unified
 3837              	
 3838 000e 4FF01003 	 mov r3,#16
 3839 0012 83F31188 	 msr basepri,r3
 3840 0016 BFF36F8F 	 isb 
 3841 001a BFF34F8F 	 dsb 
 3842              	
ARM GAS   			page 110


 3843              	
 3844              	 .thumb
 3845              	 .syntax unified
 3846 001e BB60     	 str r3,[r7,#8]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 3847              	 .loc 2 223 1
 3848 0020 00BF     	 nop
 3849              	.L233:
 3850              	.LBE161:
 3851              	.LBE160:
 3852              	 .loc 1 2055 2 discriminator 1
 3853 0022 FEE7     	 b .L233
 3854              	.L232:
2056:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3855              	 .loc 1 2056 32
 3856 0024 7B68     	 ldr r3,[r7,#4]
 3857 0026 9A6B     	 ldr r2,[r3,#56]
 3858              	 .loc 1 2056 79
 3859 0028 7B68     	 ldr r3,[r7,#4]
 3860 002a DB6B     	 ldr r3,[r3,#60]
 3861              	 .loc 1 2056 50
 3862 002c 9A42     	 cmp r2,r3
 3863 002e 0CBF     	 ite eq
 3864 0030 0123     	 moveq r3,#1
 3865 0032 0023     	 movne r3,#0
 3866 0034 DBB2     	 uxtb r3,r3
 3867              	 .loc 1 2056 2
 3868 0036 002B     	 cmp r3,#0
 3869 0038 02D0     	 beq .L234
2057:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2058:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xReturn = pdTRUE;
 3870              	 .loc 1 2058 11
 3871 003a 0123     	 movs r3,#1
 3872 003c FB60     	 str r3,[r7,#12]
 3873 003e 01E0     	 b .L235
 3874              	.L234:
2059:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2060:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	else
2061:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2062:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		xReturn = pdFALSE;
 3875              	 .loc 1 2062 11
 3876 0040 0023     	 movs r3,#0
 3877 0042 FB60     	 str r3,[r7,#12]
 3878              	.L235:
2063:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2064:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2065:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	return xReturn;
 3879              	 .loc 1 2065 9
 3880 0044 FB68     	 ldr r3,[r7,#12]
2066:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3881              	 .loc 1 2066 1
 3882 0046 1846     	 mov r0,r3
 3883 0048 1437     	 adds r7,r7,#20
 3884              	 .cfi_def_cfa_offset 4
 3885 004a BD46     	 mov sp,r7
 3886              	 .cfi_def_cfa_register 13
 3887              	 
ARM GAS   			page 111


 3888 004c 5DF8047B 	 ldr r7,[sp],#4
 3889              	 .cfi_restore 7
 3890              	 .cfi_def_cfa_offset 0
 3891 0050 7047     	 bx lr
 3892              	 .cfi_endproc
 3893              	.LFE36:
 3894              	 .cantunwind
 3895              	 .fnend
 3896              	 .size xQueueIsQueueFullFromISR,.-xQueueIsQueueFullFromISR
 3897              	 .section .text.vQueueAddToRegistry,"ax",%progbits
 3898              	 .align 1
 3899              	 .global vQueueAddToRegistry
 3900              	 .syntax unified
 3901              	 .thumb
 3902              	 .thumb_func
 3903              	 .type vQueueAddToRegistry,%function
 3904              	vQueueAddToRegistry:
 3905              	 .fnstart
 3906              	.LFB37:
2067:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2068:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2069:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2071:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2072:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2073:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xReturn;
2074:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2076:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2077:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		is required to prevent an interrupt removing something from the queue
2078:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2079:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portDISABLE_INTERRUPTS();
2080:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2081:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2082:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2083:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* The queue is full - do we want to block or just leave without
2084:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				posting? */
2085:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2087:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2088:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return indicating that we need to block. */
2089:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2090:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portENABLE_INTERRUPTS();
2091:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_BLOCKED;
2092:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2093:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2094:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2095:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portENABLE_INTERRUPTS();
2096:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_FULL;
2097:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2098:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2099:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portENABLE_INTERRUPTS();
2101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portDISABLE_INTERRUPTS();
2103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
ARM GAS   			page 112


2105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xReturn = pdPASS;
2109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Were any co-routines waiting for data to become available? */
2111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* In this instance the co-routine could be placed directly
2114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					into the ready list as we are within a critical section.
2115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					Instead the same pending ready list mechanism is used as if
2116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the event were caused from within an interrupt. */
2117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						/* The co-routine waiting has a higher priority so record
2120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						that a yield might be appropriate. */
2121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						xReturn = errQUEUE_YIELD;
2122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
2124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
2126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
2131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xReturn = errQUEUE_FULL;
2136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portENABLE_INTERRUPTS();
2139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xReturn;
2141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_CO_ROUTINES */
2144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xReturn;
2151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		is required to prevent an interrupt adding something to the queue
2155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portDISABLE_INTERRUPTS();
2157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* There are no messages in the queue, do we want to block or just
2161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				leave with nothing? */
ARM GAS   			page 113


2162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					indicating that we need to block. */
2166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portENABLE_INTERRUPTS();
2168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_BLOCKED;
2169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					portENABLE_INTERRUPTS();
2173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					return errQUEUE_FULL;
2174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portENABLE_INTERRUPTS();
2182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portDISABLE_INTERRUPTS();
2184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Data is available from the queue. */
2188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
2196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				--( pxQueue->uxMessagesWaiting );
2198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xReturn = pdPASS;
2201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Were any co-routines waiting for space to become available? */
2203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					/* In this instance the co-routine could be placed directly
2206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					into the ready list as we are within a critical section.
2207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					Instead the same pending ready list mechanism is used as if
2208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					the event were caused from within an interrupt. */
2209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						xReturn = errQUEUE_YIELD;
2212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
2214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
2216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
ARM GAS   			page 114


2219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
2221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xReturn = pdFAIL;
2226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		portENABLE_INTERRUPTS();
2229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xReturn;
2231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_CO_ROUTINES */
2234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		exit without doing anything. */
2244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			co-routine has not already been woken. */
2250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						return pdTRUE;
2257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
2259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
2261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
2266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
2274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS   			page 115


2276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xCoRoutinePreviouslyWoken;
2279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_CO_ROUTINES */
2282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
2288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	BaseType_t xReturn;
2289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		not then just leave without doing anything. */
2293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			/* Copy the data from the queue. */
2296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			--( pxQueue->uxMessagesWaiting );
2306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					else
2317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					{
2318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 						mtCOVERAGE_TEST_MARKER();
2319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					}
2320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				else
2322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				{
2323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 					mtCOVERAGE_TEST_MARKER();
2324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				}
2325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdPASS;
2332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
ARM GAS   			page 116


2333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		else
2334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			xReturn = pdFAIL;
2336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		return xReturn;
2339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
2340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configUSE_CO_ROUTINES */
2342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 3907              	 .loc 1 2347 2
 3908              	 .cfi_startproc
 3909              	 
 3910              	 
 3911              	 
 3912 0000 80B4     	 push {r7}
 3913              	 .cfi_def_cfa_offset 4
 3914              	 .cfi_offset 7,-4
 3915 0002 85B0     	 sub sp,sp,#20
 3916              	 .cfi_def_cfa_offset 24
 3917 0004 00AF     	 add r7,sp,#0
 3918              	 .cfi_def_cfa_register 7
 3919 0006 7860     	 str r0,[r7,#4]
 3920 0008 3960     	 str r1,[r7]
2348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	UBaseType_t ux;
2349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		a free slot. */
2352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3921              	 .loc 1 2352 11
 3922 000a 0023     	 movs r3,#0
 3923 000c FB60     	 str r3,[r7,#12]
 3924              	.L240:
 3925              	 .loc 1 2352 36 discriminator 1
 3926 000e FB68     	 ldr r3,[r7,#12]
 3927 0010 072B     	 cmp r3,#7
 3928 0012 16D8     	 bhi .L241
2353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3929              	 .loc 1 2354 29
 3930 0014 0E4A     	 ldr r2,.L242
 3931 0016 FB68     	 ldr r3,[r7,#12]
 3932 0018 52F83330 	 ldr r3,[r2,r3,lsl#3]
 3933              	 .loc 1 2354 4
 3934 001c 002B     	 cmp r3,#0
 3935 001e 0CD1     	 bne .L239
2355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Store the information on this queue. */
2357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3936              	 .loc 1 2357 38
 3937 0020 0B49     	 ldr r1,.L242
 3938 0022 FB68     	 ldr r3,[r7,#12]
ARM GAS   			page 117


 3939 0024 3A68     	 ldr r2,[r7]
 3940 0026 41F83320 	 str r2,[r1,r3,lsl#3]
2358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3941              	 .loc 1 2358 34
 3942 002a 094A     	 ldr r2,.L242
 3943 002c FB68     	 ldr r3,[r7,#12]
 3944 002e DB00     	 lsls r3,r3,#3
 3945 0030 1344     	 add r3,r3,r2
 3946 0032 7A68     	 ldr r2,[r7,#4]
 3947 0034 5A60     	 str r2,[r3,#4]
2359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				break;
 3948              	 .loc 1 2361 5
 3949 0036 00BF     	 nop
2362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	}
 3950              	 .loc 1 2368 2
 3951 0038 03E0     	 b .L241
 3952              	.L239:
2352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 3953              	 .loc 1 2352 3 discriminator 2
 3954 003a FB68     	 ldr r3,[r7,#12]
 3955 003c 0133     	 adds r3,r3,#1
 3956 003e FB60     	 str r3,[r7,#12]
 3957 0040 E5E7     	 b .L240
 3958              	.L241:
 3959              	 .loc 1 2368 2
 3960 0042 00BF     	 nop
 3961 0044 1437     	 adds r7,r7,#20
 3962              	 .cfi_def_cfa_offset 4
 3963 0046 BD46     	 mov sp,r7
 3964              	 .cfi_def_cfa_register 13
 3965              	 
 3966 0048 5DF8047B 	 ldr r7,[sp],#4
 3967              	 .cfi_restore 7
 3968              	 .cfi_def_cfa_offset 0
 3969 004c 7047     	 bx lr
 3970              	.L243:
 3971 004e 00BF     	 .align 2
 3972              	.L242:
 3973 0050 00000000 	 .word xQueueRegistry
 3974              	 .cfi_endproc
 3975              	.LFE37:
 3976              	 .cantunwind
 3977              	 .fnend
 3978              	 .size vQueueAddToRegistry,.-vQueueAddToRegistry
 3979              	 .section .text.vQueueUnregisterQueue,"ax",%progbits
 3980              	 .align 1
 3981              	 .global vQueueUnregisterQueue
 3982              	 .syntax unified
 3983              	 .thumb
ARM GAS   			page 118


 3984              	 .thumb_func
 3985              	 .type vQueueUnregisterQueue,%function
 3986              	vQueueUnregisterQueue:
 3987              	 .fnstart
 3988              	.LFB38:
2369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** /*-----------------------------------------------------------*/
2372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	{
 3989              	 .loc 1 2376 2
 3990              	 .cfi_startproc
 3991              	 
 3992              	 
 3993              	 
 3994 0000 80B4     	 push {r7}
 3995              	 .cfi_def_cfa_offset 4
 3996              	 .cfi_offset 7,-4
 3997 0002 85B0     	 sub sp,sp,#20
 3998              	 .cfi_def_cfa_offset 24
 3999 0004 00AF     	 add r7,sp,#0
 4000              	 .cfi_def_cfa_register 7
 4001 0006 7860     	 str r0,[r7,#4]
2377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	UBaseType_t ux;
2378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		registry. */
2381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4002              	 .loc 1 2381 11
 4003 0008 0023     	 movs r3,#0
 4004 000a FB60     	 str r3,[r7,#12]
 4005              	.L247:
 4006              	 .loc 1 2381 36 discriminator 1
 4007 000c FB68     	 ldr r3,[r7,#12]
 4008 000e 072B     	 cmp r3,#7
 4009 0010 12D8     	 bhi .L248
2382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
2383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4010              	 .loc 1 2383 29
 4011 0012 0C4A     	 ldr r2,.L249
 4012 0014 FB68     	 ldr r3,[r7,#12]
 4013 0016 DB00     	 lsls r3,r3,#3
 4014 0018 1344     	 add r3,r3,r2
 4015 001a 5B68     	 ldr r3,[r3,#4]
 4016              	 .loc 1 2383 4
 4017 001c 7A68     	 ldr r2,[r7,#4]
 4018 001e 9A42     	 cmp r2,r3
 4019 0020 06D1     	 bne .L246
2384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4020              	 .loc 1 2386 38
 4021 0022 084A     	 ldr r2,.L249
 4022 0024 FB68     	 ldr r3,[r7,#12]
ARM GAS   			page 119


 4023 0026 0021     	 movs r1,#0
 4024 0028 42F83310 	 str r1,[r2,r3,lsl#3]
2387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				break;
 4025              	 .loc 1 2387 5
 4026 002c 00BF     	 nop
2388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			else
2390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			{
2391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 				mtCOVERAGE_TEST_MARKER();
2392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 			}
2393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		}
2394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 
2395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 4027              	 .loc 1 2395 2
 4028 002e 03E0     	 b .L248
 4029              	.L246:
2381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\queue.c **** 		{
 4030              	 .loc 1 2381 3 discriminator 2
 4031 0030 FB68     	 ldr r3,[r7,#12]
 4032 0032 0133     	 adds r3,r3,#1
 4033 0034 FB60     	 str r3,[r7,#12]
 4034 0036 E9E7     	 b .L247
 4035              	.L248:
 4036              	 .loc 1 2395 2
 4037 0038 00BF     	 nop
 4038 003a 1437     	 adds r7,r7,#20
 4039              	 .cfi_def_cfa_offset 4
 4040 003c BD46     	 mov sp,r7
 4041              	 .cfi_def_cfa_register 13
 4042              	 
 4043 003e 5DF8047B 	 ldr r7,[sp],#4
 4044              	 .cfi_restore 7
 4045              	 .cfi_def_cfa_offset 0
 4046 0042 7047     	 bx lr
 4047              	.L250:
 4048              	 .align 2
 4049              	.L249:
 4050 0044 00000000 	 .word xQueueRegistry
 4051              	 .cfi_endproc
 4052              	.LFE38:
 4053              	 .cantunwind
 4054              	 .fnend
 4055              	 .size vQueueUnregisterQueue,.-vQueueUnregisterQueue
 4056              	 .text
 4057              	.Letext0:
 4058              	 .file 3 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\cstdlib"
 4059              	 .file 4 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\bits\\std_abs.h"
 4060              	 .file 5 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\arm-none-eabi\\thumb\\v7e-m+fp\\hard\\bits\\c++config.h"
 4061              	 .file 6 "c:\\progra~2\\gnuarm~1\\102021~1.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 4062              	 .file 7 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 4063              	 .file 8 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\stdlib.h"
 4064              	 .file 9 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\stdlib.h"
 4065              	 .file 10 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 4066              	 .file 11 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/list.h"
 4067              	 .file 12 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/task.h"
 4068              	 .file 13 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/queue.h"
 4069              	 .file 14 "<built-in>"
ARM GAS   			page 120


 4070              	 .section .debug_info,"",%progbits
 4071              	.Ldebug_info0:
 4072 0000 4D180000 	 .4byte 0x184d
 4073 0004 0400     	 .2byte 0x4
 4074 0006 00000000 	 .4byte .Ldebug_abbrev0
 4075 000a 04       	 .byte 0x4
 4076 000b 01       	 .uleb128 0x1
 4077 000c 88050000 	 .4byte .LASF159
 4078 0010 04       	 .byte 0x4
 4079 0011 FB040000 	 .4byte .LASF160
 4080 0015 4C010000 	 .4byte .LASF161
 4081 0019 00000000 	 .4byte .Ldebug_ranges0+0
 4082 001d 00000000 	 .4byte 0
 4083 0021 00000000 	 .4byte .Ldebug_line0
 4084 0025 02       	 .uleb128 0x2
 4085 0026 73746400 	 .ascii "std\000"
 4086 002a 0E       	 .byte 0xe
 4087 002b 00       	 .byte 0
 4088 002c D0010000 	 .4byte 0x1d0
 4089 0030 03       	 .uleb128 0x3
 4090 0031 97060000 	 .4byte .LASF5
 4091 0035 05       	 .byte 0x5
 4092 0036 1E01     	 .2byte 0x11e
 4093 0038 41       	 .byte 0x41
 4094 0039 04       	 .uleb128 0x4
 4095 003a 05       	 .byte 0x5
 4096 003b 1E01     	 .2byte 0x11e
 4097 003d 41       	 .byte 0x41
 4098 003e 30000000 	 .4byte 0x30
 4099 0042 05       	 .uleb128 0x5
 4100 0043 03       	 .byte 0x3
 4101 0044 7F       	 .byte 0x7f
 4102 0045 0B       	 .byte 0xb
 4103 0046 13030000 	 .4byte 0x313
 4104 004a 05       	 .uleb128 0x5
 4105 004b 03       	 .byte 0x3
 4106 004c 80       	 .byte 0x80
 4107 004d 0B       	 .byte 0xb
 4108 004e 47030000 	 .4byte 0x347
 4109 0052 05       	 .uleb128 0x5
 4110 0053 03       	 .byte 0x3
 4111 0054 86       	 .byte 0x86
 4112 0055 0B       	 .byte 0xb
 4113 0056 B9030000 	 .4byte 0x3b9
 4114 005a 05       	 .uleb128 0x5
 4115 005b 03       	 .byte 0x3
 4116 005c 8C       	 .byte 0x8c
 4117 005d 0B       	 .byte 0xb
 4118 005e CF030000 	 .4byte 0x3cf
 4119 0062 05       	 .uleb128 0x5
 4120 0063 03       	 .byte 0x3
 4121 0064 8D       	 .byte 0x8d
 4122 0065 0B       	 .byte 0xb
 4123 0066 EC030000 	 .4byte 0x3ec
 4124 006a 05       	 .uleb128 0x5
 4125 006b 03       	 .byte 0x3
 4126 006c 8E       	 .byte 0x8e
ARM GAS   			page 121


 4127 006d 0B       	 .byte 0xb
 4128 006e 02040000 	 .4byte 0x402
 4129 0072 05       	 .uleb128 0x5
 4130 0073 03       	 .byte 0x3
 4131 0074 8F       	 .byte 0x8f
 4132 0075 0B       	 .byte 0xb
 4133 0076 18040000 	 .4byte 0x418
 4134 007a 05       	 .uleb128 0x5
 4135 007b 03       	 .byte 0x3
 4136 007c 91       	 .byte 0x91
 4137 007d 0B       	 .byte 0xb
 4138 007e 42040000 	 .4byte 0x442
 4139 0082 05       	 .uleb128 0x5
 4140 0083 03       	 .byte 0x3
 4141 0084 94       	 .byte 0x94
 4142 0085 0B       	 .byte 0xb
 4143 0086 5D040000 	 .4byte 0x45d
 4144 008a 05       	 .uleb128 0x5
 4145 008b 03       	 .byte 0x3
 4146 008c 96       	 .byte 0x96
 4147 008d 0B       	 .byte 0xb
 4148 008e 73040000 	 .4byte 0x473
 4149 0092 05       	 .uleb128 0x5
 4150 0093 03       	 .byte 0x3
 4151 0094 99       	 .byte 0x99
 4152 0095 0B       	 .byte 0xb
 4153 0096 8E040000 	 .4byte 0x48e
 4154 009a 05       	 .uleb128 0x5
 4155 009b 03       	 .byte 0x3
 4156 009c 9A       	 .byte 0x9a
 4157 009d 0B       	 .byte 0xb
 4158 009e A9040000 	 .4byte 0x4a9
 4159 00a2 05       	 .uleb128 0x5
 4160 00a3 03       	 .byte 0x3
 4161 00a4 9B       	 .byte 0x9b
 4162 00a5 0B       	 .byte 0xb
 4163 00a6 DB040000 	 .4byte 0x4db
 4164 00aa 05       	 .uleb128 0x5
 4165 00ab 03       	 .byte 0x3
 4166 00ac 9D       	 .byte 0x9d
 4167 00ad 0B       	 .byte 0xb
 4168 00ae FB040000 	 .4byte 0x4fb
 4169 00b2 05       	 .uleb128 0x5
 4170 00b3 03       	 .byte 0x3
 4171 00b4 A3       	 .byte 0xa3
 4172 00b5 0B       	 .byte 0xb
 4173 00b6 1C050000 	 .4byte 0x51c
 4174 00ba 05       	 .uleb128 0x5
 4175 00bb 03       	 .byte 0x3
 4176 00bc A5       	 .byte 0xa5
 4177 00bd 0B       	 .byte 0xb
 4178 00be 28050000 	 .4byte 0x528
 4179 00c2 05       	 .uleb128 0x5
 4180 00c3 03       	 .byte 0x3
 4181 00c4 A6       	 .byte 0xa6
 4182 00c5 0B       	 .byte 0xb
 4183 00c6 3A050000 	 .4byte 0x53a
ARM GAS   			page 122


 4184 00ca 05       	 .uleb128 0x5
 4185 00cb 03       	 .byte 0x3
 4186 00cc A7       	 .byte 0xa7
 4187 00cd 0B       	 .byte 0xb
 4188 00ce 5B050000 	 .4byte 0x55b
 4189 00d2 05       	 .uleb128 0x5
 4190 00d3 03       	 .byte 0x3
 4191 00d4 A8       	 .byte 0xa8
 4192 00d5 0B       	 .byte 0xb
 4193 00d6 7B050000 	 .4byte 0x57b
 4194 00da 05       	 .uleb128 0x5
 4195 00db 03       	 .byte 0x3
 4196 00dc A9       	 .byte 0xa9
 4197 00dd 0B       	 .byte 0xb
 4198 00de 9B050000 	 .4byte 0x59b
 4199 00e2 05       	 .uleb128 0x5
 4200 00e3 03       	 .byte 0x3
 4201 00e4 AB       	 .byte 0xab
 4202 00e5 0B       	 .byte 0xb
 4203 00e6 B1050000 	 .4byte 0x5b1
 4204 00ea 05       	 .uleb128 0x5
 4205 00eb 03       	 .byte 0x3
 4206 00ec AC       	 .byte 0xac
 4207 00ed 0B       	 .byte 0xb
 4208 00ee D7050000 	 .4byte 0x5d7
 4209 00f2 05       	 .uleb128 0x5
 4210 00f3 03       	 .byte 0x3
 4211 00f4 F0       	 .byte 0xf0
 4212 00f5 16       	 .byte 0x16
 4213 00f6 7B030000 	 .4byte 0x37b
 4214 00fa 05       	 .uleb128 0x5
 4215 00fb 03       	 .byte 0x3
 4216 00fc F5       	 .byte 0xf5
 4217 00fd 16       	 .byte 0x16
 4218 00fe 27020000 	 .4byte 0x227
 4219 0102 05       	 .uleb128 0x5
 4220 0103 03       	 .byte 0x3
 4221 0104 F6       	 .byte 0xf6
 4222 0105 16       	 .byte 0x16
 4223 0106 F2050000 	 .4byte 0x5f2
 4224 010a 05       	 .uleb128 0x5
 4225 010b 03       	 .byte 0x3
 4226 010c F8       	 .byte 0xf8
 4227 010d 16       	 .byte 0x16
 4228 010e 0E060000 	 .4byte 0x60e
 4229 0112 05       	 .uleb128 0x5
 4230 0113 03       	 .byte 0x3
 4231 0114 F9       	 .byte 0xf9
 4232 0115 16       	 .byte 0x16
 4233 0116 67060000 	 .4byte 0x667
 4234 011a 05       	 .uleb128 0x5
 4235 011b 03       	 .byte 0x3
 4236 011c FA       	 .byte 0xfa
 4237 011d 16       	 .byte 0x16
 4238 011e 25060000 	 .4byte 0x625
 4239 0122 05       	 .uleb128 0x5
 4240 0123 03       	 .byte 0x3
ARM GAS   			page 123


 4241 0124 FB       	 .byte 0xfb
 4242 0125 16       	 .byte 0x16
 4243 0126 46060000 	 .4byte 0x646
 4244 012a 05       	 .uleb128 0x5
 4245 012b 03       	 .byte 0x3
 4246 012c FC       	 .byte 0xfc
 4247 012d 16       	 .byte 0x16
 4248 012e 89060000 	 .4byte 0x689
 4249 0132 06       	 .uleb128 0x6
 4250 0133 61627300 	 .ascii "abs\000"
 4251 0137 04       	 .byte 0x4
 4252 0138 4F       	 .byte 0x4f
 4253 0139 03       	 .byte 0x3
 4254 013a E8010000 	 .4byte .LASF0
 4255 013e 64020000 	 .4byte 0x264
 4256 0142 4C010000 	 .4byte 0x14c
 4257 0146 07       	 .uleb128 0x7
 4258 0147 64020000 	 .4byte 0x264
 4259 014b 00       	 .byte 0
 4260 014c 06       	 .uleb128 0x6
 4261 014d 61627300 	 .ascii "abs\000"
 4262 0151 04       	 .byte 0x4
 4263 0152 4B       	 .byte 0x4b
 4264 0153 03       	 .byte 0x3
 4265 0154 F2010000 	 .4byte .LASF1
 4266 0158 82060000 	 .4byte 0x682
 4267 015c 66010000 	 .4byte 0x166
 4268 0160 07       	 .uleb128 0x7
 4269 0161 82060000 	 .4byte 0x682
 4270 0165 00       	 .byte 0
 4271 0166 06       	 .uleb128 0x6
 4272 0167 61627300 	 .ascii "abs\000"
 4273 016b 04       	 .byte 0x4
 4274 016c 47       	 .byte 0x47
 4275 016d 03       	 .byte 0x3
 4276 016e DE010000 	 .4byte .LASF2
 4277 0172 E5030000 	 .4byte 0x3e5
 4278 0176 80010000 	 .4byte 0x180
 4279 017a 07       	 .uleb128 0x7
 4280 017b E5030000 	 .4byte 0x3e5
 4281 017f 00       	 .byte 0
 4282 0180 06       	 .uleb128 0x6
 4283 0181 61627300 	 .ascii "abs\000"
 4284 0185 04       	 .byte 0x4
 4285 0186 3D       	 .byte 0x3d
 4286 0187 03       	 .byte 0x3
 4287 0188 35020000 	 .4byte .LASF3
 4288 018c 5D020000 	 .4byte 0x25d
 4289 0190 9A010000 	 .4byte 0x19a
 4290 0194 07       	 .uleb128 0x7
 4291 0195 5D020000 	 .4byte 0x25d
 4292 0199 00       	 .byte 0
 4293 019a 06       	 .uleb128 0x6
 4294 019b 61627300 	 .ascii "abs\000"
 4295 019f 04       	 .byte 0x4
 4296 01a0 38       	 .byte 0x38
 4297 01a1 03       	 .byte 0x3
ARM GAS   			page 124


 4298 01a2 FC010000 	 .4byte .LASF4
 4299 01a6 A4020000 	 .4byte 0x2a4
 4300 01aa B4010000 	 .4byte 0x1b4
 4301 01ae 07       	 .uleb128 0x7
 4302 01af A4020000 	 .4byte 0x2a4
 4303 01b3 00       	 .byte 0
 4304 01b4 08       	 .uleb128 0x8
 4305 01b5 64697600 	 .ascii "div\000"
 4306 01b9 03       	 .byte 0x3
 4307 01ba B1       	 .byte 0xb1
 4308 01bb 03       	 .byte 0x3
 4309 01bc 23000000 	 .4byte .LASF6
 4310 01c0 47030000 	 .4byte 0x347
 4311 01c4 07       	 .uleb128 0x7
 4312 01c5 A4020000 	 .4byte 0x2a4
 4313 01c9 07       	 .uleb128 0x7
 4314 01ca A4020000 	 .4byte 0x2a4
 4315 01ce 00       	 .byte 0
 4316 01cf 00       	 .byte 0
 4317 01d0 09       	 .uleb128 0x9
 4318 01d1 97000000 	 .4byte .LASF162
 4319 01d5 05       	 .byte 0x5
 4320 01d6 2001     	 .2byte 0x120
 4321 01d8 0B       	 .byte 0xb
 4322 01d9 43020000 	 .4byte 0x243
 4323 01dd 03       	 .uleb128 0x3
 4324 01de 97060000 	 .4byte .LASF5
 4325 01e2 05       	 .byte 0x5
 4326 01e3 2201     	 .2byte 0x122
 4327 01e5 41       	 .byte 0x41
 4328 01e6 04       	 .uleb128 0x4
 4329 01e7 05       	 .byte 0x5
 4330 01e8 2201     	 .2byte 0x122
 4331 01ea 41       	 .byte 0x41
 4332 01eb DD010000 	 .4byte 0x1dd
 4333 01ef 05       	 .uleb128 0x5
 4334 01f0 03       	 .byte 0x3
 4335 01f1 C8       	 .byte 0xc8
 4336 01f2 0B       	 .byte 0xb
 4337 01f3 7B030000 	 .4byte 0x37b
 4338 01f7 05       	 .uleb128 0x5
 4339 01f8 03       	 .byte 0x3
 4340 01f9 D8       	 .byte 0xd8
 4341 01fa 0B       	 .byte 0xb
 4342 01fb F2050000 	 .4byte 0x5f2
 4343 01ff 05       	 .uleb128 0x5
 4344 0200 03       	 .byte 0x3
 4345 0201 E3       	 .byte 0xe3
 4346 0202 0B       	 .byte 0xb
 4347 0203 0E060000 	 .4byte 0x60e
 4348 0207 05       	 .uleb128 0x5
 4349 0208 03       	 .byte 0x3
 4350 0209 E4       	 .byte 0xe4
 4351 020a 0B       	 .byte 0xb
 4352 020b 25060000 	 .4byte 0x625
 4353 020f 05       	 .uleb128 0x5
 4354 0210 03       	 .byte 0x3
ARM GAS   			page 125


 4355 0211 E5       	 .byte 0xe5
 4356 0212 0B       	 .byte 0xb
 4357 0213 46060000 	 .4byte 0x646
 4358 0217 05       	 .uleb128 0x5
 4359 0218 03       	 .byte 0x3
 4360 0219 E7       	 .byte 0xe7
 4361 021a 0B       	 .byte 0xb
 4362 021b 67060000 	 .4byte 0x667
 4363 021f 05       	 .uleb128 0x5
 4364 0220 03       	 .byte 0x3
 4365 0221 E8       	 .byte 0xe8
 4366 0222 0B       	 .byte 0xb
 4367 0223 89060000 	 .4byte 0x689
 4368 0227 08       	 .uleb128 0x8
 4369 0228 64697600 	 .ascii "div\000"
 4370 022c 03       	 .byte 0x3
 4371 022d D5       	 .byte 0xd5
 4372 022e 03       	 .byte 0x3
 4373 022f 0B010000 	 .4byte .LASF7
 4374 0233 7B030000 	 .4byte 0x37b
 4375 0237 07       	 .uleb128 0x7
 4376 0238 5D020000 	 .4byte 0x25d
 4377 023c 07       	 .uleb128 0x7
 4378 023d 5D020000 	 .4byte 0x25d
 4379 0241 00       	 .byte 0
 4380 0242 00       	 .byte 0
 4381 0243 0A       	 .uleb128 0xa
 4382 0244 12030000 	 .4byte .LASF11
 4383 0248 06       	 .byte 0x6
 4384 0249 D1       	 .byte 0xd1
 4385 024a 17       	 .byte 0x17
 4386 024b 4F020000 	 .4byte 0x24f
 4387 024f 0B       	 .uleb128 0xb
 4388 0250 04       	 .byte 0x4
 4389 0251 07       	 .byte 0x7
 4390 0252 82000000 	 .4byte .LASF8
 4391 0256 0C       	 .uleb128 0xc
 4392 0257 04       	 .byte 0x4
 4393 0258 05       	 .byte 0x5
 4394 0259 696E7400 	 .ascii "int\000"
 4395 025d 0B       	 .uleb128 0xb
 4396 025e 08       	 .byte 0x8
 4397 025f 05       	 .byte 0x5
 4398 0260 DE040000 	 .4byte .LASF9
 4399 0264 0B       	 .uleb128 0xb
 4400 0265 08       	 .byte 0x8
 4401 0266 04       	 .byte 0x4
 4402 0267 9F070000 	 .4byte .LASF10
 4403 026b 0D       	 .uleb128 0xd
 4404 026c 27090000 	 .4byte .LASF163
 4405 0270 0A       	 .uleb128 0xa
 4406 0271 72070000 	 .4byte .LASF12
 4407 0275 07       	 .byte 0x7
 4408 0276 29       	 .byte 0x29
 4409 0277 17       	 .byte 0x17
 4410 0278 7C020000 	 .4byte 0x27c
 4411 027c 0B       	 .uleb128 0xb
ARM GAS   			page 126


 4412 027d 01       	 .byte 0x1
 4413 027e 06       	 .byte 0x6
 4414 027f CD090000 	 .4byte .LASF13
 4415 0283 0A       	 .uleb128 0xa
 4416 0284 86080000 	 .4byte .LASF14
 4417 0288 07       	 .byte 0x7
 4418 0289 2B       	 .byte 0x2b
 4419 028a 18       	 .byte 0x18
 4420 028b 8F020000 	 .4byte 0x28f
 4421 028f 0B       	 .uleb128 0xb
 4422 0290 01       	 .byte 0x1
 4423 0291 08       	 .byte 0x8
 4424 0292 F9080000 	 .4byte .LASF15
 4425 0296 0B       	 .uleb128 0xb
 4426 0297 02       	 .byte 0x2
 4427 0298 05       	 .byte 0x5
 4428 0299 E7070000 	 .4byte .LASF16
 4429 029d 0B       	 .uleb128 0xb
 4430 029e 02       	 .byte 0x2
 4431 029f 07       	 .byte 0x7
 4432 02a0 D9090000 	 .4byte .LASF17
 4433 02a4 0B       	 .uleb128 0xb
 4434 02a5 04       	 .byte 0x4
 4435 02a6 05       	 .byte 0x5
 4436 02a7 FC070000 	 .4byte .LASF18
 4437 02ab 0A       	 .uleb128 0xa
 4438 02ac 07090000 	 .4byte .LASF19
 4439 02b0 07       	 .byte 0x7
 4440 02b1 4F       	 .byte 0x4f
 4441 02b2 19       	 .byte 0x19
 4442 02b3 B7020000 	 .4byte 0x2b7
 4443 02b7 0B       	 .uleb128 0xb
 4444 02b8 04       	 .byte 0x4
 4445 02b9 07       	 .byte 0x7
 4446 02ba A8080000 	 .4byte .LASF20
 4447 02be 0B       	 .uleb128 0xb
 4448 02bf 08       	 .byte 0x8
 4449 02c0 07       	 .byte 0x7
 4450 02c1 A4020000 	 .4byte .LASF21
 4451 02c5 0E       	 .uleb128 0xe
 4452 02c6 04       	 .byte 0x4
 4453 02c7 0F       	 .uleb128 0xf
 4454 02c8 C5020000 	 .4byte 0x2c5
 4455 02cc 10       	 .uleb128 0x10
 4456 02cd 04       	 .byte 0x4
 4457 02ce D2020000 	 .4byte 0x2d2
 4458 02d2 11       	 .uleb128 0x11
 4459 02d3 10       	 .uleb128 0x10
 4460 02d4 04       	 .byte 0x4
 4461 02d5 D9020000 	 .4byte 0x2d9
 4462 02d9 0B       	 .uleb128 0xb
 4463 02da 01       	 .byte 0x1
 4464 02db 08       	 .byte 0x8
 4465 02dc E7030000 	 .4byte .LASF22
 4466 02e0 0F       	 .uleb128 0xf
 4467 02e1 D9020000 	 .4byte 0x2d9
 4468 02e5 10       	 .uleb128 0x10
ARM GAS   			page 127


 4469 02e6 04       	 .byte 0x4
 4470 02e7 E0020000 	 .4byte 0x2e0
 4471 02eb 12       	 .uleb128 0x12
 4472 02ec 08       	 .byte 0x8
 4473 02ed 08       	 .byte 0x8
 4474 02ee 24       	 .byte 0x24
 4475 02ef 01       	 .byte 0x1
 4476 02f0 F7030000 	 .4byte .LASF25
 4477 02f4 13030000 	 .4byte 0x313
 4478 02f8 13       	 .uleb128 0x13
 4479 02f9 97040000 	 .4byte .LASF23
 4480 02fd 08       	 .byte 0x8
 4481 02fe 25       	 .byte 0x25
 4482 02ff 07       	 .byte 0x7
 4483 0300 56020000 	 .4byte 0x256
 4484 0304 00       	 .byte 0
 4485 0305 14       	 .uleb128 0x14
 4486 0306 72656D00 	 .ascii "rem\000"
 4487 030a 08       	 .byte 0x8
 4488 030b 26       	 .byte 0x26
 4489 030c 07       	 .byte 0x7
 4490 030d 56020000 	 .4byte 0x256
 4491 0311 04       	 .byte 0x4
 4492 0312 00       	 .byte 0
 4493 0313 0A       	 .uleb128 0xa
 4494 0314 F3080000 	 .4byte .LASF24
 4495 0318 08       	 .byte 0x8
 4496 0319 27       	 .byte 0x27
 4497 031a 03       	 .byte 0x3
 4498 031b EB020000 	 .4byte 0x2eb
 4499 031f 12       	 .uleb128 0x12
 4500 0320 08       	 .byte 0x8
 4501 0321 08       	 .byte 0x8
 4502 0322 2A       	 .byte 0x2a
 4503 0323 01       	 .byte 0x1
 4504 0324 67090000 	 .4byte .LASF26
 4505 0328 47030000 	 .4byte 0x347
 4506 032c 13       	 .uleb128 0x13
 4507 032d 97040000 	 .4byte .LASF23
 4508 0331 08       	 .byte 0x8
 4509 0332 2B       	 .byte 0x2b
 4510 0333 08       	 .byte 0x8
 4511 0334 A4020000 	 .4byte 0x2a4
 4512 0338 00       	 .byte 0
 4513 0339 14       	 .uleb128 0x14
 4514 033a 72656D00 	 .ascii "rem\000"
 4515 033e 08       	 .byte 0x8
 4516 033f 2C       	 .byte 0x2c
 4517 0340 08       	 .byte 0x8
 4518 0341 A4020000 	 .4byte 0x2a4
 4519 0345 04       	 .byte 0x4
 4520 0346 00       	 .byte 0
 4521 0347 0A       	 .uleb128 0xa
 4522 0348 6B080000 	 .4byte .LASF27
 4523 034c 08       	 .byte 0x8
 4524 034d 2D       	 .byte 0x2d
 4525 034e 03       	 .byte 0x3
ARM GAS   			page 128


 4526 034f 1F030000 	 .4byte 0x31f
 4527 0353 12       	 .uleb128 0x12
 4528 0354 10       	 .byte 0x10
 4529 0355 08       	 .byte 0x8
 4530 0356 31       	 .byte 0x31
 4531 0357 01       	 .byte 0x1
 4532 0358 97090000 	 .4byte .LASF28
 4533 035c 7B030000 	 .4byte 0x37b
 4534 0360 13       	 .uleb128 0x13
 4535 0361 97040000 	 .4byte .LASF23
 4536 0365 08       	 .byte 0x8
 4537 0366 32       	 .byte 0x32
 4538 0367 11       	 .byte 0x11
 4539 0368 5D020000 	 .4byte 0x25d
 4540 036c 00       	 .byte 0
 4541 036d 14       	 .uleb128 0x14
 4542 036e 72656D00 	 .ascii "rem\000"
 4543 0372 08       	 .byte 0x8
 4544 0373 33       	 .byte 0x33
 4545 0374 11       	 .byte 0x11
 4546 0375 5D020000 	 .4byte 0x25d
 4547 0379 08       	 .byte 0x8
 4548 037a 00       	 .byte 0
 4549 037b 0A       	 .uleb128 0xa
 4550 037c EC090000 	 .4byte .LASF29
 4551 0380 08       	 .byte 0x8
 4552 0381 34       	 .byte 0x34
 4553 0382 03       	 .byte 0x3
 4554 0383 53030000 	 .4byte 0x353
 4555 0387 0A       	 .uleb128 0xa
 4556 0388 F4060000 	 .4byte .LASF30
 4557 038c 08       	 .byte 0x8
 4558 038d 39       	 .byte 0x39
 4559 038e 0F       	 .byte 0xf
 4560 038f 93030000 	 .4byte 0x393
 4561 0393 10       	 .uleb128 0x10
 4562 0394 04       	 .byte 0x4
 4563 0395 99030000 	 .4byte 0x399
 4564 0399 15       	 .uleb128 0x15
 4565 039a 56020000 	 .4byte 0x256
 4566 039e AD030000 	 .4byte 0x3ad
 4567 03a2 07       	 .uleb128 0x7
 4568 03a3 AD030000 	 .4byte 0x3ad
 4569 03a7 07       	 .uleb128 0x7
 4570 03a8 AD030000 	 .4byte 0x3ad
 4571 03ac 00       	 .byte 0
 4572 03ad 10       	 .uleb128 0x10
 4573 03ae 04       	 .byte 0x4
 4574 03af B8030000 	 .4byte 0x3b8
 4575 03b3 0F       	 .uleb128 0xf
 4576 03b4 AD030000 	 .4byte 0x3ad
 4577 03b8 16       	 .uleb128 0x16
 4578 03b9 17       	 .uleb128 0x17
 4579 03ba 17080000 	 .4byte .LASF31
 4580 03be 08       	 .byte 0x8
 4581 03bf 4C       	 .byte 0x4c
 4582 03c0 05       	 .byte 0x5
ARM GAS   			page 129


 4583 03c1 56020000 	 .4byte 0x256
 4584 03c5 CF030000 	 .4byte 0x3cf
 4585 03c9 07       	 .uleb128 0x7
 4586 03ca CC020000 	 .4byte 0x2cc
 4587 03ce 00       	 .byte 0
 4588 03cf 17       	 .uleb128 0x17
 4589 03d0 F4090000 	 .4byte .LASF32
 4590 03d4 08       	 .byte 0x8
 4591 03d5 4D       	 .byte 0x4d
 4592 03d6 08       	 .byte 0x8
 4593 03d7 E5030000 	 .4byte 0x3e5
 4594 03db E5030000 	 .4byte 0x3e5
 4595 03df 07       	 .uleb128 0x7
 4596 03e0 E5020000 	 .4byte 0x2e5
 4597 03e4 00       	 .byte 0
 4598 03e5 0B       	 .uleb128 0xb
 4599 03e6 08       	 .byte 0x8
 4600 03e7 04       	 .byte 0x4
 4601 03e8 030A0000 	 .4byte .LASF33
 4602 03ec 17       	 .uleb128 0x17
 4603 03ed F9090000 	 .4byte .LASF34
 4604 03f1 08       	 .byte 0x8
 4605 03f2 51       	 .byte 0x51
 4606 03f3 05       	 .byte 0x5
 4607 03f4 56020000 	 .4byte 0x256
 4608 03f8 02040000 	 .4byte 0x402
 4609 03fc 07       	 .uleb128 0x7
 4610 03fd E5020000 	 .4byte 0x2e5
 4611 0401 00       	 .byte 0
 4612 0402 17       	 .uleb128 0x17
 4613 0403 FE090000 	 .4byte .LASF35
 4614 0407 08       	 .byte 0x8
 4615 0408 53       	 .byte 0x53
 4616 0409 06       	 .byte 0x6
 4617 040a A4020000 	 .4byte 0x2a4
 4618 040e 18040000 	 .4byte 0x418
 4619 0412 07       	 .uleb128 0x7
 4620 0413 E5020000 	 .4byte 0x2e5
 4621 0417 00       	 .byte 0
 4622 0418 17       	 .uleb128 0x17
 4623 0419 53030000 	 .4byte .LASF36
 4624 041d 08       	 .byte 0x8
 4625 041e 55       	 .byte 0x55
 4626 041f 08       	 .byte 0x8
 4627 0420 C5020000 	 .4byte 0x2c5
 4628 0424 42040000 	 .4byte 0x442
 4629 0428 07       	 .uleb128 0x7
 4630 0429 AD030000 	 .4byte 0x3ad
 4631 042d 07       	 .uleb128 0x7
 4632 042e AD030000 	 .4byte 0x3ad
 4633 0432 07       	 .uleb128 0x7
 4634 0433 43020000 	 .4byte 0x243
 4635 0437 07       	 .uleb128 0x7
 4636 0438 43020000 	 .4byte 0x243
 4637 043c 07       	 .uleb128 0x7
 4638 043d 87030000 	 .4byte 0x387
 4639 0441 00       	 .byte 0
ARM GAS   			page 130


 4640 0442 18       	 .uleb128 0x18
 4641 0443 64697600 	 .ascii "div\000"
 4642 0447 08       	 .byte 0x8
 4643 0448 5C       	 .byte 0x5c
 4644 0449 07       	 .byte 0x7
 4645 044a 13030000 	 .4byte 0x313
 4646 044e 5D040000 	 .4byte 0x45d
 4647 0452 07       	 .uleb128 0x7
 4648 0453 56020000 	 .4byte 0x256
 4649 0457 07       	 .uleb128 0x7
 4650 0458 56020000 	 .4byte 0x256
 4651 045c 00       	 .byte 0
 4652 045d 17       	 .uleb128 0x17
 4653 045e 00000000 	 .4byte .LASF37
 4654 0462 08       	 .byte 0x8
 4655 0463 5F       	 .byte 0x5f
 4656 0464 09       	 .byte 0x9
 4657 0465 D3020000 	 .4byte 0x2d3
 4658 0469 73040000 	 .4byte 0x473
 4659 046d 07       	 .uleb128 0x7
 4660 046e E5020000 	 .4byte 0x2e5
 4661 0472 00       	 .byte 0
 4662 0473 17       	 .uleb128 0x17
 4663 0474 E5060000 	 .4byte .LASF38
 4664 0478 08       	 .byte 0x8
 4665 0479 6B       	 .byte 0x6b
 4666 047a 08       	 .byte 0x8
 4667 047b 47030000 	 .4byte 0x347
 4668 047f 8E040000 	 .4byte 0x48e
 4669 0483 07       	 .uleb128 0x7
 4670 0484 A4020000 	 .4byte 0x2a4
 4671 0488 07       	 .uleb128 0x7
 4672 0489 A4020000 	 .4byte 0x2a4
 4673 048d 00       	 .byte 0
 4674 048e 17       	 .uleb128 0x17
 4675 048f 7C000000 	 .4byte .LASF39
 4676 0493 08       	 .byte 0x8
 4677 0494 6D       	 .byte 0x6d
 4678 0495 05       	 .byte 0x5
 4679 0496 56020000 	 .4byte 0x256
 4680 049a A9040000 	 .4byte 0x4a9
 4681 049e 07       	 .uleb128 0x7
 4682 049f E5020000 	 .4byte 0x2e5
 4683 04a3 07       	 .uleb128 0x7
 4684 04a4 43020000 	 .4byte 0x243
 4685 04a8 00       	 .byte 0
 4686 04a9 17       	 .uleb128 0x17
 4687 04aa C2040000 	 .4byte .LASF40
 4688 04ae 08       	 .byte 0x8
 4689 04af 73       	 .byte 0x73
 4690 04b0 08       	 .byte 0x8
 4691 04b1 43020000 	 .4byte 0x243
 4692 04b5 C9040000 	 .4byte 0x4c9
 4693 04b9 07       	 .uleb128 0x7
 4694 04ba C9040000 	 .4byte 0x4c9
 4695 04be 07       	 .uleb128 0x7
 4696 04bf E5020000 	 .4byte 0x2e5
ARM GAS   			page 131


 4697 04c3 07       	 .uleb128 0x7
 4698 04c4 43020000 	 .4byte 0x243
 4699 04c8 00       	 .byte 0
 4700 04c9 10       	 .uleb128 0x10
 4701 04ca 04       	 .byte 0x4
 4702 04cb CF040000 	 .4byte 0x4cf
 4703 04cf 0B       	 .uleb128 0xb
 4704 04d0 04       	 .byte 0x4
 4705 04d1 07       	 .byte 0x7
 4706 04d2 C3000000 	 .4byte .LASF41
 4707 04d6 0F       	 .uleb128 0xf
 4708 04d7 CF040000 	 .4byte 0x4cf
 4709 04db 17       	 .uleb128 0x17
 4710 04dc 4E020000 	 .4byte .LASF42
 4711 04e0 08       	 .byte 0x8
 4712 04e1 6F       	 .byte 0x6f
 4713 04e2 05       	 .byte 0x5
 4714 04e3 56020000 	 .4byte 0x256
 4715 04e7 FB040000 	 .4byte 0x4fb
 4716 04eb 07       	 .uleb128 0x7
 4717 04ec C9040000 	 .4byte 0x4c9
 4718 04f0 07       	 .uleb128 0x7
 4719 04f1 E5020000 	 .4byte 0x2e5
 4720 04f5 07       	 .uleb128 0x7
 4721 04f6 43020000 	 .4byte 0x243
 4722 04fa 00       	 .byte 0
 4723 04fb 19       	 .uleb128 0x19
 4724 04fc 3D0A0000 	 .4byte .LASF43
 4725 0500 08       	 .byte 0x8
 4726 0501 8F       	 .byte 0x8f
 4727 0502 06       	 .byte 0x6
 4728 0503 1C050000 	 .4byte 0x51c
 4729 0507 07       	 .uleb128 0x7
 4730 0508 C5020000 	 .4byte 0x2c5
 4731 050c 07       	 .uleb128 0x7
 4732 050d 43020000 	 .4byte 0x243
 4733 0511 07       	 .uleb128 0x7
 4734 0512 43020000 	 .4byte 0x243
 4735 0516 07       	 .uleb128 0x7
 4736 0517 87030000 	 .4byte 0x387
 4737 051b 00       	 .byte 0
 4738 051c 1A       	 .uleb128 0x1a
 4739 051d 17000000 	 .4byte .LASF164
 4740 0521 08       	 .byte 0x8
 4741 0522 90       	 .byte 0x90
 4742 0523 05       	 .byte 0x5
 4743 0524 56020000 	 .4byte 0x256
 4744 0528 19       	 .uleb128 0x19
 4745 0529 29030000 	 .4byte .LASF44
 4746 052d 08       	 .byte 0x8
 4747 052e 9F       	 .byte 0x9f
 4748 052f 06       	 .byte 0x6
 4749 0530 3A050000 	 .4byte 0x53a
 4750 0534 07       	 .uleb128 0x7
 4751 0535 4F020000 	 .4byte 0x24f
 4752 0539 00       	 .byte 0
 4753 053a 17       	 .uleb128 0x17
ARM GAS   			page 132


 4754 053b 19030000 	 .4byte .LASF45
 4755 053f 08       	 .byte 0x8
 4756 0540 A0       	 .byte 0xa0
 4757 0541 08       	 .byte 0x8
 4758 0542 E5030000 	 .4byte 0x3e5
 4759 0546 55050000 	 .4byte 0x555
 4760 054a 07       	 .uleb128 0x7
 4761 054b E5020000 	 .4byte 0x2e5
 4762 054f 07       	 .uleb128 0x7
 4763 0550 55050000 	 .4byte 0x555
 4764 0554 00       	 .byte 0
 4765 0555 10       	 .uleb128 0x10
 4766 0556 04       	 .byte 0x4
 4767 0557 D3020000 	 .4byte 0x2d3
 4768 055b 17       	 .uleb128 0x17
 4769 055c 49090000 	 .4byte .LASF46
 4770 0560 08       	 .byte 0x8
 4771 0561 AB       	 .byte 0xab
 4772 0562 06       	 .byte 0x6
 4773 0563 A4020000 	 .4byte 0x2a4
 4774 0567 7B050000 	 .4byte 0x57b
 4775 056b 07       	 .uleb128 0x7
 4776 056c E5020000 	 .4byte 0x2e5
 4777 0570 07       	 .uleb128 0x7
 4778 0571 55050000 	 .4byte 0x555
 4779 0575 07       	 .uleb128 0x7
 4780 0576 56020000 	 .4byte 0x256
 4781 057a 00       	 .byte 0
 4782 057b 17       	 .uleb128 0x17
 4783 057c A0080000 	 .4byte .LASF47
 4784 0580 08       	 .byte 0x8
 4785 0581 AD       	 .byte 0xad
 4786 0582 0F       	 .byte 0xf
 4787 0583 B7020000 	 .4byte 0x2b7
 4788 0587 9B050000 	 .4byte 0x59b
 4789 058b 07       	 .uleb128 0x7
 4790 058c E5020000 	 .4byte 0x2e5
 4791 0590 07       	 .uleb128 0x7
 4792 0591 55050000 	 .4byte 0x555
 4793 0595 07       	 .uleb128 0x7
 4794 0596 56020000 	 .4byte 0x256
 4795 059a 00       	 .byte 0
 4796 059b 17       	 .uleb128 0x17
 4797 059c 1C000000 	 .4byte .LASF48
 4798 05a0 08       	 .byte 0x8
 4799 05a1 BF       	 .byte 0xbf
 4800 05a2 05       	 .byte 0x5
 4801 05a3 56020000 	 .4byte 0x256
 4802 05a7 B1050000 	 .4byte 0x5b1
 4803 05ab 07       	 .uleb128 0x7
 4804 05ac E5020000 	 .4byte 0x2e5
 4805 05b0 00       	 .byte 0
 4806 05b1 17       	 .uleb128 0x17
 4807 05b2 40090000 	 .4byte .LASF49
 4808 05b6 08       	 .byte 0x8
 4809 05b7 75       	 .byte 0x75
 4810 05b8 08       	 .byte 0x8
ARM GAS   			page 133


 4811 05b9 43020000 	 .4byte 0x243
 4812 05bd D1050000 	 .4byte 0x5d1
 4813 05c1 07       	 .uleb128 0x7
 4814 05c2 D3020000 	 .4byte 0x2d3
 4815 05c6 07       	 .uleb128 0x7
 4816 05c7 D1050000 	 .4byte 0x5d1
 4817 05cb 07       	 .uleb128 0x7
 4818 05cc 43020000 	 .4byte 0x243
 4819 05d0 00       	 .byte 0
 4820 05d1 10       	 .uleb128 0x10
 4821 05d2 04       	 .byte 0x4
 4822 05d3 D6040000 	 .4byte 0x4d6
 4823 05d7 17       	 .uleb128 0x17
 4824 05d8 DF020000 	 .4byte .LASF50
 4825 05dc 08       	 .byte 0x8
 4826 05dd 71       	 .byte 0x71
 4827 05de 05       	 .byte 0x5
 4828 05df 56020000 	 .4byte 0x256
 4829 05e3 F2050000 	 .4byte 0x5f2
 4830 05e7 07       	 .uleb128 0x7
 4831 05e8 D3020000 	 .4byte 0x2d3
 4832 05ec 07       	 .uleb128 0x7
 4833 05ed CF040000 	 .4byte 0x4cf
 4834 05f1 00       	 .byte 0
 4835 05f2 1B       	 .uleb128 0x1b
 4836 05f3 F8020000 	 .4byte .LASF51
 4837 05f7 08       	 .byte 0x8
 4838 05f8 0C01     	 .2byte 0x10c
 4839 05fa 09       	 .byte 0x9
 4840 05fb 7B030000 	 .4byte 0x37b
 4841 05ff 0E060000 	 .4byte 0x60e
 4842 0603 07       	 .uleb128 0x7
 4843 0604 5D020000 	 .4byte 0x25d
 4844 0608 07       	 .uleb128 0x7
 4845 0609 5D020000 	 .4byte 0x25d
 4846 060d 00       	 .byte 0
 4847 060e 1B       	 .uleb128 0x1b
 4848 060f FE020000 	 .4byte .LASF52
 4849 0613 08       	 .byte 0x8
 4850 0614 0701     	 .2byte 0x107
 4851 0616 0B       	 .byte 0xb
 4852 0617 5D020000 	 .4byte 0x25d
 4853 061b 25060000 	 .4byte 0x625
 4854 061f 07       	 .uleb128 0x7
 4855 0620 E5020000 	 .4byte 0x2e5
 4856 0624 00       	 .byte 0
 4857 0625 1B       	 .uleb128 0x1b
 4858 0626 24020000 	 .4byte .LASF53
 4859 062a 08       	 .byte 0x8
 4860 062b 0D01     	 .2byte 0x10d
 4861 062d 0B       	 .byte 0xb
 4862 062e 5D020000 	 .4byte 0x25d
 4863 0632 46060000 	 .4byte 0x646
 4864 0636 07       	 .uleb128 0x7
 4865 0637 E5020000 	 .4byte 0x2e5
 4866 063b 07       	 .uleb128 0x7
 4867 063c 55050000 	 .4byte 0x555
ARM GAS   			page 134


 4868 0640 07       	 .uleb128 0x7
 4869 0641 56020000 	 .4byte 0x256
 4870 0645 00       	 .byte 0
 4871 0646 1B       	 .uleb128 0x1b
 4872 0647 34010000 	 .4byte .LASF54
 4873 064b 08       	 .byte 0x8
 4874 064c 1101     	 .2byte 0x111
 4875 064e 14       	 .byte 0x14
 4876 064f BE020000 	 .4byte 0x2be
 4877 0653 67060000 	 .4byte 0x667
 4878 0657 07       	 .uleb128 0x7
 4879 0658 E5020000 	 .4byte 0x2e5
 4880 065c 07       	 .uleb128 0x7
 4881 065d 55050000 	 .4byte 0x555
 4882 0661 07       	 .uleb128 0x7
 4883 0662 56020000 	 .4byte 0x256
 4884 0666 00       	 .byte 0
 4885 0667 17       	 .uleb128 0x17
 4886 0668 39090000 	 .4byte .LASF55
 4887 066c 08       	 .byte 0x8
 4888 066d A3       	 .byte 0xa3
 4889 066e 07       	 .byte 0x7
 4890 066f 82060000 	 .4byte 0x682
 4891 0673 82060000 	 .4byte 0x682
 4892 0677 07       	 .uleb128 0x7
 4893 0678 E5020000 	 .4byte 0x2e5
 4894 067c 07       	 .uleb128 0x7
 4895 067d 55050000 	 .4byte 0x555
 4896 0681 00       	 .byte 0
 4897 0682 0B       	 .uleb128 0xb
 4898 0683 04       	 .byte 0x4
 4899 0684 04       	 .byte 0x4
 4900 0685 6E020000 	 .4byte .LASF56
 4901 0689 1B       	 .uleb128 0x1b
 4902 068a 06020000 	 .4byte .LASF57
 4903 068e 08       	 .byte 0x8
 4904 068f 4401     	 .2byte 0x144
 4905 0691 14       	 .byte 0x14
 4906 0692 64020000 	 .4byte 0x264
 4907 0696 A5060000 	 .4byte 0x6a5
 4908 069a 07       	 .uleb128 0x7
 4909 069b E5020000 	 .4byte 0x2e5
 4910 069f 07       	 .uleb128 0x7
 4911 06a0 55050000 	 .4byte 0x555
 4912 06a4 00       	 .byte 0
 4913 06a5 05       	 .uleb128 0x5
 4914 06a6 09       	 .byte 0x9
 4915 06a7 27       	 .byte 0x27
 4916 06a8 0C       	 .byte 0xc
 4917 06a9 B9030000 	 .4byte 0x3b9
 4918 06ad 05       	 .uleb128 0x5
 4919 06ae 09       	 .byte 0x9
 4920 06af 33       	 .byte 0x33
 4921 06b0 0C       	 .byte 0xc
 4922 06b1 13030000 	 .4byte 0x313
 4923 06b5 05       	 .uleb128 0x5
 4924 06b6 09       	 .byte 0x9
ARM GAS   			page 135


 4925 06b7 34       	 .byte 0x34
 4926 06b8 0C       	 .byte 0xc
 4927 06b9 47030000 	 .4byte 0x347
 4928 06bd 05       	 .uleb128 0x5
 4929 06be 09       	 .byte 0x9
 4930 06bf 36       	 .byte 0x36
 4931 06c0 0C       	 .byte 0xc
 4932 06c1 32010000 	 .4byte 0x132
 4933 06c5 05       	 .uleb128 0x5
 4934 06c6 09       	 .byte 0x9
 4935 06c7 36       	 .byte 0x36
 4936 06c8 0C       	 .byte 0xc
 4937 06c9 4C010000 	 .4byte 0x14c
 4938 06cd 05       	 .uleb128 0x5
 4939 06ce 09       	 .byte 0x9
 4940 06cf 36       	 .byte 0x36
 4941 06d0 0C       	 .byte 0xc
 4942 06d1 66010000 	 .4byte 0x166
 4943 06d5 05       	 .uleb128 0x5
 4944 06d6 09       	 .byte 0x9
 4945 06d7 36       	 .byte 0x36
 4946 06d8 0C       	 .byte 0xc
 4947 06d9 80010000 	 .4byte 0x180
 4948 06dd 05       	 .uleb128 0x5
 4949 06de 09       	 .byte 0x9
 4950 06df 36       	 .byte 0x36
 4951 06e0 0C       	 .byte 0xc
 4952 06e1 9A010000 	 .4byte 0x19a
 4953 06e5 05       	 .uleb128 0x5
 4954 06e6 09       	 .byte 0x9
 4955 06e7 37       	 .byte 0x37
 4956 06e8 0C       	 .byte 0xc
 4957 06e9 CF030000 	 .4byte 0x3cf
 4958 06ed 05       	 .uleb128 0x5
 4959 06ee 09       	 .byte 0x9
 4960 06ef 38       	 .byte 0x38
 4961 06f0 0C       	 .byte 0xc
 4962 06f1 EC030000 	 .4byte 0x3ec
 4963 06f5 05       	 .uleb128 0x5
 4964 06f6 09       	 .byte 0x9
 4965 06f7 39       	 .byte 0x39
 4966 06f8 0C       	 .byte 0xc
 4967 06f9 02040000 	 .4byte 0x402
 4968 06fd 05       	 .uleb128 0x5
 4969 06fe 09       	 .byte 0x9
 4970 06ff 3A       	 .byte 0x3a
 4971 0700 0C       	 .byte 0xc
 4972 0701 18040000 	 .4byte 0x418
 4973 0705 05       	 .uleb128 0x5
 4974 0706 09       	 .byte 0x9
 4975 0707 3C       	 .byte 0x3c
 4976 0708 0C       	 .byte 0xc
 4977 0709 27020000 	 .4byte 0x227
 4978 070d 05       	 .uleb128 0x5
 4979 070e 09       	 .byte 0x9
 4980 070f 3C       	 .byte 0x3c
 4981 0710 0C       	 .byte 0xc
ARM GAS   			page 136


 4982 0711 B4010000 	 .4byte 0x1b4
 4983 0715 05       	 .uleb128 0x5
 4984 0716 09       	 .byte 0x9
 4985 0717 3C       	 .byte 0x3c
 4986 0718 0C       	 .byte 0xc
 4987 0719 42040000 	 .4byte 0x442
 4988 071d 05       	 .uleb128 0x5
 4989 071e 09       	 .byte 0x9
 4990 071f 3E       	 .byte 0x3e
 4991 0720 0C       	 .byte 0xc
 4992 0721 5D040000 	 .4byte 0x45d
 4993 0725 05       	 .uleb128 0x5
 4994 0726 09       	 .byte 0x9
 4995 0727 40       	 .byte 0x40
 4996 0728 0C       	 .byte 0xc
 4997 0729 73040000 	 .4byte 0x473
 4998 072d 05       	 .uleb128 0x5
 4999 072e 09       	 .byte 0x9
 5000 072f 43       	 .byte 0x43
 5001 0730 0C       	 .byte 0xc
 5002 0731 8E040000 	 .4byte 0x48e
 5003 0735 05       	 .uleb128 0x5
 5004 0736 09       	 .byte 0x9
 5005 0737 44       	 .byte 0x44
 5006 0738 0C       	 .byte 0xc
 5007 0739 A9040000 	 .4byte 0x4a9
 5008 073d 05       	 .uleb128 0x5
 5009 073e 09       	 .byte 0x9
 5010 073f 45       	 .byte 0x45
 5011 0740 0C       	 .byte 0xc
 5012 0741 DB040000 	 .4byte 0x4db
 5013 0745 05       	 .uleb128 0x5
 5014 0746 09       	 .byte 0x9
 5015 0747 47       	 .byte 0x47
 5016 0748 0C       	 .byte 0xc
 5017 0749 FB040000 	 .4byte 0x4fb
 5018 074d 05       	 .uleb128 0x5
 5019 074e 09       	 .byte 0x9
 5020 074f 48       	 .byte 0x48
 5021 0750 0C       	 .byte 0xc
 5022 0751 1C050000 	 .4byte 0x51c
 5023 0755 05       	 .uleb128 0x5
 5024 0756 09       	 .byte 0x9
 5025 0757 4A       	 .byte 0x4a
 5026 0758 0C       	 .byte 0xc
 5027 0759 28050000 	 .4byte 0x528
 5028 075d 05       	 .uleb128 0x5
 5029 075e 09       	 .byte 0x9
 5030 075f 4B       	 .byte 0x4b
 5031 0760 0C       	 .byte 0xc
 5032 0761 3A050000 	 .4byte 0x53a
 5033 0765 05       	 .uleb128 0x5
 5034 0766 09       	 .byte 0x9
 5035 0767 4C       	 .byte 0x4c
 5036 0768 0C       	 .byte 0xc
 5037 0769 5B050000 	 .4byte 0x55b
 5038 076d 05       	 .uleb128 0x5
ARM GAS   			page 137


 5039 076e 09       	 .byte 0x9
 5040 076f 4D       	 .byte 0x4d
 5041 0770 0C       	 .byte 0xc
 5042 0771 7B050000 	 .4byte 0x57b
 5043 0775 05       	 .uleb128 0x5
 5044 0776 09       	 .byte 0x9
 5045 0777 4E       	 .byte 0x4e
 5046 0778 0C       	 .byte 0xc
 5047 0779 9B050000 	 .4byte 0x59b
 5048 077d 05       	 .uleb128 0x5
 5049 077e 09       	 .byte 0x9
 5050 077f 50       	 .byte 0x50
 5051 0780 0C       	 .byte 0xc
 5052 0781 B1050000 	 .4byte 0x5b1
 5053 0785 05       	 .uleb128 0x5
 5054 0786 09       	 .byte 0x9
 5055 0787 51       	 .byte 0x51
 5056 0788 0C       	 .byte 0xc
 5057 0789 D7050000 	 .4byte 0x5d7
 5058 078d 0A       	 .uleb128 0xa
 5059 078e D1030000 	 .4byte .LASF58
 5060 0792 0A       	 .byte 0xa
 5061 0793 14       	 .byte 0x14
 5062 0794 12       	 .byte 0x12
 5063 0795 70020000 	 .4byte 0x270
 5064 0799 0A       	 .uleb128 0xa
 5065 079a 7C040000 	 .4byte .LASF59
 5066 079e 0A       	 .byte 0xa
 5067 079f 18       	 .byte 0x18
 5068 07a0 13       	 .byte 0x13
 5069 07a1 83020000 	 .4byte 0x283
 5070 07a5 0F       	 .uleb128 0xf
 5071 07a6 99070000 	 .4byte 0x799
 5072 07aa 0A       	 .uleb128 0xa
 5073 07ab 2C020000 	 .4byte .LASF60
 5074 07af 0A       	 .byte 0xa
 5075 07b0 30       	 .byte 0x30
 5076 07b1 14       	 .byte 0x14
 5077 07b2 AB020000 	 .4byte 0x2ab
 5078 07b6 0A       	 .uleb128 0xa
 5079 07b7 8C060000 	 .4byte .LASF61
 5080 07bb 02       	 .byte 0x2
 5081 07bc 62       	 .byte 0x62
 5082 07bd 0E       	 .byte 0xe
 5083 07be A4020000 	 .4byte 0x2a4
 5084 07c2 1C       	 .uleb128 0x1c
 5085 07c3 B6070000 	 .4byte 0x7b6
 5086 07c7 0F       	 .uleb128 0xf
 5087 07c8 B6070000 	 .4byte 0x7b6
 5088 07cc 0A       	 .uleb128 0xa
 5089 07cd 0B040000 	 .4byte .LASF62
 5090 07d1 02       	 .byte 0x2
 5091 07d2 63       	 .byte 0x63
 5092 07d3 17       	 .byte 0x17
 5093 07d4 B7020000 	 .4byte 0x2b7
 5094 07d8 1C       	 .uleb128 0x1c
 5095 07d9 CC070000 	 .4byte 0x7cc
ARM GAS   			page 138


 5096 07dd 0F       	 .uleb128 0xf
 5097 07de CC070000 	 .4byte 0x7cc
 5098 07e2 0A       	 .uleb128 0xa
 5099 07e3 67070000 	 .4byte .LASF63
 5100 07e7 02       	 .byte 0x2
 5101 07e8 69       	 .byte 0x69
 5102 07e9 13       	 .byte 0x13
 5103 07ea AA070000 	 .4byte 0x7aa
 5104 07ee 1D       	 .uleb128 0x1d
 5105 07ef B8000000 	 .4byte .LASF70
 5106 07f3 14       	 .byte 0x14
 5107 07f4 0B       	 .byte 0xb
 5108 07f5 B5       	 .byte 0xb5
 5109 07f6 08       	 .byte 0x8
 5110 07f7 3D080000 	 .4byte 0x83d
 5111 07fb 13       	 .uleb128 0x13
 5112 07fc F1070000 	 .4byte .LASF64
 5113 0800 0B       	 .byte 0xb
 5114 0801 B8       	 .byte 0xb8
 5115 0802 21       	 .byte 0x21
 5116 0803 E2070000 	 .4byte 0x7e2
 5117 0807 00       	 .byte 0
 5118 0808 13       	 .uleb128 0x13
 5119 0809 DE060000 	 .4byte .LASF65
 5120 080d 0B       	 .byte 0xb
 5121 080e B9       	 .byte 0xb9
 5122 080f 2A       	 .byte 0x2a
 5123 0810 3D080000 	 .4byte 0x83d
 5124 0814 04       	 .byte 0x4
 5125 0815 13       	 .uleb128 0x13
 5126 0816 D4020000 	 .4byte .LASF66
 5127 081a 0B       	 .byte 0xb
 5128 081b BA       	 .byte 0xba
 5129 081c 2A       	 .byte 0x2a
 5130 081d 3D080000 	 .4byte 0x83d
 5131 0821 08       	 .byte 0x8
 5132 0822 13       	 .uleb128 0x13
 5133 0823 50090000 	 .4byte .LASF67
 5134 0827 0B       	 .byte 0xb
 5135 0828 BB       	 .byte 0xbb
 5136 0829 09       	 .byte 0x9
 5137 082a C5020000 	 .4byte 0x2c5
 5138 082e 0C       	 .byte 0xc
 5139 082f 13       	 .uleb128 0x13
 5140 0830 C4070000 	 .4byte .LASF68
 5141 0834 0B       	 .byte 0xb
 5142 0835 BC       	 .byte 0xbc
 5143 0836 1D       	 .byte 0x1d
 5144 0837 C5020000 	 .4byte 0x2c5
 5145 083b 10       	 .byte 0x10
 5146 083c 00       	 .byte 0
 5147 083d 10       	 .uleb128 0x10
 5148 083e 04       	 .byte 0x4
 5149 083f EE070000 	 .4byte 0x7ee
 5150 0843 0A       	 .uleb128 0xa
 5151 0844 EC030000 	 .4byte .LASF69
 5152 0848 0B       	 .byte 0xb
ARM GAS   			page 139


 5153 0849 BF       	 .byte 0xbf
 5154 084a 1B       	 .byte 0x1b
 5155 084b EE070000 	 .4byte 0x7ee
 5156 084f 1D       	 .uleb128 0x1d
 5157 0850 43030000 	 .4byte .LASF71
 5158 0854 0C       	 .byte 0xc
 5159 0855 0B       	 .byte 0xb
 5160 0856 C1       	 .byte 0xc1
 5161 0857 08       	 .byte 0x8
 5162 0858 84080000 	 .4byte 0x884
 5163 085c 13       	 .uleb128 0x13
 5164 085d F1070000 	 .4byte .LASF64
 5165 0861 0B       	 .byte 0xb
 5166 0862 C4       	 .byte 0xc4
 5167 0863 21       	 .byte 0x21
 5168 0864 E2070000 	 .4byte 0x7e2
 5169 0868 00       	 .byte 0
 5170 0869 13       	 .uleb128 0x13
 5171 086a DE060000 	 .4byte .LASF65
 5172 086e 0B       	 .byte 0xb
 5173 086f C5       	 .byte 0xc5
 5174 0870 2A       	 .byte 0x2a
 5175 0871 3D080000 	 .4byte 0x83d
 5176 0875 04       	 .byte 0x4
 5177 0876 13       	 .uleb128 0x13
 5178 0877 D4020000 	 .4byte .LASF66
 5179 087b 0B       	 .byte 0xb
 5180 087c C6       	 .byte 0xc6
 5181 087d 2A       	 .byte 0x2a
 5182 087e 3D080000 	 .4byte 0x83d
 5183 0882 08       	 .byte 0x8
 5184 0883 00       	 .byte 0
 5185 0884 0A       	 .uleb128 0xa
 5186 0885 6D040000 	 .4byte .LASF72
 5187 0889 0B       	 .byte 0xb
 5188 088a C8       	 .byte 0xc8
 5189 088b 20       	 .byte 0x20
 5190 088c 4F080000 	 .4byte 0x84f
 5191 0890 1D       	 .uleb128 0x1d
 5192 0891 5B030000 	 .4byte .LASF73
 5193 0895 14       	 .byte 0x14
 5194 0896 0B       	 .byte 0xb
 5195 0897 CD       	 .byte 0xcd
 5196 0898 10       	 .byte 0x10
 5197 0899 C5080000 	 .4byte 0x8c5
 5198 089d 13       	 .uleb128 0x13
 5199 089e 07000000 	 .4byte .LASF74
 5200 08a2 0B       	 .byte 0xb
 5201 08a3 D0       	 .byte 0xd0
 5202 08a4 22       	 .byte 0x22
 5203 08a5 CC070000 	 .4byte 0x7cc
 5204 08a9 00       	 .byte 0
 5205 08aa 13       	 .uleb128 0x13
 5206 08ab 8F000000 	 .4byte .LASF75
 5207 08af 0B       	 .byte 0xb
 5208 08b0 D1       	 .byte 0xd1
 5209 08b1 23       	 .byte 0x23
ARM GAS   			page 140


 5210 08b2 C5080000 	 .4byte 0x8c5
 5211 08b6 04       	 .byte 0x4
 5212 08b7 13       	 .uleb128 0x13
 5213 08b8 46040000 	 .4byte .LASF76
 5214 08bc 0B       	 .byte 0xb
 5215 08bd D2       	 .byte 0xd2
 5216 08be 11       	 .byte 0x11
 5217 08bf 84080000 	 .4byte 0x884
 5218 08c3 08       	 .byte 0x8
 5219 08c4 00       	 .byte 0
 5220 08c5 10       	 .uleb128 0x10
 5221 08c6 04       	 .byte 0x4
 5222 08c7 43080000 	 .4byte 0x843
 5223 08cb 0A       	 .uleb128 0xa
 5224 08cc 56070000 	 .4byte .LASF77
 5225 08d0 0B       	 .byte 0xb
 5226 08d1 D4       	 .byte 0xd4
 5227 08d2 03       	 .byte 0x3
 5228 08d3 90080000 	 .4byte 0x890
 5229 08d7 1D       	 .uleb128 0x1d
 5230 08d8 A1000000 	 .4byte .LASF78
 5231 08dc 08       	 .byte 0x8
 5232 08dd 0C       	 .byte 0xc
 5233 08de 86       	 .byte 0x86
 5234 08df 10       	 .byte 0x10
 5235 08e0 FF080000 	 .4byte 0x8ff
 5236 08e4 13       	 .uleb128 0x13
 5237 08e5 3D010000 	 .4byte .LASF79
 5238 08e9 0C       	 .byte 0xc
 5239 08ea 88       	 .byte 0x88
 5240 08eb 0D       	 .byte 0xd
 5241 08ec B6070000 	 .4byte 0x7b6
 5242 08f0 00       	 .byte 0
 5243 08f1 13       	 .uleb128 0x13
 5244 08f2 A6060000 	 .4byte .LASF80
 5245 08f6 0C       	 .byte 0xc
 5246 08f7 89       	 .byte 0x89
 5247 08f8 0D       	 .byte 0xd
 5248 08f9 E2070000 	 .4byte 0x7e2
 5249 08fd 04       	 .byte 0x4
 5250 08fe 00       	 .byte 0
 5251 08ff 0A       	 .uleb128 0xa
 5252 0900 0D070000 	 .4byte .LASF81
 5253 0904 0C       	 .byte 0xc
 5254 0905 8A       	 .byte 0x8a
 5255 0906 03       	 .byte 0x3
 5256 0907 D7080000 	 .4byte 0x8d7
 5257 090b 0A       	 .uleb128 0xa
 5258 090c 38040000 	 .4byte .LASF82
 5259 0910 0D       	 .byte 0xd
 5260 0911 58       	 .byte 0x58
 5261 0912 10       	 .byte 0x10
 5262 0913 C5020000 	 .4byte 0x2c5
 5263 0917 0F       	 .uleb128 0xf
 5264 0918 0B090000 	 .4byte 0x90b
 5265 091c 1D       	 .uleb128 0x1d
 5266 091d 7F020000 	 .4byte .LASF83
ARM GAS   			page 141


 5267 0921 54       	 .byte 0x54
 5268 0922 01       	 .byte 0x1
 5269 0923 82       	 .byte 0x82
 5270 0924 10       	 .byte 0x10
 5271 0925 F3090000 	 .4byte 0x9f3
 5272 0929 1E       	 .uleb128 0x1e
 5273 092a 04       	 .byte 0x4
 5274 092b 01       	 .byte 0x1
 5275 092c 89       	 .byte 0x89
 5276 092d 02       	 .byte 0x2
 5277 092e 4B090000 	 .4byte 0x94b
 5278 0932 1F       	 .uleb128 0x1f
 5279 0933 8A030000 	 .4byte .LASF84
 5280 0937 01       	 .byte 0x1
 5281 0938 8A       	 .byte 0x8a
 5282 0939 0B       	 .byte 0xb
 5283 093a F3090000 	 .4byte 0x9f3
 5284 093e 1F       	 .uleb128 0x1f
 5285 093f CC080000 	 .4byte .LASF85
 5286 0943 01       	 .byte 0x1
 5287 0944 8B       	 .byte 0x8b
 5288 0945 0F       	 .byte 0xf
 5289 0946 CC070000 	 .4byte 0x7cc
 5290 094a 00       	 .byte 0
 5291 094b 13       	 .uleb128 0x13
 5292 094c 58090000 	 .4byte .LASF86
 5293 0950 01       	 .byte 0x1
 5294 0951 84       	 .byte 0x84
 5295 0952 0A       	 .byte 0xa
 5296 0953 F3090000 	 .4byte 0x9f3
 5297 0957 00       	 .byte 0
 5298 0958 13       	 .uleb128 0x13
 5299 0959 72080000 	 .4byte .LASF87
 5300 095d 01       	 .byte 0x1
 5301 095e 85       	 .byte 0x85
 5302 095f 0A       	 .byte 0xa
 5303 0960 F3090000 	 .4byte 0x9f3
 5304 0964 04       	 .byte 0x4
 5305 0965 13       	 .uleb128 0x13
 5306 0966 5D070000 	 .4byte .LASF88
 5307 096a 01       	 .byte 0x1
 5308 096b 86       	 .byte 0x86
 5309 096c 0A       	 .byte 0xa
 5310 096d F3090000 	 .4byte 0x9f3
 5311 0971 08       	 .byte 0x8
 5312 0972 14       	 .uleb128 0x14
 5313 0973 7500     	 .ascii "u\000"
 5314 0975 01       	 .byte 0x1
 5315 0976 8C       	 .byte 0x8c
 5316 0977 04       	 .byte 0x4
 5317 0978 29090000 	 .4byte 0x929
 5318 097c 0C       	 .byte 0xc
 5319 097d 13       	 .uleb128 0x13
 5320 097e 20010000 	 .4byte .LASF89
 5321 0982 01       	 .byte 0x1
 5322 0983 8E       	 .byte 0x8e
 5323 0984 09       	 .byte 0x9
ARM GAS   			page 142


 5324 0985 CB080000 	 .4byte 0x8cb
 5325 0989 10       	 .byte 0x10
 5326 098a 13       	 .uleb128 0x13
 5327 098b 43000000 	 .4byte .LASF90
 5328 098f 01       	 .byte 0x1
 5329 0990 8F       	 .byte 0x8f
 5330 0991 09       	 .byte 0x9
 5331 0992 CB080000 	 .4byte 0x8cb
 5332 0996 24       	 .byte 0x24
 5333 0997 13       	 .uleb128 0x13
 5334 0998 E6020000 	 .4byte .LASF91
 5335 099c 01       	 .byte 0x1
 5336 099d 91       	 .byte 0x91
 5337 099e 17       	 .byte 0x17
 5338 099f D8070000 	 .4byte 0x7d8
 5339 09a3 38       	 .byte 0x38
 5340 09a4 13       	 .uleb128 0x13
 5341 09a5 D0070000 	 .4byte .LASF92
 5342 09a9 01       	 .byte 0x1
 5343 09aa 92       	 .byte 0x92
 5344 09ab 0E       	 .byte 0xe
 5345 09ac CC070000 	 .4byte 0x7cc
 5346 09b0 3C       	 .byte 0x3c
 5347 09b1 13       	 .uleb128 0x13
 5348 09b2 140A0000 	 .4byte .LASF93
 5349 09b6 01       	 .byte 0x1
 5350 09b7 93       	 .byte 0x93
 5351 09b8 0E       	 .byte 0xe
 5352 09b9 CC070000 	 .4byte 0x7cc
 5353 09bd 40       	 .byte 0x40
 5354 09be 13       	 .uleb128 0x13
 5355 09bf 1E080000 	 .4byte .LASF94
 5356 09c3 01       	 .byte 0x1
 5357 09c4 95       	 .byte 0x95
 5358 09c5 16       	 .byte 0x16
 5359 09c6 C2070000 	 .4byte 0x7c2
 5360 09ca 44       	 .byte 0x44
 5361 09cb 13       	 .uleb128 0x13
 5362 09cc 5F090000 	 .4byte .LASF95
 5363 09d0 01       	 .byte 0x1
 5364 09d1 96       	 .byte 0x96
 5365 09d2 16       	 .byte 0x16
 5366 09d3 C2070000 	 .4byte 0x7c2
 5367 09d7 48       	 .byte 0x48
 5368 09d8 13       	 .uleb128 0x13
 5369 09d9 D9070000 	 .4byte .LASF96
 5370 09dd 01       	 .byte 0x1
 5371 09de 99       	 .byte 0x99
 5372 09df 0F       	 .byte 0xf
 5373 09e0 CC070000 	 .4byte 0x7cc
 5374 09e4 4C       	 .byte 0x4c
 5375 09e5 13       	 .uleb128 0x13
 5376 09e6 3D070000 	 .4byte .LASF97
 5377 09ea 01       	 .byte 0x1
 5378 09eb 9A       	 .byte 0x9a
 5379 09ec 0B       	 .byte 0xb
 5380 09ed 99070000 	 .4byte 0x799
ARM GAS   			page 143


 5381 09f1 50       	 .byte 0x50
 5382 09f2 00       	 .byte 0
 5383 09f3 10       	 .uleb128 0x10
 5384 09f4 04       	 .byte 0x4
 5385 09f5 8D070000 	 .4byte 0x78d
 5386 09f9 0A       	 .uleb128 0xa
 5387 09fa 26080000 	 .4byte .LASF98
 5388 09fe 01       	 .byte 0x1
 5389 09ff A1       	 .byte 0xa1
 5390 0a00 03       	 .byte 0x3
 5391 0a01 1C090000 	 .4byte 0x91c
 5392 0a05 0A       	 .uleb128 0xa
 5393 0a06 AB010000 	 .4byte .LASF99
 5394 0a0a 01       	 .byte 0x1
 5395 0a0b A5       	 .byte 0xa5
 5396 0a0c 10       	 .byte 0x10
 5397 0a0d F9090000 	 .4byte 0x9f9
 5398 0a11 0F       	 .uleb128 0xf
 5399 0a12 050A0000 	 .4byte 0xa05
 5400 0a16 1D       	 .uleb128 0x1d
 5401 0a17 CB000000 	 .4byte .LASF100
 5402 0a1b 08       	 .byte 0x8
 5403 0a1c 01       	 .byte 0x1
 5404 0a1d B2       	 .byte 0xb2
 5405 0a1e 11       	 .byte 0x11
 5406 0a1f 3E0A0000 	 .4byte 0xa3e
 5407 0a23 13       	 .uleb128 0x13
 5408 0a24 37030000 	 .4byte .LASF101
 5409 0a28 01       	 .byte 0x1
 5410 0a29 B4       	 .byte 0xb4
 5411 0a2a 0F       	 .byte 0xf
 5412 0a2b E5020000 	 .4byte 0x2e5
 5413 0a2f 00       	 .byte 0
 5414 0a30 13       	 .uleb128 0x13
 5415 0a31 2F030000 	 .4byte .LASF102
 5416 0a35 01       	 .byte 0x1
 5417 0a36 B5       	 .byte 0xb5
 5418 0a37 11       	 .byte 0x11
 5419 0a38 0B090000 	 .4byte 0x90b
 5420 0a3c 04       	 .byte 0x4
 5421 0a3d 00       	 .byte 0
 5422 0a3e 0A       	 .uleb128 0xa
 5423 0a3f 84040000 	 .4byte .LASF103
 5424 0a43 01       	 .byte 0x1
 5425 0a44 B6       	 .byte 0xb6
 5426 0a45 04       	 .byte 0x4
 5427 0a46 160A0000 	 .4byte 0xa16
 5428 0a4a 0A       	 .uleb128 0xa
 5429 0a4b CA010000 	 .4byte .LASF104
 5430 0a4f 01       	 .byte 0x1
 5431 0a50 BB       	 .byte 0xbb
 5432 0a51 1D       	 .byte 0x1d
 5433 0a52 3E0A0000 	 .4byte 0xa3e
 5434 0a56 20       	 .uleb128 0x20
 5435 0a57 4A0A0000 	 .4byte 0xa4a
 5436 0a5b 660A0000 	 .4byte 0xa66
 5437 0a5f 21       	 .uleb128 0x21
ARM GAS   			page 144


 5438 0a60 4F020000 	 .4byte 0x24f
 5439 0a64 07       	 .byte 0x7
 5440 0a65 00       	 .byte 0
 5441 0a66 22       	 .uleb128 0x22
 5442 0a67 29040000 	 .4byte .LASF165
 5443 0a6b 01       	 .byte 0x1
 5444 0a6c C0       	 .byte 0xc0
 5445 0a6d 26       	 .byte 0x26
 5446 0a6e 560A0000 	 .4byte 0xa56
 5447 0a72 05       	 .uleb128 0x5
 5448 0a73 03       	 .byte 0x3
 5449 0a74 00000000 	 .4byte xQueueRegistry
 5450 0a78 23       	 .uleb128 0x23
 5451 0a79 0E020000 	 .4byte .LASF105
 5452 0a7d 01       	 .byte 0x1
 5453 0a7e 4709     	 .2byte 0x947
 5454 0a80 07       	 .byte 0x7
 5455 0a81 00000000 	 .4byte .LFB38
 5456 0a85 48000000 	 .4byte .LFE38-.LFB38
 5457 0a89 01       	 .uleb128 0x1
 5458 0a8a 9C       	 .byte 0x9c
 5459 0a8b AF0A0000 	 .4byte 0xaaf
 5460 0a8f 24       	 .uleb128 0x24
 5461 0a90 67020000 	 .4byte .LASF107
 5462 0a94 01       	 .byte 0x1
 5463 0a95 4709     	 .2byte 0x947
 5464 0a97 2C       	 .byte 0x2c
 5465 0a98 0B090000 	 .4byte 0x90b
 5466 0a9c 02       	 .uleb128 0x2
 5467 0a9d 91       	 .byte 0x91
 5468 0a9e 6C       	 .sleb128 -20
 5469 0a9f 25       	 .uleb128 0x25
 5470 0aa0 757800   	 .ascii "ux\000"
 5471 0aa3 01       	 .byte 0x1
 5472 0aa4 4909     	 .2byte 0x949
 5473 0aa6 0E       	 .byte 0xe
 5474 0aa7 CC070000 	 .4byte 0x7cc
 5475 0aab 02       	 .uleb128 0x2
 5476 0aac 91       	 .byte 0x91
 5477 0aad 74       	 .sleb128 -12
 5478 0aae 00       	 .byte 0
 5479 0aaf 23       	 .uleb128 0x23
 5480 0ab0 B6060000 	 .4byte .LASF106
 5481 0ab4 01       	 .byte 0x1
 5482 0ab5 2A09     	 .2byte 0x92a
 5483 0ab7 07       	 .byte 0x7
 5484 0ab8 00000000 	 .4byte .LFB37
 5485 0abc 54000000 	 .4byte .LFE37-.LFB37
 5486 0ac0 01       	 .uleb128 0x1
 5487 0ac1 9C       	 .byte 0x9c
 5488 0ac2 F60A0000 	 .4byte 0xaf6
 5489 0ac6 24       	 .uleb128 0x24
 5490 0ac7 67020000 	 .4byte .LASF107
 5491 0acb 01       	 .byte 0x1
 5492 0acc 2A09     	 .2byte 0x92a
 5493 0ace 2A       	 .byte 0x2a
 5494 0acf 0B090000 	 .4byte 0x90b
ARM GAS   			page 145


 5495 0ad3 02       	 .uleb128 0x2
 5496 0ad4 91       	 .byte 0x91
 5497 0ad5 6C       	 .sleb128 -20
 5498 0ad6 24       	 .uleb128 0x24
 5499 0ad7 37030000 	 .4byte .LASF101
 5500 0adb 01       	 .byte 0x1
 5501 0adc 2A09     	 .2byte 0x92a
 5502 0ade 3E       	 .byte 0x3e
 5503 0adf E5020000 	 .4byte 0x2e5
 5504 0ae3 02       	 .uleb128 0x2
 5505 0ae4 91       	 .byte 0x91
 5506 0ae5 68       	 .sleb128 -24
 5507 0ae6 25       	 .uleb128 0x25
 5508 0ae7 757800   	 .ascii "ux\000"
 5509 0aea 01       	 .byte 0x1
 5510 0aeb 2C09     	 .2byte 0x92c
 5511 0aed 0E       	 .byte 0xe
 5512 0aee CC070000 	 .4byte 0x7cc
 5513 0af2 02       	 .uleb128 0x2
 5514 0af3 91       	 .byte 0x91
 5515 0af4 74       	 .sleb128 -12
 5516 0af5 00       	 .byte 0
 5517 0af6 26       	 .uleb128 0x26
 5518 0af7 3B080000 	 .4byte .LASF110
 5519 0afb 01       	 .byte 0x1
 5520 0afc 0308     	 .2byte 0x803
 5521 0afe 0C       	 .byte 0xc
 5522 0aff B6070000 	 .4byte 0x7b6
 5523 0b03 00000000 	 .4byte .LFB36
 5524 0b07 52000000 	 .4byte .LFE36-.LFB36
 5525 0b0b 01       	 .uleb128 0x1
 5526 0b0c 9C       	 .byte 0x9c
 5527 0b0d 4C0B0000 	 .4byte 0xb4c
 5528 0b11 24       	 .uleb128 0x24
 5529 0b12 67020000 	 .4byte .LASF107
 5530 0b16 01       	 .byte 0x1
 5531 0b17 0308     	 .2byte 0x803
 5532 0b19 3A       	 .byte 0x3a
 5533 0b1a 17090000 	 .4byte 0x917
 5534 0b1e 02       	 .uleb128 0x2
 5535 0b1f 91       	 .byte 0x91
 5536 0b20 6C       	 .sleb128 -20
 5537 0b21 27       	 .uleb128 0x27
 5538 0b22 98080000 	 .4byte .LASF108
 5539 0b26 01       	 .byte 0x1
 5540 0b27 0508     	 .2byte 0x805
 5541 0b29 0C       	 .byte 0xc
 5542 0b2a B6070000 	 .4byte 0x7b6
 5543 0b2e 02       	 .uleb128 0x2
 5544 0b2f 91       	 .byte 0x91
 5545 0b30 74       	 .sleb128 -12
 5546 0b31 28       	 .uleb128 0x28
 5547 0b32 3A180000 	 .4byte 0x183a
 5548 0b36 0E000000 	 .4byte .LBB160
 5549 0b3a 14000000 	 .4byte .LBE160-.LBB160
 5550 0b3e 01       	 .byte 0x1
 5551 0b3f 0708     	 .2byte 0x807
ARM GAS   			page 146


 5552 0b41 02       	 .byte 0x2
 5553 0b42 29       	 .uleb128 0x29
 5554 0b43 43180000 	 .4byte 0x1843
 5555 0b47 02       	 .uleb128 0x2
 5556 0b48 91       	 .byte 0x91
 5557 0b49 70       	 .sleb128 -16
 5558 0b4a 00       	 .byte 0
 5559 0b4b 00       	 .byte 0
 5560 0b4c 2A       	 .uleb128 0x2a
 5561 0b4d EC040000 	 .4byte .LASF112
 5562 0b51 01       	 .byte 0x1
 5563 0b52 EE07     	 .2byte 0x7ee
 5564 0b54 13       	 .byte 0x13
 5565 0b55 B6070000 	 .4byte 0x7b6
 5566 0b59 00000000 	 .4byte .LFB35
 5567 0b5d 3A000000 	 .4byte .LFE35-.LFB35
 5568 0b61 01       	 .uleb128 0x1
 5569 0b62 9C       	 .byte 0x9c
 5570 0b63 880B0000 	 .4byte 0xb88
 5571 0b67 24       	 .uleb128 0x24
 5572 0b68 90080000 	 .4byte .LASF109
 5573 0b6c 01       	 .byte 0x1
 5574 0b6d EE07     	 .2byte 0x7ee
 5575 0b6f 32       	 .byte 0x32
 5576 0b70 880B0000 	 .4byte 0xb88
 5577 0b74 02       	 .uleb128 0x2
 5578 0b75 91       	 .byte 0x91
 5579 0b76 6C       	 .sleb128 -20
 5580 0b77 27       	 .uleb128 0x27
 5581 0b78 98080000 	 .4byte .LASF108
 5582 0b7c 01       	 .byte 0x1
 5583 0b7d F007     	 .2byte 0x7f0
 5584 0b7f 0C       	 .byte 0xc
 5585 0b80 B6070000 	 .4byte 0x7b6
 5586 0b84 02       	 .uleb128 0x2
 5587 0b85 91       	 .byte 0x91
 5588 0b86 74       	 .sleb128 -12
 5589 0b87 00       	 .byte 0
 5590 0b88 10       	 .uleb128 0x10
 5591 0b89 04       	 .byte 0x4
 5592 0b8a 110A0000 	 .4byte 0xa11
 5593 0b8e 26       	 .uleb128 0x26
 5594 0b8f B3090000 	 .4byte .LASF111
 5595 0b93 01       	 .byte 0x1
 5596 0b94 DC07     	 .2byte 0x7dc
 5597 0b96 0C       	 .byte 0xc
 5598 0b97 B6070000 	 .4byte 0x7b6
 5599 0b9b 00000000 	 .4byte .LFB34
 5600 0b9f 4E000000 	 .4byte .LFE34-.LFB34
 5601 0ba3 01       	 .uleb128 0x1
 5602 0ba4 9C       	 .byte 0x9c
 5603 0ba5 E40B0000 	 .4byte 0xbe4
 5604 0ba9 24       	 .uleb128 0x24
 5605 0baa 67020000 	 .4byte .LASF107
 5606 0bae 01       	 .byte 0x1
 5607 0baf DC07     	 .2byte 0x7dc
 5608 0bb1 3B       	 .byte 0x3b
ARM GAS   			page 147


 5609 0bb2 17090000 	 .4byte 0x917
 5610 0bb6 02       	 .uleb128 0x2
 5611 0bb7 91       	 .byte 0x91
 5612 0bb8 6C       	 .sleb128 -20
 5613 0bb9 27       	 .uleb128 0x27
 5614 0bba 98080000 	 .4byte .LASF108
 5615 0bbe 01       	 .byte 0x1
 5616 0bbf DE07     	 .2byte 0x7de
 5617 0bc1 0C       	 .byte 0xc
 5618 0bc2 B6070000 	 .4byte 0x7b6
 5619 0bc6 02       	 .uleb128 0x2
 5620 0bc7 91       	 .byte 0x91
 5621 0bc8 74       	 .sleb128 -12
 5622 0bc9 28       	 .uleb128 0x28
 5623 0bca 3A180000 	 .4byte 0x183a
 5624 0bce 0E000000 	 .4byte .LBB158
 5625 0bd2 14000000 	 .4byte .LBE158-.LBB158
 5626 0bd6 01       	 .byte 0x1
 5627 0bd7 E007     	 .2byte 0x7e0
 5628 0bd9 02       	 .byte 0x2
 5629 0bda 29       	 .uleb128 0x29
 5630 0bdb 43180000 	 .4byte 0x1843
 5631 0bdf 02       	 .uleb128 0x2
 5632 0be0 91       	 .byte 0x91
 5633 0be1 70       	 .sleb128 -16
 5634 0be2 00       	 .byte 0
 5635 0be3 00       	 .byte 0
 5636 0be4 2A       	 .uleb128 0x2a
 5637 0be5 BB020000 	 .4byte .LASF113
 5638 0be9 01       	 .byte 0x1
 5639 0bea C707     	 .2byte 0x7c7
 5640 0bec 13       	 .byte 0x13
 5641 0bed B6070000 	 .4byte 0x7b6
 5642 0bf1 00000000 	 .4byte .LFB33
 5643 0bf5 36000000 	 .4byte .LFE33-.LFB33
 5644 0bf9 01       	 .uleb128 0x1
 5645 0bfa 9C       	 .byte 0x9c
 5646 0bfb 200C0000 	 .4byte 0xc20
 5647 0bff 24       	 .uleb128 0x24
 5648 0c00 90080000 	 .4byte .LASF109
 5649 0c04 01       	 .byte 0x1
 5650 0c05 C707     	 .2byte 0x7c7
 5651 0c07 33       	 .byte 0x33
 5652 0c08 880B0000 	 .4byte 0xb88
 5653 0c0c 02       	 .uleb128 0x2
 5654 0c0d 91       	 .byte 0x91
 5655 0c0e 6C       	 .sleb128 -20
 5656 0c0f 27       	 .uleb128 0x27
 5657 0c10 98080000 	 .4byte .LASF108
 5658 0c14 01       	 .byte 0x1
 5659 0c15 C907     	 .2byte 0x7c9
 5660 0c17 0C       	 .byte 0xc
 5661 0c18 B6070000 	 .4byte 0x7b6
 5662 0c1c 02       	 .uleb128 0x2
 5663 0c1d 91       	 .byte 0x91
 5664 0c1e 74       	 .sleb128 -12
 5665 0c1f 00       	 .byte 0
ARM GAS   			page 148


 5666 0c20 2B       	 .uleb128 0x2b
 5667 0c21 88090000 	 .4byte .LASF114
 5668 0c25 01       	 .byte 0x1
 5669 0c26 5407     	 .2byte 0x754
 5670 0c28 0D       	 .byte 0xd
 5671 0c29 00000000 	 .4byte .LFB32
 5672 0c2d BC000000 	 .4byte .LFE32-.LFB32
 5673 0c31 01       	 .uleb128 0x1
 5674 0c32 9C       	 .byte 0x9c
 5675 0c33 480C0000 	 .4byte 0xc48
 5676 0c37 24       	 .uleb128 0x24
 5677 0c38 90080000 	 .4byte .LASF109
 5678 0c3c 01       	 .byte 0x1
 5679 0c3d 5407     	 .2byte 0x754
 5680 0c3f 2D       	 .byte 0x2d
 5681 0c40 4E0C0000 	 .4byte 0xc4e
 5682 0c44 02       	 .uleb128 0x2
 5683 0c45 91       	 .byte 0x91
 5684 0c46 74       	 .sleb128 -12
 5685 0c47 00       	 .byte 0
 5686 0c48 10       	 .uleb128 0x10
 5687 0c49 04       	 .byte 0x4
 5688 0c4a 050A0000 	 .4byte 0xa05
 5689 0c4e 0F       	 .uleb128 0xf
 5690 0c4f 480C0000 	 .4byte 0xc48
 5691 0c53 2B       	 .uleb128 0x2b
 5692 0c54 12090000 	 .4byte .LASF115
 5693 0c58 01       	 .byte 0x1
 5694 0c59 4207     	 .2byte 0x742
 5695 0c5b 0D       	 .byte 0xd
 5696 0c5c 00000000 	 .4byte .LFB31
 5697 0c60 4C000000 	 .4byte .LFE31-.LFB31
 5698 0c64 01       	 .uleb128 0x1
 5699 0c65 9C       	 .byte 0x9c
 5700 0c66 8B0C0000 	 .4byte 0xc8b
 5701 0c6a 24       	 .uleb128 0x24
 5702 0c6b 90080000 	 .4byte .LASF109
 5703 0c6f 01       	 .byte 0x1
 5704 0c70 4207     	 .2byte 0x742
 5705 0c72 33       	 .byte 0x33
 5706 0c73 4E0C0000 	 .4byte 0xc4e
 5707 0c77 02       	 .uleb128 0x2
 5708 0c78 91       	 .byte 0x91
 5709 0c79 74       	 .sleb128 -12
 5710 0c7a 24       	 .uleb128 0x24
 5711 0c7b CB020000 	 .4byte .LASF116
 5712 0c7f 01       	 .byte 0x1
 5713 0c80 4207     	 .2byte 0x742
 5714 0c82 49       	 .byte 0x49
 5715 0c83 C7020000 	 .4byte 0x2c7
 5716 0c87 02       	 .uleb128 0x2
 5717 0c88 91       	 .byte 0x91
 5718 0c89 70       	 .sleb128 -16
 5719 0c8a 00       	 .byte 0
 5720 0c8b 2A       	 .uleb128 0x2a
 5721 0c8c 95030000 	 .4byte .LASF117
 5722 0c90 01       	 .byte 0x1
ARM GAS   			page 149


 5723 0c91 F806     	 .2byte 0x6f8
 5724 0c93 13       	 .byte 0x13
 5725 0c94 B6070000 	 .4byte 0x7b6
 5726 0c98 00000000 	 .4byte .LFB30
 5727 0c9c E2000000 	 .4byte .LFE30-.LFB30
 5728 0ca0 01       	 .uleb128 0x1
 5729 0ca1 9C       	 .byte 0x9c
 5730 0ca2 E70C0000 	 .4byte 0xce7
 5731 0ca6 24       	 .uleb128 0x24
 5732 0ca7 90080000 	 .4byte .LASF109
 5733 0cab 01       	 .byte 0x1
 5734 0cac F806     	 .2byte 0x6f8
 5735 0cae 37       	 .byte 0x37
 5736 0caf 4E0C0000 	 .4byte 0xc4e
 5737 0cb3 02       	 .uleb128 0x2
 5738 0cb4 91       	 .byte 0x91
 5739 0cb5 6C       	 .sleb128 -20
 5740 0cb6 24       	 .uleb128 0x24
 5741 0cb7 2D080000 	 .4byte .LASF118
 5742 0cbb 01       	 .byte 0x1
 5743 0cbc F806     	 .2byte 0x6f8
 5744 0cbe 4C       	 .byte 0x4c
 5745 0cbf AD030000 	 .4byte 0x3ad
 5746 0cc3 02       	 .uleb128 0x2
 5747 0cc4 91       	 .byte 0x91
 5748 0cc5 68       	 .sleb128 -24
 5749 0cc6 24       	 .uleb128 0x24
 5750 0cc7 0A0A0000 	 .4byte .LASF119
 5751 0ccb 01       	 .byte 0x1
 5752 0ccc F806     	 .2byte 0x6f8
 5753 0cce 6C       	 .byte 0x6c
 5754 0ccf C7070000 	 .4byte 0x7c7
 5755 0cd3 02       	 .uleb128 0x2
 5756 0cd4 91       	 .byte 0x91
 5757 0cd5 64       	 .sleb128 -28
 5758 0cd6 27       	 .uleb128 0x27
 5759 0cd7 98080000 	 .4byte .LASF108
 5760 0cdb 01       	 .byte 0x1
 5761 0cdc FA06     	 .2byte 0x6fa
 5762 0cde 0C       	 .byte 0xc
 5763 0cdf B6070000 	 .4byte 0x7b6
 5764 0ce3 02       	 .uleb128 0x2
 5765 0ce4 91       	 .byte 0x91
 5766 0ce5 74       	 .sleb128 -12
 5767 0ce6 00       	 .byte 0
 5768 0ce7 26       	 .uleb128 0x26
 5769 0ce8 CA060000 	 .4byte .LASF120
 5770 0cec 01       	 .byte 0x1
 5771 0ced F006     	 .2byte 0x6f0
 5772 0cef 0A       	 .byte 0xa
 5773 0cf0 99070000 	 .4byte 0x799
 5774 0cf4 00000000 	 .4byte .LFB29
 5775 0cf8 1A000000 	 .4byte .LFE29-.LFB29
 5776 0cfc 01       	 .uleb128 0x1
 5777 0cfd 9C       	 .byte 0x9c
 5778 0cfe 130D0000 	 .4byte 0xd13
 5779 0d02 24       	 .uleb128 0x24
ARM GAS   			page 150


 5780 0d03 67020000 	 .4byte .LASF107
 5781 0d07 01       	 .byte 0x1
 5782 0d08 F006     	 .2byte 0x6f0
 5783 0d0a 2D       	 .byte 0x2d
 5784 0d0b 0B090000 	 .4byte 0x90b
 5785 0d0f 02       	 .uleb128 0x2
 5786 0d10 91       	 .byte 0x91
 5787 0d11 74       	 .sleb128 -12
 5788 0d12 00       	 .byte 0
 5789 0d13 23       	 .uleb128 0x23
 5790 0d14 DF000000 	 .4byte .LASF121
 5791 0d18 01       	 .byte 0x1
 5792 0d19 E606     	 .2byte 0x6e6
 5793 0d1b 07       	 .byte 0x7
 5794 0d1c 00000000 	 .4byte .LFB28
 5795 0d20 1C000000 	 .4byte .LFE28-.LFB28
 5796 0d24 01       	 .uleb128 0x1
 5797 0d25 9C       	 .byte 0x9c
 5798 0d26 4B0D0000 	 .4byte 0xd4b
 5799 0d2a 24       	 .uleb128 0x24
 5800 0d2b 67020000 	 .4byte .LASF107
 5801 0d2f 01       	 .byte 0x1
 5802 0d30 E606     	 .2byte 0x6e6
 5803 0d32 2B       	 .byte 0x2b
 5804 0d33 0B090000 	 .4byte 0x90b
 5805 0d37 02       	 .uleb128 0x2
 5806 0d38 91       	 .byte 0x91
 5807 0d39 74       	 .sleb128 -12
 5808 0d3a 24       	 .uleb128 0x24
 5809 0d3b D9070000 	 .4byte .LASF96
 5810 0d3f 01       	 .byte 0x1
 5811 0d40 E606     	 .2byte 0x6e6
 5812 0d42 3F       	 .byte 0x3f
 5813 0d43 CC070000 	 .4byte 0x7cc
 5814 0d47 02       	 .uleb128 0x2
 5815 0d48 91       	 .byte 0x91
 5816 0d49 70       	 .sleb128 -16
 5817 0d4a 00       	 .byte 0
 5818 0d4b 26       	 .uleb128 0x26
 5819 0d4c 7B070000 	 .4byte .LASF122
 5820 0d50 01       	 .byte 0x1
 5821 0d51 DC06     	 .2byte 0x6dc
 5822 0d53 0E       	 .byte 0xe
 5823 0d54 CC070000 	 .4byte 0x7cc
 5824 0d58 00000000 	 .4byte .LFB27
 5825 0d5c 18000000 	 .4byte .LFE27-.LFB27
 5826 0d60 01       	 .uleb128 0x1
 5827 0d61 9C       	 .byte 0x9c
 5828 0d62 770D0000 	 .4byte 0xd77
 5829 0d66 24       	 .uleb128 0x24
 5830 0d67 67020000 	 .4byte .LASF107
 5831 0d6b 01       	 .byte 0x1
 5832 0d6c DC06     	 .2byte 0x6dc
 5833 0d6e 33       	 .byte 0x33
 5834 0d6f 0B090000 	 .4byte 0x90b
 5835 0d73 02       	 .uleb128 0x2
 5836 0d74 91       	 .byte 0x91
ARM GAS   			page 151


 5837 0d75 74       	 .sleb128 -12
 5838 0d76 00       	 .byte 0
 5839 0d77 2C       	 .uleb128 0x2c
 5840 0d78 AB000000 	 .4byte .LASF123
 5841 0d7c 01       	 .byte 0x1
 5842 0d7d CA06     	 .2byte 0x6ca
 5843 0d7f 06       	 .byte 0x6
 5844 0d80 00000000 	 .4byte .LFB26
 5845 0d84 3C000000 	 .4byte .LFE26-.LFB26
 5846 0d88 01       	 .uleb128 0x1
 5847 0d89 9C       	 .byte 0x9c
 5848 0d8a C90D0000 	 .4byte 0xdc9
 5849 0d8e 24       	 .uleb128 0x24
 5850 0d8f 67020000 	 .4byte .LASF107
 5851 0d93 01       	 .byte 0x1
 5852 0d94 CA06     	 .2byte 0x6ca
 5853 0d96 22       	 .byte 0x22
 5854 0d97 0B090000 	 .4byte 0x90b
 5855 0d9b 02       	 .uleb128 0x2
 5856 0d9c 91       	 .byte 0x91
 5857 0d9d 6C       	 .sleb128 -20
 5858 0d9e 27       	 .uleb128 0x27
 5859 0d9f 90080000 	 .4byte .LASF109
 5860 0da3 01       	 .byte 0x1
 5861 0da4 CC06     	 .2byte 0x6cc
 5862 0da6 11       	 .byte 0x11
 5863 0da7 4E0C0000 	 .4byte 0xc4e
 5864 0dab 02       	 .uleb128 0x2
 5865 0dac 91       	 .byte 0x91
 5866 0dad 74       	 .sleb128 -12
 5867 0dae 28       	 .uleb128 0x28
 5868 0daf 3A180000 	 .4byte 0x183a
 5869 0db3 12000000 	 .4byte .LBB156
 5870 0db7 14000000 	 .4byte .LBE156-.LBB156
 5871 0dbb 01       	 .byte 0x1
 5872 0dbc CE06     	 .2byte 0x6ce
 5873 0dbe 02       	 .byte 0x2
 5874 0dbf 29       	 .uleb128 0x29
 5875 0dc0 43180000 	 .4byte 0x1843
 5876 0dc4 02       	 .uleb128 0x2
 5877 0dc5 91       	 .byte 0x91
 5878 0dc6 70       	 .sleb128 -16
 5879 0dc7 00       	 .byte 0
 5880 0dc8 00       	 .byte 0
 5881 0dc9 26       	 .uleb128 0x26
 5882 0dca 4F040000 	 .4byte .LASF124
 5883 0dce 01       	 .byte 0x1
 5884 0dcf BE06     	 .2byte 0x6be
 5885 0dd1 0D       	 .byte 0xd
 5886 0dd2 CC070000 	 .4byte 0x7cc
 5887 0dd6 00000000 	 .4byte .LFB25
 5888 0dda 38000000 	 .4byte .LFE25-.LFB25
 5889 0dde 01       	 .uleb128 0x1
 5890 0ddf 9C       	 .byte 0x9c
 5891 0de0 1F0E0000 	 .4byte 0xe1f
 5892 0de4 24       	 .uleb128 0x24
 5893 0de5 67020000 	 .4byte .LASF107
ARM GAS   			page 152


 5894 0de9 01       	 .byte 0x1
 5895 0dea BE06     	 .2byte 0x6be
 5896 0dec 40       	 .byte 0x40
 5897 0ded 17090000 	 .4byte 0x917
 5898 0df1 02       	 .uleb128 0x2
 5899 0df2 91       	 .byte 0x91
 5900 0df3 6C       	 .sleb128 -20
 5901 0df4 27       	 .uleb128 0x27
 5902 0df5 C1010000 	 .4byte .LASF125
 5903 0df9 01       	 .byte 0x1
 5904 0dfa C006     	 .2byte 0x6c0
 5905 0dfc 0D       	 .byte 0xd
 5906 0dfd CC070000 	 .4byte 0x7cc
 5907 0e01 02       	 .uleb128 0x2
 5908 0e02 91       	 .byte 0x91
 5909 0e03 74       	 .sleb128 -12
 5910 0e04 28       	 .uleb128 0x28
 5911 0e05 3A180000 	 .4byte 0x183a
 5912 0e09 0E000000 	 .4byte .LBB154
 5913 0e0d 14000000 	 .4byte .LBE154-.LBB154
 5914 0e11 01       	 .byte 0x1
 5915 0e12 C206     	 .2byte 0x6c2
 5916 0e14 02       	 .byte 0x2
 5917 0e15 29       	 .uleb128 0x29
 5918 0e16 43180000 	 .4byte 0x1843
 5919 0e1a 02       	 .uleb128 0x2
 5920 0e1b 91       	 .byte 0x91
 5921 0e1c 70       	 .sleb128 -16
 5922 0e1d 00       	 .byte 0
 5923 0e1e 00       	 .byte 0
 5924 0e1f 2D       	 .uleb128 0x2d
 5925 0e20 A8030000 	 .4byte .LASF126
 5926 0e24 01       	 .byte 0x1
 5927 0e25 AC06     	 .2byte 0x6ac
 5928 0e27 0D       	 .byte 0xd
 5929 0e28 CC070000 	 .4byte 0x7cc
 5930 0e2c 00000000 	 .4byte .LFB24
 5931 0e30 46000000 	 .4byte .LFE24-.LFB24
 5932 0e34 01       	 .uleb128 0x1
 5933 0e35 9C       	 .byte 0x9c
 5934 0e36 850E0000 	 .4byte 0xe85
 5935 0e3a 24       	 .uleb128 0x24
 5936 0e3b 67020000 	 .4byte .LASF107
 5937 0e3f 01       	 .byte 0x1
 5938 0e40 AC06     	 .2byte 0x6ac
 5939 0e42 39       	 .byte 0x39
 5940 0e43 17090000 	 .4byte 0x917
 5941 0e47 02       	 .uleb128 0x2
 5942 0e48 91       	 .byte 0x91
 5943 0e49 64       	 .sleb128 -28
 5944 0e4a 27       	 .uleb128 0x27
 5945 0e4b C1010000 	 .4byte .LASF125
 5946 0e4f 01       	 .byte 0x1
 5947 0e50 AE06     	 .2byte 0x6ae
 5948 0e52 0D       	 .byte 0xd
 5949 0e53 CC070000 	 .4byte 0x7cc
 5950 0e57 02       	 .uleb128 0x2
ARM GAS   			page 153


 5951 0e58 91       	 .byte 0x91
 5952 0e59 70       	 .sleb128 -16
 5953 0e5a 27       	 .uleb128 0x27
 5954 0e5b 90080000 	 .4byte .LASF109
 5955 0e5f 01       	 .byte 0x1
 5956 0e60 AF06     	 .2byte 0x6af
 5957 0e62 0A       	 .byte 0xa
 5958 0e63 480C0000 	 .4byte 0xc48
 5959 0e67 02       	 .uleb128 0x2
 5960 0e68 91       	 .byte 0x91
 5961 0e69 74       	 .sleb128 -12
 5962 0e6a 28       	 .uleb128 0x28
 5963 0e6b 3A180000 	 .4byte 0x183a
 5964 0e6f 12000000 	 .4byte .LBB152
 5965 0e73 14000000 	 .4byte .LBE152-.LBB152
 5966 0e77 01       	 .byte 0x1
 5967 0e78 B206     	 .2byte 0x6b2
 5968 0e7a 02       	 .byte 0x2
 5969 0e7b 29       	 .uleb128 0x29
 5970 0e7c 43180000 	 .4byte 0x1843
 5971 0e80 02       	 .uleb128 0x2
 5972 0e81 91       	 .byte 0x91
 5973 0e82 6C       	 .sleb128 -20
 5974 0e83 00       	 .byte 0
 5975 0e84 00       	 .byte 0
 5976 0e85 2D       	 .uleb128 0x2d
 5977 0e86 54080000 	 .4byte .LASF127
 5978 0e8a 01       	 .byte 0x1
 5979 0e8b 9C06     	 .2byte 0x69c
 5980 0e8d 0D       	 .byte 0xd
 5981 0e8e CC070000 	 .4byte 0x7cc
 5982 0e92 00000000 	 .4byte .LFB23
 5983 0e96 3C000000 	 .4byte .LFE23-.LFB23
 5984 0e9a 01       	 .uleb128 0x1
 5985 0e9b 9C       	 .byte 0x9c
 5986 0e9c DB0E0000 	 .4byte 0xedb
 5987 0ea0 24       	 .uleb128 0x24
 5988 0ea1 67020000 	 .4byte .LASF107
 5989 0ea5 01       	 .byte 0x1
 5990 0ea6 9C06     	 .2byte 0x69c
 5991 0ea8 39       	 .byte 0x39
 5992 0ea9 17090000 	 .4byte 0x917
 5993 0ead 02       	 .uleb128 0x2
 5994 0eae 91       	 .byte 0x91
 5995 0eaf 6C       	 .sleb128 -20
 5996 0eb0 27       	 .uleb128 0x27
 5997 0eb1 C1010000 	 .4byte .LASF125
 5998 0eb5 01       	 .byte 0x1
 5999 0eb6 9E06     	 .2byte 0x69e
 6000 0eb8 0D       	 .byte 0xd
 6001 0eb9 CC070000 	 .4byte 0x7cc
 6002 0ebd 02       	 .uleb128 0x2
 6003 0ebe 91       	 .byte 0x91
 6004 0ebf 74       	 .sleb128 -12
 6005 0ec0 28       	 .uleb128 0x28
 6006 0ec1 3A180000 	 .4byte 0x183a
 6007 0ec5 0E000000 	 .4byte .LBB150
ARM GAS   			page 154


 6008 0ec9 14000000 	 .4byte .LBE150-.LBB150
 6009 0ecd 01       	 .byte 0x1
 6010 0ece A006     	 .2byte 0x6a0
 6011 0ed0 02       	 .byte 0x2
 6012 0ed1 29       	 .uleb128 0x29
 6013 0ed2 43180000 	 .4byte 0x1843
 6014 0ed6 02       	 .uleb128 0x2
 6015 0ed7 91       	 .byte 0x91
 6016 0ed8 70       	 .sleb128 -16
 6017 0ed9 00       	 .byte 0
 6018 0eda 00       	 .byte 0
 6019 0edb 2D       	 .uleb128 0x2d
 6020 0edc E1080000 	 .4byte .LASF128
 6021 0ee0 01       	 .byte 0x1
 6022 0ee1 6606     	 .2byte 0x666
 6023 0ee3 0C       	 .byte 0xc
 6024 0ee4 B6070000 	 .4byte 0x7b6
 6025 0ee8 00000000 	 .4byte .LFB22
 6026 0eec DC000000 	 .4byte .LFE22-.LFB22
 6027 0ef0 01       	 .uleb128 0x1
 6028 0ef1 9C       	 .byte 0x9c
 6029 0ef2 F10F0000 	 .4byte 0xff1
 6030 0ef6 24       	 .uleb128 0x24
 6031 0ef7 67020000 	 .4byte .LASF107
 6032 0efb 01       	 .byte 0x1
 6033 0efc 6606     	 .2byte 0x666
 6034 0efe 2D       	 .byte 0x2d
 6035 0eff 0B090000 	 .4byte 0x90b
 6036 0f03 02       	 .uleb128 0x2
 6037 0f04 91       	 .byte 0x91
 6038 0f05 4C       	 .sleb128 -52
 6039 0f06 24       	 .uleb128 0x24
 6040 0f07 CB020000 	 .4byte .LASF116
 6041 0f0b 01       	 .byte 0x1
 6042 0f0c 6606     	 .2byte 0x666
 6043 0f0e 43       	 .byte 0x43
 6044 0f0f C7020000 	 .4byte 0x2c7
 6045 0f13 02       	 .uleb128 0x2
 6046 0f14 91       	 .byte 0x91
 6047 0f15 48       	 .sleb128 -56
 6048 0f16 27       	 .uleb128 0x27
 6049 0f17 98080000 	 .4byte .LASF108
 6050 0f1b 01       	 .byte 0x1
 6051 0f1c 6806     	 .2byte 0x668
 6052 0f1e 0C       	 .byte 0xc
 6053 0f1f B6070000 	 .4byte 0x7b6
 6054 0f23 02       	 .uleb128 0x2
 6055 0f24 91       	 .byte 0x91
 6056 0f25 74       	 .sleb128 -12
 6057 0f26 27       	 .uleb128 0x27
 6058 0f27 F4000000 	 .4byte .LASF129
 6059 0f2b 01       	 .byte 0x1
 6060 0f2c 6906     	 .2byte 0x669
 6061 0f2e 0D       	 .byte 0xd
 6062 0f2f CC070000 	 .4byte 0x7cc
 6063 0f33 02       	 .uleb128 0x2
 6064 0f34 91       	 .byte 0x91
ARM GAS   			page 155


 6065 0f35 6C       	 .sleb128 -20
 6066 0f36 27       	 .uleb128 0x27
 6067 0f37 17070000 	 .4byte .LASF130
 6068 0f3b 01       	 .byte 0x1
 6069 0f3c 6A06     	 .2byte 0x66a
 6070 0f3e 09       	 .byte 0x9
 6071 0f3f F3090000 	 .4byte 0x9f3
 6072 0f43 02       	 .uleb128 0x2
 6073 0f44 91       	 .byte 0x91
 6074 0f45 68       	 .sleb128 -24
 6075 0f46 27       	 .uleb128 0x27
 6076 0f47 90080000 	 .4byte .LASF109
 6077 0f4b 01       	 .byte 0x1
 6078 0f4c 6B06     	 .2byte 0x66b
 6079 0f4e 11       	 .byte 0x11
 6080 0f4f 4E0C0000 	 .4byte 0xc4e
 6081 0f53 02       	 .uleb128 0x2
 6082 0f54 91       	 .byte 0x91
 6083 0f55 70       	 .sleb128 -16
 6084 0f56 2E       	 .uleb128 0x2e
 6085 0f57 3A180000 	 .4byte 0x183a
 6086 0f5b 14000000 	 .4byte .LBB140
 6087 0f5f 14000000 	 .4byte .LBE140-.LBB140
 6088 0f63 01       	 .byte 0x1
 6089 0f64 6D06     	 .2byte 0x66d
 6090 0f66 02       	 .byte 0x2
 6091 0f67 740F0000 	 .4byte 0xf74
 6092 0f6b 29       	 .uleb128 0x29
 6093 0f6c 43180000 	 .4byte 0x1843
 6094 0f70 02       	 .uleb128 0x2
 6095 0f71 91       	 .byte 0x91
 6096 0f72 64       	 .sleb128 -28
 6097 0f73 00       	 .byte 0
 6098 0f74 2E       	 .uleb128 0x2e
 6099 0f75 3A180000 	 .4byte 0x183a
 6100 0f79 42000000 	 .4byte .LBB142
 6101 0f7d 14000000 	 .4byte .LBE142-.LBB142
 6102 0f81 01       	 .byte 0x1
 6103 0f82 6E06     	 .2byte 0x66e
 6104 0f84 02       	 .byte 0x2
 6105 0f85 920F0000 	 .4byte 0xf92
 6106 0f89 29       	 .uleb128 0x29
 6107 0f8a 43180000 	 .4byte 0x1843
 6108 0f8e 02       	 .uleb128 0x2
 6109 0f8f 91       	 .byte 0x91
 6110 0f90 60       	 .sleb128 -32
 6111 0f91 00       	 .byte 0
 6112 0f92 2E       	 .uleb128 0x2e
 6113 0f93 3A180000 	 .4byte 0x183a
 6114 0f97 60000000 	 .4byte .LBB144
 6115 0f9b 14000000 	 .4byte .LBE144-.LBB144
 6116 0f9f 01       	 .byte 0x1
 6117 0fa0 6F06     	 .2byte 0x66f
 6118 0fa2 02       	 .byte 0x2
 6119 0fa3 B00F0000 	 .4byte 0xfb0
 6120 0fa7 29       	 .uleb128 0x29
 6121 0fa8 43180000 	 .4byte 0x1843
ARM GAS   			page 156


 6122 0fac 02       	 .uleb128 0x2
 6123 0fad 91       	 .byte 0x91
 6124 0fae 5C       	 .sleb128 -36
 6125 0faf 00       	 .byte 0
 6126 0fb0 2E       	 .uleb128 0x2e
 6127 0fb1 10180000 	 .4byte 0x1810
 6128 0fb5 7A000000 	 .4byte .LBB146
 6129 0fb9 1A000000 	 .4byte .LBE146-.LBB146
 6130 0fbd 01       	 .byte 0x1
 6131 0fbe 8106     	 .2byte 0x681
 6132 0fc0 1B       	 .byte 0x1b
 6133 0fc1 D60F0000 	 .4byte 0xfd6
 6134 0fc5 29       	 .uleb128 0x29
 6135 0fc6 21180000 	 .4byte 0x1821
 6136 0fca 02       	 .uleb128 0x2
 6137 0fcb 91       	 .byte 0x91
 6138 0fcc 58       	 .sleb128 -40
 6139 0fcd 29       	 .uleb128 0x29
 6140 0fce 2D180000 	 .4byte 0x182d
 6141 0fd2 02       	 .uleb128 0x2
 6142 0fd3 91       	 .byte 0x91
 6143 0fd4 54       	 .sleb128 -44
 6144 0fd5 00       	 .byte 0
 6145 0fd6 28       	 .uleb128 0x28
 6146 0fd7 F6170000 	 .4byte 0x17f6
 6147 0fdb CA000000 	 .4byte .LBB148
 6148 0fdf 08000000 	 .4byte .LBE148-.LBB148
 6149 0fe3 01       	 .byte 0x1
 6150 0fe4 9606     	 .2byte 0x696
 6151 0fe6 02       	 .byte 0x2
 6152 0fe7 2F       	 .uleb128 0x2f
 6153 0fe8 03180000 	 .4byte 0x1803
 6154 0fec 02       	 .uleb128 0x2
 6155 0fed 91       	 .byte 0x91
 6156 0fee 50       	 .sleb128 -48
 6157 0fef 00       	 .byte 0
 6158 0ff0 00       	 .byte 0
 6159 0ff1 2D       	 .uleb128 0x2d
 6160 0ff2 2E000000 	 .4byte .LASF131
 6161 0ff6 01       	 .byte 0x1
 6162 0ff7 0F06     	 .2byte 0x60f
 6163 0ff9 0C       	 .byte 0xc
 6164 0ffa B6070000 	 .4byte 0x7b6
 6165 0ffe 00000000 	 .4byte .LFB21
 6166 1002 0C010000 	 .4byte .LFE21-.LFB21
 6167 1006 01       	 .uleb128 0x1
 6168 1007 9C       	 .byte 0x9c
 6169 1008 E9100000 	 .4byte 0x10e9
 6170 100c 24       	 .uleb128 0x24
 6171 100d 67020000 	 .4byte .LASF107
 6172 1011 01       	 .byte 0x1
 6173 1012 0F06     	 .2byte 0x60f
 6174 1014 30       	 .byte 0x30
 6175 1015 0B090000 	 .4byte 0x90b
 6176 1019 02       	 .uleb128 0x2
 6177 101a 91       	 .byte 0x91
 6178 101b 54       	 .sleb128 -44
ARM GAS   			page 157


 6179 101c 24       	 .uleb128 0x24
 6180 101d CB020000 	 .4byte .LASF116
 6181 1021 01       	 .byte 0x1
 6182 1022 0F06     	 .2byte 0x60f
 6183 1024 45       	 .byte 0x45
 6184 1025 C7020000 	 .4byte 0x2c7
 6185 1029 02       	 .uleb128 0x2
 6186 102a 91       	 .byte 0x91
 6187 102b 50       	 .sleb128 -48
 6188 102c 24       	 .uleb128 0x24
 6189 102d 5A000000 	 .4byte .LASF132
 6190 1031 01       	 .byte 0x1
 6191 1032 0F06     	 .2byte 0x60f
 6192 1034 62       	 .byte 0x62
 6193 1035 EF100000 	 .4byte 0x10ef
 6194 1039 02       	 .uleb128 0x2
 6195 103a 91       	 .byte 0x91
 6196 103b 4C       	 .sleb128 -52
 6197 103c 27       	 .uleb128 0x27
 6198 103d 98080000 	 .4byte .LASF108
 6199 1041 01       	 .byte 0x1
 6200 1042 1106     	 .2byte 0x611
 6201 1044 0C       	 .byte 0xc
 6202 1045 B6070000 	 .4byte 0x7b6
 6203 1049 02       	 .uleb128 0x2
 6204 104a 91       	 .byte 0x91
 6205 104b 74       	 .sleb128 -12
 6206 104c 27       	 .uleb128 0x27
 6207 104d F4000000 	 .4byte .LASF129
 6208 1051 01       	 .byte 0x1
 6209 1052 1206     	 .2byte 0x612
 6210 1054 0D       	 .byte 0xd
 6211 1055 CC070000 	 .4byte 0x7cc
 6212 1059 02       	 .uleb128 0x2
 6213 105a 91       	 .byte 0x91
 6214 105b 6C       	 .sleb128 -20
 6215 105c 27       	 .uleb128 0x27
 6216 105d 90080000 	 .4byte .LASF109
 6217 1061 01       	 .byte 0x1
 6218 1062 1306     	 .2byte 0x613
 6219 1064 11       	 .byte 0x11
 6220 1065 4E0C0000 	 .4byte 0xc4e
 6221 1069 02       	 .uleb128 0x2
 6222 106a 91       	 .byte 0x91
 6223 106b 70       	 .sleb128 -16
 6224 106c 2E       	 .uleb128 0x2e
 6225 106d 3A180000 	 .4byte 0x183a
 6226 1071 16000000 	 .4byte .LBB132
 6227 1075 14000000 	 .4byte .LBE132-.LBB132
 6228 1079 01       	 .byte 0x1
 6229 107a 1506     	 .2byte 0x615
 6230 107c 02       	 .byte 0x2
 6231 107d 8A100000 	 .4byte 0x108a
 6232 1081 29       	 .uleb128 0x29
 6233 1082 43180000 	 .4byte 0x1843
 6234 1086 02       	 .uleb128 0x2
 6235 1087 91       	 .byte 0x91
ARM GAS   			page 158


 6236 1088 68       	 .sleb128 -24
 6237 1089 00       	 .byte 0
 6238 108a 2E       	 .uleb128 0x2e
 6239 108b 3A180000 	 .4byte 0x183a
 6240 108f 44000000 	 .4byte .LBB134
 6241 1093 14000000 	 .4byte .LBE134-.LBB134
 6242 1097 01       	 .byte 0x1
 6243 1098 1606     	 .2byte 0x616
 6244 109a 02       	 .byte 0x2
 6245 109b A8100000 	 .4byte 0x10a8
 6246 109f 29       	 .uleb128 0x29
 6247 10a0 43180000 	 .4byte 0x1843
 6248 10a4 02       	 .uleb128 0x2
 6249 10a5 91       	 .byte 0x91
 6250 10a6 64       	 .sleb128 -28
 6251 10a7 00       	 .byte 0
 6252 10a8 2E       	 .uleb128 0x2e
 6253 10a9 10180000 	 .4byte 0x1810
 6254 10ad 5E000000 	 .4byte .LBB136
 6255 10b1 1A000000 	 .4byte .LBE136-.LBB136
 6256 10b5 01       	 .byte 0x1
 6257 10b6 2806     	 .2byte 0x628
 6258 10b8 1B       	 .byte 0x1b
 6259 10b9 CE100000 	 .4byte 0x10ce
 6260 10bd 29       	 .uleb128 0x29
 6261 10be 21180000 	 .4byte 0x1821
 6262 10c2 02       	 .uleb128 0x2
 6263 10c3 91       	 .byte 0x91
 6264 10c4 60       	 .sleb128 -32
 6265 10c5 29       	 .uleb128 0x29
 6266 10c6 2D180000 	 .4byte 0x182d
 6267 10ca 02       	 .uleb128 0x2
 6268 10cb 91       	 .byte 0x91
 6269 10cc 5C       	 .sleb128 -36
 6270 10cd 00       	 .byte 0
 6271 10ce 28       	 .uleb128 0x28
 6272 10cf F6170000 	 .4byte 0x17f6
 6273 10d3 FA000000 	 .4byte .LBB138
 6274 10d7 08000000 	 .4byte .LBE138-.LBB138
 6275 10db 01       	 .byte 0x1
 6276 10dc 6006     	 .2byte 0x660
 6277 10de 02       	 .byte 0x2
 6278 10df 2F       	 .uleb128 0x2f
 6279 10e0 03180000 	 .4byte 0x1803
 6280 10e4 02       	 .uleb128 0x2
 6281 10e5 91       	 .byte 0x91
 6282 10e6 58       	 .sleb128 -40
 6283 10e7 00       	 .byte 0
 6284 10e8 00       	 .byte 0
 6285 10e9 10       	 .uleb128 0x10
 6286 10ea 04       	 .byte 0x4
 6287 10eb B6070000 	 .4byte 0x7b6
 6288 10ef 0F       	 .uleb128 0xf
 6289 10f0 E9100000 	 .4byte 0x10e9
 6290 10f4 2D       	 .uleb128 0x2d
 6291 10f5 8F020000 	 .4byte .LASF133
 6292 10f9 01       	 .byte 0x1
ARM GAS   			page 159


 6293 10fa 5405     	 .2byte 0x554
 6294 10fc 0C       	 .byte 0xc
 6295 10fd B6070000 	 .4byte 0x7b6
 6296 1101 00000000 	 .4byte .LFB20
 6297 1105 68020000 	 .4byte .LFE20-.LFB20
 6298 1109 01       	 .uleb128 0x1
 6299 110a 9C       	 .byte 0x9c
 6300 110b E6110000 	 .4byte 0x11e6
 6301 110f 24       	 .uleb128 0x24
 6302 1110 67020000 	 .4byte .LASF107
 6303 1114 01       	 .byte 0x1
 6304 1115 5405     	 .2byte 0x554
 6305 1117 30       	 .byte 0x30
 6306 1118 0B090000 	 .4byte 0x90b
 6307 111c 02       	 .uleb128 0x2
 6308 111d 91       	 .byte 0x91
 6309 111e 54       	 .sleb128 -44
 6310 111f 24       	 .uleb128 0x24
 6311 1120 CB020000 	 .4byte .LASF116
 6312 1124 01       	 .byte 0x1
 6313 1125 5405     	 .2byte 0x554
 6314 1127 45       	 .byte 0x45
 6315 1128 C7020000 	 .4byte 0x2c7
 6316 112c 02       	 .uleb128 0x2
 6317 112d 91       	 .byte 0x91
 6318 112e 50       	 .sleb128 -48
 6319 112f 24       	 .uleb128 0x24
 6320 1130 79080000 	 .4byte .LASF134
 6321 1134 01       	 .byte 0x1
 6322 1135 5405     	 .2byte 0x554
 6323 1137 5A       	 .byte 0x5a
 6324 1138 E2070000 	 .4byte 0x7e2
 6325 113c 02       	 .uleb128 0x2
 6326 113d 91       	 .byte 0x91
 6327 113e 4C       	 .sleb128 -52
 6328 113f 24       	 .uleb128 0x24
 6329 1140 49070000 	 .4byte .LASF135
 6330 1144 01       	 .byte 0x1
 6331 1145 5405     	 .2byte 0x554
 6332 1147 79       	 .byte 0x79
 6333 1148 C7070000 	 .4byte 0x7c7
 6334 114c 02       	 .uleb128 0x2
 6335 114d 91       	 .byte 0x91
 6336 114e 48       	 .sleb128 -56
 6337 114f 27       	 .uleb128 0x27
 6338 1150 04030000 	 .4byte .LASF136
 6339 1154 01       	 .byte 0x1
 6340 1155 5605     	 .2byte 0x556
 6341 1157 0C       	 .byte 0xc
 6342 1158 B6070000 	 .4byte 0x7b6
 6343 115c 02       	 .uleb128 0x2
 6344 115d 91       	 .byte 0x91
 6345 115e 74       	 .sleb128 -12
 6346 115f 27       	 .uleb128 0x27
 6347 1160 20030000 	 .4byte .LASF137
 6348 1164 01       	 .byte 0x1
 6349 1165 5705     	 .2byte 0x557
ARM GAS   			page 160


 6350 1167 0B       	 .byte 0xb
 6351 1168 FF080000 	 .4byte 0x8ff
 6352 116c 02       	 .uleb128 0x2
 6353 116d 91       	 .byte 0x91
 6354 116e 58       	 .sleb128 -40
 6355 116f 27       	 .uleb128 0x27
 6356 1170 17070000 	 .4byte .LASF130
 6357 1174 01       	 .byte 0x1
 6358 1175 5805     	 .2byte 0x558
 6359 1177 09       	 .byte 0x9
 6360 1178 F3090000 	 .4byte 0x9f3
 6361 117c 02       	 .uleb128 0x2
 6362 117d 91       	 .byte 0x91
 6363 117e 6C       	 .sleb128 -20
 6364 117f 27       	 .uleb128 0x27
 6365 1180 90080000 	 .4byte .LASF109
 6366 1184 01       	 .byte 0x1
 6367 1185 5905     	 .2byte 0x559
 6368 1187 11       	 .byte 0x11
 6369 1188 4E0C0000 	 .4byte 0xc4e
 6370 118c 02       	 .uleb128 0x2
 6371 118d 91       	 .byte 0x91
 6372 118e 70       	 .sleb128 -16
 6373 118f 2E       	 .uleb128 0x2e
 6374 1190 3A180000 	 .4byte 0x183a
 6375 1194 1C000000 	 .4byte .LBB126
 6376 1198 14000000 	 .4byte .LBE126-.LBB126
 6377 119c 01       	 .byte 0x1
 6378 119d 5B05     	 .2byte 0x55b
 6379 119f 02       	 .byte 0x2
 6380 11a0 AD110000 	 .4byte 0x11ad
 6381 11a4 29       	 .uleb128 0x29
 6382 11a5 43180000 	 .4byte 0x1843
 6383 11a9 02       	 .uleb128 0x2
 6384 11aa 91       	 .byte 0x91
 6385 11ab 68       	 .sleb128 -24
 6386 11ac 00       	 .byte 0
 6387 11ad 2E       	 .uleb128 0x2e
 6388 11ae 3A180000 	 .4byte 0x183a
 6389 11b2 4A000000 	 .4byte .LBB128
 6390 11b6 14000000 	 .4byte .LBE128-.LBB128
 6391 11ba 01       	 .byte 0x1
 6392 11bb 5C05     	 .2byte 0x55c
 6393 11bd 02       	 .byte 0x2
 6394 11be CB110000 	 .4byte 0x11cb
 6395 11c2 29       	 .uleb128 0x29
 6396 11c3 43180000 	 .4byte 0x1843
 6397 11c7 02       	 .uleb128 0x2
 6398 11c8 91       	 .byte 0x91
 6399 11c9 64       	 .sleb128 -28
 6400 11ca 00       	 .byte 0
 6401 11cb 28       	 .uleb128 0x28
 6402 11cc 3A180000 	 .4byte 0x183a
 6403 11d0 84000000 	 .4byte .LBB130
 6404 11d4 14000000 	 .4byte .LBE130-.LBB130
 6405 11d8 01       	 .byte 0x1
 6406 11d9 5F05     	 .2byte 0x55f
ARM GAS   			page 161


 6407 11db 03       	 .byte 0x3
 6408 11dc 29       	 .uleb128 0x29
 6409 11dd 43180000 	 .4byte 0x1843
 6410 11e1 02       	 .uleb128 0x2
 6411 11e2 91       	 .byte 0x91
 6412 11e3 60       	 .sleb128 -32
 6413 11e4 00       	 .byte 0
 6414 11e5 00       	 .byte 0
 6415 11e6 2D       	 .uleb128 0x2d
 6416 11e7 17040000 	 .4byte .LASF138
 6417 11eb 01       	 .byte 0x1
 6418 11ec B304     	 .2byte 0x4b3
 6419 11ee 0C       	 .byte 0xc
 6420 11ef B6070000 	 .4byte 0x7b6
 6421 11f3 00000000 	 .4byte .LFB19
 6422 11f7 26010000 	 .4byte .LFE19-.LFB19
 6423 11fb 01       	 .uleb128 0x1
 6424 11fc 9C       	 .byte 0x9c
 6425 11fd EC120000 	 .4byte 0x12ec
 6426 1201 24       	 .uleb128 0x24
 6427 1202 67020000 	 .4byte .LASF107
 6428 1206 01       	 .byte 0x1
 6429 1207 B304     	 .2byte 0x4b3
 6430 1209 2D       	 .byte 0x2d
 6431 120a 0B090000 	 .4byte 0x90b
 6432 120e 02       	 .uleb128 0x2
 6433 120f 91       	 .byte 0x91
 6434 1210 4C       	 .sleb128 -52
 6435 1211 24       	 .uleb128 0x24
 6436 1212 5A000000 	 .4byte .LASF132
 6437 1216 01       	 .byte 0x1
 6438 1217 B304     	 .2byte 0x4b3
 6439 1219 48       	 .byte 0x48
 6440 121a EF100000 	 .4byte 0x10ef
 6441 121e 02       	 .uleb128 0x2
 6442 121f 91       	 .byte 0x91
 6443 1220 48       	 .sleb128 -56
 6444 1221 27       	 .uleb128 0x27
 6445 1222 98080000 	 .4byte .LASF108
 6446 1226 01       	 .byte 0x1
 6447 1227 B504     	 .2byte 0x4b5
 6448 1229 0C       	 .byte 0xc
 6449 122a B6070000 	 .4byte 0x7b6
 6450 122e 02       	 .uleb128 0x2
 6451 122f 91       	 .byte 0x91
 6452 1230 74       	 .sleb128 -12
 6453 1231 27       	 .uleb128 0x27
 6454 1232 F4000000 	 .4byte .LASF129
 6455 1236 01       	 .byte 0x1
 6456 1237 B604     	 .2byte 0x4b6
 6457 1239 0D       	 .byte 0xd
 6458 123a CC070000 	 .4byte 0x7cc
 6459 123e 02       	 .uleb128 0x2
 6460 123f 91       	 .byte 0x91
 6461 1240 6C       	 .sleb128 -20
 6462 1241 27       	 .uleb128 0x27
 6463 1242 90080000 	 .4byte .LASF109
ARM GAS   			page 162


 6464 1246 01       	 .byte 0x1
 6465 1247 B704     	 .2byte 0x4b7
 6466 1249 11       	 .byte 0x11
 6467 124a 4E0C0000 	 .4byte 0xc4e
 6468 124e 02       	 .uleb128 0x2
 6469 124f 91       	 .byte 0x91
 6470 1250 70       	 .sleb128 -16
 6471 1251 2E       	 .uleb128 0x2e
 6472 1252 3A180000 	 .4byte 0x183a
 6473 1256 14000000 	 .4byte .LBB116
 6474 125a 14000000 	 .4byte .LBE116-.LBB116
 6475 125e 01       	 .byte 0x1
 6476 125f BF04     	 .2byte 0x4bf
 6477 1261 02       	 .byte 0x2
 6478 1262 6F120000 	 .4byte 0x126f
 6479 1266 29       	 .uleb128 0x29
 6480 1267 43180000 	 .4byte 0x1843
 6481 126b 02       	 .uleb128 0x2
 6482 126c 91       	 .byte 0x91
 6483 126d 68       	 .sleb128 -24
 6484 126e 00       	 .byte 0
 6485 126f 2E       	 .uleb128 0x2e
 6486 1270 3A180000 	 .4byte 0x183a
 6487 1274 32000000 	 .4byte .LBB118
 6488 1278 14000000 	 .4byte .LBE118-.LBB118
 6489 127c 01       	 .byte 0x1
 6490 127d C304     	 .2byte 0x4c3
 6491 127f 02       	 .byte 0x2
 6492 1280 8D120000 	 .4byte 0x128d
 6493 1284 29       	 .uleb128 0x29
 6494 1285 43180000 	 .4byte 0x1843
 6495 1289 02       	 .uleb128 0x2
 6496 128a 91       	 .byte 0x91
 6497 128b 64       	 .sleb128 -28
 6498 128c 00       	 .byte 0
 6499 128d 2E       	 .uleb128 0x2e
 6500 128e 3A180000 	 .4byte 0x183a
 6501 1292 62000000 	 .4byte .LBB120
 6502 1296 14000000 	 .4byte .LBE120-.LBB120
 6503 129a 01       	 .byte 0x1
 6504 129b C804     	 .2byte 0x4c8
 6505 129d 02       	 .byte 0x2
 6506 129e AB120000 	 .4byte 0x12ab
 6507 12a2 29       	 .uleb128 0x29
 6508 12a3 43180000 	 .4byte 0x1843
 6509 12a7 02       	 .uleb128 0x2
 6510 12a8 91       	 .byte 0x91
 6511 12a9 60       	 .sleb128 -32
 6512 12aa 00       	 .byte 0
 6513 12ab 2E       	 .uleb128 0x2e
 6514 12ac 10180000 	 .4byte 0x1810
 6515 12b0 7C000000 	 .4byte .LBB122
 6516 12b4 1A000000 	 .4byte .LBE122-.LBB122
 6517 12b8 01       	 .byte 0x1
 6518 12b9 DA04     	 .2byte 0x4da
 6519 12bb 1B       	 .byte 0x1b
 6520 12bc D1120000 	 .4byte 0x12d1
ARM GAS   			page 163


 6521 12c0 29       	 .uleb128 0x29
 6522 12c1 21180000 	 .4byte 0x1821
 6523 12c5 02       	 .uleb128 0x2
 6524 12c6 91       	 .byte 0x91
 6525 12c7 5C       	 .sleb128 -36
 6526 12c8 29       	 .uleb128 0x29
 6527 12c9 2D180000 	 .4byte 0x182d
 6528 12cd 02       	 .uleb128 0x2
 6529 12ce 91       	 .byte 0x91
 6530 12cf 58       	 .sleb128 -40
 6531 12d0 00       	 .byte 0
 6532 12d1 28       	 .uleb128 0x28
 6533 12d2 F6170000 	 .4byte 0x17f6
 6534 12d6 14010000 	 .4byte .LBB124
 6535 12da 08000000 	 .4byte .LBE124-.LBB124
 6536 12de 01       	 .byte 0x1
 6537 12df 4E05     	 .2byte 0x54e
 6538 12e1 02       	 .byte 0x2
 6539 12e2 2F       	 .uleb128 0x2f
 6540 12e3 03180000 	 .4byte 0x1803
 6541 12e7 02       	 .uleb128 0x2
 6542 12e8 91       	 .byte 0x91
 6543 12e9 54       	 .sleb128 -44
 6544 12ea 00       	 .byte 0
 6545 12eb 00       	 .byte 0
 6546 12ec 2D       	 .uleb128 0x2d
 6547 12ed 61030000 	 .4byte .LASF139
 6548 12f1 01       	 .byte 0x1
 6549 12f2 1E04     	 .2byte 0x41e
 6550 12f4 0C       	 .byte 0xc
 6551 12f5 B6070000 	 .4byte 0x7b6
 6552 12f9 00000000 	 .4byte .LFB18
 6553 12fd 3E010000 	 .4byte .LFE18-.LFB18
 6554 1301 01       	 .uleb128 0x1
 6555 1302 9C       	 .byte 0x9c
 6556 1303 12140000 	 .4byte 0x1412
 6557 1307 24       	 .uleb128 0x24
 6558 1308 67020000 	 .4byte .LASF107
 6559 130c 01       	 .byte 0x1
 6560 130d 1E04     	 .2byte 0x41e
 6561 130f 34       	 .byte 0x34
 6562 1310 0B090000 	 .4byte 0x90b
 6563 1314 02       	 .uleb128 0x2
 6564 1315 91       	 .byte 0x91
 6565 1316 4C       	 .sleb128 -52
 6566 1317 24       	 .uleb128 0x24
 6567 1318 2D080000 	 .4byte .LASF118
 6568 131c 01       	 .byte 0x1
 6569 131d 1E04     	 .2byte 0x41e
 6570 131f 4F       	 .byte 0x4f
 6571 1320 B3030000 	 .4byte 0x3b3
 6572 1324 02       	 .uleb128 0x2
 6573 1325 91       	 .byte 0x91
 6574 1326 48       	 .sleb128 -56
 6575 1327 24       	 .uleb128 0x24
 6576 1328 5A000000 	 .4byte .LASF132
 6577 132c 01       	 .byte 0x1
ARM GAS   			page 164


 6578 132d 1E04     	 .2byte 0x41e
 6579 132f 71       	 .byte 0x71
 6580 1330 EF100000 	 .4byte 0x10ef
 6581 1334 02       	 .uleb128 0x2
 6582 1335 91       	 .byte 0x91
 6583 1336 44       	 .sleb128 -60
 6584 1337 24       	 .uleb128 0x24
 6585 1338 B3010000 	 .4byte .LASF140
 6586 133c 01       	 .byte 0x1
 6587 133d 1E04     	 .2byte 0x41e
 6588 133f 9D       	 .byte 0x9d
 6589 1340 C7070000 	 .4byte 0x7c7
 6590 1344 02       	 .uleb128 0x2
 6591 1345 91       	 .byte 0x91
 6592 1346 40       	 .sleb128 -64
 6593 1347 27       	 .uleb128 0x27
 6594 1348 98080000 	 .4byte .LASF108
 6595 134c 01       	 .byte 0x1
 6596 134d 2004     	 .2byte 0x420
 6597 134f 0C       	 .byte 0xc
 6598 1350 B6070000 	 .4byte 0x7b6
 6599 1354 02       	 .uleb128 0x2
 6600 1355 91       	 .byte 0x91
 6601 1356 74       	 .sleb128 -12
 6602 1357 27       	 .uleb128 0x27
 6603 1358 F4000000 	 .4byte .LASF129
 6604 135c 01       	 .byte 0x1
 6605 135d 2104     	 .2byte 0x421
 6606 135f 0D       	 .byte 0xd
 6607 1360 CC070000 	 .4byte 0x7cc
 6608 1364 02       	 .uleb128 0x2
 6609 1365 91       	 .byte 0x91
 6610 1366 6C       	 .sleb128 -20
 6611 1367 27       	 .uleb128 0x27
 6612 1368 90080000 	 .4byte .LASF109
 6613 136c 01       	 .byte 0x1
 6614 136d 2204     	 .2byte 0x422
 6615 136f 11       	 .byte 0x11
 6616 1370 4E0C0000 	 .4byte 0xc4e
 6617 1374 02       	 .uleb128 0x2
 6618 1375 91       	 .byte 0x91
 6619 1376 70       	 .sleb128 -16
 6620 1377 2E       	 .uleb128 0x2e
 6621 1378 3A180000 	 .4byte 0x183a
 6622 137c 18000000 	 .4byte .LBB106
 6623 1380 14000000 	 .4byte .LBE106-.LBB106
 6624 1384 01       	 .byte 0x1
 6625 1385 2404     	 .2byte 0x424
 6626 1387 02       	 .byte 0x2
 6627 1388 95130000 	 .4byte 0x1395
 6628 138c 29       	 .uleb128 0x29
 6629 138d 43180000 	 .4byte 0x1843
 6630 1391 02       	 .uleb128 0x2
 6631 1392 91       	 .byte 0x91
 6632 1393 68       	 .sleb128 -24
 6633 1394 00       	 .byte 0
 6634 1395 2E       	 .uleb128 0x2e
ARM GAS   			page 165


 6635 1396 3A180000 	 .4byte 0x183a
 6636 139a 46000000 	 .4byte .LBB108
 6637 139e 14000000 	 .4byte .LBE108-.LBB108
 6638 13a2 01       	 .byte 0x1
 6639 13a3 2504     	 .2byte 0x425
 6640 13a5 02       	 .byte 0x2
 6641 13a6 B3130000 	 .4byte 0x13b3
 6642 13aa 29       	 .uleb128 0x29
 6643 13ab 43180000 	 .4byte 0x1843
 6644 13af 02       	 .uleb128 0x2
 6645 13b0 91       	 .byte 0x91
 6646 13b1 64       	 .sleb128 -28
 6647 13b2 00       	 .byte 0
 6648 13b3 2E       	 .uleb128 0x2e
 6649 13b4 3A180000 	 .4byte 0x183a
 6650 13b8 74000000 	 .4byte .LBB110
 6651 13bc 14000000 	 .4byte .LBE110-.LBB110
 6652 13c0 01       	 .byte 0x1
 6653 13c1 2604     	 .2byte 0x426
 6654 13c3 02       	 .byte 0x2
 6655 13c4 D1130000 	 .4byte 0x13d1
 6656 13c8 29       	 .uleb128 0x29
 6657 13c9 43180000 	 .4byte 0x1843
 6658 13cd 02       	 .uleb128 0x2
 6659 13ce 91       	 .byte 0x91
 6660 13cf 60       	 .sleb128 -32
 6661 13d0 00       	 .byte 0
 6662 13d1 2E       	 .uleb128 0x2e
 6663 13d2 10180000 	 .4byte 0x1810
 6664 13d6 8E000000 	 .4byte .LBB112
 6665 13da 1A000000 	 .4byte .LBE112-.LBB112
 6666 13de 01       	 .byte 0x1
 6667 13df 3D04     	 .2byte 0x43d
 6668 13e1 1B       	 .byte 0x1b
 6669 13e2 F7130000 	 .4byte 0x13f7
 6670 13e6 29       	 .uleb128 0x29
 6671 13e7 21180000 	 .4byte 0x1821
 6672 13eb 02       	 .uleb128 0x2
 6673 13ec 91       	 .byte 0x91
 6674 13ed 5C       	 .sleb128 -36
 6675 13ee 29       	 .uleb128 0x29
 6676 13ef 2D180000 	 .4byte 0x182d
 6677 13f3 02       	 .uleb128 0x2
 6678 13f4 91       	 .byte 0x91
 6679 13f5 58       	 .sleb128 -40
 6680 13f6 00       	 .byte 0
 6681 13f7 28       	 .uleb128 0x28
 6682 13f8 F6170000 	 .4byte 0x17f6
 6683 13fc 2C010000 	 .4byte .LBB114
 6684 1400 08000000 	 .4byte .LBE114-.LBB114
 6685 1404 01       	 .byte 0x1
 6686 1405 AD04     	 .2byte 0x4ad
 6687 1407 02       	 .byte 0x2
 6688 1408 2F       	 .uleb128 0x2f
 6689 1409 03180000 	 .4byte 0x1803
 6690 140d 02       	 .uleb128 0x2
 6691 140e 91       	 .byte 0x91
ARM GAS   			page 166


 6692 140f 54       	 .sleb128 -44
 6693 1410 00       	 .byte 0
 6694 1411 00       	 .byte 0
 6695 1412 2D       	 .uleb128 0x2d
 6696 1413 BF030000 	 .4byte .LASF141
 6697 1417 01       	 .byte 0x1
 6698 1418 6102     	 .2byte 0x261
 6699 141a 0C       	 .byte 0xc
 6700 141b B6070000 	 .4byte 0x7b6
 6701 141f 00000000 	 .4byte .LFB17
 6702 1423 44020000 	 .4byte .LFE17-.LFB17
 6703 1427 01       	 .uleb128 0x1
 6704 1428 9C       	 .byte 0x9c
 6705 1429 22150000 	 .4byte 0x1522
 6706 142d 24       	 .uleb128 0x24
 6707 142e 67020000 	 .4byte .LASF107
 6708 1432 01       	 .byte 0x1
 6709 1433 6102     	 .2byte 0x261
 6710 1435 2D       	 .byte 0x2d
 6711 1436 0B090000 	 .4byte 0x90b
 6712 143a 02       	 .uleb128 0x2
 6713 143b 91       	 .byte 0x91
 6714 143c 4C       	 .sleb128 -52
 6715 143d 24       	 .uleb128 0x24
 6716 143e 2D080000 	 .4byte .LASF118
 6717 1442 01       	 .byte 0x1
 6718 1443 6102     	 .2byte 0x261
 6719 1445 48       	 .byte 0x48
 6720 1446 B3030000 	 .4byte 0x3b3
 6721 144a 02       	 .uleb128 0x2
 6722 144b 91       	 .byte 0x91
 6723 144c 48       	 .sleb128 -56
 6724 144d 24       	 .uleb128 0x24
 6725 144e 79080000 	 .4byte .LASF134
 6726 1452 01       	 .byte 0x1
 6727 1453 6102     	 .2byte 0x261
 6728 1455 62       	 .byte 0x62
 6729 1456 E2070000 	 .4byte 0x7e2
 6730 145a 02       	 .uleb128 0x2
 6731 145b 91       	 .byte 0x91
 6732 145c 44       	 .sleb128 -60
 6733 145d 24       	 .uleb128 0x24
 6734 145e B3010000 	 .4byte .LASF140
 6735 1462 01       	 .byte 0x1
 6736 1463 6102     	 .2byte 0x261
 6737 1465 81       	 .byte 0x81
 6738 1466 C7070000 	 .4byte 0x7c7
 6739 146a 02       	 .uleb128 0x2
 6740 146b 91       	 .byte 0x91
 6741 146c 40       	 .sleb128 -64
 6742 146d 27       	 .uleb128 0x27
 6743 146e 04030000 	 .4byte .LASF136
 6744 1472 01       	 .byte 0x1
 6745 1473 6302     	 .2byte 0x263
 6746 1475 0C       	 .byte 0xc
 6747 1476 B6070000 	 .4byte 0x7b6
 6748 147a 02       	 .uleb128 0x2
ARM GAS   			page 167


 6749 147b 91       	 .byte 0x91
 6750 147c 74       	 .sleb128 -12
 6751 147d 27       	 .uleb128 0x27
 6752 147e 3F020000 	 .4byte .LASF142
 6753 1482 01       	 .byte 0x1
 6754 1483 6302     	 .2byte 0x263
 6755 1485 25       	 .byte 0x25
 6756 1486 B6070000 	 .4byte 0x7b6
 6757 148a 02       	 .uleb128 0x2
 6758 148b 91       	 .byte 0x91
 6759 148c 6C       	 .sleb128 -20
 6760 148d 27       	 .uleb128 0x27
 6761 148e 20030000 	 .4byte .LASF137
 6762 1492 01       	 .byte 0x1
 6763 1493 6402     	 .2byte 0x264
 6764 1495 0B       	 .byte 0xb
 6765 1496 FF080000 	 .4byte 0x8ff
 6766 149a 02       	 .uleb128 0x2
 6767 149b 91       	 .byte 0x91
 6768 149c 54       	 .sleb128 -44
 6769 149d 27       	 .uleb128 0x27
 6770 149e 90080000 	 .4byte .LASF109
 6771 14a2 01       	 .byte 0x1
 6772 14a3 6502     	 .2byte 0x265
 6773 14a5 11       	 .byte 0x11
 6774 14a6 4E0C0000 	 .4byte 0xc4e
 6775 14aa 02       	 .uleb128 0x2
 6776 14ab 91       	 .byte 0x91
 6777 14ac 70       	 .sleb128 -16
 6778 14ad 2E       	 .uleb128 0x2e
 6779 14ae 3A180000 	 .4byte 0x183a
 6780 14b2 1C000000 	 .4byte .LBB98
 6781 14b6 14000000 	 .4byte .LBE98-.LBB98
 6782 14ba 01       	 .byte 0x1
 6783 14bb 6702     	 .2byte 0x267
 6784 14bd 02       	 .byte 0x2
 6785 14be CB140000 	 .4byte 0x14cb
 6786 14c2 29       	 .uleb128 0x29
 6787 14c3 43180000 	 .4byte 0x1843
 6788 14c7 02       	 .uleb128 0x2
 6789 14c8 91       	 .byte 0x91
 6790 14c9 68       	 .sleb128 -24
 6791 14ca 00       	 .byte 0
 6792 14cb 2E       	 .uleb128 0x2e
 6793 14cc 3A180000 	 .4byte 0x183a
 6794 14d0 4A000000 	 .4byte .LBB100
 6795 14d4 14000000 	 .4byte .LBE100-.LBB100
 6796 14d8 01       	 .byte 0x1
 6797 14d9 6802     	 .2byte 0x268
 6798 14db 02       	 .byte 0x2
 6799 14dc E9140000 	 .4byte 0x14e9
 6800 14e0 29       	 .uleb128 0x29
 6801 14e1 43180000 	 .4byte 0x1843
 6802 14e5 02       	 .uleb128 0x2
 6803 14e6 91       	 .byte 0x91
 6804 14e7 64       	 .sleb128 -28
 6805 14e8 00       	 .byte 0
ARM GAS   			page 168


 6806 14e9 2E       	 .uleb128 0x2e
 6807 14ea 3A180000 	 .4byte 0x183a
 6808 14ee 78000000 	 .4byte .LBB102
 6809 14f2 14000000 	 .4byte .LBE102-.LBB102
 6810 14f6 01       	 .byte 0x1
 6811 14f7 6902     	 .2byte 0x269
 6812 14f9 02       	 .byte 0x2
 6813 14fa 07150000 	 .4byte 0x1507
 6814 14fe 29       	 .uleb128 0x29
 6815 14ff 43180000 	 .4byte 0x1843
 6816 1503 02       	 .uleb128 0x2
 6817 1504 91       	 .byte 0x91
 6818 1505 60       	 .sleb128 -32
 6819 1506 00       	 .byte 0
 6820 1507 28       	 .uleb128 0x28
 6821 1508 3A180000 	 .4byte 0x183a
 6822 150c B2000000 	 .4byte .LBB104
 6823 1510 14000000 	 .4byte .LBE104-.LBB104
 6824 1514 01       	 .byte 0x1
 6825 1515 6C02     	 .2byte 0x26c
 6826 1517 03       	 .byte 0x3
 6827 1518 29       	 .uleb128 0x29
 6828 1519 43180000 	 .4byte 0x1843
 6829 151d 02       	 .uleb128 0x2
 6830 151e 91       	 .byte 0x91
 6831 151f 5C       	 .sleb128 -36
 6832 1520 00       	 .byte 0
 6833 1521 00       	 .byte 0
 6834 1522 2D       	 .uleb128 0x2d
 6835 1523 1F0A0000 	 .4byte .LASF143
 6836 1527 01       	 .byte 0x1
 6837 1528 4602     	 .2byte 0x246
 6838 152a 10       	 .byte 0x10
 6839 152b 0B090000 	 .4byte 0x90b
 6840 152f 00000000 	 .4byte .LFB16
 6841 1533 84000000 	 .4byte .LFE16-.LFB16
 6842 1537 01       	 .uleb128 0x1
 6843 1538 9C       	 .byte 0x9c
 6844 1539 C4150000 	 .4byte 0x15c4
 6845 153d 24       	 .uleb128 0x24
 6846 153e 02070000 	 .4byte .LASF144
 6847 1542 01       	 .byte 0x1
 6848 1543 4602     	 .2byte 0x246
 6849 1545 41       	 .byte 0x41
 6850 1546 DD070000 	 .4byte 0x7dd
 6851 154a 02       	 .uleb128 0x2
 6852 154b 91       	 .byte 0x91
 6853 154c 64       	 .sleb128 -28
 6854 154d 24       	 .uleb128 0x24
 6855 154e D8030000 	 .4byte .LASF145
 6856 1552 01       	 .byte 0x1
 6857 1553 4602     	 .2byte 0x246
 6858 1555 5F       	 .byte 0x5f
 6859 1556 DD070000 	 .4byte 0x7dd
 6860 155a 02       	 .uleb128 0x2
 6861 155b 91       	 .byte 0x91
 6862 155c 60       	 .sleb128 -32
ARM GAS   			page 169


 6863 155d 27       	 .uleb128 0x27
 6864 155e 2F030000 	 .4byte .LASF102
 6865 1562 01       	 .byte 0x1
 6866 1563 4802     	 .2byte 0x248
 6867 1565 10       	 .byte 0x10
 6868 1566 0B090000 	 .4byte 0x90b
 6869 156a 02       	 .uleb128 0x2
 6870 156b 91       	 .byte 0x91
 6871 156c 74       	 .sleb128 -12
 6872 156d 2E       	 .uleb128 0x2e
 6873 156e 3A180000 	 .4byte 0x183a
 6874 1572 10000000 	 .4byte .LBB92
 6875 1576 14000000 	 .4byte .LBE92-.LBB92
 6876 157a 01       	 .byte 0x1
 6877 157b 4A02     	 .2byte 0x24a
 6878 157d 03       	 .byte 0x3
 6879 157e 8B150000 	 .4byte 0x158b
 6880 1582 29       	 .uleb128 0x29
 6881 1583 43180000 	 .4byte 0x1843
 6882 1587 02       	 .uleb128 0x2
 6883 1588 91       	 .byte 0x91
 6884 1589 70       	 .sleb128 -16
 6885 158a 00       	 .byte 0
 6886 158b 2E       	 .uleb128 0x2e
 6887 158c 3A180000 	 .4byte 0x183a
 6888 1590 2E000000 	 .4byte .LBB94
 6889 1594 14000000 	 .4byte .LBE94-.LBB94
 6890 1598 01       	 .byte 0x1
 6891 1599 4B02     	 .2byte 0x24b
 6892 159b 03       	 .byte 0x3
 6893 159c A9150000 	 .4byte 0x15a9
 6894 15a0 29       	 .uleb128 0x29
 6895 15a1 43180000 	 .4byte 0x1843
 6896 15a5 02       	 .uleb128 0x2
 6897 15a6 91       	 .byte 0x91
 6898 15a7 6C       	 .sleb128 -20
 6899 15a8 00       	 .byte 0
 6900 15a9 28       	 .uleb128 0x28
 6901 15aa 3A180000 	 .4byte 0x183a
 6902 15ae 64000000 	 .4byte .LBB96
 6903 15b2 14000000 	 .4byte .LBE96-.LBB96
 6904 15b6 01       	 .byte 0x1
 6905 15b7 5A02     	 .2byte 0x25a
 6906 15b9 03       	 .byte 0x3
 6907 15ba 29       	 .uleb128 0x29
 6908 15bb 43180000 	 .4byte 0x1843
 6909 15bf 02       	 .uleb128 0x2
 6910 15c0 91       	 .byte 0x91
 6911 15c1 68       	 .sleb128 -24
 6912 15c2 00       	 .byte 0
 6913 15c3 00       	 .byte 0
 6914 15c4 2D       	 .uleb128 0x2d
 6915 15c5 AB070000 	 .4byte .LASF146
 6916 15c9 01       	 .byte 0x1
 6917 15ca 1C02     	 .2byte 0x21c
 6918 15cc 0D       	 .byte 0xd
 6919 15cd B6070000 	 .4byte 0x7b6
ARM GAS   			page 170


 6920 15d1 00000000 	 .4byte .LFB15
 6921 15d5 7C000000 	 .4byte .LFE15-.LFB15
 6922 15d9 01       	 .uleb128 0x1
 6923 15da 9C       	 .byte 0x9c
 6924 15db 3A160000 	 .4byte 0x163a
 6925 15df 24       	 .uleb128 0x24
 6926 15e0 9F060000 	 .4byte .LASF147
 6927 15e4 01       	 .byte 0x1
 6928 15e5 1C02     	 .2byte 0x21c
 6929 15e7 35       	 .byte 0x35
 6930 15e8 0B090000 	 .4byte 0x90b
 6931 15ec 02       	 .uleb128 0x2
 6932 15ed 91       	 .byte 0x91
 6933 15ee 5C       	 .sleb128 -36
 6934 15ef 24       	 .uleb128 0x24
 6935 15f0 79080000 	 .4byte .LASF134
 6936 15f4 01       	 .byte 0x1
 6937 15f5 1C02     	 .2byte 0x21c
 6938 15f7 48       	 .byte 0x48
 6939 15f8 E2070000 	 .4byte 0x7e2
 6940 15fc 02       	 .uleb128 0x2
 6941 15fd 91       	 .byte 0x91
 6942 15fe 58       	 .sleb128 -40
 6943 15ff 27       	 .uleb128 0x27
 6944 1600 98080000 	 .4byte .LASF108
 6945 1604 01       	 .byte 0x1
 6946 1605 1E02     	 .2byte 0x21e
 6947 1607 0D       	 .byte 0xd
 6948 1608 B6070000 	 .4byte 0x7b6
 6949 160c 02       	 .uleb128 0x2
 6950 160d 91       	 .byte 0x91
 6951 160e 6C       	 .sleb128 -20
 6952 160f 27       	 .uleb128 0x27
 6953 1610 74000000 	 .4byte .LASF148
 6954 1614 01       	 .byte 0x1
 6955 1615 1F02     	 .2byte 0x21f
 6956 1617 12       	 .byte 0x12
 6957 1618 4E0C0000 	 .4byte 0xc4e
 6958 161c 02       	 .uleb128 0x2
 6959 161d 91       	 .byte 0x91
 6960 161e 68       	 .sleb128 -24
 6961 161f 28       	 .uleb128 0x28
 6962 1620 3A180000 	 .4byte 0x183a
 6963 1624 14000000 	 .4byte .LBB90
 6964 1628 14000000 	 .4byte .LBE90-.LBB90
 6965 162c 01       	 .byte 0x1
 6966 162d 2102     	 .2byte 0x221
 6967 162f 03       	 .byte 0x3
 6968 1630 29       	 .uleb128 0x29
 6969 1631 43180000 	 .4byte 0x1843
 6970 1635 02       	 .uleb128 0x2
 6971 1636 91       	 .byte 0x91
 6972 1637 64       	 .sleb128 -28
 6973 1638 00       	 .byte 0
 6974 1639 00       	 .byte 0
 6975 163a 2D       	 .uleb128 0x2d
 6976 163b 6F090000 	 .4byte .LASF149
ARM GAS   			page 171


 6977 163f 01       	 .byte 0x1
 6978 1640 E501     	 .2byte 0x1e5
 6979 1642 0D       	 .byte 0xd
 6980 1643 B6070000 	 .4byte 0x7b6
 6981 1647 00000000 	 .4byte .LFB14
 6982 164b 72000000 	 .4byte .LFE14-.LFB14
 6983 164f 01       	 .uleb128 0x1
 6984 1650 9C       	 .byte 0x9c
 6985 1651 A0160000 	 .4byte 0x16a0
 6986 1655 24       	 .uleb128 0x24
 6987 1656 9F060000 	 .4byte .LASF147
 6988 165a 01       	 .byte 0x1
 6989 165b E501     	 .2byte 0x1e5
 6990 165d 35       	 .byte 0x35
 6991 165e 0B090000 	 .4byte 0x90b
 6992 1662 02       	 .uleb128 0x2
 6993 1663 91       	 .byte 0x91
 6994 1664 5C       	 .sleb128 -36
 6995 1665 27       	 .uleb128 0x27
 6996 1666 98080000 	 .4byte .LASF108
 6997 166a 01       	 .byte 0x1
 6998 166b E701     	 .2byte 0x1e7
 6999 166d 0D       	 .byte 0xd
 7000 166e B6070000 	 .4byte 0x7b6
 7001 1672 02       	 .uleb128 0x2
 7002 1673 91       	 .byte 0x91
 7003 1674 6C       	 .sleb128 -20
 7004 1675 27       	 .uleb128 0x27
 7005 1676 74000000 	 .4byte .LASF148
 7006 167a 01       	 .byte 0x1
 7007 167b E801     	 .2byte 0x1e8
 7008 167d 12       	 .byte 0x12
 7009 167e 4E0C0000 	 .4byte 0xc4e
 7010 1682 02       	 .uleb128 0x2
 7011 1683 91       	 .byte 0x91
 7012 1684 68       	 .sleb128 -24
 7013 1685 28       	 .uleb128 0x28
 7014 1686 3A180000 	 .4byte 0x183a
 7015 168a 12000000 	 .4byte .LBB88
 7016 168e 14000000 	 .4byte .LBE88-.LBB88
 7017 1692 01       	 .byte 0x1
 7018 1693 EA01     	 .2byte 0x1ea
 7019 1695 03       	 .byte 0x3
 7020 1696 29       	 .uleb128 0x29
 7021 1697 43180000 	 .4byte 0x1843
 7022 169b 02       	 .uleb128 0x2
 7023 169c 91       	 .byte 0x91
 7024 169d 64       	 .sleb128 -28
 7025 169e 00       	 .byte 0
 7026 169f 00       	 .byte 0
 7027 16a0 2D       	 .uleb128 0x2d
 7028 16a1 B0040000 	 .4byte .LASF150
 7029 16a5 01       	 .byte 0x1
 7030 16a6 8701     	 .2byte 0x187
 7031 16a8 10       	 .byte 0x10
 7032 16a9 0B090000 	 .4byte 0x90b
 7033 16ad 00000000 	 .4byte .LFB13
ARM GAS   			page 172


 7034 16b1 86000000 	 .4byte .LFE13-.LFB13
 7035 16b5 01       	 .uleb128 0x1
 7036 16b6 9C       	 .byte 0x9c
 7037 16b7 DC160000 	 .4byte 0x16dc
 7038 16bb 24       	 .uleb128 0x24
 7039 16bc 3D070000 	 .4byte .LASF97
 7040 16c0 01       	 .byte 0x1
 7041 16c1 8701     	 .2byte 0x187
 7042 16c3 31       	 .byte 0x31
 7043 16c4 A5070000 	 .4byte 0x7a5
 7044 16c8 02       	 .uleb128 0x2
 7045 16c9 91       	 .byte 0x91
 7046 16ca 6F       	 .sleb128 -17
 7047 16cb 27       	 .uleb128 0x27
 7048 16cc 74020000 	 .4byte .LASF151
 7049 16d0 01       	 .byte 0x1
 7050 16d1 8901     	 .2byte 0x189
 7051 16d3 0B       	 .byte 0xb
 7052 16d4 480C0000 	 .4byte 0xc48
 7053 16d8 02       	 .uleb128 0x2
 7054 16d9 91       	 .byte 0x91
 7055 16da 74       	 .sleb128 -12
 7056 16db 00       	 .byte 0
 7057 16dc 2D       	 .uleb128 0x2d
 7058 16dd 9C040000 	 .4byte .LASF152
 7059 16e1 01       	 .byte 0x1
 7060 16e2 3901     	 .2byte 0x139
 7061 16e4 0F       	 .byte 0xf
 7062 16e5 0B090000 	 .4byte 0x90b
 7063 16e9 00000000 	 .4byte .LFB12
 7064 16ed B8000000 	 .4byte .LFE12-.LFB12
 7065 16f1 01       	 .uleb128 0x1
 7066 16f2 9C       	 .byte 0x9c
 7067 16f3 90170000 	 .4byte 0x1790
 7068 16f7 24       	 .uleb128 0x24
 7069 16f8 91070000 	 .4byte .LASF153
 7070 16fc 01       	 .byte 0x1
 7071 16fd 3901     	 .2byte 0x139
 7072 16ff 36       	 .byte 0x36
 7073 1700 DD070000 	 .4byte 0x7dd
 7074 1704 02       	 .uleb128 0x2
 7075 1705 91       	 .byte 0x91
 7076 1706 5C       	 .sleb128 -36
 7077 1707 24       	 .uleb128 0x24
 7078 1708 140A0000 	 .4byte .LASF93
 7079 170c 01       	 .byte 0x1
 7080 170d 3901     	 .2byte 0x139
 7081 170f 57       	 .byte 0x57
 7082 1710 DD070000 	 .4byte 0x7dd
 7083 1714 02       	 .uleb128 0x2
 7084 1715 91       	 .byte 0x91
 7085 1716 58       	 .sleb128 -40
 7086 1717 24       	 .uleb128 0x24
 7087 1718 3D070000 	 .4byte .LASF97
 7088 171c 01       	 .byte 0x1
 7089 171d 3901     	 .2byte 0x139
 7090 171f 71       	 .byte 0x71
ARM GAS   			page 173


 7091 1720 A5070000 	 .4byte 0x7a5
 7092 1724 02       	 .uleb128 0x2
 7093 1725 91       	 .byte 0x91
 7094 1726 57       	 .sleb128 -41
 7095 1727 27       	 .uleb128 0x27
 7096 1728 74020000 	 .4byte .LASF151
 7097 172c 01       	 .byte 0x1
 7098 172d 3B01     	 .2byte 0x13b
 7099 172f 0A       	 .byte 0xa
 7100 1730 480C0000 	 .4byte 0xc48
 7101 1734 02       	 .uleb128 0x2
 7102 1735 91       	 .byte 0x91
 7103 1736 6C       	 .sleb128 -20
 7104 1737 27       	 .uleb128 0x27
 7105 1738 05080000 	 .4byte .LASF154
 7106 173c 01       	 .byte 0x1
 7107 173d 3C01     	 .2byte 0x13c
 7108 173f 08       	 .byte 0x8
 7109 1740 43020000 	 .4byte 0x243
 7110 1744 02       	 .uleb128 0x2
 7111 1745 91       	 .byte 0x91
 7112 1746 74       	 .sleb128 -12
 7113 1747 27       	 .uleb128 0x27
 7114 1748 98080000 	 .4byte .LASF108
 7115 174c 01       	 .byte 0x1
 7116 174d 3D01     	 .2byte 0x13d
 7117 174f 0F       	 .byte 0xf
 7118 1750 0B090000 	 .4byte 0x90b
 7119 1754 02       	 .uleb128 0x2
 7120 1755 91       	 .byte 0x91
 7121 1756 70       	 .sleb128 -16
 7122 1757 2E       	 .uleb128 0x2e
 7123 1758 3A180000 	 .4byte 0x183a
 7124 175c 18000000 	 .4byte .LBB84
 7125 1760 14000000 	 .4byte .LBE84-.LBB84
 7126 1764 01       	 .byte 0x1
 7127 1765 4301     	 .2byte 0x143
 7128 1767 02       	 .byte 0x2
 7129 1768 75170000 	 .4byte 0x1775
 7130 176c 29       	 .uleb128 0x29
 7131 176d 43180000 	 .4byte 0x1843
 7132 1771 02       	 .uleb128 0x2
 7133 1772 91       	 .byte 0x91
 7134 1773 68       	 .sleb128 -24
 7135 1774 00       	 .byte 0
 7136 1775 28       	 .uleb128 0x28
 7137 1776 3A180000 	 .4byte 0x183a
 7138 177a 98000000 	 .4byte .LBB86
 7139 177e 14000000 	 .4byte .LBE86-.LBB86
 7140 1782 01       	 .byte 0x1
 7141 1783 7F01     	 .2byte 0x17f
 7142 1785 02       	 .byte 0x2
 7143 1786 29       	 .uleb128 0x29
 7144 1787 43180000 	 .4byte 0x1843
 7145 178b 02       	 .uleb128 0x2
 7146 178c 91       	 .byte 0x91
 7147 178d 64       	 .sleb128 -28
ARM GAS   			page 174


 7148 178e 00       	 .byte 0
 7149 178f 00       	 .byte 0
 7150 1790 2D       	 .uleb128 0x2d
 7151 1791 A0090000 	 .4byte .LASF155
 7152 1795 01       	 .byte 0x1
 7153 1796 0401     	 .2byte 0x104
 7154 1798 0C       	 .byte 0xc
 7155 1799 B6070000 	 .4byte 0x7b6
 7156 179d 00000000 	 .4byte .LFB11
 7157 17a1 DC000000 	 .4byte .LFE11-.LFB11
 7158 17a5 01       	 .uleb128 0x1
 7159 17a6 9C       	 .byte 0x9c
 7160 17a7 F6170000 	 .4byte 0x17f6
 7161 17ab 24       	 .uleb128 0x24
 7162 17ac 67020000 	 .4byte .LASF107
 7163 17b0 01       	 .byte 0x1
 7164 17b1 0401     	 .2byte 0x104
 7165 17b3 2E       	 .byte 0x2e
 7166 17b4 0B090000 	 .4byte 0x90b
 7167 17b8 02       	 .uleb128 0x2
 7168 17b9 91       	 .byte 0x91
 7169 17ba 6C       	 .sleb128 -20
 7170 17bb 24       	 .uleb128 0x24
 7171 17bc EA060000 	 .4byte .LASF156
 7172 17c0 01       	 .byte 0x1
 7173 17c1 0401     	 .2byte 0x104
 7174 17c3 41       	 .byte 0x41
 7175 17c4 B6070000 	 .4byte 0x7b6
 7176 17c8 02       	 .uleb128 0x2
 7177 17c9 91       	 .byte 0x91
 7178 17ca 68       	 .sleb128 -24
 7179 17cb 27       	 .uleb128 0x27
 7180 17cc 90080000 	 .4byte .LASF109
 7181 17d0 01       	 .byte 0x1
 7182 17d1 0601     	 .2byte 0x106
 7183 17d3 11       	 .byte 0x11
 7184 17d4 4E0C0000 	 .4byte 0xc4e
 7185 17d8 02       	 .uleb128 0x2
 7186 17d9 91       	 .byte 0x91
 7187 17da 74       	 .sleb128 -12
 7188 17db 28       	 .uleb128 0x28
 7189 17dc 3A180000 	 .4byte 0x183a
 7190 17e0 14000000 	 .4byte .LBB82
 7191 17e4 14000000 	 .4byte .LBE82-.LBB82
 7192 17e8 01       	 .byte 0x1
 7193 17e9 0801     	 .2byte 0x108
 7194 17eb 02       	 .byte 0x2
 7195 17ec 29       	 .uleb128 0x29
 7196 17ed 43180000 	 .4byte 0x1843
 7197 17f1 02       	 .uleb128 0x2
 7198 17f2 91       	 .byte 0x91
 7199 17f3 70       	 .sleb128 -16
 7200 17f4 00       	 .byte 0
 7201 17f5 00       	 .byte 0
 7202 17f6 30       	 .uleb128 0x30
 7203 17f7 7A030000 	 .4byte .LASF166
 7204 17fb 02       	 .byte 0x2
ARM GAS   			page 175


 7205 17fc F7       	 .byte 0xf7
 7206 17fd 1E       	 .byte 0x1e
 7207 17fe 03       	 .byte 0x3
 7208 17ff 10180000 	 .4byte 0x1810
 7209 1803 31       	 .uleb128 0x31
 7210 1804 2E070000 	 .4byte .LASF167
 7211 1808 02       	 .byte 0x2
 7212 1809 F7       	 .byte 0xf7
 7213 180a 38       	 .byte 0x38
 7214 180b AA070000 	 .4byte 0x7aa
 7215 180f 00       	 .byte 0
 7216 1810 32       	 .uleb128 0x32
 7217 1811 CB040000 	 .4byte .LASF168
 7218 1815 02       	 .byte 0x2
 7219 1816 E3       	 .byte 0xe3
 7220 1817 22       	 .byte 0x22
 7221 1818 AA070000 	 .4byte 0x7aa
 7222 181c 03       	 .byte 0x3
 7223 181d 3A180000 	 .4byte 0x183a
 7224 1821 33       	 .uleb128 0x33
 7225 1822 55020000 	 .4byte .LASF157
 7226 1826 02       	 .byte 0x2
 7227 1827 E5       	 .byte 0xe5
 7228 1828 0A       	 .byte 0xa
 7229 1829 AA070000 	 .4byte 0x7aa
 7230 182d 33       	 .uleb128 0x33
 7231 182e FE030000 	 .4byte .LASF158
 7232 1832 02       	 .byte 0x2
 7233 1833 E5       	 .byte 0xe5
 7234 1834 1D       	 .byte 0x1d
 7235 1835 AA070000 	 .4byte 0x7aa
 7236 1839 00       	 .byte 0
 7237 183a 34       	 .uleb128 0x34
 7238 183b BA080000 	 .4byte .LASF169
 7239 183f 02       	 .byte 0x2
 7240 1840 D3       	 .byte 0xd3
 7241 1841 1E       	 .byte 0x1e
 7242 1842 03       	 .byte 0x3
 7243 1843 33       	 .uleb128 0x33
 7244 1844 FE030000 	 .4byte .LASF158
 7245 1848 02       	 .byte 0x2
 7246 1849 D5       	 .byte 0xd5
 7247 184a 0A       	 .byte 0xa
 7248 184b AA070000 	 .4byte 0x7aa
 7249 184f 00       	 .byte 0
 7250 1850 00       	 .byte 0
 7251              	 .section .debug_abbrev,"",%progbits
 7252              	.Ldebug_abbrev0:
 7253 0000 01       	 .uleb128 0x1
 7254 0001 11       	 .uleb128 0x11
 7255 0002 01       	 .byte 0x1
 7256 0003 25       	 .uleb128 0x25
 7257 0004 0E       	 .uleb128 0xe
 7258 0005 13       	 .uleb128 0x13
 7259 0006 0B       	 .uleb128 0xb
 7260 0007 03       	 .uleb128 0x3
 7261 0008 0E       	 .uleb128 0xe
ARM GAS   			page 176


 7262 0009 1B       	 .uleb128 0x1b
 7263 000a 0E       	 .uleb128 0xe
 7264 000b 55       	 .uleb128 0x55
 7265 000c 17       	 .uleb128 0x17
 7266 000d 11       	 .uleb128 0x11
 7267 000e 01       	 .uleb128 0x1
 7268 000f 10       	 .uleb128 0x10
 7269 0010 17       	 .uleb128 0x17
 7270 0011 00       	 .byte 0
 7271 0012 00       	 .byte 0
 7272 0013 02       	 .uleb128 0x2
 7273 0014 39       	 .uleb128 0x39
 7274 0015 01       	 .byte 0x1
 7275 0016 03       	 .uleb128 0x3
 7276 0017 08       	 .uleb128 0x8
 7277 0018 3A       	 .uleb128 0x3a
 7278 0019 0B       	 .uleb128 0xb
 7279 001a 3B       	 .uleb128 0x3b
 7280 001b 0B       	 .uleb128 0xb
 7281 001c 01       	 .uleb128 0x1
 7282 001d 13       	 .uleb128 0x13
 7283 001e 00       	 .byte 0
 7284 001f 00       	 .byte 0
 7285 0020 03       	 .uleb128 0x3
 7286 0021 39       	 .uleb128 0x39
 7287 0022 00       	 .byte 0
 7288 0023 03       	 .uleb128 0x3
 7289 0024 0E       	 .uleb128 0xe
 7290 0025 3A       	 .uleb128 0x3a
 7291 0026 0B       	 .uleb128 0xb
 7292 0027 3B       	 .uleb128 0x3b
 7293 0028 05       	 .uleb128 0x5
 7294 0029 39       	 .uleb128 0x39
 7295 002a 0B       	 .uleb128 0xb
 7296 002b 8901     	 .uleb128 0x89
 7297 002d 19       	 .uleb128 0x19
 7298 002e 00       	 .byte 0
 7299 002f 00       	 .byte 0
 7300 0030 04       	 .uleb128 0x4
 7301 0031 3A       	 .uleb128 0x3a
 7302 0032 00       	 .byte 0
 7303 0033 3A       	 .uleb128 0x3a
 7304 0034 0B       	 .uleb128 0xb
 7305 0035 3B       	 .uleb128 0x3b
 7306 0036 05       	 .uleb128 0x5
 7307 0037 39       	 .uleb128 0x39
 7308 0038 0B       	 .uleb128 0xb
 7309 0039 18       	 .uleb128 0x18
 7310 003a 13       	 .uleb128 0x13
 7311 003b 00       	 .byte 0
 7312 003c 00       	 .byte 0
 7313 003d 05       	 .uleb128 0x5
 7314 003e 08       	 .uleb128 0x8
 7315 003f 00       	 .byte 0
 7316 0040 3A       	 .uleb128 0x3a
 7317 0041 0B       	 .uleb128 0xb
 7318 0042 3B       	 .uleb128 0x3b
ARM GAS   			page 177


 7319 0043 0B       	 .uleb128 0xb
 7320 0044 39       	 .uleb128 0x39
 7321 0045 0B       	 .uleb128 0xb
 7322 0046 18       	 .uleb128 0x18
 7323 0047 13       	 .uleb128 0x13
 7324 0048 00       	 .byte 0
 7325 0049 00       	 .byte 0
 7326 004a 06       	 .uleb128 0x6
 7327 004b 2E       	 .uleb128 0x2e
 7328 004c 01       	 .byte 0x1
 7329 004d 3F       	 .uleb128 0x3f
 7330 004e 19       	 .uleb128 0x19
 7331 004f 03       	 .uleb128 0x3
 7332 0050 08       	 .uleb128 0x8
 7333 0051 3A       	 .uleb128 0x3a
 7334 0052 0B       	 .uleb128 0xb
 7335 0053 3B       	 .uleb128 0x3b
 7336 0054 0B       	 .uleb128 0xb
 7337 0055 39       	 .uleb128 0x39
 7338 0056 0B       	 .uleb128 0xb
 7339 0057 6E       	 .uleb128 0x6e
 7340 0058 0E       	 .uleb128 0xe
 7341 0059 49       	 .uleb128 0x49
 7342 005a 13       	 .uleb128 0x13
 7343 005b 3C       	 .uleb128 0x3c
 7344 005c 19       	 .uleb128 0x19
 7345 005d 01       	 .uleb128 0x1
 7346 005e 13       	 .uleb128 0x13
 7347 005f 00       	 .byte 0
 7348 0060 00       	 .byte 0
 7349 0061 07       	 .uleb128 0x7
 7350 0062 05       	 .uleb128 0x5
 7351 0063 00       	 .byte 0
 7352 0064 49       	 .uleb128 0x49
 7353 0065 13       	 .uleb128 0x13
 7354 0066 00       	 .byte 0
 7355 0067 00       	 .byte 0
 7356 0068 08       	 .uleb128 0x8
 7357 0069 2E       	 .uleb128 0x2e
 7358 006a 01       	 .byte 0x1
 7359 006b 3F       	 .uleb128 0x3f
 7360 006c 19       	 .uleb128 0x19
 7361 006d 03       	 .uleb128 0x3
 7362 006e 08       	 .uleb128 0x8
 7363 006f 3A       	 .uleb128 0x3a
 7364 0070 0B       	 .uleb128 0xb
 7365 0071 3B       	 .uleb128 0x3b
 7366 0072 0B       	 .uleb128 0xb
 7367 0073 39       	 .uleb128 0x39
 7368 0074 0B       	 .uleb128 0xb
 7369 0075 6E       	 .uleb128 0x6e
 7370 0076 0E       	 .uleb128 0xe
 7371 0077 49       	 .uleb128 0x49
 7372 0078 13       	 .uleb128 0x13
 7373 0079 3C       	 .uleb128 0x3c
 7374 007a 19       	 .uleb128 0x19
 7375 007b 00       	 .byte 0
ARM GAS   			page 178


 7376 007c 00       	 .byte 0
 7377 007d 09       	 .uleb128 0x9
 7378 007e 39       	 .uleb128 0x39
 7379 007f 01       	 .byte 0x1
 7380 0080 03       	 .uleb128 0x3
 7381 0081 0E       	 .uleb128 0xe
 7382 0082 3A       	 .uleb128 0x3a
 7383 0083 0B       	 .uleb128 0xb
 7384 0084 3B       	 .uleb128 0x3b
 7385 0085 05       	 .uleb128 0x5
 7386 0086 39       	 .uleb128 0x39
 7387 0087 0B       	 .uleb128 0xb
 7388 0088 01       	 .uleb128 0x1
 7389 0089 13       	 .uleb128 0x13
 7390 008a 00       	 .byte 0
 7391 008b 00       	 .byte 0
 7392 008c 0A       	 .uleb128 0xa
 7393 008d 16       	 .uleb128 0x16
 7394 008e 00       	 .byte 0
 7395 008f 03       	 .uleb128 0x3
 7396 0090 0E       	 .uleb128 0xe
 7397 0091 3A       	 .uleb128 0x3a
 7398 0092 0B       	 .uleb128 0xb
 7399 0093 3B       	 .uleb128 0x3b
 7400 0094 0B       	 .uleb128 0xb
 7401 0095 39       	 .uleb128 0x39
 7402 0096 0B       	 .uleb128 0xb
 7403 0097 49       	 .uleb128 0x49
 7404 0098 13       	 .uleb128 0x13
 7405 0099 00       	 .byte 0
 7406 009a 00       	 .byte 0
 7407 009b 0B       	 .uleb128 0xb
 7408 009c 24       	 .uleb128 0x24
 7409 009d 00       	 .byte 0
 7410 009e 0B       	 .uleb128 0xb
 7411 009f 0B       	 .uleb128 0xb
 7412 00a0 3E       	 .uleb128 0x3e
 7413 00a1 0B       	 .uleb128 0xb
 7414 00a2 03       	 .uleb128 0x3
 7415 00a3 0E       	 .uleb128 0xe
 7416 00a4 00       	 .byte 0
 7417 00a5 00       	 .byte 0
 7418 00a6 0C       	 .uleb128 0xc
 7419 00a7 24       	 .uleb128 0x24
 7420 00a8 00       	 .byte 0
 7421 00a9 0B       	 .uleb128 0xb
 7422 00aa 0B       	 .uleb128 0xb
 7423 00ab 3E       	 .uleb128 0x3e
 7424 00ac 0B       	 .uleb128 0xb
 7425 00ad 03       	 .uleb128 0x3
 7426 00ae 08       	 .uleb128 0x8
 7427 00af 00       	 .byte 0
 7428 00b0 00       	 .byte 0
 7429 00b1 0D       	 .uleb128 0xd
 7430 00b2 3B       	 .uleb128 0x3b
 7431 00b3 00       	 .byte 0
 7432 00b4 03       	 .uleb128 0x3
ARM GAS   			page 179


 7433 00b5 0E       	 .uleb128 0xe
 7434 00b6 00       	 .byte 0
 7435 00b7 00       	 .byte 0
 7436 00b8 0E       	 .uleb128 0xe
 7437 00b9 0F       	 .uleb128 0xf
 7438 00ba 00       	 .byte 0
 7439 00bb 0B       	 .uleb128 0xb
 7440 00bc 0B       	 .uleb128 0xb
 7441 00bd 00       	 .byte 0
 7442 00be 00       	 .byte 0
 7443 00bf 0F       	 .uleb128 0xf
 7444 00c0 26       	 .uleb128 0x26
 7445 00c1 00       	 .byte 0
 7446 00c2 49       	 .uleb128 0x49
 7447 00c3 13       	 .uleb128 0x13
 7448 00c4 00       	 .byte 0
 7449 00c5 00       	 .byte 0
 7450 00c6 10       	 .uleb128 0x10
 7451 00c7 0F       	 .uleb128 0xf
 7452 00c8 00       	 .byte 0
 7453 00c9 0B       	 .uleb128 0xb
 7454 00ca 0B       	 .uleb128 0xb
 7455 00cb 49       	 .uleb128 0x49
 7456 00cc 13       	 .uleb128 0x13
 7457 00cd 00       	 .byte 0
 7458 00ce 00       	 .byte 0
 7459 00cf 11       	 .uleb128 0x11
 7460 00d0 15       	 .uleb128 0x15
 7461 00d1 00       	 .byte 0
 7462 00d2 00       	 .byte 0
 7463 00d3 00       	 .byte 0
 7464 00d4 12       	 .uleb128 0x12
 7465 00d5 13       	 .uleb128 0x13
 7466 00d6 01       	 .byte 0x1
 7467 00d7 0B       	 .uleb128 0xb
 7468 00d8 0B       	 .uleb128 0xb
 7469 00d9 3A       	 .uleb128 0x3a
 7470 00da 0B       	 .uleb128 0xb
 7471 00db 3B       	 .uleb128 0x3b
 7472 00dc 0B       	 .uleb128 0xb
 7473 00dd 39       	 .uleb128 0x39
 7474 00de 0B       	 .uleb128 0xb
 7475 00df 6E       	 .uleb128 0x6e
 7476 00e0 0E       	 .uleb128 0xe
 7477 00e1 01       	 .uleb128 0x1
 7478 00e2 13       	 .uleb128 0x13
 7479 00e3 00       	 .byte 0
 7480 00e4 00       	 .byte 0
 7481 00e5 13       	 .uleb128 0x13
 7482 00e6 0D       	 .uleb128 0xd
 7483 00e7 00       	 .byte 0
 7484 00e8 03       	 .uleb128 0x3
 7485 00e9 0E       	 .uleb128 0xe
 7486 00ea 3A       	 .uleb128 0x3a
 7487 00eb 0B       	 .uleb128 0xb
 7488 00ec 3B       	 .uleb128 0x3b
 7489 00ed 0B       	 .uleb128 0xb
ARM GAS   			page 180


 7490 00ee 39       	 .uleb128 0x39
 7491 00ef 0B       	 .uleb128 0xb
 7492 00f0 49       	 .uleb128 0x49
 7493 00f1 13       	 .uleb128 0x13
 7494 00f2 38       	 .uleb128 0x38
 7495 00f3 0B       	 .uleb128 0xb
 7496 00f4 00       	 .byte 0
 7497 00f5 00       	 .byte 0
 7498 00f6 14       	 .uleb128 0x14
 7499 00f7 0D       	 .uleb128 0xd
 7500 00f8 00       	 .byte 0
 7501 00f9 03       	 .uleb128 0x3
 7502 00fa 08       	 .uleb128 0x8
 7503 00fb 3A       	 .uleb128 0x3a
 7504 00fc 0B       	 .uleb128 0xb
 7505 00fd 3B       	 .uleb128 0x3b
 7506 00fe 0B       	 .uleb128 0xb
 7507 00ff 39       	 .uleb128 0x39
 7508 0100 0B       	 .uleb128 0xb
 7509 0101 49       	 .uleb128 0x49
 7510 0102 13       	 .uleb128 0x13
 7511 0103 38       	 .uleb128 0x38
 7512 0104 0B       	 .uleb128 0xb
 7513 0105 00       	 .byte 0
 7514 0106 00       	 .byte 0
 7515 0107 15       	 .uleb128 0x15
 7516 0108 15       	 .uleb128 0x15
 7517 0109 01       	 .byte 0x1
 7518 010a 49       	 .uleb128 0x49
 7519 010b 13       	 .uleb128 0x13
 7520 010c 01       	 .uleb128 0x1
 7521 010d 13       	 .uleb128 0x13
 7522 010e 00       	 .byte 0
 7523 010f 00       	 .byte 0
 7524 0110 16       	 .uleb128 0x16
 7525 0111 26       	 .uleb128 0x26
 7526 0112 00       	 .byte 0
 7527 0113 00       	 .byte 0
 7528 0114 00       	 .byte 0
 7529 0115 17       	 .uleb128 0x17
 7530 0116 2E       	 .uleb128 0x2e
 7531 0117 01       	 .byte 0x1
 7532 0118 3F       	 .uleb128 0x3f
 7533 0119 19       	 .uleb128 0x19
 7534 011a 03       	 .uleb128 0x3
 7535 011b 0E       	 .uleb128 0xe
 7536 011c 3A       	 .uleb128 0x3a
 7537 011d 0B       	 .uleb128 0xb
 7538 011e 3B       	 .uleb128 0x3b
 7539 011f 0B       	 .uleb128 0xb
 7540 0120 39       	 .uleb128 0x39
 7541 0121 0B       	 .uleb128 0xb
 7542 0122 49       	 .uleb128 0x49
 7543 0123 13       	 .uleb128 0x13
 7544 0124 3C       	 .uleb128 0x3c
 7545 0125 19       	 .uleb128 0x19
 7546 0126 01       	 .uleb128 0x1
ARM GAS   			page 181


 7547 0127 13       	 .uleb128 0x13
 7548 0128 00       	 .byte 0
 7549 0129 00       	 .byte 0
 7550 012a 18       	 .uleb128 0x18
 7551 012b 2E       	 .uleb128 0x2e
 7552 012c 01       	 .byte 0x1
 7553 012d 3F       	 .uleb128 0x3f
 7554 012e 19       	 .uleb128 0x19
 7555 012f 03       	 .uleb128 0x3
 7556 0130 08       	 .uleb128 0x8
 7557 0131 3A       	 .uleb128 0x3a
 7558 0132 0B       	 .uleb128 0xb
 7559 0133 3B       	 .uleb128 0x3b
 7560 0134 0B       	 .uleb128 0xb
 7561 0135 39       	 .uleb128 0x39
 7562 0136 0B       	 .uleb128 0xb
 7563 0137 49       	 .uleb128 0x49
 7564 0138 13       	 .uleb128 0x13
 7565 0139 3C       	 .uleb128 0x3c
 7566 013a 19       	 .uleb128 0x19
 7567 013b 01       	 .uleb128 0x1
 7568 013c 13       	 .uleb128 0x13
 7569 013d 00       	 .byte 0
 7570 013e 00       	 .byte 0
 7571 013f 19       	 .uleb128 0x19
 7572 0140 2E       	 .uleb128 0x2e
 7573 0141 01       	 .byte 0x1
 7574 0142 3F       	 .uleb128 0x3f
 7575 0143 19       	 .uleb128 0x19
 7576 0144 03       	 .uleb128 0x3
 7577 0145 0E       	 .uleb128 0xe
 7578 0146 3A       	 .uleb128 0x3a
 7579 0147 0B       	 .uleb128 0xb
 7580 0148 3B       	 .uleb128 0x3b
 7581 0149 0B       	 .uleb128 0xb
 7582 014a 39       	 .uleb128 0x39
 7583 014b 0B       	 .uleb128 0xb
 7584 014c 3C       	 .uleb128 0x3c
 7585 014d 19       	 .uleb128 0x19
 7586 014e 01       	 .uleb128 0x1
 7587 014f 13       	 .uleb128 0x13
 7588 0150 00       	 .byte 0
 7589 0151 00       	 .byte 0
 7590 0152 1A       	 .uleb128 0x1a
 7591 0153 2E       	 .uleb128 0x2e
 7592 0154 00       	 .byte 0
 7593 0155 3F       	 .uleb128 0x3f
 7594 0156 19       	 .uleb128 0x19
 7595 0157 03       	 .uleb128 0x3
 7596 0158 0E       	 .uleb128 0xe
 7597 0159 3A       	 .uleb128 0x3a
 7598 015a 0B       	 .uleb128 0xb
 7599 015b 3B       	 .uleb128 0x3b
 7600 015c 0B       	 .uleb128 0xb
 7601 015d 39       	 .uleb128 0x39
 7602 015e 0B       	 .uleb128 0xb
 7603 015f 49       	 .uleb128 0x49
ARM GAS   			page 182


 7604 0160 13       	 .uleb128 0x13
 7605 0161 3C       	 .uleb128 0x3c
 7606 0162 19       	 .uleb128 0x19
 7607 0163 00       	 .byte 0
 7608 0164 00       	 .byte 0
 7609 0165 1B       	 .uleb128 0x1b
 7610 0166 2E       	 .uleb128 0x2e
 7611 0167 01       	 .byte 0x1
 7612 0168 3F       	 .uleb128 0x3f
 7613 0169 19       	 .uleb128 0x19
 7614 016a 03       	 .uleb128 0x3
 7615 016b 0E       	 .uleb128 0xe
 7616 016c 3A       	 .uleb128 0x3a
 7617 016d 0B       	 .uleb128 0xb
 7618 016e 3B       	 .uleb128 0x3b
 7619 016f 05       	 .uleb128 0x5
 7620 0170 39       	 .uleb128 0x39
 7621 0171 0B       	 .uleb128 0xb
 7622 0172 49       	 .uleb128 0x49
 7623 0173 13       	 .uleb128 0x13
 7624 0174 3C       	 .uleb128 0x3c
 7625 0175 19       	 .uleb128 0x19
 7626 0176 01       	 .uleb128 0x1
 7627 0177 13       	 .uleb128 0x13
 7628 0178 00       	 .byte 0
 7629 0179 00       	 .byte 0
 7630 017a 1C       	 .uleb128 0x1c
 7631 017b 35       	 .uleb128 0x35
 7632 017c 00       	 .byte 0
 7633 017d 49       	 .uleb128 0x49
 7634 017e 13       	 .uleb128 0x13
 7635 017f 00       	 .byte 0
 7636 0180 00       	 .byte 0
 7637 0181 1D       	 .uleb128 0x1d
 7638 0182 13       	 .uleb128 0x13
 7639 0183 01       	 .byte 0x1
 7640 0184 03       	 .uleb128 0x3
 7641 0185 0E       	 .uleb128 0xe
 7642 0186 0B       	 .uleb128 0xb
 7643 0187 0B       	 .uleb128 0xb
 7644 0188 3A       	 .uleb128 0x3a
 7645 0189 0B       	 .uleb128 0xb
 7646 018a 3B       	 .uleb128 0x3b
 7647 018b 0B       	 .uleb128 0xb
 7648 018c 39       	 .uleb128 0x39
 7649 018d 0B       	 .uleb128 0xb
 7650 018e 01       	 .uleb128 0x1
 7651 018f 13       	 .uleb128 0x13
 7652 0190 00       	 .byte 0
 7653 0191 00       	 .byte 0
 7654 0192 1E       	 .uleb128 0x1e
 7655 0193 17       	 .uleb128 0x17
 7656 0194 01       	 .byte 0x1
 7657 0195 0B       	 .uleb128 0xb
 7658 0196 0B       	 .uleb128 0xb
 7659 0197 3A       	 .uleb128 0x3a
 7660 0198 0B       	 .uleb128 0xb
ARM GAS   			page 183


 7661 0199 3B       	 .uleb128 0x3b
 7662 019a 0B       	 .uleb128 0xb
 7663 019b 39       	 .uleb128 0x39
 7664 019c 0B       	 .uleb128 0xb
 7665 019d 01       	 .uleb128 0x1
 7666 019e 13       	 .uleb128 0x13
 7667 019f 00       	 .byte 0
 7668 01a0 00       	 .byte 0
 7669 01a1 1F       	 .uleb128 0x1f
 7670 01a2 0D       	 .uleb128 0xd
 7671 01a3 00       	 .byte 0
 7672 01a4 03       	 .uleb128 0x3
 7673 01a5 0E       	 .uleb128 0xe
 7674 01a6 3A       	 .uleb128 0x3a
 7675 01a7 0B       	 .uleb128 0xb
 7676 01a8 3B       	 .uleb128 0x3b
 7677 01a9 0B       	 .uleb128 0xb
 7678 01aa 39       	 .uleb128 0x39
 7679 01ab 0B       	 .uleb128 0xb
 7680 01ac 49       	 .uleb128 0x49
 7681 01ad 13       	 .uleb128 0x13
 7682 01ae 00       	 .byte 0
 7683 01af 00       	 .byte 0
 7684 01b0 20       	 .uleb128 0x20
 7685 01b1 01       	 .uleb128 0x1
 7686 01b2 01       	 .byte 0x1
 7687 01b3 49       	 .uleb128 0x49
 7688 01b4 13       	 .uleb128 0x13
 7689 01b5 01       	 .uleb128 0x1
 7690 01b6 13       	 .uleb128 0x13
 7691 01b7 00       	 .byte 0
 7692 01b8 00       	 .byte 0
 7693 01b9 21       	 .uleb128 0x21
 7694 01ba 21       	 .uleb128 0x21
 7695 01bb 00       	 .byte 0
 7696 01bc 49       	 .uleb128 0x49
 7697 01bd 13       	 .uleb128 0x13
 7698 01be 2F       	 .uleb128 0x2f
 7699 01bf 0B       	 .uleb128 0xb
 7700 01c0 00       	 .byte 0
 7701 01c1 00       	 .byte 0
 7702 01c2 22       	 .uleb128 0x22
 7703 01c3 34       	 .uleb128 0x34
 7704 01c4 00       	 .byte 0
 7705 01c5 03       	 .uleb128 0x3
 7706 01c6 0E       	 .uleb128 0xe
 7707 01c7 3A       	 .uleb128 0x3a
 7708 01c8 0B       	 .uleb128 0xb
 7709 01c9 3B       	 .uleb128 0x3b
 7710 01ca 0B       	 .uleb128 0xb
 7711 01cb 39       	 .uleb128 0x39
 7712 01cc 0B       	 .uleb128 0xb
 7713 01cd 49       	 .uleb128 0x49
 7714 01ce 13       	 .uleb128 0x13
 7715 01cf 3F       	 .uleb128 0x3f
 7716 01d0 19       	 .uleb128 0x19
 7717 01d1 02       	 .uleb128 0x2
ARM GAS   			page 184


 7718 01d2 18       	 .uleb128 0x18
 7719 01d3 00       	 .byte 0
 7720 01d4 00       	 .byte 0
 7721 01d5 23       	 .uleb128 0x23
 7722 01d6 2E       	 .uleb128 0x2e
 7723 01d7 01       	 .byte 0x1
 7724 01d8 3F       	 .uleb128 0x3f
 7725 01d9 19       	 .uleb128 0x19
 7726 01da 03       	 .uleb128 0x3
 7727 01db 0E       	 .uleb128 0xe
 7728 01dc 3A       	 .uleb128 0x3a
 7729 01dd 0B       	 .uleb128 0xb
 7730 01de 3B       	 .uleb128 0x3b
 7731 01df 05       	 .uleb128 0x5
 7732 01e0 39       	 .uleb128 0x39
 7733 01e1 0B       	 .uleb128 0xb
 7734 01e2 11       	 .uleb128 0x11
 7735 01e3 01       	 .uleb128 0x1
 7736 01e4 12       	 .uleb128 0x12
 7737 01e5 06       	 .uleb128 0x6
 7738 01e6 40       	 .uleb128 0x40
 7739 01e7 18       	 .uleb128 0x18
 7740 01e8 9742     	 .uleb128 0x2117
 7741 01ea 19       	 .uleb128 0x19
 7742 01eb 01       	 .uleb128 0x1
 7743 01ec 13       	 .uleb128 0x13
 7744 01ed 00       	 .byte 0
 7745 01ee 00       	 .byte 0
 7746 01ef 24       	 .uleb128 0x24
 7747 01f0 05       	 .uleb128 0x5
 7748 01f1 00       	 .byte 0
 7749 01f2 03       	 .uleb128 0x3
 7750 01f3 0E       	 .uleb128 0xe
 7751 01f4 3A       	 .uleb128 0x3a
 7752 01f5 0B       	 .uleb128 0xb
 7753 01f6 3B       	 .uleb128 0x3b
 7754 01f7 05       	 .uleb128 0x5
 7755 01f8 39       	 .uleb128 0x39
 7756 01f9 0B       	 .uleb128 0xb
 7757 01fa 49       	 .uleb128 0x49
 7758 01fb 13       	 .uleb128 0x13
 7759 01fc 02       	 .uleb128 0x2
 7760 01fd 18       	 .uleb128 0x18
 7761 01fe 00       	 .byte 0
 7762 01ff 00       	 .byte 0
 7763 0200 25       	 .uleb128 0x25
 7764 0201 34       	 .uleb128 0x34
 7765 0202 00       	 .byte 0
 7766 0203 03       	 .uleb128 0x3
 7767 0204 08       	 .uleb128 0x8
 7768 0205 3A       	 .uleb128 0x3a
 7769 0206 0B       	 .uleb128 0xb
 7770 0207 3B       	 .uleb128 0x3b
 7771 0208 05       	 .uleb128 0x5
 7772 0209 39       	 .uleb128 0x39
 7773 020a 0B       	 .uleb128 0xb
 7774 020b 49       	 .uleb128 0x49
ARM GAS   			page 185


 7775 020c 13       	 .uleb128 0x13
 7776 020d 02       	 .uleb128 0x2
 7777 020e 18       	 .uleb128 0x18
 7778 020f 00       	 .byte 0
 7779 0210 00       	 .byte 0
 7780 0211 26       	 .uleb128 0x26
 7781 0212 2E       	 .uleb128 0x2e
 7782 0213 01       	 .byte 0x1
 7783 0214 3F       	 .uleb128 0x3f
 7784 0215 19       	 .uleb128 0x19
 7785 0216 03       	 .uleb128 0x3
 7786 0217 0E       	 .uleb128 0xe
 7787 0218 3A       	 .uleb128 0x3a
 7788 0219 0B       	 .uleb128 0xb
 7789 021a 3B       	 .uleb128 0x3b
 7790 021b 05       	 .uleb128 0x5
 7791 021c 39       	 .uleb128 0x39
 7792 021d 0B       	 .uleb128 0xb
 7793 021e 49       	 .uleb128 0x49
 7794 021f 13       	 .uleb128 0x13
 7795 0220 11       	 .uleb128 0x11
 7796 0221 01       	 .uleb128 0x1
 7797 0222 12       	 .uleb128 0x12
 7798 0223 06       	 .uleb128 0x6
 7799 0224 40       	 .uleb128 0x40
 7800 0225 18       	 .uleb128 0x18
 7801 0226 9742     	 .uleb128 0x2117
 7802 0228 19       	 .uleb128 0x19
 7803 0229 01       	 .uleb128 0x1
 7804 022a 13       	 .uleb128 0x13
 7805 022b 00       	 .byte 0
 7806 022c 00       	 .byte 0
 7807 022d 27       	 .uleb128 0x27
 7808 022e 34       	 .uleb128 0x34
 7809 022f 00       	 .byte 0
 7810 0230 03       	 .uleb128 0x3
 7811 0231 0E       	 .uleb128 0xe
 7812 0232 3A       	 .uleb128 0x3a
 7813 0233 0B       	 .uleb128 0xb
 7814 0234 3B       	 .uleb128 0x3b
 7815 0235 05       	 .uleb128 0x5
 7816 0236 39       	 .uleb128 0x39
 7817 0237 0B       	 .uleb128 0xb
 7818 0238 49       	 .uleb128 0x49
 7819 0239 13       	 .uleb128 0x13
 7820 023a 02       	 .uleb128 0x2
 7821 023b 18       	 .uleb128 0x18
 7822 023c 00       	 .byte 0
 7823 023d 00       	 .byte 0
 7824 023e 28       	 .uleb128 0x28
 7825 023f 1D       	 .uleb128 0x1d
 7826 0240 01       	 .byte 0x1
 7827 0241 31       	 .uleb128 0x31
 7828 0242 13       	 .uleb128 0x13
 7829 0243 11       	 .uleb128 0x11
 7830 0244 01       	 .uleb128 0x1
 7831 0245 12       	 .uleb128 0x12
ARM GAS   			page 186


 7832 0246 06       	 .uleb128 0x6
 7833 0247 58       	 .uleb128 0x58
 7834 0248 0B       	 .uleb128 0xb
 7835 0249 59       	 .uleb128 0x59
 7836 024a 05       	 .uleb128 0x5
 7837 024b 57       	 .uleb128 0x57
 7838 024c 0B       	 .uleb128 0xb
 7839 024d 00       	 .byte 0
 7840 024e 00       	 .byte 0
 7841 024f 29       	 .uleb128 0x29
 7842 0250 34       	 .uleb128 0x34
 7843 0251 00       	 .byte 0
 7844 0252 31       	 .uleb128 0x31
 7845 0253 13       	 .uleb128 0x13
 7846 0254 02       	 .uleb128 0x2
 7847 0255 18       	 .uleb128 0x18
 7848 0256 00       	 .byte 0
 7849 0257 00       	 .byte 0
 7850 0258 2A       	 .uleb128 0x2a
 7851 0259 2E       	 .uleb128 0x2e
 7852 025a 01       	 .byte 0x1
 7853 025b 03       	 .uleb128 0x3
 7854 025c 0E       	 .uleb128 0xe
 7855 025d 3A       	 .uleb128 0x3a
 7856 025e 0B       	 .uleb128 0xb
 7857 025f 3B       	 .uleb128 0x3b
 7858 0260 05       	 .uleb128 0x5
 7859 0261 39       	 .uleb128 0x39
 7860 0262 0B       	 .uleb128 0xb
 7861 0263 49       	 .uleb128 0x49
 7862 0264 13       	 .uleb128 0x13
 7863 0265 11       	 .uleb128 0x11
 7864 0266 01       	 .uleb128 0x1
 7865 0267 12       	 .uleb128 0x12
 7866 0268 06       	 .uleb128 0x6
 7867 0269 40       	 .uleb128 0x40
 7868 026a 18       	 .uleb128 0x18
 7869 026b 9642     	 .uleb128 0x2116
 7870 026d 19       	 .uleb128 0x19
 7871 026e 01       	 .uleb128 0x1
 7872 026f 13       	 .uleb128 0x13
 7873 0270 00       	 .byte 0
 7874 0271 00       	 .byte 0
 7875 0272 2B       	 .uleb128 0x2b
 7876 0273 2E       	 .uleb128 0x2e
 7877 0274 01       	 .byte 0x1
 7878 0275 03       	 .uleb128 0x3
 7879 0276 0E       	 .uleb128 0xe
 7880 0277 3A       	 .uleb128 0x3a
 7881 0278 0B       	 .uleb128 0xb
 7882 0279 3B       	 .uleb128 0x3b
 7883 027a 05       	 .uleb128 0x5
 7884 027b 39       	 .uleb128 0x39
 7885 027c 0B       	 .uleb128 0xb
 7886 027d 11       	 .uleb128 0x11
 7887 027e 01       	 .uleb128 0x1
 7888 027f 12       	 .uleb128 0x12
ARM GAS   			page 187


 7889 0280 06       	 .uleb128 0x6
 7890 0281 40       	 .uleb128 0x40
 7891 0282 18       	 .uleb128 0x18
 7892 0283 9642     	 .uleb128 0x2116
 7893 0285 19       	 .uleb128 0x19
 7894 0286 01       	 .uleb128 0x1
 7895 0287 13       	 .uleb128 0x13
 7896 0288 00       	 .byte 0
 7897 0289 00       	 .byte 0
 7898 028a 2C       	 .uleb128 0x2c
 7899 028b 2E       	 .uleb128 0x2e
 7900 028c 01       	 .byte 0x1
 7901 028d 3F       	 .uleb128 0x3f
 7902 028e 19       	 .uleb128 0x19
 7903 028f 03       	 .uleb128 0x3
 7904 0290 0E       	 .uleb128 0xe
 7905 0291 3A       	 .uleb128 0x3a
 7906 0292 0B       	 .uleb128 0xb
 7907 0293 3B       	 .uleb128 0x3b
 7908 0294 05       	 .uleb128 0x5
 7909 0295 39       	 .uleb128 0x39
 7910 0296 0B       	 .uleb128 0xb
 7911 0297 11       	 .uleb128 0x11
 7912 0298 01       	 .uleb128 0x1
 7913 0299 12       	 .uleb128 0x12
 7914 029a 06       	 .uleb128 0x6
 7915 029b 40       	 .uleb128 0x40
 7916 029c 18       	 .uleb128 0x18
 7917 029d 9642     	 .uleb128 0x2116
 7918 029f 19       	 .uleb128 0x19
 7919 02a0 01       	 .uleb128 0x1
 7920 02a1 13       	 .uleb128 0x13
 7921 02a2 00       	 .byte 0
 7922 02a3 00       	 .byte 0
 7923 02a4 2D       	 .uleb128 0x2d
 7924 02a5 2E       	 .uleb128 0x2e
 7925 02a6 01       	 .byte 0x1
 7926 02a7 3F       	 .uleb128 0x3f
 7927 02a8 19       	 .uleb128 0x19
 7928 02a9 03       	 .uleb128 0x3
 7929 02aa 0E       	 .uleb128 0xe
 7930 02ab 3A       	 .uleb128 0x3a
 7931 02ac 0B       	 .uleb128 0xb
 7932 02ad 3B       	 .uleb128 0x3b
 7933 02ae 05       	 .uleb128 0x5
 7934 02af 39       	 .uleb128 0x39
 7935 02b0 0B       	 .uleb128 0xb
 7936 02b1 49       	 .uleb128 0x49
 7937 02b2 13       	 .uleb128 0x13
 7938 02b3 11       	 .uleb128 0x11
 7939 02b4 01       	 .uleb128 0x1
 7940 02b5 12       	 .uleb128 0x12
 7941 02b6 06       	 .uleb128 0x6
 7942 02b7 40       	 .uleb128 0x40
 7943 02b8 18       	 .uleb128 0x18
 7944 02b9 9642     	 .uleb128 0x2116
 7945 02bb 19       	 .uleb128 0x19
ARM GAS   			page 188


 7946 02bc 01       	 .uleb128 0x1
 7947 02bd 13       	 .uleb128 0x13
 7948 02be 00       	 .byte 0
 7949 02bf 00       	 .byte 0
 7950 02c0 2E       	 .uleb128 0x2e
 7951 02c1 1D       	 .uleb128 0x1d
 7952 02c2 01       	 .byte 0x1
 7953 02c3 31       	 .uleb128 0x31
 7954 02c4 13       	 .uleb128 0x13
 7955 02c5 11       	 .uleb128 0x11
 7956 02c6 01       	 .uleb128 0x1
 7957 02c7 12       	 .uleb128 0x12
 7958 02c8 06       	 .uleb128 0x6
 7959 02c9 58       	 .uleb128 0x58
 7960 02ca 0B       	 .uleb128 0xb
 7961 02cb 59       	 .uleb128 0x59
 7962 02cc 05       	 .uleb128 0x5
 7963 02cd 57       	 .uleb128 0x57
 7964 02ce 0B       	 .uleb128 0xb
 7965 02cf 01       	 .uleb128 0x1
 7966 02d0 13       	 .uleb128 0x13
 7967 02d1 00       	 .byte 0
 7968 02d2 00       	 .byte 0
 7969 02d3 2F       	 .uleb128 0x2f
 7970 02d4 05       	 .uleb128 0x5
 7971 02d5 00       	 .byte 0
 7972 02d6 31       	 .uleb128 0x31
 7973 02d7 13       	 .uleb128 0x13
 7974 02d8 02       	 .uleb128 0x2
 7975 02d9 18       	 .uleb128 0x18
 7976 02da 00       	 .byte 0
 7977 02db 00       	 .byte 0
 7978 02dc 30       	 .uleb128 0x30
 7979 02dd 2E       	 .uleb128 0x2e
 7980 02de 01       	 .byte 0x1
 7981 02df 03       	 .uleb128 0x3
 7982 02e0 0E       	 .uleb128 0xe
 7983 02e1 3A       	 .uleb128 0x3a
 7984 02e2 0B       	 .uleb128 0xb
 7985 02e3 3B       	 .uleb128 0x3b
 7986 02e4 0B       	 .uleb128 0xb
 7987 02e5 39       	 .uleb128 0x39
 7988 02e6 0B       	 .uleb128 0xb
 7989 02e7 20       	 .uleb128 0x20
 7990 02e8 0B       	 .uleb128 0xb
 7991 02e9 01       	 .uleb128 0x1
 7992 02ea 13       	 .uleb128 0x13
 7993 02eb 00       	 .byte 0
 7994 02ec 00       	 .byte 0
 7995 02ed 31       	 .uleb128 0x31
 7996 02ee 05       	 .uleb128 0x5
 7997 02ef 00       	 .byte 0
 7998 02f0 03       	 .uleb128 0x3
 7999 02f1 0E       	 .uleb128 0xe
 8000 02f2 3A       	 .uleb128 0x3a
 8001 02f3 0B       	 .uleb128 0xb
 8002 02f4 3B       	 .uleb128 0x3b
ARM GAS   			page 189


 8003 02f5 0B       	 .uleb128 0xb
 8004 02f6 39       	 .uleb128 0x39
 8005 02f7 0B       	 .uleb128 0xb
 8006 02f8 49       	 .uleb128 0x49
 8007 02f9 13       	 .uleb128 0x13
 8008 02fa 00       	 .byte 0
 8009 02fb 00       	 .byte 0
 8010 02fc 32       	 .uleb128 0x32
 8011 02fd 2E       	 .uleb128 0x2e
 8012 02fe 01       	 .byte 0x1
 8013 02ff 03       	 .uleb128 0x3
 8014 0300 0E       	 .uleb128 0xe
 8015 0301 3A       	 .uleb128 0x3a
 8016 0302 0B       	 .uleb128 0xb
 8017 0303 3B       	 .uleb128 0x3b
 8018 0304 0B       	 .uleb128 0xb
 8019 0305 39       	 .uleb128 0x39
 8020 0306 0B       	 .uleb128 0xb
 8021 0307 49       	 .uleb128 0x49
 8022 0308 13       	 .uleb128 0x13
 8023 0309 20       	 .uleb128 0x20
 8024 030a 0B       	 .uleb128 0xb
 8025 030b 01       	 .uleb128 0x1
 8026 030c 13       	 .uleb128 0x13
 8027 030d 00       	 .byte 0
 8028 030e 00       	 .byte 0
 8029 030f 33       	 .uleb128 0x33
 8030 0310 34       	 .uleb128 0x34
 8031 0311 00       	 .byte 0
 8032 0312 03       	 .uleb128 0x3
 8033 0313 0E       	 .uleb128 0xe
 8034 0314 3A       	 .uleb128 0x3a
 8035 0315 0B       	 .uleb128 0xb
 8036 0316 3B       	 .uleb128 0x3b
 8037 0317 0B       	 .uleb128 0xb
 8038 0318 39       	 .uleb128 0x39
 8039 0319 0B       	 .uleb128 0xb
 8040 031a 49       	 .uleb128 0x49
 8041 031b 13       	 .uleb128 0x13
 8042 031c 00       	 .byte 0
 8043 031d 00       	 .byte 0
 8044 031e 34       	 .uleb128 0x34
 8045 031f 2E       	 .uleb128 0x2e
 8046 0320 01       	 .byte 0x1
 8047 0321 03       	 .uleb128 0x3
 8048 0322 0E       	 .uleb128 0xe
 8049 0323 3A       	 .uleb128 0x3a
 8050 0324 0B       	 .uleb128 0xb
 8051 0325 3B       	 .uleb128 0x3b
 8052 0326 0B       	 .uleb128 0xb
 8053 0327 39       	 .uleb128 0x39
 8054 0328 0B       	 .uleb128 0xb
 8055 0329 20       	 .uleb128 0x20
 8056 032a 0B       	 .uleb128 0xb
 8057 032b 00       	 .byte 0
 8058 032c 00       	 .byte 0
 8059 032d 00       	 .byte 0
ARM GAS   			page 190


 8060              	 .section .debug_aranges,"",%progbits
 8061 0000 F4000000 	 .4byte 0xf4
 8062 0004 0200     	 .2byte 0x2
 8063 0006 00000000 	 .4byte .Ldebug_info0
 8064 000a 04       	 .byte 0x4
 8065 000b 00       	 .byte 0
 8066 000c 0000     	 .2byte 0
 8067 000e 0000     	 .2byte 0
 8068 0010 00000000 	 .4byte .LFB11
 8069 0014 DC000000 	 .4byte .LFE11-.LFB11
 8070 0018 00000000 	 .4byte .LFB12
 8071 001c B8000000 	 .4byte .LFE12-.LFB12
 8072 0020 00000000 	 .4byte .LFB13
 8073 0024 86000000 	 .4byte .LFE13-.LFB13
 8074 0028 00000000 	 .4byte .LFB14
 8075 002c 72000000 	 .4byte .LFE14-.LFB14
 8076 0030 00000000 	 .4byte .LFB15
 8077 0034 7C000000 	 .4byte .LFE15-.LFB15
 8078 0038 00000000 	 .4byte .LFB16
 8079 003c 84000000 	 .4byte .LFE16-.LFB16
 8080 0040 00000000 	 .4byte .LFB17
 8081 0044 44020000 	 .4byte .LFE17-.LFB17
 8082 0048 00000000 	 .4byte .LFB18
 8083 004c 3E010000 	 .4byte .LFE18-.LFB18
 8084 0050 00000000 	 .4byte .LFB19
 8085 0054 26010000 	 .4byte .LFE19-.LFB19
 8086 0058 00000000 	 .4byte .LFB20
 8087 005c 68020000 	 .4byte .LFE20-.LFB20
 8088 0060 00000000 	 .4byte .LFB21
 8089 0064 0C010000 	 .4byte .LFE21-.LFB21
 8090 0068 00000000 	 .4byte .LFB22
 8091 006c DC000000 	 .4byte .LFE22-.LFB22
 8092 0070 00000000 	 .4byte .LFB23
 8093 0074 3C000000 	 .4byte .LFE23-.LFB23
 8094 0078 00000000 	 .4byte .LFB24
 8095 007c 46000000 	 .4byte .LFE24-.LFB24
 8096 0080 00000000 	 .4byte .LFB25
 8097 0084 38000000 	 .4byte .LFE25-.LFB25
 8098 0088 00000000 	 .4byte .LFB26
 8099 008c 3C000000 	 .4byte .LFE26-.LFB26
 8100 0090 00000000 	 .4byte .LFB27
 8101 0094 18000000 	 .4byte .LFE27-.LFB27
 8102 0098 00000000 	 .4byte .LFB28
 8103 009c 1C000000 	 .4byte .LFE28-.LFB28
 8104 00a0 00000000 	 .4byte .LFB29
 8105 00a4 1A000000 	 .4byte .LFE29-.LFB29
 8106 00a8 00000000 	 .4byte .LFB30
 8107 00ac E2000000 	 .4byte .LFE30-.LFB30
 8108 00b0 00000000 	 .4byte .LFB31
 8109 00b4 4C000000 	 .4byte .LFE31-.LFB31
 8110 00b8 00000000 	 .4byte .LFB32
 8111 00bc BC000000 	 .4byte .LFE32-.LFB32
 8112 00c0 00000000 	 .4byte .LFB33
 8113 00c4 36000000 	 .4byte .LFE33-.LFB33
 8114 00c8 00000000 	 .4byte .LFB34
 8115 00cc 4E000000 	 .4byte .LFE34-.LFB34
 8116 00d0 00000000 	 .4byte .LFB35
ARM GAS   			page 191


 8117 00d4 3A000000 	 .4byte .LFE35-.LFB35
 8118 00d8 00000000 	 .4byte .LFB36
 8119 00dc 52000000 	 .4byte .LFE36-.LFB36
 8120 00e0 00000000 	 .4byte .LFB37
 8121 00e4 54000000 	 .4byte .LFE37-.LFB37
 8122 00e8 00000000 	 .4byte .LFB38
 8123 00ec 48000000 	 .4byte .LFE38-.LFB38
 8124 00f0 00000000 	 .4byte 0
 8125 00f4 00000000 	 .4byte 0
 8126              	 .section .debug_ranges,"",%progbits
 8127              	.Ldebug_ranges0:
 8128 0000 00000000 	 .4byte .LFB11
 8129 0004 DC000000 	 .4byte .LFE11
 8130 0008 00000000 	 .4byte .LFB12
 8131 000c B8000000 	 .4byte .LFE12
 8132 0010 00000000 	 .4byte .LFB13
 8133 0014 86000000 	 .4byte .LFE13
 8134 0018 00000000 	 .4byte .LFB14
 8135 001c 72000000 	 .4byte .LFE14
 8136 0020 00000000 	 .4byte .LFB15
 8137 0024 7C000000 	 .4byte .LFE15
 8138 0028 00000000 	 .4byte .LFB16
 8139 002c 84000000 	 .4byte .LFE16
 8140 0030 00000000 	 .4byte .LFB17
 8141 0034 44020000 	 .4byte .LFE17
 8142 0038 00000000 	 .4byte .LFB18
 8143 003c 3E010000 	 .4byte .LFE18
 8144 0040 00000000 	 .4byte .LFB19
 8145 0044 26010000 	 .4byte .LFE19
 8146 0048 00000000 	 .4byte .LFB20
 8147 004c 68020000 	 .4byte .LFE20
 8148 0050 00000000 	 .4byte .LFB21
 8149 0054 0C010000 	 .4byte .LFE21
 8150 0058 00000000 	 .4byte .LFB22
 8151 005c DC000000 	 .4byte .LFE22
 8152 0060 00000000 	 .4byte .LFB23
 8153 0064 3C000000 	 .4byte .LFE23
 8154 0068 00000000 	 .4byte .LFB24
 8155 006c 46000000 	 .4byte .LFE24
 8156 0070 00000000 	 .4byte .LFB25
 8157 0074 38000000 	 .4byte .LFE25
 8158 0078 00000000 	 .4byte .LFB26
 8159 007c 3C000000 	 .4byte .LFE26
 8160 0080 00000000 	 .4byte .LFB27
 8161 0084 18000000 	 .4byte .LFE27
 8162 0088 00000000 	 .4byte .LFB28
 8163 008c 1C000000 	 .4byte .LFE28
 8164 0090 00000000 	 .4byte .LFB29
 8165 0094 1A000000 	 .4byte .LFE29
 8166 0098 00000000 	 .4byte .LFB30
 8167 009c E2000000 	 .4byte .LFE30
 8168 00a0 00000000 	 .4byte .LFB31
 8169 00a4 4C000000 	 .4byte .LFE31
 8170 00a8 00000000 	 .4byte .LFB32
 8171 00ac BC000000 	 .4byte .LFE32
 8172 00b0 00000000 	 .4byte .LFB33
 8173 00b4 36000000 	 .4byte .LFE33
ARM GAS   			page 192


 8174 00b8 00000000 	 .4byte .LFB34
 8175 00bc 4E000000 	 .4byte .LFE34
 8176 00c0 00000000 	 .4byte .LFB35
 8177 00c4 3A000000 	 .4byte .LFE35
 8178 00c8 00000000 	 .4byte .LFB36
 8179 00cc 52000000 	 .4byte .LFE36
 8180 00d0 00000000 	 .4byte .LFB37
 8181 00d4 54000000 	 .4byte .LFE37
 8182 00d8 00000000 	 .4byte .LFB38
 8183 00dc 48000000 	 .4byte .LFE38
 8184 00e0 00000000 	 .4byte 0
 8185 00e4 00000000 	 .4byte 0
 8186              	 .section .debug_line,"",%progbits
 8187              	.Ldebug_line0:
 8188 0000 B4100000 	 .section .debug_str,"MS",%progbits,1
 8188      03003204 
 8188      00000201 
 8188      FB0E0D00 
 8188      01010101 
 8189              	.LASF37:
 8190 0000 67657465 	 .ascii "getenv\000"
 8190      6E7600
 8191              	.LASF74:
 8192 0007 75784E75 	 .ascii "uxNumberOfItems\000"
 8192      6D626572 
 8192      4F664974 
 8192      656D7300 
 8193              	.LASF164:
 8194 0017 72616E64 	 .ascii "rand\000"
 8194      00
 8195              	.LASF48:
 8196 001c 73797374 	 .ascii "system\000"
 8196      656D00
 8197              	.LASF6:
 8198 0023 5F5A5374 	 .ascii "_ZSt3divll\000"
 8198      33646976 
 8198      6C6C00
 8199              	.LASF131:
 8200 002e 78517565 	 .ascii "xQueueReceiveFromISR\000"
 8200      75655265 
 8200      63656976 
 8200      6546726F 
 8200      6D495352 
 8201              	.LASF90:
 8202 0043 78546173 	 .ascii "xTasksWaitingToReceive\000"
 8202      6B735761 
 8202      6974696E 
 8202      67546F52 
 8202      65636569 
 8203              	.LASF132:
 8204 005a 70784869 	 .ascii "pxHigherPriorityTaskWoken\000"
 8204      67686572 
 8204      5072696F 
 8204      72697479 
 8204      5461736B 
 8205              	.LASF148:
 8206 0074 70784D75 	 .ascii "pxMutex\000"
ARM GAS   			page 193


 8206      74657800 
 8207              	.LASF39:
 8208 007c 6D626C65 	 .ascii "mblen\000"
 8208      6E00
 8209              	.LASF8:
 8210 0082 756E7369 	 .ascii "unsigned int\000"
 8210      676E6564 
 8210      20696E74 
 8210      00
 8211              	.LASF75:
 8212 008f 7078496E 	 .ascii "pxIndex\000"
 8212      64657800 
 8213              	.LASF162:
 8214 0097 5F5F676E 	 .ascii "__gnu_cxx\000"
 8214      755F6378 
 8214      7800
 8215              	.LASF78:
 8216 00a1 7854494D 	 .ascii "xTIME_OUT\000"
 8216      455F4F55 
 8216      5400
 8217              	.LASF123:
 8218 00ab 76517565 	 .ascii "vQueueDelete\000"
 8218      75654465 
 8218      6C657465 
 8218      00
 8219              	.LASF70:
 8220 00b8 784C4953 	 .ascii "xLIST_ITEM\000"
 8220      545F4954 
 8220      454D00
 8221              	.LASF41:
 8222 00c3 77636861 	 .ascii "wchar_t\000"
 8222      725F7400 
 8223              	.LASF100:
 8224 00cb 51554555 	 .ascii "QUEUE_REGISTRY_ITEM\000"
 8224      455F5245 
 8224      47495354 
 8224      52595F49 
 8224      54454D00 
 8225              	.LASF121:
 8226 00df 76517565 	 .ascii "vQueueSetQueueNumber\000"
 8226      75655365 
 8226      74517565 
 8226      75654E75 
 8226      6D626572 
 8227              	.LASF129:
 8228 00f4 75785361 	 .ascii "uxSavedInterruptStatus\000"
 8228      76656449 
 8228      6E746572 
 8228      72757074 
 8228      53746174 
 8229              	.LASF7:
 8230 010b 5F5A4E39 	 .ascii "_ZN9__gnu_cxx3divExx\000"
 8230      5F5F676E 
 8230      755F6378 
 8230      78336469 
 8230      76457878 
 8231              	.LASF89:
ARM GAS   			page 194


 8232 0120 78546173 	 .ascii "xTasksWaitingToSend\000"
 8232      6B735761 
 8232      6974696E 
 8232      67546F53 
 8232      656E6400 
 8233              	.LASF54:
 8234 0134 73747274 	 .ascii "strtoull\000"
 8234      6F756C6C 
 8234      00
 8235              	.LASF79:
 8236 013d 784F7665 	 .ascii "xOverflowCount\000"
 8236      72666C6F 
 8236      77436F75 
 8236      6E7400
 8237              	.LASF161:
 8238 014c 433A5C55 	 .ascii "C:\\Users\\niels\\DOCUME~1\\ELEKTR~1\\JAAR2~1\\ECS\\"
 8238      73657273 
 8238      5C6E6965 
 8238      6C735C44 
 8238      4F43554D 
 8239 0179 4543534C 	 .ascii "ECSL\\software\\STM32\\PRACTI~1\\CLion\\Debug\\Free"
 8239      5C736F66 
 8239      74776172 
 8239      655C5354 
 8239      4D33325C 
 8240 01a6 52544F53 	 .ascii "RTOS\000"
 8240      00
 8241              	.LASF99:
 8242 01ab 51756575 	 .ascii "Queue_t\000"
 8242      655F7400 
 8243              	.LASF140:
 8244 01b3 78436F70 	 .ascii "xCopyPosition\000"
 8244      79506F73 
 8244      6974696F 
 8244      6E00
 8245              	.LASF125:
 8246 01c1 75785265 	 .ascii "uxReturn\000"
 8246      7475726E 
 8246      00
 8247              	.LASF104:
 8248 01ca 51756575 	 .ascii "QueueRegistryItem_t\000"
 8248      65526567 
 8248      69737472 
 8248      79497465 
 8248      6D5F7400 
 8249              	.LASF2:
 8250 01de 5F5A5374 	 .ascii "_ZSt3absd\000"
 8250      33616273 
 8250      6400
 8251              	.LASF0:
 8252 01e8 5F5A5374 	 .ascii "_ZSt3abse\000"
 8252      33616273 
 8252      6500
 8253              	.LASF1:
 8254 01f2 5F5A5374 	 .ascii "_ZSt3absf\000"
 8254      33616273 
 8254      6600
ARM GAS   			page 195


 8255              	.LASF4:
 8256 01fc 5F5A5374 	 .ascii "_ZSt3absl\000"
 8256      33616273 
 8256      6C00
 8257              	.LASF57:
 8258 0206 73747274 	 .ascii "strtold\000"
 8258      6F6C6400 
 8259              	.LASF105:
 8260 020e 76517565 	 .ascii "vQueueUnregisterQueue\000"
 8260      7565556E 
 8260      72656769 
 8260      73746572 
 8260      51756575 
 8261              	.LASF53:
 8262 0224 73747274 	 .ascii "strtoll\000"
 8262      6F6C6C00 
 8263              	.LASF60:
 8264 022c 75696E74 	 .ascii "uint32_t\000"
 8264      33325F74 
 8264      00
 8265              	.LASF3:
 8266 0235 5F5A5374 	 .ascii "_ZSt3absx\000"
 8266      33616273 
 8266      7800
 8267              	.LASF142:
 8268 023f 78596965 	 .ascii "xYieldRequired\000"
 8268      6C645265 
 8268      71756972 
 8268      656400
 8269              	.LASF42:
 8270 024e 6D62746F 	 .ascii "mbtowc\000"
 8270      776300
 8271              	.LASF157:
 8272 0255 756C4F72 	 .ascii "ulOriginalBASEPRI\000"
 8272      6967696E 
 8272      616C4241 
 8272      53455052 
 8272      4900
 8273              	.LASF107:
 8274 0267 78517565 	 .ascii "xQueue\000"
 8274      756500
 8275              	.LASF56:
 8276 026e 666C6F61 	 .ascii "float\000"
 8276      7400
 8277              	.LASF151:
 8278 0274 70784E65 	 .ascii "pxNewQueue\000"
 8278      77517565 
 8278      756500
 8279              	.LASF83:
 8280 027f 51756575 	 .ascii "QueueDefinition\000"
 8280      65446566 
 8280      696E6974 
 8280      696F6E00 
 8281              	.LASF133:
 8282 028f 78517565 	 .ascii "xQueueGenericReceive\000"
 8282      75654765 
 8282      6E657269 
ARM GAS   			page 196


 8282      63526563 
 8282      65697665 
 8283              	.LASF21:
 8284 02a4 6C6F6E67 	 .ascii "long long unsigned int\000"
 8284      206C6F6E 
 8284      6720756E 
 8284      7369676E 
 8284      65642069 
 8285              	.LASF113:
 8286 02bb 70727649 	 .ascii "prvIsQueueEmpty\000"
 8286      73517565 
 8286      7565456D 
 8286      70747900 
 8287              	.LASF116:
 8288 02cb 70764275 	 .ascii "pvBuffer\000"
 8288      66666572 
 8288      00
 8289              	.LASF66:
 8290 02d4 70785072 	 .ascii "pxPrevious\000"
 8290      6576696F 
 8290      757300
 8291              	.LASF50:
 8292 02df 7763746F 	 .ascii "wctomb\000"
 8292      6D6200
 8293              	.LASF91:
 8294 02e6 75784D65 	 .ascii "uxMessagesWaiting\000"
 8294      73736167 
 8294      65735761 
 8294      6974696E 
 8294      6700
 8295              	.LASF51:
 8296 02f8 6C6C6469 	 .ascii "lldiv\000"
 8296      7600
 8297              	.LASF52:
 8298 02fe 61746F6C 	 .ascii "atoll\000"
 8298      6C00
 8299              	.LASF136:
 8300 0304 78456E74 	 .ascii "xEntryTimeSet\000"
 8300      72795469 
 8300      6D655365 
 8300      7400
 8301              	.LASF11:
 8302 0312 73697A65 	 .ascii "size_t\000"
 8302      5F7400
 8303              	.LASF45:
 8304 0319 73747274 	 .ascii "strtod\000"
 8304      6F6400
 8305              	.LASF137:
 8306 0320 7854696D 	 .ascii "xTimeOut\000"
 8306      654F7574 
 8306      00
 8307              	.LASF44:
 8308 0329 7372616E 	 .ascii "srand\000"
 8308      6400
 8309              	.LASF102:
 8310 032f 7848616E 	 .ascii "xHandle\000"
 8310      646C6500 
ARM GAS   			page 197


 8311              	.LASF101:
 8312 0337 70635175 	 .ascii "pcQueueName\000"
 8312      6575654E 
 8312      616D6500 
 8313              	.LASF71:
 8314 0343 784D494E 	 .ascii "xMINI_LIST_ITEM\000"
 8314      495F4C49 
 8314      53545F49 
 8314      54454D00 
 8315              	.LASF36:
 8316 0353 62736561 	 .ascii "bsearch\000"
 8316      72636800 
 8317              	.LASF73:
 8318 035b 784C4953 	 .ascii "xLIST\000"
 8318      5400
 8319              	.LASF139:
 8320 0361 78517565 	 .ascii "xQueueGenericSendFromISR\000"
 8320      75654765 
 8320      6E657269 
 8320      6353656E 
 8320      6446726F 
 8321              	.LASF166:
 8322 037a 76506F72 	 .ascii "vPortSetBASEPRI\000"
 8322      74536574 
 8322      42415345 
 8322      50524900 
 8323              	.LASF84:
 8324 038a 70635265 	 .ascii "pcReadFrom\000"
 8324      61644672 
 8324      6F6D00
 8325              	.LASF117:
 8326 0395 70727643 	 .ascii "prvCopyDataToQueue\000"
 8326      6F707944 
 8326      61746154 
 8326      6F517565 
 8326      756500
 8327              	.LASF126:
 8328 03a8 75785175 	 .ascii "uxQueueSpacesAvailable\000"
 8328      65756553 
 8328      70616365 
 8328      73417661 
 8328      696C6162 
 8329              	.LASF141:
 8330 03bf 78517565 	 .ascii "xQueueGenericSend\000"
 8330      75654765 
 8330      6E657269 
 8330      6353656E 
 8330      6400
 8331              	.LASF58:
 8332 03d1 696E7438 	 .ascii "int8_t\000"
 8332      5F7400
 8333              	.LASF145:
 8334 03d8 7578496E 	 .ascii "uxInitialCount\000"
 8334      69746961 
 8334      6C436F75 
 8334      6E7400
 8335              	.LASF22:
ARM GAS   			page 198


 8336 03e7 63686172 	 .ascii "char\000"
 8336      00
 8337              	.LASF69:
 8338 03ec 4C697374 	 .ascii "ListItem_t\000"
 8338      4974656D 
 8338      5F7400
 8339              	.LASF25:
 8340 03f7 35646976 	 .ascii "5div_t\000"
 8340      5F7400
 8341              	.LASF158:
 8342 03fe 756C4E65 	 .ascii "ulNewBASEPRI\000"
 8342      77424153 
 8342      45505249 
 8342      00
 8343              	.LASF62:
 8344 040b 55426173 	 .ascii "UBaseType_t\000"
 8344      65547970 
 8344      655F7400 
 8345              	.LASF138:
 8346 0417 78517565 	 .ascii "xQueueGiveFromISR\000"
 8346      75654769 
 8346      76654672 
 8346      6F6D4953 
 8346      5200
 8347              	.LASF165:
 8348 0429 78517565 	 .ascii "xQueueRegistry\000"
 8348      75655265 
 8348      67697374 
 8348      727900
 8349              	.LASF82:
 8350 0438 51756575 	 .ascii "QueueHandle_t\000"
 8350      6548616E 
 8350      646C655F 
 8350      7400
 8351              	.LASF76:
 8352 0446 784C6973 	 .ascii "xListEnd\000"
 8352      74456E64 
 8352      00
 8353              	.LASF124:
 8354 044f 75785175 	 .ascii "uxQueueMessagesWaitingFromISR\000"
 8354      6575654D 
 8354      65737361 
 8354      67657357 
 8354      61697469 
 8355              	.LASF72:
 8356 046d 4D696E69 	 .ascii "MiniListItem_t\000"
 8356      4C697374 
 8356      4974656D 
 8356      5F7400
 8357              	.LASF59:
 8358 047c 75696E74 	 .ascii "uint8_t\000"
 8358      385F7400 
 8359              	.LASF103:
 8360 0484 78517565 	 .ascii "xQueueRegistryItem\000"
 8360      75655265 
 8360      67697374 
 8360      72794974 
ARM GAS   			page 199


 8360      656D00
 8361              	.LASF23:
 8362 0497 71756F74 	 .ascii "quot\000"
 8362      00
 8363              	.LASF152:
 8364 049c 78517565 	 .ascii "xQueueGenericCreate\000"
 8364      75654765 
 8364      6E657269 
 8364      63437265 
 8364      61746500 
 8365              	.LASF150:
 8366 04b0 78517565 	 .ascii "xQueueCreateMutex\000"
 8366      75654372 
 8366      65617465 
 8366      4D757465 
 8366      7800
 8367              	.LASF40:
 8368 04c2 6D627374 	 .ascii "mbstowcs\000"
 8368      6F776373 
 8368      00
 8369              	.LASF168:
 8370 04cb 756C506F 	 .ascii "ulPortRaiseBASEPRI\000"
 8370      72745261 
 8370      69736542 
 8370      41534550 
 8370      524900
 8371              	.LASF9:
 8372 04de 6C6F6E67 	 .ascii "long long int\000"
 8372      206C6F6E 
 8372      6720696E 
 8372      7400
 8373              	.LASF112:
 8374 04ec 70727649 	 .ascii "prvIsQueueFull\000"
 8374      73517565 
 8374      75654675 
 8374      6C6C00
 8375              	.LASF160:
 8376 04fb 433A5C55 	 .ascii "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar "
 8376      73657273 
 8376      5C6E6965 
 8376      6C735C44 
 8376      6F63756D 
 8377 0529 325C4543 	 .ascii "2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gem"
 8377      535C4543 
 8377      534C5C73 
 8377      6F667477 
 8377      6172655C 
 8378 0555 65656E73 	 .ascii "eenschappelijk\\Third_Party\\FreeRTOS\\Source\\queu"
 8378      63686170 
 8378      70656C69 
 8378      6A6B5C54 
 8378      68697264 
 8379 0584 652E6300 	 .ascii "e.c\000"
 8380              	.LASF159:
 8381 0588 474E5520 	 .ascii "GNU C++14 10.3.1 20210824 (release) -mcpu=cortex-m4"
 8381      432B2B31 
 8381      34203130 
ARM GAS   			page 200


 8381      2E332E31 
 8381      20323032 
 8382 05bb 202D6D66 	 .ascii " -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mfix-cortex-m3"
 8382      6C6F6174 
 8382      2D616269 
 8382      3D686172 
 8382      64202D6D 
 8383 05ee 2D6C6472 	 .ascii "-ldrd -mthumb -mno-unaligned-access -mapcs-frame -m"
 8383      64202D6D 
 8383      7468756D 
 8383      62202D6D 
 8383      6E6F2D75 
 8384 0621 61726368 	 .ascii "arch=armv7e-m+fp -g -g -O0 -fsingle-precision-const"
 8384      3D61726D 
 8384      7637652D 
 8384      6D2B6670 
 8384      202D6720 
 8385 0654 616E7420 	 .ascii "ant -funsigned-char -ffunction-sections -fdata-sect"
 8385      2D66756E 
 8385      7369676E 
 8385      65642D63 
 8385      68617220 
 8386 0687 696F6E73 	 .ascii "ions\000"
 8386      00
 8387              	.LASF61:
 8388 068c 42617365 	 .ascii "BaseType_t\000"
 8388      54797065 
 8388      5F7400
 8389              	.LASF5:
 8390 0697 5F5F6378 	 .ascii "__cxx11\000"
 8390      78313100 
 8391              	.LASF147:
 8392 069f 784D7574 	 .ascii "xMutex\000"
 8392      657800
 8393              	.LASF80:
 8394 06a6 7854696D 	 .ascii "xTimeOnEntering\000"
 8394      654F6E45 
 8394      6E746572 
 8394      696E6700 
 8395              	.LASF106:
 8396 06b6 76517565 	 .ascii "vQueueAddToRegistry\000"
 8396      75654164 
 8396      64546F52 
 8396      65676973 
 8396      74727900 
 8397              	.LASF120:
 8398 06ca 75635175 	 .ascii "ucQueueGetQueueType\000"
 8398      65756547 
 8398      65745175 
 8398      65756554 
 8398      79706500 
 8399              	.LASF65:
 8400 06de 70784E65 	 .ascii "pxNext\000"
 8400      787400
 8401              	.LASF38:
 8402 06e5 6C646976 	 .ascii "ldiv\000"
 8402      00
ARM GAS   			page 201


 8403              	.LASF156:
 8404 06ea 784E6577 	 .ascii "xNewQueue\000"
 8404      51756575 
 8404      6500
 8405              	.LASF30:
 8406 06f4 5F5F636F 	 .ascii "__compar_fn_t\000"
 8406      6D706172 
 8406      5F666E5F 
 8406      7400
 8407              	.LASF144:
 8408 0702 75784D61 	 .ascii "uxMaxCount\000"
 8408      78436F75 
 8408      6E7400
 8409              	.LASF81:
 8410 070d 54696D65 	 .ascii "TimeOut_t\000"
 8410      4F75745F 
 8410      7400
 8411              	.LASF130:
 8412 0717 70634F72 	 .ascii "pcOriginalReadPosition\000"
 8412      6967696E 
 8412      616C5265 
 8412      6164506F 
 8412      73697469 
 8413              	.LASF167:
 8414 072e 756C4E65 	 .ascii "ulNewMaskValue\000"
 8414      774D6173 
 8414      6B56616C 
 8414      756500
 8415              	.LASF97:
 8416 073d 75635175 	 .ascii "ucQueueType\000"
 8416      65756554 
 8416      79706500 
 8417              	.LASF135:
 8418 0749 784A7573 	 .ascii "xJustPeeking\000"
 8418      74506565 
 8418      6B696E67 
 8418      00
 8419              	.LASF77:
 8420 0756 4C697374 	 .ascii "List_t\000"
 8420      5F7400
 8421              	.LASF88:
 8422 075d 70635772 	 .ascii "pcWriteTo\000"
 8422      69746554 
 8422      6F00
 8423              	.LASF63:
 8424 0767 5469636B 	 .ascii "TickType_t\000"
 8424      54797065 
 8424      5F7400
 8425              	.LASF12:
 8426 0772 5F5F696E 	 .ascii "__int8_t\000"
 8426      74385F74 
 8426      00
 8427              	.LASF122:
 8428 077b 75785175 	 .ascii "uxQueueGetQueueNumber\000"
 8428      65756547 
 8428      65745175 
 8428      6575654E 
ARM GAS   			page 202


 8428      756D6265 
 8429              	.LASF153:
 8430 0791 75785175 	 .ascii "uxQueueLength\000"
 8430      6575654C 
 8430      656E6774 
 8430      6800
 8431              	.LASF10:
 8432 079f 6C6F6E67 	 .ascii "long double\000"
 8432      20646F75 
 8432      626C6500 
 8433              	.LASF146:
 8434 07ab 78517565 	 .ascii "xQueueTakeMutexRecursive\000"
 8434      75655461 
 8434      6B654D75 
 8434      74657852 
 8434      65637572 
 8435              	.LASF68:
 8436 07c4 7076436F 	 .ascii "pvContainer\000"
 8436      6E746169 
 8436      6E657200 
 8437              	.LASF92:
 8438 07d0 75784C65 	 .ascii "uxLength\000"
 8438      6E677468 
 8438      00
 8439              	.LASF96:
 8440 07d9 75785175 	 .ascii "uxQueueNumber\000"
 8440      6575654E 
 8440      756D6265 
 8440      7200
 8441              	.LASF16:
 8442 07e7 73686F72 	 .ascii "short int\000"
 8442      7420696E 
 8442      7400
 8443              	.LASF64:
 8444 07f1 78497465 	 .ascii "xItemValue\000"
 8444      6D56616C 
 8444      756500
 8445              	.LASF18:
 8446 07fc 6C6F6E67 	 .ascii "long int\000"
 8446      20696E74 
 8446      00
 8447              	.LASF154:
 8448 0805 78517565 	 .ascii "xQueueSizeInBytes\000"
 8448      75655369 
 8448      7A65496E 
 8448      42797465 
 8448      7300
 8449              	.LASF31:
 8450 0817 61746578 	 .ascii "atexit\000"
 8450      697400
 8451              	.LASF94:
 8452 081e 7852784C 	 .ascii "xRxLock\000"
 8452      6F636B00 
 8453              	.LASF98:
 8454 0826 78515545 	 .ascii "xQUEUE\000"
 8454      554500
 8455              	.LASF118:
ARM GAS   			page 203


 8456 082d 70764974 	 .ascii "pvItemToQueue\000"
 8456      656D546F 
 8456      51756575 
 8456      6500
 8457              	.LASF110:
 8458 083b 78517565 	 .ascii "xQueueIsQueueFullFromISR\000"
 8458      75654973 
 8458      51756575 
 8458      6546756C 
 8458      6C46726F 
 8459              	.LASF127:
 8460 0854 75785175 	 .ascii "uxQueueMessagesWaiting\000"
 8460      6575654D 
 8460      65737361 
 8460      67657357 
 8460      61697469 
 8461              	.LASF27:
 8462 086b 6C646976 	 .ascii "ldiv_t\000"
 8462      5F7400
 8463              	.LASF87:
 8464 0872 70635461 	 .ascii "pcTail\000"
 8464      696C00
 8465              	.LASF134:
 8466 0879 78546963 	 .ascii "xTicksToWait\000"
 8466      6B73546F 
 8466      57616974 
 8466      00
 8467              	.LASF14:
 8468 0886 5F5F7569 	 .ascii "__uint8_t\000"
 8468      6E74385F 
 8468      7400
 8469              	.LASF109:
 8470 0890 70785175 	 .ascii "pxQueue\000"
 8470      65756500 
 8471              	.LASF108:
 8472 0898 78526574 	 .ascii "xReturn\000"
 8472      75726E00 
 8473              	.LASF47:
 8474 08a0 73747274 	 .ascii "strtoul\000"
 8474      6F756C00 
 8475              	.LASF20:
 8476 08a8 6C6F6E67 	 .ascii "long unsigned int\000"
 8476      20756E73 
 8476      69676E65 
 8476      6420696E 
 8476      7400
 8477              	.LASF169:
 8478 08ba 76506F72 	 .ascii "vPortRaiseBASEPRI\000"
 8478      74526169 
 8478      73654241 
 8478      53455052 
 8478      4900
 8479              	.LASF85:
 8480 08cc 75785265 	 .ascii "uxRecursiveCallCount\000"
 8480      63757273 
 8480      69766543 
 8480      616C6C43 
ARM GAS   			page 204


 8480      6F756E74 
 8481              	.LASF128:
 8482 08e1 78517565 	 .ascii "xQueuePeekFromISR\000"
 8482      75655065 
 8482      656B4672 
 8482      6F6D4953 
 8482      5200
 8483              	.LASF24:
 8484 08f3 6469765F 	 .ascii "div_t\000"
 8484      7400
 8485              	.LASF15:
 8486 08f9 756E7369 	 .ascii "unsigned char\000"
 8486      676E6564 
 8486      20636861 
 8486      7200
 8487              	.LASF19:
 8488 0907 5F5F7569 	 .ascii "__uint32_t\000"
 8488      6E743332 
 8488      5F7400
 8489              	.LASF115:
 8490 0912 70727643 	 .ascii "prvCopyDataFromQueue\000"
 8490      6F707944 
 8490      61746146 
 8490      726F6D51 
 8490      75657565 
 8491              	.LASF163:
 8492 0927 6465636C 	 .ascii "decltype(nullptr)\000"
 8492      74797065 
 8492      286E756C 
 8492      6C707472 
 8492      2900
 8493              	.LASF55:
 8494 0939 73747274 	 .ascii "strtof\000"
 8494      6F6600
 8495              	.LASF49:
 8496 0940 77637374 	 .ascii "wcstombs\000"
 8496      6F6D6273 
 8496      00
 8497              	.LASF46:
 8498 0949 73747274 	 .ascii "strtol\000"
 8498      6F6C00
 8499              	.LASF67:
 8500 0950 70764F77 	 .ascii "pvOwner\000"
 8500      6E657200 
 8501              	.LASF86:
 8502 0958 70634865 	 .ascii "pcHead\000"
 8502      616400
 8503              	.LASF95:
 8504 095f 7854784C 	 .ascii "xTxLock\000"
 8504      6F636B00 
 8505              	.LASF26:
 8506 0967 366C6469 	 .ascii "6ldiv_t\000"
 8506      765F7400 
 8507              	.LASF149:
 8508 096f 78517565 	 .ascii "xQueueGiveMutexRecursive\000"
 8508      75654769 
 8508      76654D75 
ARM GAS   			page 205


 8508      74657852 
 8508      65637572 
 8509              	.LASF114:
 8510 0988 70727655 	 .ascii "prvUnlockQueue\000"
 8510      6E6C6F63 
 8510      6B517565 
 8510      756500
 8511              	.LASF28:
 8512 0997 376C6C64 	 .ascii "7lldiv_t\000"
 8512      69765F74 
 8512      00
 8513              	.LASF155:
 8514 09a0 78517565 	 .ascii "xQueueGenericReset\000"
 8514      75654765 
 8514      6E657269 
 8514      63526573 
 8514      657400
 8515              	.LASF111:
 8516 09b3 78517565 	 .ascii "xQueueIsQueueEmptyFromISR\000"
 8516      75654973 
 8516      51756575 
 8516      65456D70 
 8516      74794672 
 8517              	.LASF13:
 8518 09cd 7369676E 	 .ascii "signed char\000"
 8518      65642063 
 8518      68617200 
 8519              	.LASF17:
 8520 09d9 73686F72 	 .ascii "short unsigned int\000"
 8520      7420756E 
 8520      7369676E 
 8520      65642069 
 8520      6E7400
 8521              	.LASF29:
 8522 09ec 6C6C6469 	 .ascii "lldiv_t\000"
 8522      765F7400 
 8523              	.LASF32:
 8524 09f4 61746F66 	 .ascii "atof\000"
 8524      00
 8525              	.LASF34:
 8526 09f9 61746F69 	 .ascii "atoi\000"
 8526      00
 8527              	.LASF35:
 8528 09fe 61746F6C 	 .ascii "atol\000"
 8528      00
 8529              	.LASF33:
 8530 0a03 646F7562 	 .ascii "double\000"
 8530      6C6500
 8531              	.LASF119:
 8532 0a0a 78506F73 	 .ascii "xPosition\000"
 8532      6974696F 
 8532      6E00
 8533              	.LASF93:
 8534 0a14 75784974 	 .ascii "uxItemSize\000"
 8534      656D5369 
 8534      7A6500
 8535              	.LASF143:
ARM GAS   			page 206


 8536 0a1f 78517565 	 .ascii "xQueueCreateCountingSemaphore\000"
 8536      75654372 
 8536      65617465 
 8536      436F756E 
 8536      74696E67 
 8537              	.LASF43:
 8538 0a3d 71736F72 	 .ascii "qsort\000"
 8538      7400
 8539              	 .ident "GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
