ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .arch armv7e-m
   3              	 .fpu fpv4-sp-d16
   4              	 .eabi_attribute 27,1
   5              	 .eabi_attribute 28,1
   6              	 .eabi_attribute 20,1
   7              	 .eabi_attribute 21,1
   8              	 .eabi_attribute 23,3
   9              	 .eabi_attribute 24,1
  10              	 .eabi_attribute 25,1
  11              	 .eabi_attribute 26,1
  12              	 .eabi_attribute 30,6
  13              	 .eabi_attribute 34,0
  14              	 .eabi_attribute 18,4
  15              	 .file "port.cpp"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .data._ZL17uxCriticalNesting,"aw"
  20              	 .align 2
  21              	 .type _ZL17uxCriticalNesting,%object
  22              	 .size _ZL17uxCriticalNesting,4
  23              	_ZL17uxCriticalNesting:
  24 0000 AAAAAAAA 	 .word -1431655766
  25              	 .section .bss._ZL20ucMaxSysCallPriority,"aw",%nobits
  26              	 .type _ZL20ucMaxSysCallPriority,%object
  27              	 .size _ZL20ucMaxSysCallPriority,1
  28              	_ZL20ucMaxSysCallPriority:
  29 0000 00       	 .space 1
  30              	 .section .bss._ZL18ulMaxPRIGROUPValue,"aw",%nobits
  31              	 .align 2
  32              	 .type _ZL18ulMaxPRIGROUPValue,%object
  33              	 .size _ZL18ulMaxPRIGROUPValue,4
  34              	_ZL18ulMaxPRIGROUPValue:
  35 0000 00000000 	 .space 4
  36              	 .section .rodata._ZL28pcInterruptPriorityRegisters,"a"
  37              	 .align 2
  38              	 .type _ZL28pcInterruptPriorityRegisters,%object
  39              	 .size _ZL28pcInterruptPriorityRegisters,4
  40              	_ZL28pcInterruptPriorityRegisters:
  41 0000 F0E300E0 	 .word -536812560
  42              	 .section .text.pxPortInitialiseStack,"ax",%progbits
  43              	 .align 1
  44              	 .global pxPortInitialiseStack
  45              	 .syntax unified
  46              	 .thumb
  47              	 .thumb_func
  48              	 .type pxPortInitialiseStack,%function
  49              	pxPortInitialiseStack:
  50              	.LFB4:
  51              	 .file 1 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gemeenschappelijk\\Third_Party\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM4F\\port.cpp"
   1:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
   2:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     All rights reserved
   4:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
   5:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
ARM GAS   			page 2


   7:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     This file is part of the FreeRTOS distribution.
   8:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
   9:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  13:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     ***************************************************************************
  14:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     ***************************************************************************
  19:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  20:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     link: http://www.freertos.org/a00114.html
  24:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  25:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     ***************************************************************************
  26:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *                                                                       *
  27:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    platform software that is more than just the market leader, it     *
  30:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    is the industry's de facto standard.                               *
  31:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *                                                                       *
  32:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    tutorial book, reference manual, or both:                          *
  35:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****      *                                                                       *
  37:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     ***************************************************************************
  38:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  39:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     defined configASSERT()?
  42:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  43:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     embedded software for free we request you assist our global community by
  45:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     participating in the support forum.
  46:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  47:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     be as productive as possible as early as possible.  Now you can receive
  49:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  52:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  56:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  59:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  63:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
ARM GAS   			page 3


  64:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     engineered and independently SIL3 certified version for use in safety and
  65:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     mission critical applications that require provable dependability.
  66:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  67:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****     1 tab == 4 spaces!
  68:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** */
  69:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  70:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------
  71:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Implementation of functions defined in portable.h for the ARM CM4F port.
  72:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  *----------------------------------------------------------*/
  73:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  74:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Scheduler includes. */
  75:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #include "FreeRTOS.h"
  76:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #include "task.h"
  77:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  78:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #ifndef __VFP_FP__
  79:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#error This port can only be used when the project options are configured to enable hardware float
  80:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif
  81:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  82:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #ifndef configSYSTICK_CLOCK_HZ
  83:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#define configSYSTICK_CLOCK_HZ configCPU_CLOCK_HZ
  84:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Ensure the SysTick is clocked at the same frequency as the core. */
  85:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#define portNVIC_SYSTICK_CLK_BIT	( 1UL << 2UL )
  86:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #else
  87:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* The way the SysTick is clocked is not modified in case it is not the same
  88:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	as the core. */
  89:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#define portNVIC_SYSTICK_CLK_BIT	( 0 )
  90:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif
  91:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
  92:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Constants required to manipulate the core.  Registers first... */
  93:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_CTRL_REG			( * ( ( volatile uint32_t * ) 0xe000e010 ) )
  94:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_LOAD_REG			( * ( ( volatile uint32_t * ) 0xe000e014 ) )
  95:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG	( * ( ( volatile uint32_t * ) 0xe000e018 ) )
  96:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSPRI2_REG				( * ( ( volatile uint32_t * ) 0xe000ed20 ) )
  97:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* ...then bits in the registers. */
  98:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_INT_BIT			( 1UL << 1UL )
  99:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_ENABLE_BIT			( 1UL << 0UL )
 100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT		( 1UL << 16UL )
 101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_PENDSVCLEAR_BIT 			( 1UL << 27UL )
 102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT		( 1UL << 25UL )
 103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
 105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** r0p1 port. */
 106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portCPUID							( * ( ( volatile uint32_t * ) 0xE000ed00 ) )
 107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portCORTEX_M7_r0p1_ID				( 0x410FC271UL )
 108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portCORTEX_M7_r0p0_ID				( 0x410FC270UL )
 109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_PENDSV_PRI					( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 16UL )
 111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_SYSTICK_PRI				( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) << 24UL )
 112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Constants required to check the validity of an interrupt priority. */
 114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portFIRST_USER_INTERRUPT_NUMBER		( 16 )
 115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portNVIC_IP_REGISTERS_OFFSET_16 	( 0xE000E3F0 )
 116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portAIRCR_REG						( * ( ( volatile uint32_t * ) 0xE000ED0C ) )
 117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portMAX_8_BIT_VALUE					( ( uint8_t ) 0xff )
 118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portTOP_BIT_OF_BYTE					( ( uint8_t ) 0x80 )
 119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portMAX_PRIGROUP_BITS				( ( uint8_t ) 7 )
 120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portPRIORITY_GROUP_MASK				( 0x07UL << 8UL )
ARM GAS   			page 4


 121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portPRIGROUP_SHIFT					( 8UL )
 122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
 124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portVECTACTIVE_MASK					( 0xFFUL )
 125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Constants required to manipulate the VFP. */
 127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portFPCCR							( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating point context control re
 128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portASPEN_AND_LSPEN_BITS			( 0x3UL << 30UL )
 129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Constants required to set up the initial stack. */
 131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portINITIAL_XPSR					( 0x01000000 )
 132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portINITIAL_EXEC_RETURN				( 0xfffffffd )
 133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* The systick is a 24-bit counter. */
 135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portMAX_24_BIT_NUMBER				( 0xffffffUL )
 136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* A fiddle factor to estimate the number of SysTick counts that would have
 138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** occurred while the SysTick counter is stopped during tickless idle
 139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** calculations. */
 140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #define portMISSED_COUNTS_FACTOR			( 45UL )
 141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Let the user override the pre-loading of the initial LR with the address of
 143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** prvTaskExitError() in case it messes up unwinding of the stack in the
 144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** debugger. */
 145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #ifdef configTASK_RETURN_ADDRESS
 146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#define portTASK_RETURN_ADDRESS	configTASK_RETURN_ADDRESS
 147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #else
 148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#define portTASK_RETURN_ADDRESS	prvTaskExitError
 149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif
 150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* Each task maintains its own interrupt status in the critical nesting
 152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** variable. */
 153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * file is weak to allow application writers to change the timer used to
 158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * generate the tick interrupt.
 159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void vPortSetupTimerInterrupt( void );
 161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Exception handlers.
 164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** extern "C" void xPortPendSVHandler( void ) __attribute__ (( naked ));
 167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** extern "C" void xPortSysTickHandler( void );
 168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** extern "C" void vPortSVCHandler( void ) __attribute__ (( naked ));
 169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Start first task is a separate function so it can be tested in isolation.
 173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static void prvPortStartFirstTask( void ) __attribute__ (( naked ));
 175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Function to enable the VFP.
ARM GAS   			page 5


 178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  static void vPortEnableVFP( void ) __attribute__ (( naked ));
 180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Used to catch tasks that attempt to return from their implementing function.
 183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static void prvTaskExitError( void );
 185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * The number of SysTick increments that make up one tick period.
 190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if configUSE_TICKLESS_IDLE == 1
 192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	static uint32_t ulTimerCountsForOneTick = 0;
 193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif /* configUSE_TICKLESS_IDLE */
 194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * The maximum number of tick periods that can be suppressed is limited by the
 197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * 24 bit resolution of the SysTick timer.
 198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if configUSE_TICKLESS_IDLE == 1
 200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	static uint32_t xMaximumPossibleSuppressedTicks = 0;
 201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif /* configUSE_TICKLESS_IDLE */
 202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * power functionality only.
 206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if configUSE_TICKLESS_IDLE == 1
 208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	static uint32_t ulStoppedTimerCompensation = 0;
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif /* configUSE_TICKLESS_IDLE */
 210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if ( configASSERT_DEFINED == 1 )
 217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	 static uint8_t ucMaxSysCallPriority = 0;
 218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	 static uint32_t ulMaxPRIGROUPValue = 0;
 219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	 static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t * c
 220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif /* configASSERT_DEFINED */
 221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * See header file for description.
 226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParam
 228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
  52              	 .loc 1 228 1
  53              	 .cfi_startproc
  54              	 
  55              	 
  56              	 
  57 0000 80B4     	 push {r7}
ARM GAS   			page 6


  58              	 .cfi_def_cfa_offset 4
  59              	 .cfi_offset 7,-4
  60 0002 85B0     	 sub sp,sp,#20
  61              	 .cfi_def_cfa_offset 24
  62 0004 00AF     	 add r7,sp,#0
  63              	 .cfi_def_cfa_register 7
  64 0006 F860     	 str r0,[r7,#12]
  65 0008 B960     	 str r1,[r7,#8]
  66 000a 7A60     	 str r2,[r7,#4]
 229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Simulate the stack frame as it would be created by a context switch
 230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	interrupt. */
 231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Offset added to account for the way the MCU uses the stack on entry/exit
 233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	of interrupts, and to ensure alignment. */
 234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack--;
  67              	 .loc 1 234 14
  68 000c FB68     	 ldr r3,[r7,#12]
  69 000e 043B     	 subs r3,r3,#4
  70 0010 FB60     	 str r3,[r7,#12]
 235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
  71              	 .loc 1 236 16
  72 0012 FB68     	 ldr r3,[r7,#12]
  73 0014 4FF08072 	 mov r2,#16777216
  74 0018 1A60     	 str r2,[r3]
 237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack--;
  75              	 .loc 1 237 14
  76 001a FB68     	 ldr r3,[r7,#12]
  77 001c 043B     	 subs r3,r3,#4
  78 001e FB60     	 str r3,[r7,#12]
 238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*pxTopOfStack = ( StackType_t ) pxCode;	/* PC */
  79              	 .loc 1 238 16
  80 0020 BA68     	 ldr r2,[r7,#8]
  81 0022 FB68     	 ldr r3,[r7,#12]
  82 0024 1A60     	 str r2,[r3]
 239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack--;
  83              	 .loc 1 239 14
  84 0026 FB68     	 ldr r3,[r7,#12]
  85 0028 043B     	 subs r3,r3,#4
  86 002a FB60     	 str r3,[r7,#12]
 240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
  87              	 .loc 1 240 16
  88 002c 0C4A     	 ldr r2,.L3
  89 002e FB68     	 ldr r3,[r7,#12]
  90 0030 1A60     	 str r2,[r3]
 241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Save code space by skipping register initialisation. */
 243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack -= 5;	/* R12, R3, R2 and R1. */
  91              	 .loc 1 243 15
  92 0032 FB68     	 ldr r3,[r7,#12]
  93 0034 143B     	 subs r3,r3,#20
  94 0036 FB60     	 str r3,[r7,#12]
 244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
  95              	 .loc 1 244 16
  96 0038 7A68     	 ldr r2,[r7,#4]
  97 003a FB68     	 ldr r3,[r7,#12]
  98 003c 1A60     	 str r2,[r3]
ARM GAS   			page 7


 245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* A save method is being used that requires each task to maintain its
 247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	own exec return value. */
 248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack--;
  99              	 .loc 1 248 14
 100 003e FB68     	 ldr r3,[r7,#12]
 101 0040 043B     	 subs r3,r3,#4
 102 0042 FB60     	 str r3,[r7,#12]
 249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*pxTopOfStack = portINITIAL_EXEC_RETURN;
 103              	 .loc 1 249 16
 104 0044 FB68     	 ldr r3,[r7,#12]
 105 0046 6FF00202 	 mvn r2,#2
 106 004a 1A60     	 str r2,[r3]
 250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	pxTopOfStack -= 8;	/* R11, R10, R9, R8, R7, R6, R5 and R4. */
 107              	 .loc 1 251 15
 108 004c FB68     	 ldr r3,[r7,#12]
 109 004e 203B     	 subs r3,r3,#32
 110 0050 FB60     	 str r3,[r7,#12]
 252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	return pxTopOfStack;
 111              	 .loc 1 253 9
 112 0052 FB68     	 ldr r3,[r7,#12]
 254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 113              	 .loc 1 254 1
 114 0054 1846     	 mov r0,r3
 115 0056 1437     	 adds r7,r7,#20
 116              	 .cfi_def_cfa_offset 4
 117 0058 BD46     	 mov sp,r7
 118              	 .cfi_def_cfa_register 13
 119              	 
 120 005a 5DF8047B 	 ldr r7,[sp],#4
 121              	 .cfi_restore 7
 122              	 .cfi_def_cfa_offset 0
 123 005e 7047     	 bx lr
 124              	.L4:
 125              	 .align 2
 126              	.L3:
 127 0060 00000000 	 .word _ZL16prvTaskExitErrorv
 128              	 .cfi_endproc
 129              	.LFE4:
 130              	 .size pxPortInitialiseStack,.-pxPortInitialiseStack
 131              	 .section .text._ZL16prvTaskExitErrorv,"ax",%progbits
 132              	 .align 1
 133              	 .syntax unified
 134              	 .thumb
 135              	 .thumb_func
 136              	 .type _ZL16prvTaskExitErrorv,%function
 137              	_ZL16prvTaskExitErrorv:
 138              	.LFB5:
 255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static void prvTaskExitError( void )
 258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 139              	 .loc 1 258 1
 140              	 .cfi_startproc
 141              	 
ARM GAS   			page 8


 142              	 
 143              	 
 144 0000 80B4     	 push {r7}
 145              	 .cfi_def_cfa_offset 4
 146              	 .cfi_offset 7,-4
 147 0002 83B0     	 sub sp,sp,#12
 148              	 .cfi_def_cfa_offset 16
 149 0004 00AF     	 add r7,sp,#0
 150              	 .cfi_def_cfa_register 7
 259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* A function that implements a task must not exit or attempt to return to
 260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	its caller as there is nothing to return to.  If a task wants to exit it
 261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	should instead call vTaskDelete( NULL ).
 262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	Artificially force an assert() to be triggered if configASSERT() is
 264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	defined, then stop here so application writers can catch the error. */
 265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( uxCriticalNesting == ~0UL );
 151              	 .loc 1 265 2
 152 0006 0D4B     	 ldr r3,.L9
 153 0008 1B68     	 ldr r3,[r3]
 154 000a B3F1FF3F 	 cmp r3,#-1
 155 000e 0AD0     	 beq .L6
 156              	.LBB29:
 157              	.LBB30:
 158              	 .file 2 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*
   2:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     All rights reserved
   4:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   5:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   7:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   9:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  13:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  14:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  19:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  20:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  25:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  26:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  27:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    is the industry's de facto standard.                               *
  31:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  32:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
ARM GAS   			page 9


  34:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  37:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  38:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  39:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     defined configASSERT()?
  42:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  43:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     embedded software for free we request you assist our global community by
  45:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     participating in the support forum.
  46:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  47:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  52:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  56:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  59:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  63:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     mission critical applications that require provable dependability.
  66:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  67:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     1 tab == 4 spaces!
  68:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** */
  69:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  70:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  71:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef PORTMACRO_H
  72:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define PORTMACRO_H
  73:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  74:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef __cplusplus
  75:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern "C" {
  76:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
  77:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  78:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------
  79:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * Port specific definitions.
  80:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  81:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * given hardware and compiler.
  83:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  84:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * These settings should not be altered.
  85:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *-----------------------------------------------------------
  86:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  */
  87:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  88:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Type definitions. */
  89:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCHAR		char
  90:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portFLOAT		float
ARM GAS   			page 10


  91:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDOUBLE		double
  92:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portLONG		long
  93:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSHORT		short
  94:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBASE_TYPE	long
  96:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  97:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef long BaseType_t;
  99:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef unsigned long UBaseType_t;
 100:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 101:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint16_t TickType_t;
 103:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #else
 105:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint32_t TickType_t;
 106:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 108:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	not need to be guarded with a critical section. */
 110:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 112:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 113:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 114:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specifics. */
 115:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 119:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 120:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Scheduler utilities. */
 121:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD() 															\
 122:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {																				\
 123:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 																				\
 126:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "dsb" );													\
 129:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "isb" );													\
 130:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 131:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 132:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 137:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 138:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Critical section management. */
 139:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortEnterCritical( void );
 140:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortExitCritical( void );
 141:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
ARM GAS   			page 11


 148:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 149:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 150:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** (which build with all the ports) will build. */
 153:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 157:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Tickless idle/low power functionality. */
 158:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 162:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 163:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 164:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specific optimisations. */
 165:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 168:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 169:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 171:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Generic helper function. */
 172:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 174:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	uint8_t ucReturn;
 175:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 176:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		return ucReturn;
 178:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 179:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 180:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Check the configuration. */
 181:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#endif
 184:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 185:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 189:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/*-----------------------------------------------------------*/
 190:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 191:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31 - ucPort
 192:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 193:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 195:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 196:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 197:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef configASSERT
 198:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 201:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 202:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* portNOP() is not required by this port. */
 203:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNOP()
 204:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
ARM GAS   			page 12


 205:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portFORCE_INLINE
 206:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 207:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 208:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 209:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 210:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 211:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 212:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 213:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulNewBASEPRI;
 214:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 159              	 .loc 2 215 2
 160              	 .syntax unified
 161              	
 162 0010 4FF01003 	 mov r3,#16
 163 0014 83F31188 	 msr basepri,r3
 164 0018 BFF36F8F 	 isb 
 165 001c BFF34F8F 	 dsb 
 166              	
 167              	
 168              	 .thumb
 169              	 .syntax unified
 170 0020 7B60     	 str r3,[r7,#4]
 216:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 217:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %0, %1												\n"	\
 218:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0											\n" \
 219:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 220:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 221:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 222:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 171              	 .loc 2 223 1
 172 0022 00BF     	 nop
 173              	.L7:
 174              	.LBE30:
 175              	.LBE29:
 176              	 .loc 1 265 2 discriminator 1
 177 0024 FEE7     	 b .L7
 178              	.L6:
 179              	.LBB31:
 180              	.LBB32:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 181              	 .loc 2 215 2
 182              	 .syntax unified
 183              	
 184 0026 4FF01003 	 mov r3,#16
 185 002a 83F31188 	 msr basepri,r3
 186 002e BFF36F8F 	 isb 
 187 0032 BFF34F8F 	 dsb 
 188              	
 189              	
 190              	 .thumb
 191              	 .syntax unified
 192 0036 3B60     	 str r3,[r7]
 193              	 .loc 2 223 1
 194 0038 00BF     	 nop
 195              	.L8:
ARM GAS   			page 13


 196              	.LBE32:
 197              	.LBE31:
 266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portDISABLE_INTERRUPTS();
 267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	for( ;; );
 198              	 .loc 1 267 2 discriminator 2
 199 003a FEE7     	 b .L8
 200              	.L10:
 201              	 .align 2
 202              	.L9:
 203 003c 00000000 	 .word _ZL17uxCriticalNesting
 204              	 .cfi_endproc
 205              	.LFE5:
 206              	 .size _ZL16prvTaskExitErrorv,.-_ZL16prvTaskExitErrorv
 207              	 .section .text.SVC_Handler,"ax",%progbits
 208              	 .align 1
 209              	 .global SVC_Handler
 210              	 .syntax unified
 211              	 .thumb
 212              	 .thumb_func
 213              	 .type SVC_Handler,%function
 214              	SVC_Handler:
 215              	.LFB6:
 268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void vPortSVCHandler( void )
 272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 216              	 .loc 1 272 1
 217              	 .cfi_startproc
 218              	 
 219              	 
 220              	 
 273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	__asm volatile (
 221              	 .loc 1 273 2
 222              	 .syntax unified
 223              	
 224 0000 064B     	 ldr r3,pxCurrentTCBConst2
 225 0002 1968     	 ldr r1,[r3]
 226 0004 0868     	 ldr r0,[r1]
 227 0006 B0E8F04F 	 ldmia r0!,{r4-r11,r14}
 228 000a 80F30988 	 msr psp,r0
 229 000e BFF36F8F 	 isb 
 230 0012 4FF00000 	 mov r0,#0
 231 0016 80F31188 	 msr basepri,r0
 232 001a 7047     	 bx r14
 233              	 
 234              	 .align 2
 235 001c 00000000 	pxCurrentTCBConst2:.word pxCurrentTCB
 236              	
 237              	
 274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	ldr	r3, pxCurrentTCBConst2		\n" /* Restore the context. */
 275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	ldr r1, [r3]					\n" /* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	ldr r0, [r1]					\n" /* The first item in pxCurrentTCB is the task top of stack. */
 277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	ldmia r0!, {r4-r11, r14}		\n" /* Pop the registers that are not automatically saved on excep
 278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	msr psp, r0						\n" /* Restore the task stack pointer. */
 279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	isb								\n"
 280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	mov r0, #0 						\n"
ARM GAS   			page 14


 281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	msr	basepri, r0					\n"
 282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	bx r14							\n"
 283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"									\n"
 284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"	.align 2						\n"
 285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					"pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				);
 287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 238              	 .loc 1 287 1
 239              	 .thumb
 240              	 .syntax unified
 241 0020 00BF     	 nop
 242              	 .cfi_endproc
 243              	.LFE6:
 244              	 .size SVC_Handler,.-SVC_Handler
 245 0022 00BF     	 .section .text._ZL21prvPortStartFirstTaskv,"ax",%progbits
 246              	 .align 1
 247              	 .syntax unified
 248              	 .thumb
 249              	 .thumb_func
 250              	 .type _ZL21prvPortStartFirstTaskv,%function
 251              	_ZL21prvPortStartFirstTaskv:
 252              	.LFB7:
 288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static void prvPortStartFirstTask( void )
 291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 253              	 .loc 1 291 1
 254              	 .cfi_startproc
 255              	 
 256              	 
 257              	 
 292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	__asm volatile(
 258              	 .loc 1 292 2
 259              	 .syntax unified
 260              	
 261 0000 0648     	 ldr r0,=0xE000ED08
 262 0002 0068     	 ldr r0,[r0]
 263 0004 0068     	 ldr r0,[r0]
 264 0006 80F30888 	 msr msp,r0
 265 000a 62B6     	 cpsie i
 266 000c 61B6     	 cpsie f
 267 000e BFF34F8F 	 dsb 
 268 0012 BFF36F8F 	 isb 
 269 0016 00DF     	 svc 0
 270 0018 00BF     	 nop 
 271              	
 272              	
 293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" ldr r0, =0xE000ED08 	\n" /* Use the NVIC offset register to locate the stack. */
 294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" ldr r0, [r0] 			\n"
 295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" ldr r0, [r0] 			\n"
 296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" msr msp, r0			\n" /* Set the msp back to the start of the stack. */
 297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" cpsie i				\n" /* Globally enable interrupts. */
 298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" cpsie f				\n"
 299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" dsb					\n"
 300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" isb					\n"
 301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" svc 0					\n" /* System call to start first task. */
 302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					" nop					\n"
ARM GAS   			page 15


 303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				);
 304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 273              	 .loc 1 304 1
 274              	 .thumb
 275              	 .syntax unified
 276 001a 00BF     	 nop
 277              	 .cfi_endproc
 278              	.LFE7:
 279              	 .size _ZL21prvPortStartFirstTaskv,.-_ZL21prvPortStartFirstTaskv
 280              	 .section .text.xPortStartScheduler,"ax",%progbits
 281              	 .align 1
 282              	 .global xPortStartScheduler
 283              	 .syntax unified
 284              	 .thumb
 285              	 .thumb_func
 286              	 .type xPortStartScheduler,%function
 287              	xPortStartScheduler:
 288              	.LFB8:
 305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * See header file for description.
 309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** BaseType_t xPortStartScheduler( void )
 311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 289              	 .loc 1 311 1
 290              	 .cfi_startproc
 291              	 
 292              	 
 293 0000 80B5     	 push {r7,lr}
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 86B0     	 sub sp,sp,#24
 298              	 .cfi_def_cfa_offset 32
 299 0004 00AF     	 add r7,sp,#0
 300              	 .cfi_def_cfa_register 7
 312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* This port can be used on all revisions of the Cortex-M7 core other than
 317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	the r0p1 parts.  r0p1 parts should use the port from the
 318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/source/portable/GCC/ARM_CM7/r0p1 directory. */
 319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 301              	 .loc 1 319 2
 302 0006 444B     	 ldr r3,.L21
 303 0008 1B68     	 ldr r3,[r3]
 304 000a 444A     	 ldr r2,.L21+4
 305 000c 9342     	 cmp r3,r2
 306 000e 0CBF     	 ite eq
 307 0010 0123     	 moveq r3,#1
 308 0012 0023     	 movne r3,#0
 309 0014 DBB2     	 uxtb r3,r3
 310 0016 002B     	 cmp r3,#0
 311 0018 0AD0     	 beq .L14
 312              	.LBB33:
ARM GAS   			page 16


 313              	.LBB34:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 314              	 .loc 2 215 2
 315              	 .syntax unified
 316              	
 317 001a 4FF01003 	 mov r3,#16
 318 001e 83F31188 	 msr basepri,r3
 319 0022 BFF36F8F 	 isb 
 320 0026 BFF34F8F 	 dsb 
 321              	
 322              	
 323              	 .thumb
 324              	 .syntax unified
 325 002a 3B61     	 str r3,[r7,#16]
 326              	 .loc 2 223 1
 327 002c 00BF     	 nop
 328              	.L15:
 329              	.LBE34:
 330              	.LBE33:
 331              	 .loc 1 319 2 discriminator 2
 332 002e FEE7     	 b .L15
 333              	.L14:
 320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 334              	 .loc 1 320 2
 335 0030 394B     	 ldr r3,.L21
 336 0032 1B68     	 ldr r3,[r3]
 337 0034 3A4A     	 ldr r2,.L21+8
 338 0036 9342     	 cmp r3,r2
 339 0038 0CBF     	 ite eq
 340 003a 0123     	 moveq r3,#1
 341 003c 0023     	 movne r3,#0
 342 003e DBB2     	 uxtb r3,r3
 343 0040 002B     	 cmp r3,#0
 344 0042 0AD0     	 beq .L16
 345              	.LBB35:
 346              	.LBB36:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 347              	 .loc 2 215 2
 348              	 .syntax unified
 349              	
 350 0044 4FF01003 	 mov r3,#16
 351 0048 83F31188 	 msr basepri,r3
 352 004c BFF36F8F 	 isb 
 353 0050 BFF34F8F 	 dsb 
 354              	
 355              	
 356              	 .thumb
 357              	 .syntax unified
 358 0054 FB60     	 str r3,[r7,#12]
 359              	 .loc 2 223 1
 360 0056 00BF     	 nop
 361              	.L17:
 362              	.LBE36:
 363              	.LBE35:
 364              	 .loc 1 320 2 discriminator 3
 365 0058 FEE7     	 b .L17
 366              	.L16:
ARM GAS   			page 17


 367              	.LBB37:
 321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#if( configASSERT_DEFINED == 1 )
 323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		volatile uint32_t ulOriginalPriority;
 325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( portNVIC_I
 368              	 .loc 1 325 28
 369 005a 324B     	 ldr r3,.L21+12
 370 005c 7B61     	 str r3,[r7,#20]
 326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		volatile uint8_t ucMaxPriorityValue;
 327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Determine the maximum priority from which ISR safe FreeRTOS API
 329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		functions can be called.  ISR safe functions are those that end in
 330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ensure interrupt entry is as fast and simple as possible.
 332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		Save the interrupt priority value that is about to be clobbered. */
 334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulOriginalPriority = *pucFirstUserPriorityRegister;
 371              	 .loc 1 334 24
 372 005e 314B     	 ldr r3,.L21+12
 373 0060 1B78     	 ldrb r3,[r3]
 374 0062 DBB2     	 uxtb r3,r3
 375              	 .loc 1 334 22
 376 0064 BB60     	 str r3,[r7,#8]
 335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Determine the number of priority bits available.  First write to all
 337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		possible bits. */
 338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 377              	 .loc 1 338 3
 378 0066 2F4B     	 ldr r3,.L21+12
 379              	 .loc 1 338 33
 380 0068 FF22     	 movs r2,#255
 381 006a 1A70     	 strb r2,[r3]
 339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Read the value back to see how many bits stuck. */
 341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 382              	 .loc 1 341 24
 383 006c 2D4B     	 ldr r3,.L21+12
 384 006e 1B78     	 ldrb r3,[r3]
 385 0070 DBB2     	 uxtb r3,r3
 386              	 .loc 1 341 22
 387 0072 FB71     	 strb r3,[r7,#7]
 342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Use the same mask on the maximum system call priority. */
 344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 388              	 .loc 1 344 63
 389 0074 FB79     	 ldrb r3,[r7,#7]
 390 0076 DBB2     	 uxtb r3,r3
 391 0078 03F01003 	 and r3,r3,#16
 392 007c DAB2     	 uxtb r2,r3
 393              	 .loc 1 344 24
 394 007e 2A4B     	 ldr r3,.L21+16
 395 0080 1A70     	 strb r2,[r3]
 345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Calculate the maximum acceptable priority group value for the number
 347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		of bits read back. */
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
ARM GAS   			page 18


 396              	 .loc 1 348 22
 397 0082 2A4B     	 ldr r3,.L21+20
 398 0084 0722     	 movs r2,#7
 399 0086 1A60     	 str r2,[r3]
 400              	.L19:
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 401              	 .loc 1 349 31
 402 0088 FB79     	 ldrb r3,[r7,#7]
 403 008a DBB2     	 uxtb r3,r3
 404 008c 03F08003 	 and r3,r3,#128
 405              	 .loc 1 349 55
 406 0090 802B     	 cmp r3,#128
 407 0092 0CBF     	 ite eq
 408 0094 0123     	 moveq r3,#1
 409 0096 0023     	 movne r3,#0
 410 0098 DBB2     	 uxtb r3,r3
 411 009a 002B     	 cmp r3,#0
 412 009c 0AD0     	 beq .L18
 350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			ulMaxPRIGROUPValue--;
 413              	 .loc 1 351 22
 414 009e 234B     	 ldr r3,.L21+20
 415 00a0 1B68     	 ldr r3,[r3]
 416 00a2 013B     	 subs r3,r3,#1
 417 00a4 214A     	 ldr r2,.L21+20
 418 00a6 1360     	 str r3,[r2]
 352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 419              	 .loc 1 352 23
 420 00a8 FB79     	 ldrb r3,[r7,#7]
 421 00aa DBB2     	 uxtb r3,r3
 422 00ac 5B00     	 lsls r3,r3,#1
 423 00ae DBB2     	 uxtb r3,r3
 424 00b0 FB71     	 strb r3,[r7,#7]
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 425              	 .loc 1 349 3
 426 00b2 E9E7     	 b .L19
 427              	.L18:
 353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Shift the priority group value back to its position within the AIRCR
 356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		register. */
 357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 428              	 .loc 1 357 22
 429 00b4 1D4B     	 ldr r3,.L21+20
 430 00b6 1B68     	 ldr r3,[r3]
 431 00b8 1B02     	 lsls r3,r3,#8
 432 00ba 1C4A     	 ldr r2,.L21+20
 433 00bc 1360     	 str r3,[r2]
 358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 434              	 .loc 1 358 22
 435 00be 1B4B     	 ldr r3,.L21+20
 436 00c0 1B68     	 ldr r3,[r3]
 437 00c2 03F4E063 	 and r3,r3,#1792
 438 00c6 194A     	 ldr r2,.L21+20
 439 00c8 1360     	 str r3,[r2]
 359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Restore the clobbered interrupt priority register to its original
ARM GAS   			page 19


 361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		value. */
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		*pucFirstUserPriorityRegister = ulOriginalPriority;
 440              	 .loc 1 362 33
 441 00ca BA68     	 ldr r2,[r7,#8]
 442              	 .loc 1 362 3
 443 00cc 154B     	 ldr r3,.L21+12
 444              	 .loc 1 362 33
 445 00ce D2B2     	 uxtb r2,r2
 446 00d0 1A70     	 strb r2,[r3]
 447              	.LBE37:
 363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#endif /* conifgASSERT_DEFINED */
 365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Make PendSV and SysTick the lowest priority interrupts. */
 367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 448              	 .loc 1 367 23
 449 00d2 174B     	 ldr r3,.L21+24
 450 00d4 1B68     	 ldr r3,[r3]
 451 00d6 164A     	 ldr r2,.L21+24
 452 00d8 43F47003 	 orr r3,r3,#15728640
 453 00dc 1360     	 str r3,[r2]
 368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 454              	 .loc 1 368 23
 455 00de 144B     	 ldr r3,.L21+24
 456 00e0 1B68     	 ldr r3,[r3]
 457 00e2 134A     	 ldr r2,.L21+24
 458 00e4 43F07043 	 orr r3,r3,#-268435456
 459 00e8 1360     	 str r3,[r2]
 369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Start the timer that generates the tick ISR.  Interrupts are disabled
 371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	here already. */
 372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	vPortSetupTimerInterrupt();
 460              	 .loc 1 372 26
 461 00ea FFF7FEFF 	 bl _Z24vPortSetupTimerInterruptv
 373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Initialise the critical nesting count ready for the first task. */
 375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uxCriticalNesting = 0;
 462              	 .loc 1 375 20
 463 00ee 114B     	 ldr r3,.L21+28
 464 00f0 0022     	 movs r2,#0
 465 00f2 1A60     	 str r2,[r3]
 376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Ensure the VFP is enabled - it should be anyway. */
 378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	vPortEnableVFP();
 466              	 .loc 1 378 16
 467 00f4 FFF7FEFF 	 bl _ZL14vPortEnableVFPv
 379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Lazy save always. */
 381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 468              	 .loc 1 381 17
 469 00f8 0F4B     	 ldr r3,.L21+32
 470 00fa 1B68     	 ldr r3,[r3]
 471 00fc 0E4A     	 ldr r2,.L21+32
 472 00fe 43F04043 	 orr r3,r3,#-1073741824
 473 0102 1360     	 str r3,[r2]
 382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Start the first task. */
ARM GAS   			page 20


 384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	prvPortStartFirstTask();
 474              	 .loc 1 384 23
 475 0104 FFF7FEFF 	 bl _ZL21prvPortStartFirstTaskv
 385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Should never get here as the tasks will now be executing!  Call the task
 387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	exit error function to prevent compiler warnings about a static function
 388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	not being called in the case that the application writer overrides this
 389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	functionality by defining configTASK_RETURN_ADDRESS. */
 390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	prvTaskExitError();
 476              	 .loc 1 390 18
 477 0108 FFF7FEFF 	 bl _ZL16prvTaskExitErrorv
 391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Should not get here! */
 393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	return 0;
 478              	 .loc 1 393 9
 479 010c 0023     	 movs r3,#0
 394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 480              	 .loc 1 394 1
 481 010e 1846     	 mov r0,r3
 482 0110 1837     	 adds r7,r7,#24
 483              	 .cfi_def_cfa_offset 8
 484 0112 BD46     	 mov sp,r7
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 0114 80BD     	 pop {r7,pc}
 488              	.L22:
 489 0116 00BF     	 .align 2
 490              	.L21:
 491 0118 00ED00E0 	 .word -536810240
 492 011c 71C20F41 	 .word 1091551857
 493 0120 70C20F41 	 .word 1091551856
 494 0124 00E400E0 	 .word -536812544
 495 0128 00000000 	 .word _ZL20ucMaxSysCallPriority
 496 012c 00000000 	 .word _ZL18ulMaxPRIGROUPValue
 497 0130 20ED00E0 	 .word -536810208
 498 0134 00000000 	 .word _ZL17uxCriticalNesting
 499 0138 34EF00E0 	 .word -536809676
 500              	 .cfi_endproc
 501              	.LFE8:
 502              	 .size xPortStartScheduler,.-xPortStartScheduler
 503              	 .section .text.vPortEndScheduler,"ax",%progbits
 504              	 .align 1
 505              	 .global vPortEndScheduler
 506              	 .syntax unified
 507              	 .thumb
 508              	 .thumb_func
 509              	 .type vPortEndScheduler,%function
 510              	vPortEndScheduler:
 511              	.LFB9:
 395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void vPortEndScheduler( void )
 398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 512              	 .loc 1 398 1
 513              	 .cfi_startproc
 514              	 
 515              	 
ARM GAS   			page 21


 516              	 
 517 0000 80B4     	 push {r7}
 518              	 .cfi_def_cfa_offset 4
 519              	 .cfi_offset 7,-4
 520 0002 83B0     	 sub sp,sp,#12
 521              	 .cfi_def_cfa_offset 16
 522 0004 00AF     	 add r7,sp,#0
 523              	 .cfi_def_cfa_register 7
 399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Not implemented in ports where there is nothing to return to.
 400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	Artificially force an assert. */
 401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( uxCriticalNesting == 1000UL );
 524              	 .loc 1 401 2
 525 0006 0B4B     	 ldr r3,.L27
 526 0008 1B68     	 ldr r3,[r3]
 527 000a B3F57A7F 	 cmp r3,#1000
 528 000e 0AD0     	 beq .L26
 529              	.LBB38:
 530              	.LBB39:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 531              	 .loc 2 215 2
 532              	 .syntax unified
 533              	
 534 0010 4FF01003 	 mov r3,#16
 535 0014 83F31188 	 msr basepri,r3
 536 0018 BFF36F8F 	 isb 
 537 001c BFF34F8F 	 dsb 
 538              	
 539              	
 540              	 .thumb
 541              	 .syntax unified
 542 0020 7B60     	 str r3,[r7,#4]
 543              	 .loc 2 223 1
 544 0022 00BF     	 nop
 545              	.L25:
 546              	.LBE39:
 547              	.LBE38:
 548              	 .loc 1 401 2 discriminator 1
 549 0024 FEE7     	 b .L25
 550              	.L26:
 402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 551              	 .loc 1 402 1
 552 0026 00BF     	 nop
 553 0028 0C37     	 adds r7,r7,#12
 554              	 .cfi_def_cfa_offset 4
 555 002a BD46     	 mov sp,r7
 556              	 .cfi_def_cfa_register 13
 557              	 
 558 002c 5DF8047B 	 ldr r7,[sp],#4
 559              	 .cfi_restore 7
 560              	 .cfi_def_cfa_offset 0
 561 0030 7047     	 bx lr
 562              	.L28:
 563 0032 00BF     	 .align 2
 564              	.L27:
 565 0034 00000000 	 .word _ZL17uxCriticalNesting
 566              	 .cfi_endproc
 567              	.LFE9:
ARM GAS   			page 22


 568              	 .size vPortEndScheduler,.-vPortEndScheduler
 569              	 .section .text.vPortEnterCritical,"ax",%progbits
 570              	 .align 1
 571              	 .global vPortEnterCritical
 572              	 .syntax unified
 573              	 .thumb
 574              	 .thumb_func
 575              	 .type vPortEnterCritical,%function
 576              	vPortEnterCritical:
 577              	.LFB10:
 403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void vPortEnterCritical( void )
 406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 578              	 .loc 1 406 1
 579              	 .cfi_startproc
 580              	 
 581              	 
 582              	 
 583 0000 80B4     	 push {r7}
 584              	 .cfi_def_cfa_offset 4
 585              	 .cfi_offset 7,-4
 586 0002 83B0     	 sub sp,sp,#12
 587              	 .cfi_def_cfa_offset 16
 588 0004 00AF     	 add r7,sp,#0
 589              	 .cfi_def_cfa_register 7
 590              	.LBB40:
 591              	.LBB41:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 592              	 .loc 2 215 2
 593              	 .syntax unified
 594              	
 595 0006 4FF01003 	 mov r3,#16
 596 000a 83F31188 	 msr basepri,r3
 597 000e BFF36F8F 	 isb 
 598 0012 BFF34F8F 	 dsb 
 599              	
 600              	
 601              	 .thumb
 602              	 .syntax unified
 603 0016 7B60     	 str r3,[r7,#4]
 604              	 .loc 2 223 1
 605 0018 00BF     	 nop
 606              	.LBE41:
 607              	.LBE40:
 407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portDISABLE_INTERRUPTS();
 408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uxCriticalNesting++;
 608              	 .loc 1 408 19
 609 001a 124B     	 ldr r3,.L33
 610 001c 1B68     	 ldr r3,[r3]
 611 001e 0133     	 adds r3,r3,#1
 612 0020 104A     	 ldr r2,.L33
 613 0022 1360     	 str r3,[r2]
 409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* This is not the interrupt safe version of the enter critical function so
 411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	assert() if it is being called from an interrupt context.  Only API
 412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	functions that end in "FromISR" can be used in an interrupt.  Only assert if
ARM GAS   			page 23


 413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	the critical nesting count is 1 to protect against recursive calls if the
 414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	assert function also uses a critical section. */
 415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	if( uxCriticalNesting == 1 )
 614              	 .loc 1 415 24
 615 0024 0F4B     	 ldr r3,.L33
 616 0026 1B68     	 ldr r3,[r3]
 617              	 .loc 1 415 2
 618 0028 012B     	 cmp r3,#1
 619 002a 14D1     	 bne .L32
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 620              	 .loc 1 417 3
 621 002c 0E4B     	 ldr r3,.L33+4
 622 002e 1B68     	 ldr r3,[r3]
 623 0030 DBB2     	 uxtb r3,r3
 624 0032 002B     	 cmp r3,#0
 625 0034 14BF     	 ite ne
 626 0036 0123     	 movne r3,#1
 627 0038 0023     	 moveq r3,#0
 628 003a DBB2     	 uxtb r3,r3
 629 003c 002B     	 cmp r3,#0
 630 003e 0AD0     	 beq .L32
 631              	.LBB42:
 632              	.LBB43:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 633              	 .loc 2 215 2
 634              	 .syntax unified
 635              	
 636 0040 4FF01003 	 mov r3,#16
 637 0044 83F31188 	 msr basepri,r3
 638 0048 BFF36F8F 	 isb 
 639 004c BFF34F8F 	 dsb 
 640              	
 641              	
 642              	 .thumb
 643              	 .syntax unified
 644 0050 3B60     	 str r3,[r7]
 645              	 .loc 2 223 1
 646 0052 00BF     	 nop
 647              	.L31:
 648              	.LBE43:
 649              	.LBE42:
 650              	 .loc 1 417 3 discriminator 1
 651 0054 FEE7     	 b .L31
 652              	.L32:
 418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 653              	 .loc 1 419 1
 654 0056 00BF     	 nop
 655 0058 0C37     	 adds r7,r7,#12
 656              	 .cfi_def_cfa_offset 4
 657 005a BD46     	 mov sp,r7
 658              	 .cfi_def_cfa_register 13
 659              	 
 660 005c 5DF8047B 	 ldr r7,[sp],#4
 661              	 .cfi_restore 7
 662              	 .cfi_def_cfa_offset 0
ARM GAS   			page 24


 663 0060 7047     	 bx lr
 664              	.L34:
 665 0062 00BF     	 .align 2
 666              	.L33:
 667 0064 00000000 	 .word _ZL17uxCriticalNesting
 668 0068 04ED00E0 	 .word -536810236
 669              	 .cfi_endproc
 670              	.LFE10:
 671              	 .size vPortEnterCritical,.-vPortEnterCritical
 672              	 .section .text.vPortExitCritical,"ax",%progbits
 673              	 .align 1
 674              	 .global vPortExitCritical
 675              	 .syntax unified
 676              	 .thumb
 677              	 .thumb_func
 678              	 .type vPortExitCritical,%function
 679              	vPortExitCritical:
 680              	.LFB11:
 420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void vPortExitCritical( void )
 423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 681              	 .loc 1 423 1
 682              	 .cfi_startproc
 683              	 
 684              	 
 685              	 
 686 0000 80B4     	 push {r7}
 687              	 .cfi_def_cfa_offset 4
 688              	 .cfi_offset 7,-4
 689 0002 83B0     	 sub sp,sp,#12
 690              	 .cfi_def_cfa_offset 16
 691 0004 00AF     	 add r7,sp,#0
 692              	 .cfi_def_cfa_register 7
 424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	configASSERT( uxCriticalNesting );
 693              	 .loc 1 424 2
 694 0006 124B     	 ldr r3,.L40
 695 0008 1B68     	 ldr r3,[r3]
 696 000a 002B     	 cmp r3,#0
 697 000c 0AD1     	 bne .L36
 698              	.LBB44:
 699              	.LBB45:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 700              	 .loc 2 215 2
 701              	 .syntax unified
 702              	
 703 000e 4FF01003 	 mov r3,#16
 704 0012 83F31188 	 msr basepri,r3
 705 0016 BFF36F8F 	 isb 
 706 001a BFF34F8F 	 dsb 
 707              	
 708              	
 709              	 .thumb
 710              	 .syntax unified
 711 001e 7B60     	 str r3,[r7,#4]
 712              	 .loc 2 223 1
 713 0020 00BF     	 nop
ARM GAS   			page 25


 714              	.L37:
 715              	.LBE45:
 716              	.LBE44:
 717              	 .loc 1 424 2 discriminator 1
 718 0022 FEE7     	 b .L37
 719              	.L36:
 425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uxCriticalNesting--;
 720              	 .loc 1 425 19
 721 0024 0A4B     	 ldr r3,.L40
 722 0026 1B68     	 ldr r3,[r3]
 723 0028 013B     	 subs r3,r3,#1
 724 002a 094A     	 ldr r2,.L40
 725 002c 1360     	 str r3,[r2]
 426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	if( uxCriticalNesting == 0 )
 726              	 .loc 1 426 24
 727 002e 084B     	 ldr r3,.L40
 728 0030 1B68     	 ldr r3,[r3]
 729              	 .loc 1 426 2
 730 0032 002B     	 cmp r3,#0
 731 0034 05D1     	 bne .L39
 732 0036 0023     	 movs r3,#0
 733 0038 3B60     	 str r3,[r7]
 734              	.LBB46:
 735              	.LBB47:
 224:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 225:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 226:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 227:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 228:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 229:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 230:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 232:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 233:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mrs %0, basepri											\n" \
 234:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %1, %2												\n"	\
 235:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %1											\n" \
 236:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 237:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 238:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 239:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 240:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 241:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 242:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	warnings. */
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return ulOriginalBASEPRI;
 244:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 245:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 246:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 247:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 248:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 736              	 .loc 2 249 2
 737 003a 3B68     	 ldr r3,[r7]
 738              	 .syntax unified
 739              	
 740 003c 83F31188 	 msr basepri,r3
 741              	
 250:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
ARM GAS   			page 26


 251:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue )
 252:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 253:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 742              	 .loc 2 253 1
 743              	 .thumb
 744              	 .syntax unified
 745 0040 00BF     	 nop
 746              	.L39:
 747              	.LBE47:
 748              	.LBE46:
 427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		portENABLE_INTERRUPTS();
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 749              	 .loc 1 430 1
 750 0042 00BF     	 nop
 751 0044 0C37     	 adds r7,r7,#12
 752              	 .cfi_def_cfa_offset 4
 753 0046 BD46     	 mov sp,r7
 754              	 .cfi_def_cfa_register 13
 755              	 
 756 0048 5DF8047B 	 ldr r7,[sp],#4
 757              	 .cfi_restore 7
 758              	 .cfi_def_cfa_offset 0
 759 004c 7047     	 bx lr
 760              	.L41:
 761 004e 00BF     	 .align 2
 762              	.L40:
 763 0050 00000000 	 .word _ZL17uxCriticalNesting
 764              	 .cfi_endproc
 765              	.LFE11:
 766              	 .size vPortExitCritical,.-vPortExitCritical
 767              	 .section .text.PendSV_Handler,"ax",%progbits
 768              	 .align 1
 769              	 .global PendSV_Handler
 770              	 .syntax unified
 771              	 .thumb
 772              	 .thumb_func
 773              	 .type PendSV_Handler,%function
 774              	PendSV_Handler:
 775              	.LFB12:
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void xPortPendSVHandler( void )
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 776              	 .loc 1 434 1
 777              	 .cfi_startproc
 778              	 
 779              	 
 780              	 
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* This is a naked function. */
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	__asm volatile
 781              	 .loc 1 437 2
 782              	 .syntax unified
 783              	
 784 0000 EFF30980 	 mrs r0,psp
ARM GAS   			page 27


 785 0004 BFF36F8F 	 isb 
 786              	 
 787 0008 144B     	 ldr r3,pxCurrentTCBConst
 788 000a 1A68     	 ldr r2,[r3]
 789              	 
 790 000c 1EF0100F 	 tst r14,#0x10
 791 0010 08BF     	 it eq
 792 0012 20ED108A 	 vstmdbeq r0!,{s16-s31}
 793              	 
 794 0016 20E9F04F 	 stmdb r0!,{r4-r11,r14}
 795              	 
 796 001a 1060     	 str r0,[r2]
 797              	 
 798 001c 4DF8043D 	 stmdb sp!,{r3}
 799 0020 4FF01000 	 mov r0,#16
 800 0024 80F31188 	 msr basepri,r0
 801 0028 BFF34F8F 	 dsb 
 802 002c BFF36F8F 	 isb 
 803 0030 FFF7FEFF 	 bl vTaskSwitchContext
 804 0034 4FF00000 	 mov r0,#0
 805 0038 80F31188 	 msr basepri,r0
 806 003c 08BC     	 ldmia sp!,{r3}
 807              	 
 808 003e 1968     	 ldr r1,[r3]
 809 0040 0868     	 ldr r0,[r1]
 810              	 
 811 0042 B0E8F04F 	 ldmia r0!,{r4-r11,r14}
 812              	 
 813 0046 1EF0100F 	 tst r14,#0x10
 814 004a 08BF     	 it eq
 815 004c B0EC108A 	 vldmiaeq r0!,{s16-s31}
 816              	 
 817 0050 80F30988 	 msr psp,r0
 818 0054 BFF36F8F 	 isb 
 819              	 
 820              	 
 821 0058 7047     	 bx r14
 822              	 
 823 005a 00BF     	 .align 2
 824 005c 00000000 	pxCurrentTCBConst:.word pxCurrentTCB
 825              	
 826              	
 438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	(
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	mrs r0, psp							\n"
 440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	isb									\n"
 441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldr	r3, pxCurrentTCBConst			\n" /* Get the location of the current TCB. */
 443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldr	r2, [r3]						\n"
 444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, push high vfp registers. *
 446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	it eq								\n"
 447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	vstmdbeq r0!, {s16-s31}				\n"
 448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	stmdb r0!, {r4-r11, r14}			\n" /* Save the core registers. */
 450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	str r0, [r2]						\n" /* Save the new top of stack into the first member of the TCB. */
 452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
ARM GAS   			page 28


 453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	stmdb sp!, {r3}						\n"
 454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	mov r0, %0 							\n"
 455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	msr basepri, r0						\n"
 456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	dsb									\n"
 457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"   isb									\n"
 458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	bl vTaskSwitchContext				\n"
 459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	mov r0, #0							\n"
 460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	msr basepri, r0						\n"
 461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldmia sp!, {r3}						\n"
 462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldr r1, [r3]						\n" /* The first item in pxCurrentTCB is the task top of stack. */
 464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldr r0, [r1]						\n"
 465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	ldmia r0!, {r4-r11, r14}			\n" /* Pop the core registers. */
 467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	tst r14, #0x10						\n" /* Is the task using the FPU context?  If so, pop the high vfp registers
 469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	it eq								\n"
 470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	vldmiaeq r0!, {s16-s31}				\n"
 471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	msr psp, r0							\n"
 473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	isb									\n"
 474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		#if WORKAROUND_PMU_CM001 == 1
 477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"			push { r14 }				\n"
 478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"			pop { pc }					\n"
 479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		#endif
 480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#endif
 481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	bx r14								\n"
 483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"										\n"
 484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"	.align 2							\n"
 485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	"pxCurrentTCBConst: .word pxCurrentTCB	\n"
 486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	::"i"(configMAX_SYSCALL_INTERRUPT_PRIORITY)
 487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	);
 488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 827              	 .loc 1 488 1
 828              	 .thumb
 829              	 .syntax unified
 830 0060 00BF     	 nop
 831              	 .cfi_endproc
 832              	.LFE12:
 833              	 .size PendSV_Handler,.-PendSV_Handler
 834 0062 00BF     	 .section .text.SysTick_Handler,"ax",%progbits
 835              	 .align 1
 836              	 .global SysTick_Handler
 837              	 .syntax unified
 838              	 .thumb
 839              	 .thumb_func
 840              	 .type SysTick_Handler,%function
 841              	SysTick_Handler:
 842              	.LFB13:
 489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** void xPortSysTickHandler( void )
 492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 843              	 .loc 1 492 1
ARM GAS   			page 29


 844              	 .cfi_startproc
 845              	 
 846              	 
 847 0000 80B5     	 push {r7,lr}
 848              	 .cfi_def_cfa_offset 8
 849              	 .cfi_offset 7,-8
 850              	 .cfi_offset 14,-4
 851 0002 84B0     	 sub sp,sp,#16
 852              	 .cfi_def_cfa_offset 24
 853 0004 00AF     	 add r7,sp,#0
 854              	 .cfi_def_cfa_register 7
 855              	.LBB48:
 856              	.LBB49:
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 857              	 .loc 2 231 2
 858              	 .syntax unified
 859              	
 860 0006 EFF31182 	 mrs r2,basepri
 861 000a 4FF01003 	 mov r3,#16
 862 000e 83F31188 	 msr basepri,r3
 863 0012 BFF36F8F 	 isb 
 864 0016 BFF34F8F 	 dsb 
 865              	
 866              	
 867              	 .thumb
 868              	 .syntax unified
 869 001a FA60     	 str r2,[r7,#12]
 870 001c BB60     	 str r3,[r7,#8]
 871              	.LBE49:
 872              	.LBE48:
 493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* The SysTick runs at the lowest interrupt priority, so when this interrupt
 494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	executes all interrupts must be unmasked.  There is therefore no need to
 495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	save and then restore the interrupt mask value as its value is already
 496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	known. */
 497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	( void ) portSET_INTERRUPT_MASK_FROM_ISR();
 498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Increment the RTOS tick. */
 500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		if( xTaskIncrementTick() != pdFALSE )
 873              	 .loc 1 500 25
 874 001e FFF7FEFF 	 bl xTaskIncrementTick
 875 0022 0346     	 mov r3,r0
 876              	 .loc 1 500 28
 877 0024 002B     	 cmp r3,#0
 878 0026 14BF     	 ite ne
 879 0028 0123     	 movne r3,#1
 880 002a 0023     	 moveq r3,#0
 881 002c DBB2     	 uxtb r3,r3
 882              	 .loc 1 500 3
 883 002e 002B     	 cmp r3,#0
 884 0030 03D0     	 beq .L45
 501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* A context switch is required.  Context switching is performed in
 503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			the PendSV interrupt.  Pend the PendSV interrupt. */
 504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 885              	 .loc 1 504 4
 886 0032 074B     	 ldr r3,.L46
 887              	 .loc 1 504 26
ARM GAS   			page 30


 888 0034 4FF08052 	 mov r2,#268435456
 889 0038 1A60     	 str r2,[r3]
 890              	.L45:
 891 003a 0023     	 movs r3,#0
 892 003c 7B60     	 str r3,[r7,#4]
 893              	.LBB50:
 894              	.LBB51:
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 895              	 .loc 2 249 2
 896 003e 7B68     	 ldr r3,[r7,#4]
 897              	 .syntax unified
 898              	
 899 0040 83F31188 	 msr basepri,r3
 900              	
 901              	 .loc 2 253 1
 902              	 .thumb
 903              	 .syntax unified
 904 0044 00BF     	 nop
 905              	.LBE51:
 906              	.LBE50:
 505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( 0 );
 508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 907              	 .loc 1 508 1
 908 0046 00BF     	 nop
 909 0048 1037     	 adds r7,r7,#16
 910              	 .cfi_def_cfa_offset 8
 911 004a BD46     	 mov sp,r7
 912              	 .cfi_def_cfa_register 13
 913              	 
 914 004c 80BD     	 pop {r7,pc}
 915              	.L47:
 916 004e 00BF     	 .align 2
 917              	.L46:
 918 0050 04ED00E0 	 .word -536810236
 919              	 .cfi_endproc
 920              	.LFE13:
 921              	 .size SysTick_Handler,.-SysTick_Handler
 922              	 .section .text._Z24vPortSetupTimerInterruptv,"ax",%progbits
 923              	 .align 1
 924              	 .weak _Z24vPortSetupTimerInterruptv
 925              	 .syntax unified
 926              	 .thumb
 927              	 .thumb_func
 928              	 .type _Z24vPortSetupTimerInterruptv,%function
 929              	_Z24vPortSetupTimerInterruptv:
 930              	.LFB14:
 509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if configUSE_TICKLESS_IDLE == 1
 512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	__attribute__((weak)) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements, ulSysTickCTRL;
 516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	TickType_t xModifiableIdleTime;
 517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
ARM GAS   			page 31


 518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Make sure the SysTick reload value does not overflow the counter. */
 519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Stop the SysTick momentarily.  The time the SysTick is stopped for
 525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		is accounted for as best it can be, but using the tickless mode will
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		inevitably result in some tiny drift of the time maintained by the
 527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		kernel with respect to calendar time. */
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		portNVIC_SYSTICK_CTRL_REG &= ~portNVIC_SYSTICK_ENABLE_BIT;
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Calculate the reload value required to wait xExpectedIdleTime
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		tick periods.  -1 is used because this code will execute part way
 532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		through one of the tick periods. */
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulReloadValue = portNVIC_SYSTICK_CURRENT_VALUE_REG + ( ulTimerCountsForOneTick * ( xExpectedIdleT
 534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		if( ulReloadValue > ulStoppedTimerCompensation )
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			ulReloadValue -= ulStoppedTimerCompensation;
 537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Enter a critical section but don't use the taskENTER_CRITICAL()
 540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		method as that will mask interrupts that should exit sleep mode. */
 541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		__asm volatile( "cpsid i" );
 542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* If a context switch is pending or a task is waiting for the scheduler
 544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		to be unsuspended then abandon the low power entry. */
 545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Restart from whatever is left in the count register to complete
 548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			this tick period. */
 549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_LOAD_REG = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Restart SysTick. */
 552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Reset the reload register to the value required for normal tick
 555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			periods. */
 556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			above. */
 560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			__asm volatile( "cpsie i" );
 561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		else
 563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Set the new reload value. */
 565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Clear the SysTick count flag and set the count value back to
 568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			zero. */
 569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Restart SysTick. */
 572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
ARM GAS   			page 32


 575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			set its parameter to 0 to indicate that its implementation contains
 576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			its own wait for interrupt or wait for event instruction, and so wfi
 577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			should not be executed again.  However, the original expected idle
 578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			time variable must remain unmodified, so a copy is taken. */
 579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			xModifiableIdleTime = xExpectedIdleTime;
 580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configPRE_SLEEP_PROCESSING( &xModifiableIdleTime );
 581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			if( xModifiableIdleTime > 0 )
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			{
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				__asm volatile( "dsb" );
 584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				__asm volatile( "wfi" );
 585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				__asm volatile( "isb" );
 586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			}
 587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configPOST_SLEEP_PROCESSING( &xExpectedIdleTime );
 588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Stop SysTick.  Again, the time the SysTick is stopped for is
 590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			accounted for as best it can be, but using the tickless mode will
 591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			inevitably result in some tiny drift of the time maintained by the
 592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			kernel with respect to calendar time. */
 593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			ulSysTickCTRL = portNVIC_SYSTICK_CTRL_REG;
 594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_CTRL_REG = ( ulSysTickCTRL & ~portNVIC_SYSTICK_ENABLE_BIT );
 595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Re-enable interrupts - see comments above the cpsid instruction()
 597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			above. */
 598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			__asm volatile( "cpsie i" );
 599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			if( ( ulSysTickCTRL & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			{
 602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				uint32_t ulCalculatedLoadValue;
 603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* The tick interrupt has already executed, and the SysTick
 605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				count reloaded with ulReloadValue.  Reset the
 606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				portNVIC_SYSTICK_LOAD_REG with whatever remains of this tick
 607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				period. */
 608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_
 609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* Don't allow a tiny value, or values that have somehow
 611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				underflowed because the post sleep hook did something
 612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				that took too long. */
 613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				if( ( ulCalculatedLoadValue < ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimer
 614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				{
 615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 					ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				}
 617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* The tick interrupt handler will already have pended the tick
 621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				processing in the kernel.  As the pending tick will be
 622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				processed as soon as this function exits, the tick value
 623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				maintained by the tick is stepped forward by one less than the
 624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				time spent waiting. */
 625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			}
 627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			else
 628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			{
 629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* Something other than the tick interrupt ended the sleep.
 630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				Work out how long the sleep lasted rounded to complete tick
 631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				periods (not the ulReload value which accounted for part
ARM GAS   			page 33


 632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				ticks). */
 633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - portNVIC_SYSTI
 634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* How many complete tick periods passed while the processor
 636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				was waiting? */
 637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				/* The reload value is set to whatever fraction of a single tick
 640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				period remains. */
 641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1 ) * ulTimerCountsForOneTick ) - ulCom
 642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			}
 643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG
 645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			again, then set portNVIC_SYSTICK_LOAD_REG back to its standard
 646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			value.  The critical section is used to ensure the tick interrupt
 647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			can only execute once in the case that the reload register is near
 648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			zero. */
 649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portENTER_CRITICAL();
 651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			{
 652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				vTaskStepTick( ulCompleteTickPeriods );
 654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 				portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			}
 656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			portEXIT_CRITICAL();
 657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #endif /* #if configUSE_TICKLESS_IDLE */
 661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*
 664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * Setup the systick timer to generate the tick interrupts at the required
 665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  * frequency.
 666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp ****  */
 667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** __attribute__(( weak )) void vPortSetupTimerInterrupt( void )
 668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 931              	 .loc 1 668 1
 932              	 .cfi_startproc
 933              	 
 934              	 
 935              	 
 936 0000 80B4     	 push {r7}
 937              	 .cfi_def_cfa_offset 4
 938              	 .cfi_offset 7,-4
 939 0002 00AF     	 add r7,sp,#0
 940              	 .cfi_def_cfa_register 7
 669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Calculate the constants required to configure the tick interrupt. */
 670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#if configUSE_TICKLESS_IDLE == 1
 671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOC
 675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	#endif /* configUSE_TICKLESS_IDLE */
 677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	/* Configure SysTick to interrupt at the requested rate. */
ARM GAS   			page 34


 679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 941              	 .loc 1 679 55
 942 0004 084B     	 ldr r3,.L49
 943 0006 1B68     	 ldr r3,[r3]
 944 0008 084A     	 ldr r2,.L49+4
 945 000a A2FB0323 	 umull r2,r3,r2,r3
 946 000e 9B09     	 lsrs r3,r3,#6
 947              	 .loc 1 679 2
 948 0010 074A     	 ldr r2,.L49+8
 949              	 .loc 1 679 78
 950 0012 013B     	 subs r3,r3,#1
 951              	 .loc 1 679 28
 952 0014 1360     	 str r3,[r2]
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTI
 953              	 .loc 1 680 2
 954 0016 074B     	 ldr r3,.L49+12
 955              	 .loc 1 680 28
 956 0018 0722     	 movs r2,#7
 957 001a 1A60     	 str r2,[r3]
 681:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 958              	 .loc 1 681 1
 959 001c 00BF     	 nop
 960 001e BD46     	 mov sp,r7
 961              	 .cfi_def_cfa_register 13
 962              	 
 963 0020 5DF8047B 	 ldr r7,[sp],#4
 964              	 .cfi_restore 7
 965              	 .cfi_def_cfa_offset 0
 966 0024 7047     	 bx lr
 967              	.L50:
 968 0026 00BF     	 .align 2
 969              	.L49:
 970 0028 00000000 	 .word SystemCoreClock
 971 002c D34D6210 	 .word 274877907
 972 0030 14E000E0 	 .word -536813548
 973 0034 10E000E0 	 .word -536813552
 974              	 .cfi_endproc
 975              	.LFE14:
 976              	 .size _Z24vPortSetupTimerInterruptv,.-_Z24vPortSetupTimerInterruptv
 977              	 .section .text._ZL14vPortEnableVFPv,"ax",%progbits
 978              	 .align 1
 979              	 .syntax unified
 980              	 .thumb
 981              	 .thumb_func
 982              	 .type _ZL14vPortEnableVFPv,%function
 983              	_ZL14vPortEnableVFPv:
 984              	.LFB15:
 682:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 683:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 684:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /* This is a naked function. */
 685:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** static void vPortEnableVFP( void )
 686:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** {
 985              	 .loc 1 686 1
 986              	 .cfi_startproc
 987              	 
 988              	 
 989              	 
ARM GAS   			page 35


 687:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	__asm volatile
 990              	 .loc 1 687 2
 991              	 .syntax unified
 992              	
 993 0000 DFF80C00 	 ldr.w r0,=0xE000ED88
 994 0004 0168     	 ldr r1,[r0]
 995              	 
 996 0006 41F47001 	 orr r1,r1,#(0xf<<20)
 997 000a 0160     	 str r1,[r0]
 998 000c 7047     	 bx r14
 999              	
 688:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	(
 689:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"	ldr.w r0, =0xE000ED88		\n" /* The FPU enable bits are in the CPACR. */
 690:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"	ldr r1, [r0]				\n"
 691:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"								\n"
 692:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
 693:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"	str r1, [r0]				\n"
 694:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		"	bx r14						"
 695:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	);
 696:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** }
 1000              	 .loc 1 696 1
 1001              	 .thumb
 1002              	 .syntax unified
 1003 000e 00BF     	 nop
 1004              	 .cfi_endproc
 1005              	.LFE15:
 1006              	 .size _ZL14vPortEnableVFPv,.-_ZL14vPortEnableVFPv
 1007              	 .section .text.vPortValidateInterruptPriority,"ax",%progbits
 1008              	 .align 1
 1009              	 .global vPortValidateInterruptPriority
 1010              	 .syntax unified
 1011              	 .thumb
 1012              	 .thumb_func
 1013              	 .type vPortValidateInterruptPriority,%function
 1014              	vPortValidateInterruptPriority:
 1015              	.LFB16:
 697:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** /*-----------------------------------------------------------*/
 698:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 699:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** #if( configASSERT_DEFINED == 1 )
 700:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 701:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	void vPortValidateInterruptPriority( void )
 702:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	{
 1016              	 .loc 1 702 2
 1017              	 .cfi_startproc
 1018              	 
 1019              	 
 1020              	 
 1021 0000 80B4     	 push {r7}
 1022              	 .cfi_def_cfa_offset 4
 1023              	 .cfi_offset 7,-4
 1024 0002 85B0     	 sub sp,sp,#20
 1025              	 .cfi_def_cfa_offset 24
 1026 0004 00AF     	 add r7,sp,#0
 1027              	 .cfi_def_cfa_register 7
 703:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uint32_t ulCurrentInterrupt;
 704:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	uint8_t ucCurrentPriority;
 705:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
ARM GAS   			page 36


 706:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Obtain the number of the currently executing interrupt. */
 707:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 1028              	 .loc 1 707 3
 1029              	 .syntax unified
 1030              	
 1031 0006 EFF30583 	 mrs r3,ipsr
 1032              	
 1033              	 .thumb
 1034              	 .syntax unified
 1035 000a FB60     	 str r3,[r7,#12]
 708:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 709:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Is the interrupt number a user defined interrupt? */
 710:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 1036              	 .loc 1 710 3
 1037 000c FB68     	 ldr r3,[r7,#12]
 1038 000e 0F2B     	 cmp r3,#15
 1039 0010 14D9     	 bls .L53
 711:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		{
 712:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* Look up the interrupt's priority. */
 713:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 1040              	 .loc 1 713 73
 1041 0012 FA68     	 ldr r2,[r7,#12]
 1042 0014 184B     	 ldr r3,.L58
 1043 0016 1344     	 add r3,r3,r2
 1044              	 .loc 1 713 22
 1045 0018 1B78     	 ldrb r3,[r3]
 1046 001a FB72     	 strb r3,[r7,#11]
 714:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 715:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			/* The following assertion will fail if a service routine (ISR) for
 716:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			an interrupt that has been assigned a priority above
 717:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 718:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			function.  ISR safe FreeRTOS API functions must *only* be called
 719:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			from interrupts that have been assigned a priority at or below
 720:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 721:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 722:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			Numerically low interrupt priority numbers represent logically high
 723:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			interrupt priorities, therefore the priority of the interrupt must
 724:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			be set to a value equal to or numerically *higher* than
 725:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configMAX_SYSCALL_INTERRUPT_PRIORITY.
 726:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 727:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			Interrupts that	use the FreeRTOS API must not be left at their
 728:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			default priority of	zero as that is the highest possible priority,
 729:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 730:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			and	therefore also guaranteed to be invalid.
 731:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 732:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			FreeRTOS maintains separate thread and ISR API functions to ensure
 733:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			interrupt entry is as fast and simple as possible.
 734:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 735:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			The following links provide detailed information:
 736:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			http://www.freertos.org/RTOS-Cortex-M3-M4.html
 737:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			http://www.freertos.org/FAQHelp.html */
 738:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 1047              	 .loc 1 738 4
 1048 001c 174B     	 ldr r3,.L58+4
 1049 001e 1B78     	 ldrb r3,[r3]
 1050 0020 FA7A     	 ldrb r2,[r7,#11]
 1051 0022 9A42     	 cmp r2,r3
ARM GAS   			page 37


 1052 0024 0AD2     	 bcs .L53
 1053              	.LBB52:
 1054              	.LBB53:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1055              	 .loc 2 215 2
 1056              	 .syntax unified
 1057              	
 1058 0026 4FF01003 	 mov r3,#16
 1059 002a 83F31188 	 msr basepri,r3
 1060 002e BFF36F8F 	 isb 
 1061 0032 BFF34F8F 	 dsb 
 1062              	
 1063              	
 1064              	 .thumb
 1065              	 .syntax unified
 1066 0036 7B60     	 str r3,[r7,#4]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1067              	 .loc 2 223 1
 1068 0038 00BF     	 nop
 1069              	.L54:
 1070              	.LBE53:
 1071              	.LBE52:
 1072              	 .loc 1 738 4 discriminator 1
 1073 003a FEE7     	 b .L54
 1074              	.L53:
 739:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		}
 740:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 741:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		/* Priority grouping:  The interrupt controller (NVIC) allows the bits
 742:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		that define each interrupt's priority to be split between bits that
 743:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		define the interrupt's pre-emption priority bits and bits that define
 744:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		the interrupt's sub-priority.  For simplicity all bits must be defined
 745:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		to be pre-emption priority bits.  The following assertion will fail if
 746:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		this is not the case (if some bits represent a sub-priority).
 747:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 
 748:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		If the application only uses CMSIS libraries for interrupt
 749:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		configuration then the correct setting can be achieved on all Cortex-M
 750:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 751:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		scheduler.  Note however that some vendor specific peripheral libraries
 752:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		assume a non-zero priority group setting, in which cases using a value
 753:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		of zero will result in unpredicable behaviour. */
 754:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1075              	 .loc 1 754 3
 1076 003c 104B     	 ldr r3,.L58+8
 1077 003e 1B68     	 ldr r3,[r3]
 1078 0040 03F4E062 	 and r2,r3,#1792
 1079 0044 0F4B     	 ldr r3,.L58+12
 1080 0046 1B68     	 ldr r3,[r3]
 1081 0048 9A42     	 cmp r2,r3
 1082 004a 8CBF     	 ite hi
 1083 004c 0123     	 movhi r3,#1
 1084 004e 0023     	 movls r3,#0
 1085 0050 DBB2     	 uxtb r3,r3
 1086 0052 002B     	 cmp r3,#0
 1087 0054 0AD0     	 beq .L57
 1088              	.LBB54:
 1089              	.LBB55:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
ARM GAS   			page 38


 1090              	 .loc 2 215 2
 1091              	 .syntax unified
 1092              	
 1093 0056 4FF01003 	 mov r3,#16
 1094 005a 83F31188 	 msr basepri,r3
 1095 005e BFF36F8F 	 isb 
 1096 0062 BFF34F8F 	 dsb 
 1097              	
 1098              	
 1099              	 .thumb
 1100              	 .syntax unified
 1101 0066 3B60     	 str r3,[r7]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1102              	 .loc 2 223 1
 1103 0068 00BF     	 nop
 1104              	.L56:
 1105              	.LBE55:
 1106              	.LBE54:
 1107              	 .loc 1 754 3 discriminator 2
 1108 006a FEE7     	 b .L56
 1109              	.L57:
 755:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\portable\GCC\ARM_CM4F\port.cpp **** 	}
 1110              	 .loc 1 755 2
 1111 006c 00BF     	 nop
 1112 006e 1437     	 adds r7,r7,#20
 1113              	 .cfi_def_cfa_offset 4
 1114 0070 BD46     	 mov sp,r7
 1115              	 .cfi_def_cfa_register 13
 1116              	 
 1117 0072 5DF8047B 	 ldr r7,[sp],#4
 1118              	 .cfi_restore 7
 1119              	 .cfi_def_cfa_offset 0
 1120 0076 7047     	 bx lr
 1121              	.L59:
 1122              	 .align 2
 1123              	.L58:
 1124 0078 F0E300E0 	 .word -536812560
 1125 007c 00000000 	 .word _ZL20ucMaxSysCallPriority
 1126 0080 0CED00E0 	 .word -536810228
 1127 0084 00000000 	 .word _ZL18ulMaxPRIGROUPValue
 1128              	 .cfi_endproc
 1129              	.LFE16:
 1130              	 .size vPortValidateInterruptPriority,.-vPortValidateInterruptPriority
 1131              	 .text
 1132              	.Letext0:
 1133              	 .file 3 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 1134              	 .file 4 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1135              	 .file 5 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/projdefs.h"
 1136              	 .file 6 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/PRACTI~1/config/FreeRTOSConfig.h"
 1137              	 .section .debug_info,"",%progbits
 1138              	.Ldebug_info0:
 1139 0000 FF040000 	 .4byte 0x4ff
 1140 0004 0400     	 .2byte 0x4
 1141 0006 00000000 	 .4byte .Ldebug_abbrev0
 1142 000a 04       	 .byte 0x4
 1143 000b 01       	 .uleb128 0x1
 1144 000c 4C010000 	 .4byte .LASF45
ARM GAS   			page 39


 1145 0010 04       	 .byte 0x4
 1146 0011 3F000000 	 .4byte .LASF46
 1147 0015 8A040000 	 .4byte .LASF47
 1148 0019 00000000 	 .4byte .Ldebug_ranges0+0
 1149 001d 00000000 	 .4byte 0
 1150 0021 00000000 	 .4byte .Ldebug_line0
 1151 0025 02       	 .uleb128 0x2
 1152 0026 04       	 .byte 0x4
 1153 0027 05       	 .byte 0x5
 1154 0028 696E7400 	 .ascii "int\000"
 1155 002c 03       	 .uleb128 0x3
 1156 002d 04       	 .byte 0x4
 1157 002e 07       	 .byte 0x7
 1158 002f EC030000 	 .4byte .LASF0
 1159 0033 03       	 .uleb128 0x3
 1160 0034 08       	 .byte 0x8
 1161 0035 05       	 .byte 0x5
 1162 0036 E1020000 	 .4byte .LASF1
 1163 003a 03       	 .uleb128 0x3
 1164 003b 08       	 .byte 0x8
 1165 003c 04       	 .byte 0x4
 1166 003d 4E030000 	 .4byte .LASF2
 1167 0041 04       	 .uleb128 0x4
 1168 0042 00000000 	 .4byte .LASF48
 1169 0046 03       	 .uleb128 0x3
 1170 0047 01       	 .byte 0x1
 1171 0048 06       	 .byte 0x6
 1172 0049 B4030000 	 .4byte .LASF3
 1173 004d 05       	 .uleb128 0x5
 1174 004e 32030000 	 .4byte .LASF8
 1175 0052 03       	 .byte 0x3
 1176 0053 2B       	 .byte 0x2b
 1177 0054 18       	 .byte 0x18
 1178 0055 59000000 	 .4byte 0x59
 1179 0059 03       	 .uleb128 0x3
 1180 005a 01       	 .byte 0x1
 1181 005b 08       	 .byte 0x8
 1182 005c 6F030000 	 .4byte .LASF4
 1183 0060 03       	 .uleb128 0x3
 1184 0061 02       	 .byte 0x2
 1185 0062 05       	 .byte 0x5
 1186 0063 21000000 	 .4byte .LASF5
 1187 0067 03       	 .uleb128 0x3
 1188 0068 02       	 .byte 0x2
 1189 0069 07       	 .byte 0x7
 1190 006a 3D040000 	 .4byte .LASF6
 1191 006e 03       	 .uleb128 0x3
 1192 006f 04       	 .byte 0x4
 1193 0070 05       	 .byte 0x5
 1194 0071 0C030000 	 .4byte .LASF7
 1195 0075 05       	 .uleb128 0x5
 1196 0076 E3000000 	 .4byte .LASF9
 1197 007a 03       	 .byte 0x3
 1198 007b 4F       	 .byte 0x4f
 1199 007c 19       	 .byte 0x19
 1200 007d 81000000 	 .4byte 0x81
 1201 0081 03       	 .uleb128 0x3
ARM GAS   			page 40


 1202 0082 04       	 .byte 0x4
 1203 0083 07       	 .byte 0x7
 1204 0084 E9040000 	 .4byte .LASF10
 1205 0088 03       	 .uleb128 0x3
 1206 0089 08       	 .byte 0x8
 1207 008a 07       	 .byte 0x7
 1208 008b C0030000 	 .4byte .LASF11
 1209 008f 05       	 .uleb128 0x5
 1210 0090 2A010000 	 .4byte .LASF12
 1211 0094 04       	 .byte 0x4
 1212 0095 18       	 .byte 0x18
 1213 0096 13       	 .byte 0x13
 1214 0097 4D000000 	 .4byte 0x4d
 1215 009b 06       	 .uleb128 0x6
 1216 009c 8F000000 	 .4byte 0x8f
 1217 00a0 07       	 .uleb128 0x7
 1218 00a1 9B000000 	 .4byte 0x9b
 1219 00a5 07       	 .uleb128 0x7
 1220 00a6 8F000000 	 .4byte 0x8f
 1221 00aa 05       	 .uleb128 0x5
 1222 00ab D7030000 	 .4byte .LASF13
 1223 00af 04       	 .byte 0x4
 1224 00b0 30       	 .byte 0x30
 1225 00b1 14       	 .byte 0x14
 1226 00b2 75000000 	 .4byte 0x75
 1227 00b6 07       	 .uleb128 0x7
 1228 00b7 AA000000 	 .4byte 0xaa
 1229 00bb 08       	 .uleb128 0x8
 1230 00bc 7A040000 	 .4byte .LASF49
 1231 00c0 06       	 .byte 0x6
 1232 00c1 59       	 .byte 0x59
 1233 00c2 11       	 .byte 0x11
 1234 00c3 AA000000 	 .4byte 0xaa
 1235 00c7 05       	 .uleb128 0x5
 1236 00c8 12000000 	 .4byte .LASF14
 1237 00cc 05       	 .byte 0x5
 1238 00cd 4D       	 .byte 0x4d
 1239 00ce 10       	 .byte 0x10
 1240 00cf D3000000 	 .4byte 0xd3
 1241 00d3 09       	 .uleb128 0x9
 1242 00d4 04       	 .byte 0x4
 1243 00d5 D9000000 	 .4byte 0xd9
 1244 00d9 0A       	 .uleb128 0xa
 1245 00da E4000000 	 .4byte 0xe4
 1246 00de 0B       	 .uleb128 0xb
 1247 00df E4000000 	 .4byte 0xe4
 1248 00e3 00       	 .byte 0
 1249 00e4 0C       	 .uleb128 0xc
 1250 00e5 04       	 .byte 0x4
 1251 00e6 05       	 .uleb128 0x5
 1252 00e7 33050000 	 .4byte .LASF15
 1253 00eb 02       	 .byte 0x2
 1254 00ec 61       	 .byte 0x61
 1255 00ed 18       	 .byte 0x18
 1256 00ee AA000000 	 .4byte 0xaa
 1257 00f2 05       	 .uleb128 0x5
 1258 00f3 F9030000 	 .4byte .LASF16
ARM GAS   			page 41


 1259 00f7 02       	 .byte 0x2
 1260 00f8 62       	 .byte 0x62
 1261 00f9 0E       	 .byte 0xe
 1262 00fa 6E000000 	 .4byte 0x6e
 1263 00fe 05       	 .uleb128 0x5
 1264 00ff FB040000 	 .4byte .LASF17
 1265 0103 02       	 .byte 0x2
 1266 0104 63       	 .byte 0x63
 1267 0105 17       	 .byte 0x17
 1268 0106 81000000 	 .4byte 0x81
 1269 010a 05       	 .uleb128 0x5
 1270 010b EF020000 	 .4byte .LASF18
 1271 010f 02       	 .byte 0x2
 1272 0110 69       	 .byte 0x69
 1273 0111 13       	 .byte 0x13
 1274 0112 AA000000 	 .4byte 0xaa
 1275 0116 03       	 .uleb128 0x3
 1276 0117 01       	 .byte 0x1
 1277 0118 08       	 .byte 0x8
 1278 0119 75040000 	 .4byte .LASF19
 1279 011d 09       	 .uleb128 0x9
 1280 011e 04       	 .byte 0x4
 1281 011f E6000000 	 .4byte 0xe6
 1282 0123 0D       	 .uleb128 0xd
 1283 0124 3C030000 	 .4byte .LASF20
 1284 0128 01       	 .byte 0x1
 1285 0129 99       	 .byte 0x99
 1286 012a 14       	 .byte 0x14
 1287 012b FE000000 	 .4byte 0xfe
 1288 012f 05       	 .uleb128 0x5
 1289 0130 03       	 .byte 0x3
 1290 0131 00000000 	 .4byte _ZL17uxCriticalNesting
 1291 0135 0D       	 .uleb128 0xd
 1292 0136 5A030000 	 .4byte .LASF21
 1293 013a 01       	 .byte 0x1
 1294 013b D9       	 .byte 0xd9
 1295 013c 12       	 .byte 0x12
 1296 013d 8F000000 	 .4byte 0x8f
 1297 0141 05       	 .uleb128 0x5
 1298 0142 03       	 .byte 0x3
 1299 0143 00000000 	 .4byte _ZL20ucMaxSysCallPriority
 1300 0147 0D       	 .uleb128 0xd
 1301 0148 2A040000 	 .4byte .LASF22
 1302 014c 01       	 .byte 0x1
 1303 014d DA       	 .byte 0xda
 1304 014e 13       	 .byte 0x13
 1305 014f AA000000 	 .4byte 0xaa
 1306 0153 05       	 .uleb128 0x5
 1307 0154 03       	 .byte 0x3
 1308 0155 00000000 	 .4byte _ZL18ulMaxPRIGROUPValue
 1309 0159 0D       	 .uleb128 0xd
 1310 015a 16050000 	 .4byte .LASF23
 1311 015e 01       	 .byte 0x1
 1312 015f DB       	 .byte 0xdb
 1313 0160 29       	 .byte 0x29
 1314 0161 71010000 	 .4byte 0x171
 1315 0165 05       	 .uleb128 0x5
ARM GAS   			page 42


 1316 0166 03       	 .byte 0x3
 1317 0167 00000000 	 .4byte _ZL28pcInterruptPriorityRegisters
 1318 016b 09       	 .uleb128 0x9
 1319 016c 04       	 .byte 0x4
 1320 016d A0000000 	 .4byte 0xa0
 1321 0171 06       	 .uleb128 0x6
 1322 0172 6B010000 	 .4byte 0x16b
 1323 0176 0E       	 .uleb128 0xe
 1324 0177 C2020000 	 .4byte .LASF26
 1325 017b 01       	 .byte 0x1
 1326 017c BD02     	 .2byte 0x2bd
 1327 017e 07       	 .byte 0x7
 1328 017f 00000000 	 .4byte .LFB16
 1329 0183 88000000 	 .4byte .LFE16-.LFB16
 1330 0187 01       	 .uleb128 0x1
 1331 0188 9C       	 .byte 0x9c
 1332 0189 E6010000 	 .4byte 0x1e6
 1333 018d 0F       	 .uleb128 0xf
 1334 018e 7D030000 	 .4byte .LASF24
 1335 0192 01       	 .byte 0x1
 1336 0193 BF02     	 .2byte 0x2bf
 1337 0195 0B       	 .byte 0xb
 1338 0196 AA000000 	 .4byte 0xaa
 1339 019a 02       	 .uleb128 0x2
 1340 019b 91       	 .byte 0x91
 1341 019c 74       	 .sleb128 -12
 1342 019d 0F       	 .uleb128 0xf
 1343 019e A2030000 	 .4byte .LASF25
 1344 01a2 01       	 .byte 0x1
 1345 01a3 C002     	 .2byte 0x2c0
 1346 01a5 0A       	 .byte 0xa
 1347 01a6 8F000000 	 .4byte 0x8f
 1348 01aa 02       	 .uleb128 0x2
 1349 01ab 91       	 .byte 0x91
 1350 01ac 73       	 .sleb128 -13
 1351 01ad 10       	 .uleb128 0x10
 1352 01ae EC040000 	 .4byte 0x4ec
 1353 01b2 26000000 	 .4byte .LBB52
 1354 01b6 14000000 	 .4byte .LBE52-.LBB52
 1355 01ba 01       	 .byte 0x1
 1356 01bb E202     	 .2byte 0x2e2
 1357 01bd 04       	 .byte 0x4
 1358 01be CB010000 	 .4byte 0x1cb
 1359 01c2 11       	 .uleb128 0x11
 1360 01c3 F5040000 	 .4byte 0x4f5
 1361 01c7 02       	 .uleb128 0x2
 1362 01c8 91       	 .byte 0x91
 1363 01c9 6C       	 .sleb128 -20
 1364 01ca 00       	 .byte 0
 1365 01cb 12       	 .uleb128 0x12
 1366 01cc EC040000 	 .4byte 0x4ec
 1367 01d0 56000000 	 .4byte .LBB54
 1368 01d4 14000000 	 .4byte .LBE54-.LBB54
 1369 01d8 01       	 .byte 0x1
 1370 01d9 F202     	 .2byte 0x2f2
 1371 01db 03       	 .byte 0x3
 1372 01dc 11       	 .uleb128 0x11
ARM GAS   			page 43


 1373 01dd F5040000 	 .4byte 0x4f5
 1374 01e1 02       	 .uleb128 0x2
 1375 01e2 91       	 .byte 0x91
 1376 01e3 68       	 .sleb128 -24
 1377 01e4 00       	 .byte 0
 1378 01e5 00       	 .byte 0
 1379 01e6 13       	 .uleb128 0x13
 1380 01e7 99050000 	 .4byte .LASF34
 1381 01eb 01       	 .byte 0x1
 1382 01ec AD02     	 .2byte 0x2ad
 1383 01ee 0D       	 .byte 0xd
 1384 01ef 00000000 	 .4byte .LFB15
 1385 01f3 10000000 	 .4byte .LFE15-.LFB15
 1386 01f7 01       	 .uleb128 0x1
 1387 01f8 9C       	 .byte 0x9c
 1388 01f9 14       	 .uleb128 0x14
 1389 01fa 11040000 	 .4byte .LASF50
 1390 01fe 01       	 .byte 0x1
 1391 01ff 9B02     	 .2byte 0x29b
 1392 0201 1E       	 .byte 0x1e
 1393 0202 FB000000 	 .4byte .LASF51
 1394 0206 00000000 	 .4byte .LFB14
 1395 020a 38000000 	 .4byte .LFE14-.LFB14
 1396 020e 01       	 .uleb128 0x1
 1397 020f 9C       	 .byte 0x9c
 1398 0210 15       	 .uleb128 0x15
 1399 0211 3F050000 	 .4byte .LASF27
 1400 0215 01       	 .byte 0x1
 1401 0216 EB01     	 .2byte 0x1eb
 1402 0218 06       	 .byte 0x6
 1403 0219 00000000 	 .4byte .LFB13
 1404 021d 54000000 	 .4byte .LFE13-.LFB13
 1405 0221 01       	 .uleb128 0x1
 1406 0222 9C       	 .byte 0x9c
 1407 0223 68020000 	 .4byte 0x268
 1408 0227 10       	 .uleb128 0x10
 1409 0228 C2040000 	 .4byte 0x4c2
 1410 022c 06000000 	 .4byte .LBB48
 1411 0230 18000000 	 .4byte .LBE48-.LBB48
 1412 0234 01       	 .byte 0x1
 1413 0235 F101     	 .2byte 0x1f1
 1414 0237 0B       	 .byte 0xb
 1415 0238 4D020000 	 .4byte 0x24d
 1416 023c 11       	 .uleb128 0x11
 1417 023d D3040000 	 .4byte 0x4d3
 1418 0241 02       	 .uleb128 0x2
 1419 0242 91       	 .byte 0x91
 1420 0243 74       	 .sleb128 -12
 1421 0244 11       	 .uleb128 0x11
 1422 0245 DF040000 	 .4byte 0x4df
 1423 0249 02       	 .uleb128 0x2
 1424 024a 91       	 .byte 0x91
 1425 024b 70       	 .sleb128 -16
 1426 024c 00       	 .byte 0
 1427 024d 12       	 .uleb128 0x12
 1428 024e A8040000 	 .4byte 0x4a8
 1429 0252 3E000000 	 .4byte .LBB50
ARM GAS   			page 44


 1430 0256 08000000 	 .4byte .LBE50-.LBB50
 1431 025a 01       	 .byte 0x1
 1432 025b FB01     	 .2byte 0x1fb
 1433 025d 02       	 .byte 0x2
 1434 025e 16       	 .uleb128 0x16
 1435 025f B5040000 	 .4byte 0x4b5
 1436 0263 02       	 .uleb128 0x2
 1437 0264 91       	 .byte 0x91
 1438 0265 6C       	 .sleb128 -20
 1439 0266 00       	 .byte 0
 1440 0267 00       	 .byte 0
 1441 0268 17       	 .uleb128 0x17
 1442 0269 4F050000 	 .4byte .LASF36
 1443 026d 01       	 .byte 0x1
 1444 026e B101     	 .2byte 0x1b1
 1445 0270 06       	 .byte 0x6
 1446 0271 00000000 	 .4byte .LFB12
 1447 0275 62000000 	 .4byte .LFE12-.LFB12
 1448 0279 01       	 .uleb128 0x1
 1449 027a 9C       	 .byte 0x9c
 1450 027b 0E       	 .uleb128 0xe
 1451 027c FA020000 	 .4byte .LASF28
 1452 0280 01       	 .byte 0x1
 1453 0281 A601     	 .2byte 0x1a6
 1454 0283 06       	 .byte 0x6
 1455 0284 00000000 	 .4byte .LFB11
 1456 0288 54000000 	 .4byte .LFE11-.LFB11
 1457 028c 01       	 .uleb128 0x1
 1458 028d 9C       	 .byte 0x9c
 1459 028e CB020000 	 .4byte 0x2cb
 1460 0292 10       	 .uleb128 0x10
 1461 0293 EC040000 	 .4byte 0x4ec
 1462 0297 0E000000 	 .4byte .LBB44
 1463 029b 14000000 	 .4byte .LBE44-.LBB44
 1464 029f 01       	 .byte 0x1
 1465 02a0 A801     	 .2byte 0x1a8
 1466 02a2 02       	 .byte 0x2
 1467 02a3 B0020000 	 .4byte 0x2b0
 1468 02a7 11       	 .uleb128 0x11
 1469 02a8 F5040000 	 .4byte 0x4f5
 1470 02ac 02       	 .uleb128 0x2
 1471 02ad 91       	 .byte 0x91
 1472 02ae 74       	 .sleb128 -12
 1473 02af 00       	 .byte 0
 1474 02b0 12       	 .uleb128 0x12
 1475 02b1 A8040000 	 .4byte 0x4a8
 1476 02b5 3A000000 	 .4byte .LBB46
 1477 02b9 08000000 	 .4byte .LBE46-.LBB46
 1478 02bd 01       	 .byte 0x1
 1479 02be AC01     	 .2byte 0x1ac
 1480 02c0 03       	 .byte 0x3
 1481 02c1 16       	 .uleb128 0x16
 1482 02c2 B5040000 	 .4byte 0x4b5
 1483 02c6 02       	 .uleb128 0x2
 1484 02c7 91       	 .byte 0x91
 1485 02c8 70       	 .sleb128 -16
 1486 02c9 00       	 .byte 0
ARM GAS   			page 45


 1487 02ca 00       	 .byte 0
 1488 02cb 0E       	 .uleb128 0xe
 1489 02cc 50040000 	 .4byte .LASF29
 1490 02d0 01       	 .byte 0x1
 1491 02d1 9501     	 .2byte 0x195
 1492 02d3 06       	 .byte 0x6
 1493 02d4 00000000 	 .4byte .LFB10
 1494 02d8 6C000000 	 .4byte .LFE10-.LFB10
 1495 02dc 01       	 .uleb128 0x1
 1496 02dd 9C       	 .byte 0x9c
 1497 02de 1B030000 	 .4byte 0x31b
 1498 02e2 10       	 .uleb128 0x10
 1499 02e3 EC040000 	 .4byte 0x4ec
 1500 02e7 06000000 	 .4byte .LBB40
 1501 02eb 14000000 	 .4byte .LBE40-.LBB40
 1502 02ef 01       	 .byte 0x1
 1503 02f0 9701     	 .2byte 0x197
 1504 02f2 02       	 .byte 0x2
 1505 02f3 00030000 	 .4byte 0x300
 1506 02f7 11       	 .uleb128 0x11
 1507 02f8 F5040000 	 .4byte 0x4f5
 1508 02fc 02       	 .uleb128 0x2
 1509 02fd 91       	 .byte 0x91
 1510 02fe 74       	 .sleb128 -12
 1511 02ff 00       	 .byte 0
 1512 0300 12       	 .uleb128 0x12
 1513 0301 EC040000 	 .4byte 0x4ec
 1514 0305 40000000 	 .4byte .LBB42
 1515 0309 14000000 	 .4byte .LBE42-.LBB42
 1516 030d 01       	 .byte 0x1
 1517 030e A101     	 .2byte 0x1a1
 1518 0310 03       	 .byte 0x3
 1519 0311 11       	 .uleb128 0x11
 1520 0312 F5040000 	 .4byte 0x4f5
 1521 0316 02       	 .uleb128 0x2
 1522 0317 91       	 .byte 0x91
 1523 0318 70       	 .sleb128 -16
 1524 0319 00       	 .byte 0
 1525 031a 00       	 .byte 0
 1526 031b 0E       	 .uleb128 0xe
 1527 031c 63040000 	 .4byte .LASF30
 1528 0320 01       	 .byte 0x1
 1529 0321 8D01     	 .2byte 0x18d
 1530 0323 06       	 .byte 0x6
 1531 0324 00000000 	 .4byte .LFB9
 1532 0328 38000000 	 .4byte .LFE9-.LFB9
 1533 032c 01       	 .uleb128 0x1
 1534 032d 9C       	 .byte 0x9c
 1535 032e 4D030000 	 .4byte 0x34d
 1536 0332 12       	 .uleb128 0x12
 1537 0333 EC040000 	 .4byte 0x4ec
 1538 0337 10000000 	 .4byte .LBB38
 1539 033b 14000000 	 .4byte .LBE38-.LBB38
 1540 033f 01       	 .byte 0x1
 1541 0340 9101     	 .2byte 0x191
 1542 0342 02       	 .byte 0x2
 1543 0343 11       	 .uleb128 0x11
ARM GAS   			page 46


 1544 0344 F5040000 	 .4byte 0x4f5
 1545 0348 02       	 .uleb128 0x2
 1546 0349 91       	 .byte 0x91
 1547 034a 74       	 .sleb128 -12
 1548 034b 00       	 .byte 0
 1549 034c 00       	 .byte 0
 1550 034d 18       	 .uleb128 0x18
 1551 034e 2B000000 	 .4byte .LASF38
 1552 0352 01       	 .byte 0x1
 1553 0353 3601     	 .2byte 0x136
 1554 0355 0C       	 .byte 0xc
 1555 0356 F2000000 	 .4byte 0xf2
 1556 035a 00000000 	 .4byte .LFB8
 1557 035e 3C010000 	 .4byte .LFE8-.LFB8
 1558 0362 01       	 .uleb128 0x1
 1559 0363 9C       	 .byte 0x9c
 1560 0364 DF030000 	 .4byte 0x3df
 1561 0368 19       	 .uleb128 0x19
 1562 0369 5A000000 	 .4byte .LBB37
 1563 036d 78000000 	 .4byte .LBE37-.LBB37
 1564 0371 A6030000 	 .4byte 0x3a6
 1565 0375 0F       	 .uleb128 0xf
 1566 0376 32010000 	 .4byte .LASF31
 1567 037a 01       	 .byte 0x1
 1568 037b 4401     	 .2byte 0x144
 1569 037d 15       	 .byte 0x15
 1570 037e B6000000 	 .4byte 0xb6
 1571 0382 02       	 .uleb128 0x2
 1572 0383 91       	 .byte 0x91
 1573 0384 68       	 .sleb128 -24
 1574 0385 0F       	 .uleb128 0xf
 1575 0386 15030000 	 .4byte .LASF32
 1576 038a 01       	 .byte 0x1
 1577 038b 4501     	 .2byte 0x145
 1578 038d 1C       	 .byte 0x1c
 1579 038e E5030000 	 .4byte 0x3e5
 1580 0392 02       	 .uleb128 0x2
 1581 0393 91       	 .byte 0x91
 1582 0394 74       	 .sleb128 -12
 1583 0395 0F       	 .uleb128 0xf
 1584 0396 5E050000 	 .4byte .LASF33
 1585 039a 01       	 .byte 0x1
 1586 039b 4601     	 .2byte 0x146
 1587 039d 14       	 .byte 0x14
 1588 039e A5000000 	 .4byte 0xa5
 1589 03a2 02       	 .uleb128 0x2
 1590 03a3 91       	 .byte 0x91
 1591 03a4 67       	 .sleb128 -25
 1592 03a5 00       	 .byte 0
 1593 03a6 10       	 .uleb128 0x10
 1594 03a7 EC040000 	 .4byte 0x4ec
 1595 03ab 1A000000 	 .4byte .LBB33
 1596 03af 14000000 	 .4byte .LBE33-.LBB33
 1597 03b3 01       	 .byte 0x1
 1598 03b4 3F01     	 .2byte 0x13f
 1599 03b6 02       	 .byte 0x2
 1600 03b7 C4030000 	 .4byte 0x3c4
ARM GAS   			page 47


 1601 03bb 11       	 .uleb128 0x11
 1602 03bc F5040000 	 .4byte 0x4f5
 1603 03c0 02       	 .uleb128 0x2
 1604 03c1 91       	 .byte 0x91
 1605 03c2 70       	 .sleb128 -16
 1606 03c3 00       	 .byte 0
 1607 03c4 12       	 .uleb128 0x12
 1608 03c5 EC040000 	 .4byte 0x4ec
 1609 03c9 44000000 	 .4byte .LBB35
 1610 03cd 14000000 	 .4byte .LBE35-.LBB35
 1611 03d1 01       	 .byte 0x1
 1612 03d2 4001     	 .2byte 0x140
 1613 03d4 02       	 .byte 0x2
 1614 03d5 11       	 .uleb128 0x11
 1615 03d6 F5040000 	 .4byte 0x4f5
 1616 03da 02       	 .uleb128 0x2
 1617 03db 91       	 .byte 0x91
 1618 03dc 6C       	 .sleb128 -20
 1619 03dd 00       	 .byte 0
 1620 03de 00       	 .byte 0
 1621 03df 09       	 .uleb128 0x9
 1622 03e0 04       	 .byte 0x4
 1623 03e1 A5000000 	 .4byte 0xa5
 1624 03e5 06       	 .uleb128 0x6
 1625 03e6 DF030000 	 .4byte 0x3df
 1626 03ea 13       	 .uleb128 0x13
 1627 03eb AC020000 	 .4byte .LASF35
 1628 03ef 01       	 .byte 0x1
 1629 03f0 2201     	 .2byte 0x122
 1630 03f2 0D       	 .byte 0xd
 1631 03f3 00000000 	 .4byte .LFB7
 1632 03f7 1C000000 	 .4byte .LFE7-.LFB7
 1633 03fb 01       	 .uleb128 0x1
 1634 03fc 9C       	 .byte 0x9c
 1635 03fd 17       	 .uleb128 0x17
 1636 03fe E0030000 	 .4byte .LASF37
 1637 0402 01       	 .byte 0x1
 1638 0403 0F01     	 .2byte 0x10f
 1639 0405 06       	 .byte 0x6
 1640 0406 00000000 	 .4byte .LFB6
 1641 040a 22000000 	 .4byte .LFE6-.LFB6
 1642 040e 01       	 .uleb128 0x1
 1643 040f 9C       	 .byte 0x9c
 1644 0410 1A       	 .uleb128 0x1a
 1645 0411 19010000 	 .4byte .LASF52
 1646 0415 01       	 .byte 0x1
 1647 0416 0101     	 .2byte 0x101
 1648 0418 0D       	 .byte 0xd
 1649 0419 00000000 	 .4byte .LFB5
 1650 041d 40000000 	 .4byte .LFE5-.LFB5
 1651 0421 01       	 .uleb128 0x1
 1652 0422 9C       	 .byte 0x9c
 1653 0423 60040000 	 .4byte 0x460
 1654 0427 10       	 .uleb128 0x10
 1655 0428 EC040000 	 .4byte 0x4ec
 1656 042c 10000000 	 .4byte .LBB29
 1657 0430 14000000 	 .4byte .LBE29-.LBB29
ARM GAS   			page 48


 1658 0434 01       	 .byte 0x1
 1659 0435 0901     	 .2byte 0x109
 1660 0437 02       	 .byte 0x2
 1661 0438 45040000 	 .4byte 0x445
 1662 043c 11       	 .uleb128 0x11
 1663 043d F5040000 	 .4byte 0x4f5
 1664 0441 02       	 .uleb128 0x2
 1665 0442 91       	 .byte 0x91
 1666 0443 74       	 .sleb128 -12
 1667 0444 00       	 .byte 0
 1668 0445 12       	 .uleb128 0x12
 1669 0446 EC040000 	 .4byte 0x4ec
 1670 044a 26000000 	 .4byte .LBB31
 1671 044e 14000000 	 .4byte .LBE31-.LBB31
 1672 0452 01       	 .byte 0x1
 1673 0453 0A01     	 .2byte 0x10a
 1674 0455 02       	 .byte 0x2
 1675 0456 11       	 .uleb128 0x11
 1676 0457 F5040000 	 .4byte 0x4f5
 1677 045b 02       	 .uleb128 0x2
 1678 045c 91       	 .byte 0x91
 1679 045d 70       	 .sleb128 -16
 1680 045e 00       	 .byte 0
 1681 045f 00       	 .byte 0
 1682 0460 1B       	 .uleb128 0x1b
 1683 0461 71050000 	 .4byte .LASF39
 1684 0465 01       	 .byte 0x1
 1685 0466 E3       	 .byte 0xe3
 1686 0467 0E       	 .byte 0xe
 1687 0468 1D010000 	 .4byte 0x11d
 1688 046c 00000000 	 .4byte .LFB4
 1689 0470 64000000 	 .4byte .LFE4-.LFB4
 1690 0474 01       	 .uleb128 0x1
 1691 0475 9C       	 .byte 0x9c
 1692 0476 A8040000 	 .4byte 0x4a8
 1693 047a 1C       	 .uleb128 0x1c
 1694 047b EE000000 	 .4byte .LASF40
 1695 047f 01       	 .byte 0x1
 1696 0480 E3       	 .byte 0xe3
 1697 0481 32       	 .byte 0x32
 1698 0482 1D010000 	 .4byte 0x11d
 1699 0486 02       	 .uleb128 0x2
 1700 0487 91       	 .byte 0x91
 1701 0488 74       	 .sleb128 -12
 1702 0489 1C       	 .uleb128 0x1c
 1703 048a 45010000 	 .4byte .LASF41
 1704 048e 01       	 .byte 0x1
 1705 048f E3       	 .byte 0xe3
 1706 0490 4F       	 .byte 0x4f
 1707 0491 C7000000 	 .4byte 0xc7
 1708 0495 02       	 .uleb128 0x2
 1709 0496 91       	 .byte 0x91
 1710 0497 70       	 .sleb128 -16
 1711 0498 1C       	 .uleb128 0x1c
 1712 0499 04040000 	 .4byte .LASF42
 1713 049d 01       	 .byte 0x1
 1714 049e E3       	 .byte 0xe3
ARM GAS   			page 49


 1715 049f 5D       	 .byte 0x5d
 1716 04a0 E4000000 	 .4byte 0xe4
 1717 04a4 02       	 .uleb128 0x2
 1718 04a5 91       	 .byte 0x91
 1719 04a6 6C       	 .sleb128 -20
 1720 04a7 00       	 .byte 0
 1721 04a8 1D       	 .uleb128 0x1d
 1722 04a9 9C020000 	 .4byte .LASF53
 1723 04ad 02       	 .byte 0x2
 1724 04ae F7       	 .byte 0xf7
 1725 04af 1E       	 .byte 0x1e
 1726 04b0 03       	 .byte 0x3
 1727 04b1 C2040000 	 .4byte 0x4c2
 1728 04b5 1E       	 .uleb128 0x1e
 1729 04b6 07050000 	 .4byte .LASF54
 1730 04ba 02       	 .byte 0x2
 1731 04bb F7       	 .byte 0xf7
 1732 04bc 38       	 .byte 0x38
 1733 04bd AA000000 	 .4byte 0xaa
 1734 04c1 00       	 .byte 0
 1735 04c2 1F       	 .uleb128 0x1f
 1736 04c3 89020000 	 .4byte .LASF55
 1737 04c7 02       	 .byte 0x2
 1738 04c8 E3       	 .byte 0xe3
 1739 04c9 22       	 .byte 0x22
 1740 04ca AA000000 	 .4byte 0xaa
 1741 04ce 03       	 .byte 0x3
 1742 04cf EC040000 	 .4byte 0x4ec
 1743 04d3 20       	 .uleb128 0x20
 1744 04d4 90030000 	 .4byte .LASF43
 1745 04d8 02       	 .byte 0x2
 1746 04d9 E5       	 .byte 0xe5
 1747 04da 0A       	 .byte 0xa
 1748 04db AA000000 	 .4byte 0xaa
 1749 04df 20       	 .uleb128 0x20
 1750 04e0 A8050000 	 .4byte .LASF44
 1751 04e4 02       	 .byte 0x2
 1752 04e5 E5       	 .byte 0xe5
 1753 04e6 1D       	 .byte 0x1d
 1754 04e7 AA000000 	 .4byte 0xaa
 1755 04eb 00       	 .byte 0
 1756 04ec 21       	 .uleb128 0x21
 1757 04ed 87050000 	 .4byte .LASF56
 1758 04f1 02       	 .byte 0x2
 1759 04f2 D3       	 .byte 0xd3
 1760 04f3 1E       	 .byte 0x1e
 1761 04f4 03       	 .byte 0x3
 1762 04f5 20       	 .uleb128 0x20
 1763 04f6 A8050000 	 .4byte .LASF44
 1764 04fa 02       	 .byte 0x2
 1765 04fb D5       	 .byte 0xd5
 1766 04fc 0A       	 .byte 0xa
 1767 04fd AA000000 	 .4byte 0xaa
 1768 0501 00       	 .byte 0
 1769 0502 00       	 .byte 0
 1770              	 .section .debug_abbrev,"",%progbits
 1771              	.Ldebug_abbrev0:
ARM GAS   			page 50


 1772 0000 01       	 .uleb128 0x1
 1773 0001 11       	 .uleb128 0x11
 1774 0002 01       	 .byte 0x1
 1775 0003 25       	 .uleb128 0x25
 1776 0004 0E       	 .uleb128 0xe
 1777 0005 13       	 .uleb128 0x13
 1778 0006 0B       	 .uleb128 0xb
 1779 0007 03       	 .uleb128 0x3
 1780 0008 0E       	 .uleb128 0xe
 1781 0009 1B       	 .uleb128 0x1b
 1782 000a 0E       	 .uleb128 0xe
 1783 000b 55       	 .uleb128 0x55
 1784 000c 17       	 .uleb128 0x17
 1785 000d 11       	 .uleb128 0x11
 1786 000e 01       	 .uleb128 0x1
 1787 000f 10       	 .uleb128 0x10
 1788 0010 17       	 .uleb128 0x17
 1789 0011 00       	 .byte 0
 1790 0012 00       	 .byte 0
 1791 0013 02       	 .uleb128 0x2
 1792 0014 24       	 .uleb128 0x24
 1793 0015 00       	 .byte 0
 1794 0016 0B       	 .uleb128 0xb
 1795 0017 0B       	 .uleb128 0xb
 1796 0018 3E       	 .uleb128 0x3e
 1797 0019 0B       	 .uleb128 0xb
 1798 001a 03       	 .uleb128 0x3
 1799 001b 08       	 .uleb128 0x8
 1800 001c 00       	 .byte 0
 1801 001d 00       	 .byte 0
 1802 001e 03       	 .uleb128 0x3
 1803 001f 24       	 .uleb128 0x24
 1804 0020 00       	 .byte 0
 1805 0021 0B       	 .uleb128 0xb
 1806 0022 0B       	 .uleb128 0xb
 1807 0023 3E       	 .uleb128 0x3e
 1808 0024 0B       	 .uleb128 0xb
 1809 0025 03       	 .uleb128 0x3
 1810 0026 0E       	 .uleb128 0xe
 1811 0027 00       	 .byte 0
 1812 0028 00       	 .byte 0
 1813 0029 04       	 .uleb128 0x4
 1814 002a 3B       	 .uleb128 0x3b
 1815 002b 00       	 .byte 0
 1816 002c 03       	 .uleb128 0x3
 1817 002d 0E       	 .uleb128 0xe
 1818 002e 00       	 .byte 0
 1819 002f 00       	 .byte 0
 1820 0030 05       	 .uleb128 0x5
 1821 0031 16       	 .uleb128 0x16
 1822 0032 00       	 .byte 0
 1823 0033 03       	 .uleb128 0x3
 1824 0034 0E       	 .uleb128 0xe
 1825 0035 3A       	 .uleb128 0x3a
 1826 0036 0B       	 .uleb128 0xb
 1827 0037 3B       	 .uleb128 0x3b
 1828 0038 0B       	 .uleb128 0xb
ARM GAS   			page 51


 1829 0039 39       	 .uleb128 0x39
 1830 003a 0B       	 .uleb128 0xb
 1831 003b 49       	 .uleb128 0x49
 1832 003c 13       	 .uleb128 0x13
 1833 003d 00       	 .byte 0
 1834 003e 00       	 .byte 0
 1835 003f 06       	 .uleb128 0x6
 1836 0040 26       	 .uleb128 0x26
 1837 0041 00       	 .byte 0
 1838 0042 49       	 .uleb128 0x49
 1839 0043 13       	 .uleb128 0x13
 1840 0044 00       	 .byte 0
 1841 0045 00       	 .byte 0
 1842 0046 07       	 .uleb128 0x7
 1843 0047 35       	 .uleb128 0x35
 1844 0048 00       	 .byte 0
 1845 0049 49       	 .uleb128 0x49
 1846 004a 13       	 .uleb128 0x13
 1847 004b 00       	 .byte 0
 1848 004c 00       	 .byte 0
 1849 004d 08       	 .uleb128 0x8
 1850 004e 34       	 .uleb128 0x34
 1851 004f 00       	 .byte 0
 1852 0050 03       	 .uleb128 0x3
 1853 0051 0E       	 .uleb128 0xe
 1854 0052 3A       	 .uleb128 0x3a
 1855 0053 0B       	 .uleb128 0xb
 1856 0054 3B       	 .uleb128 0x3b
 1857 0055 0B       	 .uleb128 0xb
 1858 0056 39       	 .uleb128 0x39
 1859 0057 0B       	 .uleb128 0xb
 1860 0058 49       	 .uleb128 0x49
 1861 0059 13       	 .uleb128 0x13
 1862 005a 3F       	 .uleb128 0x3f
 1863 005b 19       	 .uleb128 0x19
 1864 005c 3C       	 .uleb128 0x3c
 1865 005d 19       	 .uleb128 0x19
 1866 005e 00       	 .byte 0
 1867 005f 00       	 .byte 0
 1868 0060 09       	 .uleb128 0x9
 1869 0061 0F       	 .uleb128 0xf
 1870 0062 00       	 .byte 0
 1871 0063 0B       	 .uleb128 0xb
 1872 0064 0B       	 .uleb128 0xb
 1873 0065 49       	 .uleb128 0x49
 1874 0066 13       	 .uleb128 0x13
 1875 0067 00       	 .byte 0
 1876 0068 00       	 .byte 0
 1877 0069 0A       	 .uleb128 0xa
 1878 006a 15       	 .uleb128 0x15
 1879 006b 01       	 .byte 0x1
 1880 006c 01       	 .uleb128 0x1
 1881 006d 13       	 .uleb128 0x13
 1882 006e 00       	 .byte 0
 1883 006f 00       	 .byte 0
 1884 0070 0B       	 .uleb128 0xb
 1885 0071 05       	 .uleb128 0x5
ARM GAS   			page 52


 1886 0072 00       	 .byte 0
 1887 0073 49       	 .uleb128 0x49
 1888 0074 13       	 .uleb128 0x13
 1889 0075 00       	 .byte 0
 1890 0076 00       	 .byte 0
 1891 0077 0C       	 .uleb128 0xc
 1892 0078 0F       	 .uleb128 0xf
 1893 0079 00       	 .byte 0
 1894 007a 0B       	 .uleb128 0xb
 1895 007b 0B       	 .uleb128 0xb
 1896 007c 00       	 .byte 0
 1897 007d 00       	 .byte 0
 1898 007e 0D       	 .uleb128 0xd
 1899 007f 34       	 .uleb128 0x34
 1900 0080 00       	 .byte 0
 1901 0081 03       	 .uleb128 0x3
 1902 0082 0E       	 .uleb128 0xe
 1903 0083 3A       	 .uleb128 0x3a
 1904 0084 0B       	 .uleb128 0xb
 1905 0085 3B       	 .uleb128 0x3b
 1906 0086 0B       	 .uleb128 0xb
 1907 0087 39       	 .uleb128 0x39
 1908 0088 0B       	 .uleb128 0xb
 1909 0089 49       	 .uleb128 0x49
 1910 008a 13       	 .uleb128 0x13
 1911 008b 02       	 .uleb128 0x2
 1912 008c 18       	 .uleb128 0x18
 1913 008d 00       	 .byte 0
 1914 008e 00       	 .byte 0
 1915 008f 0E       	 .uleb128 0xe
 1916 0090 2E       	 .uleb128 0x2e
 1917 0091 01       	 .byte 0x1
 1918 0092 3F       	 .uleb128 0x3f
 1919 0093 19       	 .uleb128 0x19
 1920 0094 03       	 .uleb128 0x3
 1921 0095 0E       	 .uleb128 0xe
 1922 0096 3A       	 .uleb128 0x3a
 1923 0097 0B       	 .uleb128 0xb
 1924 0098 3B       	 .uleb128 0x3b
 1925 0099 05       	 .uleb128 0x5
 1926 009a 39       	 .uleb128 0x39
 1927 009b 0B       	 .uleb128 0xb
 1928 009c 11       	 .uleb128 0x11
 1929 009d 01       	 .uleb128 0x1
 1930 009e 12       	 .uleb128 0x12
 1931 009f 06       	 .uleb128 0x6
 1932 00a0 40       	 .uleb128 0x40
 1933 00a1 18       	 .uleb128 0x18
 1934 00a2 9742     	 .uleb128 0x2117
 1935 00a4 19       	 .uleb128 0x19
 1936 00a5 01       	 .uleb128 0x1
 1937 00a6 13       	 .uleb128 0x13
 1938 00a7 00       	 .byte 0
 1939 00a8 00       	 .byte 0
 1940 00a9 0F       	 .uleb128 0xf
 1941 00aa 34       	 .uleb128 0x34
 1942 00ab 00       	 .byte 0
ARM GAS   			page 53


 1943 00ac 03       	 .uleb128 0x3
 1944 00ad 0E       	 .uleb128 0xe
 1945 00ae 3A       	 .uleb128 0x3a
 1946 00af 0B       	 .uleb128 0xb
 1947 00b0 3B       	 .uleb128 0x3b
 1948 00b1 05       	 .uleb128 0x5
 1949 00b2 39       	 .uleb128 0x39
 1950 00b3 0B       	 .uleb128 0xb
 1951 00b4 49       	 .uleb128 0x49
 1952 00b5 13       	 .uleb128 0x13
 1953 00b6 02       	 .uleb128 0x2
 1954 00b7 18       	 .uleb128 0x18
 1955 00b8 00       	 .byte 0
 1956 00b9 00       	 .byte 0
 1957 00ba 10       	 .uleb128 0x10
 1958 00bb 1D       	 .uleb128 0x1d
 1959 00bc 01       	 .byte 0x1
 1960 00bd 31       	 .uleb128 0x31
 1961 00be 13       	 .uleb128 0x13
 1962 00bf 11       	 .uleb128 0x11
 1963 00c0 01       	 .uleb128 0x1
 1964 00c1 12       	 .uleb128 0x12
 1965 00c2 06       	 .uleb128 0x6
 1966 00c3 58       	 .uleb128 0x58
 1967 00c4 0B       	 .uleb128 0xb
 1968 00c5 59       	 .uleb128 0x59
 1969 00c6 05       	 .uleb128 0x5
 1970 00c7 57       	 .uleb128 0x57
 1971 00c8 0B       	 .uleb128 0xb
 1972 00c9 01       	 .uleb128 0x1
 1973 00ca 13       	 .uleb128 0x13
 1974 00cb 00       	 .byte 0
 1975 00cc 00       	 .byte 0
 1976 00cd 11       	 .uleb128 0x11
 1977 00ce 34       	 .uleb128 0x34
 1978 00cf 00       	 .byte 0
 1979 00d0 31       	 .uleb128 0x31
 1980 00d1 13       	 .uleb128 0x13
 1981 00d2 02       	 .uleb128 0x2
 1982 00d3 18       	 .uleb128 0x18
 1983 00d4 00       	 .byte 0
 1984 00d5 00       	 .byte 0
 1985 00d6 12       	 .uleb128 0x12
 1986 00d7 1D       	 .uleb128 0x1d
 1987 00d8 01       	 .byte 0x1
 1988 00d9 31       	 .uleb128 0x31
 1989 00da 13       	 .uleb128 0x13
 1990 00db 11       	 .uleb128 0x11
 1991 00dc 01       	 .uleb128 0x1
 1992 00dd 12       	 .uleb128 0x12
 1993 00de 06       	 .uleb128 0x6
 1994 00df 58       	 .uleb128 0x58
 1995 00e0 0B       	 .uleb128 0xb
 1996 00e1 59       	 .uleb128 0x59
 1997 00e2 05       	 .uleb128 0x5
 1998 00e3 57       	 .uleb128 0x57
 1999 00e4 0B       	 .uleb128 0xb
ARM GAS   			page 54


 2000 00e5 00       	 .byte 0
 2001 00e6 00       	 .byte 0
 2002 00e7 13       	 .uleb128 0x13
 2003 00e8 2E       	 .uleb128 0x2e
 2004 00e9 00       	 .byte 0
 2005 00ea 03       	 .uleb128 0x3
 2006 00eb 0E       	 .uleb128 0xe
 2007 00ec 3A       	 .uleb128 0x3a
 2008 00ed 0B       	 .uleb128 0xb
 2009 00ee 3B       	 .uleb128 0x3b
 2010 00ef 05       	 .uleb128 0x5
 2011 00f0 39       	 .uleb128 0x39
 2012 00f1 0B       	 .uleb128 0xb
 2013 00f2 11       	 .uleb128 0x11
 2014 00f3 01       	 .uleb128 0x1
 2015 00f4 12       	 .uleb128 0x12
 2016 00f5 06       	 .uleb128 0x6
 2017 00f6 40       	 .uleb128 0x40
 2018 00f7 18       	 .uleb128 0x18
 2019 00f8 9742     	 .uleb128 0x2117
 2020 00fa 19       	 .uleb128 0x19
 2021 00fb 00       	 .byte 0
 2022 00fc 00       	 .byte 0
 2023 00fd 14       	 .uleb128 0x14
 2024 00fe 2E       	 .uleb128 0x2e
 2025 00ff 00       	 .byte 0
 2026 0100 3F       	 .uleb128 0x3f
 2027 0101 19       	 .uleb128 0x19
 2028 0102 03       	 .uleb128 0x3
 2029 0103 0E       	 .uleb128 0xe
 2030 0104 3A       	 .uleb128 0x3a
 2031 0105 0B       	 .uleb128 0xb
 2032 0106 3B       	 .uleb128 0x3b
 2033 0107 05       	 .uleb128 0x5
 2034 0108 39       	 .uleb128 0x39
 2035 0109 0B       	 .uleb128 0xb
 2036 010a 6E       	 .uleb128 0x6e
 2037 010b 0E       	 .uleb128 0xe
 2038 010c 11       	 .uleb128 0x11
 2039 010d 01       	 .uleb128 0x1
 2040 010e 12       	 .uleb128 0x12
 2041 010f 06       	 .uleb128 0x6
 2042 0110 40       	 .uleb128 0x40
 2043 0111 18       	 .uleb128 0x18
 2044 0112 9742     	 .uleb128 0x2117
 2045 0114 19       	 .uleb128 0x19
 2046 0115 00       	 .byte 0
 2047 0116 00       	 .byte 0
 2048 0117 15       	 .uleb128 0x15
 2049 0118 2E       	 .uleb128 0x2e
 2050 0119 01       	 .byte 0x1
 2051 011a 3F       	 .uleb128 0x3f
 2052 011b 19       	 .uleb128 0x19
 2053 011c 03       	 .uleb128 0x3
 2054 011d 0E       	 .uleb128 0xe
 2055 011e 3A       	 .uleb128 0x3a
 2056 011f 0B       	 .uleb128 0xb
ARM GAS   			page 55


 2057 0120 3B       	 .uleb128 0x3b
 2058 0121 05       	 .uleb128 0x5
 2059 0122 39       	 .uleb128 0x39
 2060 0123 0B       	 .uleb128 0xb
 2061 0124 11       	 .uleb128 0x11
 2062 0125 01       	 .uleb128 0x1
 2063 0126 12       	 .uleb128 0x12
 2064 0127 06       	 .uleb128 0x6
 2065 0128 40       	 .uleb128 0x40
 2066 0129 18       	 .uleb128 0x18
 2067 012a 9642     	 .uleb128 0x2116
 2068 012c 19       	 .uleb128 0x19
 2069 012d 01       	 .uleb128 0x1
 2070 012e 13       	 .uleb128 0x13
 2071 012f 00       	 .byte 0
 2072 0130 00       	 .byte 0
 2073 0131 16       	 .uleb128 0x16
 2074 0132 05       	 .uleb128 0x5
 2075 0133 00       	 .byte 0
 2076 0134 31       	 .uleb128 0x31
 2077 0135 13       	 .uleb128 0x13
 2078 0136 02       	 .uleb128 0x2
 2079 0137 18       	 .uleb128 0x18
 2080 0138 00       	 .byte 0
 2081 0139 00       	 .byte 0
 2082 013a 17       	 .uleb128 0x17
 2083 013b 2E       	 .uleb128 0x2e
 2084 013c 00       	 .byte 0
 2085 013d 3F       	 .uleb128 0x3f
 2086 013e 19       	 .uleb128 0x19
 2087 013f 03       	 .uleb128 0x3
 2088 0140 0E       	 .uleb128 0xe
 2089 0141 3A       	 .uleb128 0x3a
 2090 0142 0B       	 .uleb128 0xb
 2091 0143 3B       	 .uleb128 0x3b
 2092 0144 05       	 .uleb128 0x5
 2093 0145 39       	 .uleb128 0x39
 2094 0146 0B       	 .uleb128 0xb
 2095 0147 11       	 .uleb128 0x11
 2096 0148 01       	 .uleb128 0x1
 2097 0149 12       	 .uleb128 0x12
 2098 014a 06       	 .uleb128 0x6
 2099 014b 40       	 .uleb128 0x40
 2100 014c 18       	 .uleb128 0x18
 2101 014d 9742     	 .uleb128 0x2117
 2102 014f 19       	 .uleb128 0x19
 2103 0150 00       	 .byte 0
 2104 0151 00       	 .byte 0
 2105 0152 18       	 .uleb128 0x18
 2106 0153 2E       	 .uleb128 0x2e
 2107 0154 01       	 .byte 0x1
 2108 0155 3F       	 .uleb128 0x3f
 2109 0156 19       	 .uleb128 0x19
 2110 0157 03       	 .uleb128 0x3
 2111 0158 0E       	 .uleb128 0xe
 2112 0159 3A       	 .uleb128 0x3a
 2113 015a 0B       	 .uleb128 0xb
ARM GAS   			page 56


 2114 015b 3B       	 .uleb128 0x3b
 2115 015c 05       	 .uleb128 0x5
 2116 015d 39       	 .uleb128 0x39
 2117 015e 0B       	 .uleb128 0xb
 2118 015f 49       	 .uleb128 0x49
 2119 0160 13       	 .uleb128 0x13
 2120 0161 11       	 .uleb128 0x11
 2121 0162 01       	 .uleb128 0x1
 2122 0163 12       	 .uleb128 0x12
 2123 0164 06       	 .uleb128 0x6
 2124 0165 40       	 .uleb128 0x40
 2125 0166 18       	 .uleb128 0x18
 2126 0167 9642     	 .uleb128 0x2116
 2127 0169 19       	 .uleb128 0x19
 2128 016a 01       	 .uleb128 0x1
 2129 016b 13       	 .uleb128 0x13
 2130 016c 00       	 .byte 0
 2131 016d 00       	 .byte 0
 2132 016e 19       	 .uleb128 0x19
 2133 016f 0B       	 .uleb128 0xb
 2134 0170 01       	 .byte 0x1
 2135 0171 11       	 .uleb128 0x11
 2136 0172 01       	 .uleb128 0x1
 2137 0173 12       	 .uleb128 0x12
 2138 0174 06       	 .uleb128 0x6
 2139 0175 01       	 .uleb128 0x1
 2140 0176 13       	 .uleb128 0x13
 2141 0177 00       	 .byte 0
 2142 0178 00       	 .byte 0
 2143 0179 1A       	 .uleb128 0x1a
 2144 017a 2E       	 .uleb128 0x2e
 2145 017b 01       	 .byte 0x1
 2146 017c 03       	 .uleb128 0x3
 2147 017d 0E       	 .uleb128 0xe
 2148 017e 3A       	 .uleb128 0x3a
 2149 017f 0B       	 .uleb128 0xb
 2150 0180 3B       	 .uleb128 0x3b
 2151 0181 05       	 .uleb128 0x5
 2152 0182 39       	 .uleb128 0x39
 2153 0183 0B       	 .uleb128 0xb
 2154 0184 11       	 .uleb128 0x11
 2155 0185 01       	 .uleb128 0x1
 2156 0186 12       	 .uleb128 0x12
 2157 0187 06       	 .uleb128 0x6
 2158 0188 40       	 .uleb128 0x40
 2159 0189 18       	 .uleb128 0x18
 2160 018a 9742     	 .uleb128 0x2117
 2161 018c 19       	 .uleb128 0x19
 2162 018d 01       	 .uleb128 0x1
 2163 018e 13       	 .uleb128 0x13
 2164 018f 00       	 .byte 0
 2165 0190 00       	 .byte 0
 2166 0191 1B       	 .uleb128 0x1b
 2167 0192 2E       	 .uleb128 0x2e
 2168 0193 01       	 .byte 0x1
 2169 0194 3F       	 .uleb128 0x3f
 2170 0195 19       	 .uleb128 0x19
ARM GAS   			page 57


 2171 0196 03       	 .uleb128 0x3
 2172 0197 0E       	 .uleb128 0xe
 2173 0198 3A       	 .uleb128 0x3a
 2174 0199 0B       	 .uleb128 0xb
 2175 019a 3B       	 .uleb128 0x3b
 2176 019b 0B       	 .uleb128 0xb
 2177 019c 39       	 .uleb128 0x39
 2178 019d 0B       	 .uleb128 0xb
 2179 019e 49       	 .uleb128 0x49
 2180 019f 13       	 .uleb128 0x13
 2181 01a0 11       	 .uleb128 0x11
 2182 01a1 01       	 .uleb128 0x1
 2183 01a2 12       	 .uleb128 0x12
 2184 01a3 06       	 .uleb128 0x6
 2185 01a4 40       	 .uleb128 0x40
 2186 01a5 18       	 .uleb128 0x18
 2187 01a6 9742     	 .uleb128 0x2117
 2188 01a8 19       	 .uleb128 0x19
 2189 01a9 01       	 .uleb128 0x1
 2190 01aa 13       	 .uleb128 0x13
 2191 01ab 00       	 .byte 0
 2192 01ac 00       	 .byte 0
 2193 01ad 1C       	 .uleb128 0x1c
 2194 01ae 05       	 .uleb128 0x5
 2195 01af 00       	 .byte 0
 2196 01b0 03       	 .uleb128 0x3
 2197 01b1 0E       	 .uleb128 0xe
 2198 01b2 3A       	 .uleb128 0x3a
 2199 01b3 0B       	 .uleb128 0xb
 2200 01b4 3B       	 .uleb128 0x3b
 2201 01b5 0B       	 .uleb128 0xb
 2202 01b6 39       	 .uleb128 0x39
 2203 01b7 0B       	 .uleb128 0xb
 2204 01b8 49       	 .uleb128 0x49
 2205 01b9 13       	 .uleb128 0x13
 2206 01ba 02       	 .uleb128 0x2
 2207 01bb 18       	 .uleb128 0x18
 2208 01bc 00       	 .byte 0
 2209 01bd 00       	 .byte 0
 2210 01be 1D       	 .uleb128 0x1d
 2211 01bf 2E       	 .uleb128 0x2e
 2212 01c0 01       	 .byte 0x1
 2213 01c1 03       	 .uleb128 0x3
 2214 01c2 0E       	 .uleb128 0xe
 2215 01c3 3A       	 .uleb128 0x3a
 2216 01c4 0B       	 .uleb128 0xb
 2217 01c5 3B       	 .uleb128 0x3b
 2218 01c6 0B       	 .uleb128 0xb
 2219 01c7 39       	 .uleb128 0x39
 2220 01c8 0B       	 .uleb128 0xb
 2221 01c9 20       	 .uleb128 0x20
 2222 01ca 0B       	 .uleb128 0xb
 2223 01cb 01       	 .uleb128 0x1
 2224 01cc 13       	 .uleb128 0x13
 2225 01cd 00       	 .byte 0
 2226 01ce 00       	 .byte 0
 2227 01cf 1E       	 .uleb128 0x1e
ARM GAS   			page 58


 2228 01d0 05       	 .uleb128 0x5
 2229 01d1 00       	 .byte 0
 2230 01d2 03       	 .uleb128 0x3
 2231 01d3 0E       	 .uleb128 0xe
 2232 01d4 3A       	 .uleb128 0x3a
 2233 01d5 0B       	 .uleb128 0xb
 2234 01d6 3B       	 .uleb128 0x3b
 2235 01d7 0B       	 .uleb128 0xb
 2236 01d8 39       	 .uleb128 0x39
 2237 01d9 0B       	 .uleb128 0xb
 2238 01da 49       	 .uleb128 0x49
 2239 01db 13       	 .uleb128 0x13
 2240 01dc 00       	 .byte 0
 2241 01dd 00       	 .byte 0
 2242 01de 1F       	 .uleb128 0x1f
 2243 01df 2E       	 .uleb128 0x2e
 2244 01e0 01       	 .byte 0x1
 2245 01e1 03       	 .uleb128 0x3
 2246 01e2 0E       	 .uleb128 0xe
 2247 01e3 3A       	 .uleb128 0x3a
 2248 01e4 0B       	 .uleb128 0xb
 2249 01e5 3B       	 .uleb128 0x3b
 2250 01e6 0B       	 .uleb128 0xb
 2251 01e7 39       	 .uleb128 0x39
 2252 01e8 0B       	 .uleb128 0xb
 2253 01e9 49       	 .uleb128 0x49
 2254 01ea 13       	 .uleb128 0x13
 2255 01eb 20       	 .uleb128 0x20
 2256 01ec 0B       	 .uleb128 0xb
 2257 01ed 01       	 .uleb128 0x1
 2258 01ee 13       	 .uleb128 0x13
 2259 01ef 00       	 .byte 0
 2260 01f0 00       	 .byte 0
 2261 01f1 20       	 .uleb128 0x20
 2262 01f2 34       	 .uleb128 0x34
 2263 01f3 00       	 .byte 0
 2264 01f4 03       	 .uleb128 0x3
 2265 01f5 0E       	 .uleb128 0xe
 2266 01f6 3A       	 .uleb128 0x3a
 2267 01f7 0B       	 .uleb128 0xb
 2268 01f8 3B       	 .uleb128 0x3b
 2269 01f9 0B       	 .uleb128 0xb
 2270 01fa 39       	 .uleb128 0x39
 2271 01fb 0B       	 .uleb128 0xb
 2272 01fc 49       	 .uleb128 0x49
 2273 01fd 13       	 .uleb128 0x13
 2274 01fe 00       	 .byte 0
 2275 01ff 00       	 .byte 0
 2276 0200 21       	 .uleb128 0x21
 2277 0201 2E       	 .uleb128 0x2e
 2278 0202 01       	 .byte 0x1
 2279 0203 03       	 .uleb128 0x3
 2280 0204 0E       	 .uleb128 0xe
 2281 0205 3A       	 .uleb128 0x3a
 2282 0206 0B       	 .uleb128 0xb
 2283 0207 3B       	 .uleb128 0x3b
 2284 0208 0B       	 .uleb128 0xb
ARM GAS   			page 59


 2285 0209 39       	 .uleb128 0x39
 2286 020a 0B       	 .uleb128 0xb
 2287 020b 20       	 .uleb128 0x20
 2288 020c 0B       	 .uleb128 0xb
 2289 020d 00       	 .byte 0
 2290 020e 00       	 .byte 0
 2291 020f 00       	 .byte 0
 2292              	 .section .debug_aranges,"",%progbits
 2293 0000 7C000000 	 .4byte 0x7c
 2294 0004 0200     	 .2byte 0x2
 2295 0006 00000000 	 .4byte .Ldebug_info0
 2296 000a 04       	 .byte 0x4
 2297 000b 00       	 .byte 0
 2298 000c 0000     	 .2byte 0
 2299 000e 0000     	 .2byte 0
 2300 0010 00000000 	 .4byte .LFB4
 2301 0014 64000000 	 .4byte .LFE4-.LFB4
 2302 0018 00000000 	 .4byte .LFB5
 2303 001c 40000000 	 .4byte .LFE5-.LFB5
 2304 0020 00000000 	 .4byte .LFB6
 2305 0024 22000000 	 .4byte .LFE6-.LFB6
 2306 0028 00000000 	 .4byte .LFB7
 2307 002c 1C000000 	 .4byte .LFE7-.LFB7
 2308 0030 00000000 	 .4byte .LFB8
 2309 0034 3C010000 	 .4byte .LFE8-.LFB8
 2310 0038 00000000 	 .4byte .LFB9
 2311 003c 38000000 	 .4byte .LFE9-.LFB9
 2312 0040 00000000 	 .4byte .LFB10
 2313 0044 6C000000 	 .4byte .LFE10-.LFB10
 2314 0048 00000000 	 .4byte .LFB11
 2315 004c 54000000 	 .4byte .LFE11-.LFB11
 2316 0050 00000000 	 .4byte .LFB12
 2317 0054 62000000 	 .4byte .LFE12-.LFB12
 2318 0058 00000000 	 .4byte .LFB13
 2319 005c 54000000 	 .4byte .LFE13-.LFB13
 2320 0060 00000000 	 .4byte .LFB14
 2321 0064 38000000 	 .4byte .LFE14-.LFB14
 2322 0068 00000000 	 .4byte .LFB15
 2323 006c 10000000 	 .4byte .LFE15-.LFB15
 2324 0070 00000000 	 .4byte .LFB16
 2325 0074 88000000 	 .4byte .LFE16-.LFB16
 2326 0078 00000000 	 .4byte 0
 2327 007c 00000000 	 .4byte 0
 2328              	 .section .debug_ranges,"",%progbits
 2329              	.Ldebug_ranges0:
 2330 0000 00000000 	 .4byte .LFB4
 2331 0004 64000000 	 .4byte .LFE4
 2332 0008 00000000 	 .4byte .LFB5
 2333 000c 40000000 	 .4byte .LFE5
 2334 0010 00000000 	 .4byte .LFB6
 2335 0014 22000000 	 .4byte .LFE6
 2336 0018 00000000 	 .4byte .LFB7
 2337 001c 1C000000 	 .4byte .LFE7
 2338 0020 00000000 	 .4byte .LFB8
 2339 0024 3C010000 	 .4byte .LFE8
 2340 0028 00000000 	 .4byte .LFB9
 2341 002c 38000000 	 .4byte .LFE9
ARM GAS   			page 60


 2342 0030 00000000 	 .4byte .LFB10
 2343 0034 6C000000 	 .4byte .LFE10
 2344 0038 00000000 	 .4byte .LFB11
 2345 003c 54000000 	 .4byte .LFE11
 2346 0040 00000000 	 .4byte .LFB12
 2347 0044 62000000 	 .4byte .LFE12
 2348 0048 00000000 	 .4byte .LFB13
 2349 004c 54000000 	 .4byte .LFE13
 2350 0050 00000000 	 .4byte .LFB14
 2351 0054 38000000 	 .4byte .LFE14
 2352 0058 00000000 	 .4byte .LFB15
 2353 005c 10000000 	 .4byte .LFE15
 2354 0060 00000000 	 .4byte .LFB16
 2355 0064 88000000 	 .4byte .LFE16
 2356 0068 00000000 	 .4byte 0
 2357 006c 00000000 	 .4byte 0
 2358              	 .section .debug_line,"",%progbits
 2359              	.Ldebug_line0:
 2360 0000 C7050000 	 .section .debug_str,"MS",%progbits,1
 2360      0300D502 
 2360      00000201 
 2360      FB0E0D00 
 2360      01010101 
 2361              	.LASF48:
 2362 0000 6465636C 	 .ascii "decltype(nullptr)\000"
 2362      74797065 
 2362      286E756C 
 2362      6C707472 
 2362      2900
 2363              	.LASF14:
 2364 0012 5461736B 	 .ascii "TaskFunction_t\000"
 2364      46756E63 
 2364      74696F6E 
 2364      5F7400
 2365              	.LASF5:
 2366 0021 73686F72 	 .ascii "short int\000"
 2366      7420696E 
 2366      7400
 2367              	.LASF38:
 2368 002b 78506F72 	 .ascii "xPortStartScheduler\000"
 2368      74537461 
 2368      72745363 
 2368      68656475 
 2368      6C657200 
 2369              	.LASF46:
 2370 003f 433A5C55 	 .ascii "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar "
 2370      73657273 
 2370      5C6E6965 
 2370      6C735C44 
 2370      6F63756D 
 2371 006d 325C4543 	 .ascii "2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gem"
 2371      535C4543 
 2371      534C5C73 
 2371      6F667477 
 2371      6172655C 
 2372 0099 65656E73 	 .ascii "eenschappelijk\\Third_Party\\FreeRTOS\\Source\\port"
 2372      63686170 
ARM GAS   			page 61


 2372      70656C69 
 2372      6A6B5C54 
 2372      68697264 
 2373 00c8 61626C65 	 .ascii "able\\GCC\\ARM_CM4F\\port.cpp\000"
 2373      5C474343 
 2373      5C41524D 
 2373      5F434D34 
 2373      465C706F 
 2374              	.LASF9:
 2375 00e3 5F5F7569 	 .ascii "__uint32_t\000"
 2375      6E743332 
 2375      5F7400
 2376              	.LASF40:
 2377 00ee 7078546F 	 .ascii "pxTopOfStack\000"
 2377      704F6653 
 2377      7461636B 
 2377      00
 2378              	.LASF51:
 2379 00fb 5F5A3234 	 .ascii "_Z24vPortSetupTimerInterruptv\000"
 2379      76506F72 
 2379      74536574 
 2379      75705469 
 2379      6D657249 
 2380              	.LASF52:
 2381 0119 70727654 	 .ascii "prvTaskExitError\000"
 2381      61736B45 
 2381      78697445 
 2381      72726F72 
 2381      00
 2382              	.LASF12:
 2383 012a 75696E74 	 .ascii "uint8_t\000"
 2383      385F7400 
 2384              	.LASF31:
 2385 0132 756C4F72 	 .ascii "ulOriginalPriority\000"
 2385      6967696E 
 2385      616C5072 
 2385      696F7269 
 2385      747900
 2386              	.LASF41:
 2387 0145 7078436F 	 .ascii "pxCode\000"
 2387      646500
 2388              	.LASF45:
 2389 014c 474E5520 	 .ascii "GNU C++11 10.3.1 20210824 (release) -mcpu=cortex-m4"
 2389      432B2B31 
 2389      31203130 
 2389      2E332E31 
 2389      20323032 
 2390 017f 202D6D66 	 .ascii " -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mfix-cortex-m3"
 2390      6C6F6174 
 2390      2D616269 
 2390      3D686172 
 2390      64202D6D 
 2391 01b2 2D6C6472 	 .ascii "-ldrd -mthumb -mno-unaligned-access -mapcs-frame -m"
 2391      64202D6D 
 2391      7468756D 
 2391      62202D6D 
 2391      6E6F2D75 
ARM GAS   			page 62


 2392 01e5 61726368 	 .ascii "arch=armv7e-m+fp -g -g -O0 -std=gnu++11 -fsingle-pr"
 2392      3D61726D 
 2392      7637652D 
 2392      6D2B6670 
 2392      202D6720 
 2393 0218 65636973 	 .ascii "ecision-constant -funsigned-char -ffunction-section"
 2393      696F6E2D 
 2393      636F6E73 
 2393      74616E74 
 2393      202D6675 
 2394 024b 73202D66 	 .ascii "s -fdata-sections -fno-rtti -fno-exceptions -finlin"
 2394      64617461 
 2394      2D736563 
 2394      74696F6E 
 2394      73202D66 
 2395 027e 652D6C69 	 .ascii "e-limit=20\000"
 2395      6D69743D 
 2395      323000
 2396              	.LASF55:
 2397 0289 756C506F 	 .ascii "ulPortRaiseBASEPRI\000"
 2397      72745261 
 2397      69736542 
 2397      41534550 
 2397      524900
 2398              	.LASF53:
 2399 029c 76506F72 	 .ascii "vPortSetBASEPRI\000"
 2399      74536574 
 2399      42415345 
 2399      50524900 
 2400              	.LASF35:
 2401 02ac 70727650 	 .ascii "prvPortStartFirstTask\000"
 2401      6F727453 
 2401      74617274 
 2401      46697273 
 2401      74546173 
 2402              	.LASF26:
 2403 02c2 76506F72 	 .ascii "vPortValidateInterruptPriority\000"
 2403      7456616C 
 2403      69646174 
 2403      65496E74 
 2403      65727275 
 2404              	.LASF1:
 2405 02e1 6C6F6E67 	 .ascii "long long int\000"
 2405      206C6F6E 
 2405      6720696E 
 2405      7400
 2406              	.LASF18:
 2407 02ef 5469636B 	 .ascii "TickType_t\000"
 2407      54797065 
 2407      5F7400
 2408              	.LASF28:
 2409 02fa 76506F72 	 .ascii "vPortExitCritical\000"
 2409      74457869 
 2409      74437269 
 2409      74696361 
 2409      6C00
 2410              	.LASF7:
ARM GAS   			page 63


 2411 030c 6C6F6E67 	 .ascii "long int\000"
 2411      20696E74 
 2411      00
 2412              	.LASF32:
 2413 0315 70756346 	 .ascii "pucFirstUserPriorityRegister\000"
 2413      69727374 
 2413      55736572 
 2413      5072696F 
 2413      72697479 
 2414              	.LASF8:
 2415 0332 5F5F7569 	 .ascii "__uint8_t\000"
 2415      6E74385F 
 2415      7400
 2416              	.LASF20:
 2417 033c 75784372 	 .ascii "uxCriticalNesting\000"
 2417      69746963 
 2417      616C4E65 
 2417      7374696E 
 2417      6700
 2418              	.LASF2:
 2419 034e 6C6F6E67 	 .ascii "long double\000"
 2419      20646F75 
 2419      626C6500 
 2420              	.LASF21:
 2421 035a 75634D61 	 .ascii "ucMaxSysCallPriority\000"
 2421      78537973 
 2421      43616C6C 
 2421      5072696F 
 2421      72697479 
 2422              	.LASF4:
 2423 036f 756E7369 	 .ascii "unsigned char\000"
 2423      676E6564 
 2423      20636861 
 2423      7200
 2424              	.LASF24:
 2425 037d 756C4375 	 .ascii "ulCurrentInterrupt\000"
 2425      7272656E 
 2425      74496E74 
 2425      65727275 
 2425      707400
 2426              	.LASF43:
 2427 0390 756C4F72 	 .ascii "ulOriginalBASEPRI\000"
 2427      6967696E 
 2427      616C4241 
 2427      53455052 
 2427      4900
 2428              	.LASF25:
 2429 03a2 75634375 	 .ascii "ucCurrentPriority\000"
 2429      7272656E 
 2429      74507269 
 2429      6F726974 
 2429      7900
 2430              	.LASF3:
 2431 03b4 7369676E 	 .ascii "signed char\000"
 2431      65642063 
 2431      68617200 
 2432              	.LASF11:
ARM GAS   			page 64


 2433 03c0 6C6F6E67 	 .ascii "long long unsigned int\000"
 2433      206C6F6E 
 2433      6720756E 
 2433      7369676E 
 2433      65642069 
 2434              	.LASF13:
 2435 03d7 75696E74 	 .ascii "uint32_t\000"
 2435      33325F74 
 2435      00
 2436              	.LASF37:
 2437 03e0 5356435F 	 .ascii "SVC_Handler\000"
 2437      48616E64 
 2437      6C657200 
 2438              	.LASF0:
 2439 03ec 756E7369 	 .ascii "unsigned int\000"
 2439      676E6564 
 2439      20696E74 
 2439      00
 2440              	.LASF16:
 2441 03f9 42617365 	 .ascii "BaseType_t\000"
 2441      54797065 
 2441      5F7400
 2442              	.LASF42:
 2443 0404 70765061 	 .ascii "pvParameters\000"
 2443      72616D65 
 2443      74657273 
 2443      00
 2444              	.LASF50:
 2445 0411 76506F72 	 .ascii "vPortSetupTimerInterrupt\000"
 2445      74536574 
 2445      75705469 
 2445      6D657249 
 2445      6E746572 
 2446              	.LASF22:
 2447 042a 756C4D61 	 .ascii "ulMaxPRIGROUPValue\000"
 2447      78505249 
 2447      47524F55 
 2447      5056616C 
 2447      756500
 2448              	.LASF6:
 2449 043d 73686F72 	 .ascii "short unsigned int\000"
 2449      7420756E 
 2449      7369676E 
 2449      65642069 
 2449      6E7400
 2450              	.LASF29:
 2451 0450 76506F72 	 .ascii "vPortEnterCritical\000"
 2451      74456E74 
 2451      65724372 
 2451      69746963 
 2451      616C00
 2452              	.LASF30:
 2453 0463 76506F72 	 .ascii "vPortEndScheduler\000"
 2453      74456E64 
 2453      53636865 
 2453      64756C65 
 2453      7200
ARM GAS   			page 65


 2454              	.LASF19:
 2455 0475 63686172 	 .ascii "char\000"
 2455      00
 2456              	.LASF49:
 2457 047a 53797374 	 .ascii "SystemCoreClock\000"
 2457      656D436F 
 2457      7265436C 
 2457      6F636B00 
 2458              	.LASF47:
 2459 048a 433A5C55 	 .ascii "C:\\Users\\niels\\DOCUME~1\\ELEKTR~1\\JAAR2~1\\ECS\\"
 2459      73657273 
 2459      5C6E6965 
 2459      6C735C44 
 2459      4F43554D 
 2460 04b7 4543534C 	 .ascii "ECSL\\software\\STM32\\PRACTI~1\\CLion\\Debug\\Free"
 2460      5C736F66 
 2460      74776172 
 2460      655C5354 
 2460      4D33325C 
 2461 04e4 52544F53 	 .ascii "RTOS\000"
 2461      00
 2462              	.LASF10:
 2463 04e9 6C6F6E67 	 .ascii "long unsigned int\000"
 2463      20756E73 
 2463      69676E65 
 2463      6420696E 
 2463      7400
 2464              	.LASF17:
 2465 04fb 55426173 	 .ascii "UBaseType_t\000"
 2465      65547970 
 2465      655F7400 
 2466              	.LASF54:
 2467 0507 756C4E65 	 .ascii "ulNewMaskValue\000"
 2467      774D6173 
 2467      6B56616C 
 2467      756500
 2468              	.LASF23:
 2469 0516 7063496E 	 .ascii "pcInterruptPriorityRegisters\000"
 2469      74657272 
 2469      75707450 
 2469      72696F72 
 2469      69747952 
 2470              	.LASF15:
 2471 0533 53746163 	 .ascii "StackType_t\000"
 2471      6B547970 
 2471      655F7400 
 2472              	.LASF27:
 2473 053f 53797354 	 .ascii "SysTick_Handler\000"
 2473      69636B5F 
 2473      48616E64 
 2473      6C657200 
 2474              	.LASF36:
 2475 054f 50656E64 	 .ascii "PendSV_Handler\000"
 2475      53565F48 
 2475      616E646C 
 2475      657200
 2476              	.LASF33:
ARM GAS   			page 66


 2477 055e 75634D61 	 .ascii "ucMaxPriorityValue\000"
 2477      78507269 
 2477      6F726974 
 2477      7956616C 
 2477      756500
 2478              	.LASF39:
 2479 0571 7078506F 	 .ascii "pxPortInitialiseStack\000"
 2479      7274496E 
 2479      69746961 
 2479      6C697365 
 2479      53746163 
 2480              	.LASF56:
 2481 0587 76506F72 	 .ascii "vPortRaiseBASEPRI\000"
 2481      74526169 
 2481      73654241 
 2481      53455052 
 2481      4900
 2482              	.LASF34:
 2483 0599 76506F72 	 .ascii "vPortEnableVFP\000"
 2483      74456E61 
 2483      626C6556 
 2483      465000
 2484              	.LASF44:
 2485 05a8 756C4E65 	 .ascii "ulNewBASEPRI\000"
 2485      77424153 
 2485      45505249 
 2485      00
 2486              	 .ident "GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
