ARM GAS   			page 1


   1              	 .cpu cortex-m4
   2              	 .arch armv7e-m
   3              	 .fpu fpv4-sp-d16
   4              	 .eabi_attribute 27,1
   5              	 .eabi_attribute 28,1
   6              	 .eabi_attribute 20,1
   7              	 .eabi_attribute 21,1
   8              	 .eabi_attribute 23,3
   9              	 .eabi_attribute 24,1
  10              	 .eabi_attribute 25,1
  11              	 .eabi_attribute 26,1
  12              	 .eabi_attribute 30,6
  13              	 .eabi_attribute 34,0
  14              	 .eabi_attribute 18,4
  15              	 .file "event_groups.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.xEventGroupCreate,"ax",%progbits
  20              	 .align 1
  21              	 .global xEventGroupCreate
  22              	 .syntax unified
  23              	 .thumb
  24              	 .thumb_func
  25              	 .type xEventGroupCreate,%function
  26              	xEventGroupCreate:
  27              	 .fnstart
  28              	.LFB11:
  29              	 .file 1 "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar 2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gemeenschappelijk\\Third_Party\\FreeRTOS\\Source\\event_groups.c"
   1:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*
   2:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     All rights reserved
   4:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
   5:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
   7:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     This file is part of the FreeRTOS distribution.
   8:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
   9:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  13:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     ***************************************************************************
  14:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     ***************************************************************************
  19:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  20:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     link: http://www.freertos.org/a00114.html
  24:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  25:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     ***************************************************************************
  26:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *                                                                       *
  27:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    robust, strictly quality controlled, supported, and cross          *
ARM GAS   			page 2


  29:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    platform software that is more than just the market leader, it     *
  30:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    is the industry's de facto standard.                               *
  31:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *                                                                       *
  32:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    tutorial book, reference manual, or both:                          *
  35:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****      *                                                                       *
  37:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     ***************************************************************************
  38:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  39:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     defined configASSERT()?
  42:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  43:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     embedded software for free we request you assist our global community by
  45:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     participating in the support forum.
  46:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  47:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     be as productive as possible as early as possible.  Now you can receive
  49:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  52:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  56:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  59:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  63:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     engineered and independently SIL3 certified version for use in safety and
  65:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     mission critical applications that require provable dependability.
  66:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  67:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****     1 tab == 4 spaces!
  68:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** */
  69:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  70:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* Standard includes. */
  71:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #include <stdlib.h>
  72:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  73:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** task.h is included from an application file. */
  76:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  78:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* FreeRTOS includes. */
  79:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #include "FreeRTOS.h"
  80:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #include "task.h"
  81:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #include "timers.h"
  82:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #include "event_groups.h"
  83:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  84:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  85:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
ARM GAS   			page 3


  86:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** header files above, but not in this file, in order to generate the correct
  87:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** privileged Vs unprivileged linkage and placement. */
  88:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  89:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  90:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if ( INCLUDE_xEventGroupSetBitFromISR == 1 ) && ( configUSE_TIMERS == 0 )
  91:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#error configUSE_TIMERS must be set to 1 to make the xEventGroupSetBitFromISR() function available
  92:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #endif
  93:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  94:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if ( INCLUDE_xEventGroupSetBitFromISR == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 0 )
  95:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#error INCLUDE_xTimerPendFunctionCall must also be set to one to make the xEventGroupSetBitFromISR
  96:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #endif
  97:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
  98:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* The following bit fields convey control information in a task's event list
  99:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** item value.  It is important they don't clash with the
 100:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
 101:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if configUSE_16_BIT_TICKS == 1
 102:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
 103:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
 104:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
 105:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
 106:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #else
 107:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
 108:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
 109:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
 110:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
 111:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #endif
 112:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 113:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** typedef struct xEventGroupDefinition
 114:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 115:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	EventBits_t uxEventBits;
 116:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
 117:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 118:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 119:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		UBaseType_t uxEventGroupNumber;
 120:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#endif
 121:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 122:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** } EventGroup_t;
 123:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 124:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 125:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 126:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*
 127:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
 128:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
 129:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
 130:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
 131:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
 132:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  * in uxCurrentEventBits.
 133:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c ****  */
 134:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 135:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 136:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 137:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 138:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroupHandle_t xEventGroupCreate( void )
 139:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
  30              	 .loc 1 139 1
  31              	 .cfi_startproc
  32              	 
ARM GAS   			page 4


  33              	 
  34 0000 80B5     	 push {r7,lr}
  35              	 .save {r7,lr}
  36              	 .cfi_def_cfa_offset 8
  37              	 .cfi_offset 7,-8
  38              	 .cfi_offset 14,-4
  39              	 .pad #8
  40 0002 82B0     	 sub sp,sp,#8
  41              	 .cfi_def_cfa_offset 16
  42              	 .setfp r7,sp,#0
  43 0004 00AF     	 add r7,sp,#0
  44              	 .cfi_def_cfa_register 7
 140:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits;
 141:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 142:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
  45              	 .loc 1 142 47
  46 0006 1C20     	 movs r0,#28
  47 0008 FFF7FEFF 	 bl pvPortMalloc
  48 000c 0346     	 mov r3,r0
  49 000e 7B60     	 str r3,[r7,#4]
 143:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	if( pxEventBits != NULL )
  50              	 .loc 1 143 2
  51 0010 7B68     	 ldr r3,[r7,#4]
  52 0012 002B     	 cmp r3,#0
  53 0014 07D0     	 beq .L2
 144:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 145:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		pxEventBits->uxEventBits = 0;
  54              	 .loc 1 145 28
  55 0016 7B68     	 ldr r3,[r7,#4]
  56 0018 0022     	 movs r2,#0
  57 001a 1A60     	 str r2,[r3]
 146:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  58              	 .loc 1 146 18
  59 001c 7B68     	 ldr r3,[r7,#4]
  60 001e 0433     	 adds r3,r3,#4
  61 0020 1846     	 mov r0,r3
  62 0022 FFF7FEFF 	 bl vListInitialise
  63              	.L2:
 147:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_CREATE( pxEventBits );
 148:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 149:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	else
 150:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 151:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_CREATE_FAILED();
 152:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 153:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 154:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return ( EventGroupHandle_t ) pxEventBits;
  64              	 .loc 1 154 32
  65 0026 7B68     	 ldr r3,[r7,#4]
 155:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
  66              	 .loc 1 155 1
  67 0028 1846     	 mov r0,r3
  68 002a 0837     	 adds r7,r7,#8
  69              	 .cfi_def_cfa_offset 8
  70 002c BD46     	 mov sp,r7
  71              	 .cfi_def_cfa_register 13
  72              	 
  73 002e 80BD     	 pop {r7,pc}
ARM GAS   			page 5


  74              	 .cfi_endproc
  75              	.LFE11:
  76              	 .fnend
  77              	 .size xEventGroupCreate,.-xEventGroupCreate
  78              	 .section .text.xEventGroupSync,"ax",%progbits
  79              	 .align 1
  80              	 .global xEventGroupSync
  81              	 .syntax unified
  82              	 .thumb
  83              	 .thumb_func
  84              	 .type xEventGroupSync,%function
  85              	xEventGroupSync:
  86              	 .fnstart
  87              	.LFB12:
 156:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 157:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 158:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 159:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
  88              	 .loc 1 159 1
  89              	 .cfi_startproc
  90              	 
  91              	 
  92 0000 80B5     	 push {r7,lr}
  93              	 .save {r7,lr}
  94              	 .cfi_def_cfa_offset 8
  95              	 .cfi_offset 7,-8
  96              	 .cfi_offset 14,-4
  97              	 .pad #48
  98 0002 8CB0     	 sub sp,sp,#48
  99              	 .cfi_def_cfa_offset 56
 100              	 .setfp r7,sp,#0
 101 0004 00AF     	 add r7,sp,#0
 102              	 .cfi_def_cfa_register 7
 103 0006 F860     	 str r0,[r7,#12]
 104 0008 B960     	 str r1,[r7,#8]
 105 000a 7A60     	 str r2,[r7,#4]
 106 000c 3B60     	 str r3,[r7]
 160:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 161:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 107              	 .loc 1 161 15
 108 000e FB68     	 ldr r3,[r7,#12]
 109 0010 BB62     	 str r3,[r7,#40]
 162:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xAlreadyYielded;
 163:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 110              	 .loc 1 163 12
 111 0012 0023     	 movs r3,#0
 112 0014 7B62     	 str r3,[r7,#36]
 164:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 165:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 113              	 .loc 1 165 2
 114 0016 7B68     	 ldr r3,[r7,#4]
 115 0018 03F07F43 	 and r3,r3,#-16777216
 116 001c 002B     	 cmp r3,#0
 117 001e 0AD0     	 beq .L5
 118              	.LBB31:
 119              	.LBB32:
 120              	 .file 2 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
ARM GAS   			page 6


   1:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*
   2:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS V8.2.3 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     All rights reserved
   4:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   5:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   7:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
   9:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  13:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  14:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  19:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  20:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  25:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  26:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  27:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    is the industry's de facto standard.                               *
  31:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  32:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****      *                                                                       *
  37:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     ***************************************************************************
  38:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  39:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     defined configASSERT()?
  42:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  43:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     embedded software for free we request you assist our global community by
  45:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     participating in the support forum.
  46:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  47:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  52:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  56:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
ARM GAS   			page 7


  58:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  59:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  63:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     mission critical applications that require provable dependability.
  66:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  67:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****     1 tab == 4 spaces!
  68:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** */
  69:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  70:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  71:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef PORTMACRO_H
  72:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define PORTMACRO_H
  73:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  74:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef __cplusplus
  75:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern "C" {
  76:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
  77:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  78:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------
  79:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * Port specific definitions.
  80:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  81:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * given hardware and compiler.
  83:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *
  84:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  * These settings should not be altered.
  85:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  *-----------------------------------------------------------
  86:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h ****  */
  87:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  88:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Type definitions. */
  89:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCHAR		char
  90:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portFLOAT		float
  91:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDOUBLE		double
  92:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portLONG		long
  93:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSHORT		short
  94:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBASE_TYPE	long
  96:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
  97:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef long BaseType_t;
  99:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** typedef unsigned long UBaseType_t;
 100:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 101:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint16_t TickType_t;
 103:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #else
 105:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	typedef uint32_t TickType_t;
 106:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 108:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	not need to be guarded with a critical section. */
 110:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 112:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 113:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 114:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specifics. */
ARM GAS   			page 8


 115:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 119:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 120:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Scheduler utilities. */
 121:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD() 															\
 122:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {																				\
 123:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 																				\
 126:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "dsb" );													\
 129:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile( "isb" );													\
 130:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 131:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 132:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 137:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 138:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Critical section management. */
 139:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortEnterCritical( void );
 140:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** extern void vPortExitCritical( void );
 141:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 148:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 149:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 150:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** (which build with all the ports) will build. */
 153:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 156:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 157:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Tickless idle/low power functionality. */
 158:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 162:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 163:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 164:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* Architecture specific optimisations. */
 165:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 168:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 169:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 171:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Generic helper function. */
ARM GAS   			page 9


 172:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	{
 174:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	uint8_t ucReturn;
 175:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 176:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		return ucReturn;
 178:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	}
 179:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 180:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Check the configuration. */
 181:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#endif
 184:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 185:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 189:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/*-----------------------------------------------------------*/
 190:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 191:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31 - ucPort
 192:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 193:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 195:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 196:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 197:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifdef configASSERT
 198:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 201:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 202:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /* portNOP() is not required by this port. */
 203:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #define portNOP()
 204:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 205:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #ifndef portFORCE_INLINE
 206:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 207:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** #endif
 208:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 209:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 210:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 211:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 212:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 213:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulNewBASEPRI;
 214:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 121              	 .loc 2 215 2
 122              	 .syntax unified
 123              	
 124 0020 4FF01003 	 mov r3,#16
 125 0024 83F31188 	 msr basepri,r3
 126 0028 BFF36F8F 	 isb 
 127 002c BFF34F8F 	 dsb 
 128              	
 129              	
 130              	 .thumb
 131              	 .syntax unified
 132 0030 BB61     	 str r3,[r7,#24]
 216:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
ARM GAS   			page 10


 217:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %0, %1												\n"	\
 218:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0											\n" \
 219:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 220:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 221:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 222:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 133              	 .loc 2 223 1
 134 0032 00BF     	 nop
 135              	.L6:
 136              	.LBE32:
 137              	.LBE31:
 138              	 .loc 1 165 2 discriminator 1
 139 0034 FEE7     	 b .L6
 140              	.L5:
 166:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 141              	 .loc 1 166 2
 142 0036 7B68     	 ldr r3,[r7,#4]
 143 0038 002B     	 cmp r3,#0
 144 003a 0AD1     	 bne .L7
 145              	.LBB33:
 146              	.LBB34:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 147              	 .loc 2 215 2
 148              	 .syntax unified
 149              	
 150 003c 4FF01003 	 mov r3,#16
 151 0040 83F31188 	 msr basepri,r3
 152 0044 BFF36F8F 	 isb 
 153 0048 BFF34F8F 	 dsb 
 154              	
 155              	
 156              	 .thumb
 157              	 .syntax unified
 158 004c 7B61     	 str r3,[r7,#20]
 159              	 .loc 2 223 1
 160 004e 00BF     	 nop
 161              	.L8:
 162              	.LBE34:
 163              	.LBE33:
 164              	 .loc 1 166 2 discriminator 2
 165 0050 FEE7     	 b .L8
 166              	.L7:
 167:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 168:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 169:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 167              	 .loc 1 169 3
 168 0052 FFF7FEFF 	 bl xTaskGetSchedulerState
 169 0056 0346     	 mov r3,r0
 170 0058 002B     	 cmp r3,#0
 171 005a 02D1     	 bne .L9
 172              	 .loc 1 169 3 is_stmt 0 discriminator 2
 173 005c 3B68     	 ldr r3,[r7]
 174 005e 002B     	 cmp r3,#0
 175 0060 01D1     	 bne .L10
 176              	.L9:
 177              	 .loc 1 169 3 discriminator 3
ARM GAS   			page 11


 178 0062 0123     	 movs r3,#1
 179 0064 00E0     	 b .L11
 180              	.L10:
 181              	 .loc 1 169 3 discriminator 4
 182 0066 0023     	 movs r3,#0
 183              	.L11:
 184              	 .loc 1 169 3 discriminator 6
 185 0068 002B     	 cmp r3,#0
 186 006a 0CBF     	 ite eq
 187 006c 0123     	 moveq r3,#1
 188 006e 0023     	 movne r3,#0
 189 0070 DBB2     	 uxtb r3,r3
 190 0072 002B     	 cmp r3,#0
 191 0074 0AD0     	 beq .L12
 192              	.LBB35:
 193              	.LBB36:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 194              	 .loc 2 215 2 is_stmt 1
 195              	 .syntax unified
 196              	
 197 0076 4FF01003 	 mov r3,#16
 198 007a 83F31188 	 msr basepri,r3
 199 007e BFF36F8F 	 isb 
 200 0082 BFF34F8F 	 dsb 
 201              	
 202              	
 203              	 .thumb
 204              	 .syntax unified
 205 0086 3B61     	 str r3,[r7,#16]
 206              	 .loc 2 223 1
 207 0088 00BF     	 nop
 208              	.L13:
 209              	.LBE36:
 210              	.LBE35:
 211              	 .loc 1 169 3 discriminator 3
 212 008a FEE7     	 b .L13
 213              	.L12:
 170:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 171:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#endif
 172:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 173:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	vTaskSuspendAll();
 214              	 .loc 1 173 17
 215 008c FFF7FEFF 	 bl vTaskSuspendAll
 174:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 175:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 216              	 .loc 1 175 22
 217 0090 BB6A     	 ldr r3,[r7,#40]
 218 0092 1B68     	 ldr r3,[r3]
 219 0094 3B62     	 str r3,[r7,#32]
 176:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 177:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 220              	 .loc 1 177 30
 221 0096 B968     	 ldr r1,[r7,#8]
 222 0098 F868     	 ldr r0,[r7,#12]
 223 009a FFF7FEFF 	 bl xEventGroupSetBits
 178:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 179:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
ARM GAS   			page 12


 224              	 .loc 1 179 30
 225 009e 3A6A     	 ldr r2,[r7,#32]
 226 00a0 BB68     	 ldr r3,[r7,#8]
 227 00a2 1A43     	 orrs r2,r2,r3
 228              	 .loc 1 179 46
 229 00a4 7B68     	 ldr r3,[r7,#4]
 230 00a6 1340     	 ands r3,r3,r2
 231              	 .loc 1 179 3
 232 00a8 7A68     	 ldr r2,[r7,#4]
 233 00aa 9A42     	 cmp r2,r3
 234 00ac 0DD1     	 bne .L14
 180:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 181:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 182:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 235              	 .loc 1 182 13
 236 00ae 3A6A     	 ldr r2,[r7,#32]
 237 00b0 BB68     	 ldr r3,[r7,#8]
 238 00b2 1343     	 orrs r3,r3,r2
 239 00b4 FB62     	 str r3,[r7,#44]
 183:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 184:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 185:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			already unless this is the only task in the rendezvous. */
 186:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 240              	 .loc 1 186 29
 241 00b6 BB6A     	 ldr r3,[r7,#40]
 242 00b8 1A68     	 ldr r2,[r3]
 243              	 .loc 1 186 32
 244 00ba 7B68     	 ldr r3,[r7,#4]
 245 00bc DB43     	 mvns r3,r3
 246              	 .loc 1 186 29
 247 00be 1A40     	 ands r2,r2,r3
 248 00c0 BB6A     	 ldr r3,[r7,#40]
 249 00c2 1A60     	 str r2,[r3]
 187:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 188:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xTicksToWait = 0;
 250              	 .loc 1 188 17
 251 00c4 0023     	 movs r3,#0
 252 00c6 3B60     	 str r3,[r7]
 253 00c8 11E0     	 b .L15
 254              	.L14:
 189:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 190:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 191:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 192:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 255              	 .loc 1 192 4
 256 00ca 3B68     	 ldr r3,[r7]
 257 00cc 002B     	 cmp r3,#0
 258 00ce 0BD0     	 beq .L16
 193:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 194:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 195:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 196:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 197:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				task's event list item so the kernel knows when a match is
 198:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				found.  Then enter the blocked state. */
 199:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 259              	 .loc 1 199 35
 260 00d0 BB6A     	 ldr r3,[r7,#40]
ARM GAS   			page 13


 261 00d2 181D     	 adds r0,r3,#4
 262 00d4 7B68     	 ldr r3,[r7,#4]
 263 00d6 43F0A063 	 orr r3,r3,#83886080
 264 00da 3A68     	 ldr r2,[r7]
 265 00dc 1946     	 mov r1,r3
 266 00de FFF7FEFF 	 bl vTaskPlaceOnUnorderedEventList
 200:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 201:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 202:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 203:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				warning about uxReturn being returned without being set if the
 204:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				assignment is omitted. */
 205:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxReturn = 0;
 267              	 .loc 1 205 14
 268 00e2 0023     	 movs r3,#0
 269 00e4 FB62     	 str r3,[r7,#44]
 270 00e6 02E0     	 b .L15
 271              	.L16:
 206:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 207:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else
 208:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 209:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 210:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				specified - just return the current event bit value. */
 211:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 272              	 .loc 1 211 14
 273 00e8 BB6A     	 ldr r3,[r7,#40]
 274 00ea 1B68     	 ldr r3,[r3]
 275 00ec FB62     	 str r3,[r7,#44]
 276              	.L15:
 212:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 213:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 214:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 215:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 277              	 .loc 1 215 34
 278 00ee FFF7FEFF 	 bl xTaskResumeAll
 279 00f2 0346     	 mov r3,r0
 280 00f4 FB61     	 str r3,[r7,#28]
 216:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 217:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 281              	 .loc 1 217 2
 282 00f6 3B68     	 ldr r3,[r7]
 283 00f8 002B     	 cmp r3,#0
 284 00fa 2DD0     	 beq .L17
 218:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 219:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 285              	 .loc 1 219 3
 286 00fc FB69     	 ldr r3,[r7,#28]
 287 00fe 002B     	 cmp r3,#0
 288 0100 07D1     	 bne .L18
 220:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 221:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			portYIELD_WITHIN_API();
 289              	 .loc 1 221 4
 290 0102 184B     	 ldr r3,.L22
 291 0104 4FF08052 	 mov r2,#268435456
 292 0108 1A60     	 str r2,[r3]
 293              	 .syntax unified
 294              	
 295 010a BFF34F8F 	 dsb
ARM GAS   			page 14


 296              	
 297              	
 298 010e BFF36F8F 	 isb
 299              	
 300              	 .thumb
 301              	 .syntax unified
 302              	.L18:
 222:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 223:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 224:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 225:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 226:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 227:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 228:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 229:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 230:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		the required bits were set they will have been stored in the task's
 231:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 232:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 303              	 .loc 1 232 39
 304 0112 FFF7FEFF 	 bl uxTaskResetEventItemValue
 305 0116 0346     	 mov r3,r0
 306 0118 FB62     	 str r3,[r7,#44]
 233:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 234:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 307              	 .loc 1 234 18
 308 011a FB6A     	 ldr r3,[r7,#44]
 309 011c 03F00073 	 and r3,r3,#33554432
 310              	 .loc 1 234 3
 311 0120 002B     	 cmp r3,#0
 312 0122 15D1     	 bne .L19
 235:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 236:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 237:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			taskENTER_CRITICAL();
 313              	 .loc 1 237 4
 314 0124 FFF7FEFF 	 bl vPortEnterCritical
 238:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 239:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 315              	 .loc 1 239 14
 316 0128 BB6A     	 ldr r3,[r7,#40]
 317 012a 1B68     	 ldr r3,[r3]
 318 012c FB62     	 str r3,[r7,#44]
 240:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 241:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* Although the task got here because it timed out before the
 242:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 243:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 244:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				then it needs to clear the bits before exiting. */
 245:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 319              	 .loc 1 245 20
 320 012e FA6A     	 ldr r2,[r7,#44]
 321 0130 7B68     	 ldr r3,[r7,#4]
 322 0132 1340     	 ands r3,r3,r2
 323              	 .loc 1 245 5
 324 0134 7A68     	 ldr r2,[r7,#4]
 325 0136 9A42     	 cmp r2,r3
 326 0138 06D1     	 bne .L20
 246:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 247:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
ARM GAS   			page 15


 327              	 .loc 1 247 31
 328 013a BB6A     	 ldr r3,[r7,#40]
 329 013c 1A68     	 ldr r2,[r3]
 330              	 .loc 1 247 34
 331 013e 7B68     	 ldr r3,[r7,#4]
 332 0140 DB43     	 mvns r3,r3
 333              	 .loc 1 247 31
 334 0142 1A40     	 ands r2,r2,r3
 335 0144 BB6A     	 ldr r3,[r7,#40]
 336 0146 1A60     	 str r2,[r3]
 337              	.L20:
 248:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 249:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				else
 250:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 251:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 252:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 253:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 254:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			taskEXIT_CRITICAL();
 338              	 .loc 1 254 4
 339 0148 FFF7FEFF 	 bl vPortExitCritical
 255:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 256:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 340              	 .loc 1 256 21
 341 014c 0123     	 movs r3,#1
 342 014e 7B62     	 str r3,[r7,#36]
 343              	.L19:
 257:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 258:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 259:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 260:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The task unblocked because the bits were set. */
 261:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 262:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 263:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 264:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		returned. */
 265:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 344              	 .loc 1 265 12
 345 0150 FB6A     	 ldr r3,[r7,#44]
 346 0152 23F07F43 	 bic r3,r3,#-16777216
 347 0156 FB62     	 str r3,[r7,#44]
 348              	.L17:
 266:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 267:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 268:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 269:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 270:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return uxReturn;
 349              	 .loc 1 270 9
 350 0158 FB6A     	 ldr r3,[r7,#44]
 271:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 351              	 .loc 1 271 1
 352 015a 1846     	 mov r0,r3
 353 015c 3037     	 adds r7,r7,#48
 354              	 .cfi_def_cfa_offset 8
 355 015e BD46     	 mov sp,r7
 356              	 .cfi_def_cfa_register 13
 357              	 
 358 0160 80BD     	 pop {r7,pc}
 359              	.L23:
ARM GAS   			page 16


 360 0162 00BF     	 .align 2
 361              	.L22:
 362 0164 04ED00E0 	 .word -536810236
 363              	 .cfi_endproc
 364              	.LFE12:
 365              	 .fnend
 366              	 .size xEventGroupSync,.-xEventGroupSync
 367              	 .section .text.xEventGroupWaitBits,"ax",%progbits
 368              	 .align 1
 369              	 .global xEventGroupWaitBits
 370              	 .syntax unified
 371              	 .thumb
 372              	 .thumb_func
 373              	 .type xEventGroupWaitBits,%function
 374              	xEventGroupWaitBits:
 375              	 .fnstart
 376              	.LFB13:
 272:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 273:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 274:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 275:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 377              	 .loc 1 275 1
 378              	 .cfi_startproc
 379              	 
 380              	 
 381 0000 80B5     	 push {r7,lr}
 382              	 .save {r7,lr}
 383              	 .cfi_def_cfa_offset 8
 384              	 .cfi_offset 7,-8
 385              	 .cfi_offset 14,-4
 386              	 .pad #64
 387 0002 90B0     	 sub sp,sp,#64
 388              	 .cfi_def_cfa_offset 72
 389              	 .setfp r7,sp,#0
 390 0004 00AF     	 add r7,sp,#0
 391              	 .cfi_def_cfa_register 7
 392 0006 F860     	 str r0,[r7,#12]
 393 0008 B960     	 str r1,[r7,#8]
 394 000a 7A60     	 str r2,[r7,#4]
 395 000c 3B60     	 str r3,[r7]
 276:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 396              	 .loc 1 276 15
 397 000e FB68     	 ldr r3,[r7,#12]
 398 0010 7B63     	 str r3,[r7,#52]
 277:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 399              	 .loc 1 277 23
 400 0012 0023     	 movs r3,#0
 401 0014 BB63     	 str r3,[r7,#56]
 278:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 279:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 402              	 .loc 1 279 12
 403 0016 0023     	 movs r3,#0
 404 0018 3B63     	 str r3,[r7,#48]
 280:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 281:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 282:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	itself, and that at least one bit is being requested. */
 283:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( xEventGroup );
ARM GAS   			page 17


 405              	 .loc 1 283 2
 406 001a FB68     	 ldr r3,[r7,#12]
 407 001c 002B     	 cmp r3,#0
 408 001e 0AD1     	 bne .L25
 409              	.LBB37:
 410              	.LBB38:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 411              	 .loc 2 215 2
 412              	 .syntax unified
 413              	
 414 0020 4FF01003 	 mov r3,#16
 415 0024 83F31188 	 msr basepri,r3
 416 0028 BFF36F8F 	 isb 
 417 002c BFF34F8F 	 dsb 
 418              	
 419              	
 420              	 .thumb
 421              	 .syntax unified
 422 0030 3B62     	 str r3,[r7,#32]
 423              	 .loc 2 223 1
 424 0032 00BF     	 nop
 425              	.L26:
 426              	.LBE38:
 427              	.LBE37:
 428              	 .loc 1 283 2 discriminator 1
 429 0034 FEE7     	 b .L26
 430              	.L25:
 284:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 431              	 .loc 1 284 2
 432 0036 BB68     	 ldr r3,[r7,#8]
 433 0038 03F07F43 	 and r3,r3,#-16777216
 434 003c 002B     	 cmp r3,#0
 435 003e 0AD0     	 beq .L27
 436              	.LBB39:
 437              	.LBB40:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 438              	 .loc 2 215 2
 439              	 .syntax unified
 440              	
 441 0040 4FF01003 	 mov r3,#16
 442 0044 83F31188 	 msr basepri,r3
 443 0048 BFF36F8F 	 isb 
 444 004c BFF34F8F 	 dsb 
 445              	
 446              	
 447              	 .thumb
 448              	 .syntax unified
 449 0050 FB61     	 str r3,[r7,#28]
 450              	 .loc 2 223 1
 451 0052 00BF     	 nop
 452              	.L28:
 453              	.LBE40:
 454              	.LBE39:
 455              	 .loc 1 284 2 discriminator 2
 456 0054 FEE7     	 b .L28
 457              	.L27:
 285:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
ARM GAS   			page 18


 458              	 .loc 1 285 2
 459 0056 BB68     	 ldr r3,[r7,#8]
 460 0058 002B     	 cmp r3,#0
 461 005a 0AD1     	 bne .L29
 462              	.LBB41:
 463              	.LBB42:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 464              	 .loc 2 215 2
 465              	 .syntax unified
 466              	
 467 005c 4FF01003 	 mov r3,#16
 468 0060 83F31188 	 msr basepri,r3
 469 0064 BFF36F8F 	 isb 
 470 0068 BFF34F8F 	 dsb 
 471              	
 472              	
 473              	 .thumb
 474              	 .syntax unified
 475 006c BB61     	 str r3,[r7,#24]
 476              	 .loc 2 223 1
 477 006e 00BF     	 nop
 478              	.L30:
 479              	.LBE42:
 480              	.LBE41:
 481              	 .loc 1 285 2 discriminator 3
 482 0070 FEE7     	 b .L30
 483              	.L29:
 286:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 287:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 288:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 484              	 .loc 1 288 3
 485 0072 FFF7FEFF 	 bl xTaskGetSchedulerState
 486 0076 0346     	 mov r3,r0
 487 0078 002B     	 cmp r3,#0
 488 007a 02D1     	 bne .L31
 489              	 .loc 1 288 3 is_stmt 0 discriminator 2
 490 007c BB6C     	 ldr r3,[r7,#72]
 491 007e 002B     	 cmp r3,#0
 492 0080 01D1     	 bne .L32
 493              	.L31:
 494              	 .loc 1 288 3 discriminator 3
 495 0082 0123     	 movs r3,#1
 496 0084 00E0     	 b .L33
 497              	.L32:
 498              	 .loc 1 288 3 discriminator 4
 499 0086 0023     	 movs r3,#0
 500              	.L33:
 501              	 .loc 1 288 3 discriminator 6
 502 0088 002B     	 cmp r3,#0
 503 008a 0CBF     	 ite eq
 504 008c 0123     	 moveq r3,#1
 505 008e 0023     	 movne r3,#0
 506 0090 DBB2     	 uxtb r3,r3
 507 0092 002B     	 cmp r3,#0
 508 0094 0AD0     	 beq .L34
 509              	.LBB43:
 510              	.LBB44:
ARM GAS   			page 19


 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 511              	 .loc 2 215 2 is_stmt 1
 512              	 .syntax unified
 513              	
 514 0096 4FF01003 	 mov r3,#16
 515 009a 83F31188 	 msr basepri,r3
 516 009e BFF36F8F 	 isb 
 517 00a2 BFF34F8F 	 dsb 
 518              	
 519              	
 520              	 .thumb
 521              	 .syntax unified
 522 00a6 7B61     	 str r3,[r7,#20]
 523              	 .loc 2 223 1
 524 00a8 00BF     	 nop
 525              	.L35:
 526              	.LBE44:
 527              	.LBE43:
 528              	 .loc 1 288 3 discriminator 4
 529 00aa FEE7     	 b .L35
 530              	.L34:
 289:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 290:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	#endif
 291:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 292:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	vTaskSuspendAll();
 531              	 .loc 1 292 17
 532 00ac FFF7FEFF 	 bl vTaskSuspendAll
 533              	.LBB45:
 293:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 294:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 534              	 .loc 1 294 21
 535 00b0 7B6B     	 ldr r3,[r7,#52]
 536 00b2 1B68     	 ldr r3,[r3]
 537 00b4 FB62     	 str r3,[r7,#44]
 295:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 296:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 297:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 538              	 .loc 1 297 43
 539 00b6 3A68     	 ldr r2,[r7]
 540 00b8 B968     	 ldr r1,[r7,#8]
 541 00ba F86A     	 ldr r0,[r7,#44]
 542 00bc FFF7FEFF 	 bl _ZL20prvTestWaitConditionmml
 543 00c0 B862     	 str r0,[r7,#40]
 298:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 299:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 544              	 .loc 1 299 3
 545 00c2 BB6A     	 ldr r3,[r7,#40]
 546 00c4 002B     	 cmp r3,#0
 547 00c6 0ED0     	 beq .L36
 300:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 301:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The wait condition has already been met so there is no need to
 302:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			block. */
 303:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 548              	 .loc 1 303 13
 549 00c8 FB6A     	 ldr r3,[r7,#44]
 550 00ca FB63     	 str r3,[r7,#60]
 304:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
ARM GAS   			page 20


 551              	 .loc 1 304 17
 552 00cc 0023     	 movs r3,#0
 553 00ce BB64     	 str r3,[r7,#72]
 305:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 306:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 307:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 554              	 .loc 1 307 4
 555 00d0 7B68     	 ldr r3,[r7,#4]
 556 00d2 002B     	 cmp r3,#0
 557 00d4 26D0     	 beq .L37
 308:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 309:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 558              	 .loc 1 309 30
 559 00d6 7B6B     	 ldr r3,[r7,#52]
 560 00d8 1A68     	 ldr r2,[r3]
 561              	 .loc 1 309 33
 562 00da BB68     	 ldr r3,[r7,#8]
 563 00dc DB43     	 mvns r3,r3
 564              	 .loc 1 309 30
 565 00de 1A40     	 ands r2,r2,r3
 566 00e0 7B6B     	 ldr r3,[r7,#52]
 567 00e2 1A60     	 str r2,[r3]
 568 00e4 1EE0     	 b .L37
 569              	.L36:
 310:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 311:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else
 312:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 313:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 314:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 315:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 316:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 570              	 .loc 1 316 8
 571 00e6 BB6C     	 ldr r3,[r7,#72]
 572 00e8 002B     	 cmp r3,#0
 573 00ea 02D1     	 bne .L38
 317:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 318:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The wait condition has not been met, but no block time was
 319:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			specified, so just return the current value. */
 320:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxReturn = uxCurrentEventBits;
 574              	 .loc 1 320 13
 575 00ec FB6A     	 ldr r3,[r7,#44]
 576 00ee FB63     	 str r3,[r7,#60]
 577 00f0 18E0     	 b .L37
 578              	.L38:
 321:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 322:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 323:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 324:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 325:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 326:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 327:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			unblock the task. */
 328:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( xClearOnExit != pdFALSE )
 579              	 .loc 1 328 4
 580 00f2 7B68     	 ldr r3,[r7,#4]
 581 00f4 002B     	 cmp r3,#0
 582 00f6 03D0     	 beq .L39
 329:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
ARM GAS   			page 21


 330:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 583              	 .loc 1 330 19
 584 00f8 BB6B     	 ldr r3,[r7,#56]
 585 00fa 43F08073 	 orr r3,r3,#16777216
 586 00fe BB63     	 str r3,[r7,#56]
 587              	.L39:
 331:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 332:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else
 333:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 334:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 335:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 336:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 337:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
 588              	 .loc 1 337 4
 589 0100 3B68     	 ldr r3,[r7]
 590 0102 002B     	 cmp r3,#0
 591 0104 03D0     	 beq .L40
 338:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 339:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 592              	 .loc 1 339 19
 593 0106 BB6B     	 ldr r3,[r7,#56]
 594 0108 43F08063 	 orr r3,r3,#67108864
 595 010c BB63     	 str r3,[r7,#56]
 596              	.L40:
 340:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 341:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else
 342:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 343:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 344:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 345:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 346:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 347:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			task's event list item so the kernel knows when a match is
 348:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			found.  Then enter the blocked state. */
 349:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 597              	 .loc 1 349 34
 598 010e 7B6B     	 ldr r3,[r7,#52]
 599 0110 181D     	 adds r0,r3,#4
 600 0112 BA68     	 ldr r2,[r7,#8]
 601 0114 BB6B     	 ldr r3,[r7,#56]
 602 0116 1343     	 orrs r3,r3,r2
 603 0118 BA6C     	 ldr r2,[r7,#72]
 604 011a 1946     	 mov r1,r3
 605 011c FFF7FEFF 	 bl vTaskPlaceOnUnorderedEventList
 350:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 351:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 352:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 353:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			being returned without being set if it is not done. */
 354:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxReturn = 0;
 606              	 .loc 1 354 13
 607 0120 0023     	 movs r3,#0
 608 0122 FB63     	 str r3,[r7,#60]
 609              	.L37:
 610              	.LBE45:
 355:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 356:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 357:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 358:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
ARM GAS   			page 22


 359:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 611              	 .loc 1 359 34
 612 0124 FFF7FEFF 	 bl xTaskResumeAll
 613 0128 0346     	 mov r3,r0
 614 012a 7B62     	 str r3,[r7,#36]
 360:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 361:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 615              	 .loc 1 361 2
 616 012c BB6C     	 ldr r3,[r7,#72]
 617 012e 002B     	 cmp r3,#0
 618 0130 37D0     	 beq .L41
 362:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 363:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 619              	 .loc 1 363 3
 620 0132 7B6A     	 ldr r3,[r7,#36]
 621 0134 002B     	 cmp r3,#0
 622 0136 07D1     	 bne .L42
 364:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 365:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			portYIELD_WITHIN_API();
 623              	 .loc 1 365 4
 624 0138 1C4B     	 ldr r3,.L46
 625 013a 4FF08052 	 mov r2,#268435456
 626 013e 1A60     	 str r2,[r3]
 627              	 .syntax unified
 628              	
 629 0140 BFF34F8F 	 dsb
 630              	
 631              	
 632 0144 BFF36F8F 	 isb
 633              	
 634              	 .thumb
 635              	 .syntax unified
 636              	.L42:
 366:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 367:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 368:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 369:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 370:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 371:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 372:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 373:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		point either the required bits were set or the block time expired.  If
 374:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		the required bits were set they will have been stored in the task's
 375:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 376:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 637              	 .loc 1 376 39
 638 0148 FFF7FEFF 	 bl uxTaskResetEventItemValue
 639 014c 0346     	 mov r3,r0
 640 014e FB63     	 str r3,[r7,#60]
 377:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 378:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 641              	 .loc 1 378 18
 642 0150 FB6B     	 ldr r3,[r7,#60]
 643 0152 03F00073 	 and r3,r3,#33554432
 644              	 .loc 1 378 3
 645 0156 002B     	 cmp r3,#0
 646 0158 1FD1     	 bne .L43
 379:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
ARM GAS   			page 23


 380:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			taskENTER_CRITICAL();
 647              	 .loc 1 380 4
 648 015a FFF7FEFF 	 bl vPortEnterCritical
 381:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 382:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 383:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 649              	 .loc 1 383 14
 650 015e 7B6B     	 ldr r3,[r7,#52]
 651 0160 1B68     	 ldr r3,[r3]
 652 0162 FB63     	 str r3,[r7,#60]
 384:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 385:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* It is possible that the event bits were updated between this
 386:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				task leaving the Blocked state and running again. */
 387:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 653              	 .loc 1 387 29
 654 0164 3A68     	 ldr r2,[r7]
 655 0166 B968     	 ldr r1,[r7,#8]
 656 0168 F86B     	 ldr r0,[r7,#60]
 657 016a FFF7FEFF 	 bl _ZL20prvTestWaitConditionmml
 658 016e 0346     	 mov r3,r0
 659              	 .loc 1 387 76
 660 0170 002B     	 cmp r3,#0
 661 0172 14BF     	 ite ne
 662 0174 0123     	 movne r3,#1
 663 0176 0023     	 moveq r3,#0
 664 0178 DBB2     	 uxtb r3,r3
 665              	 .loc 1 387 5
 666 017a 002B     	 cmp r3,#0
 667 017c 09D0     	 beq .L44
 388:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 389:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					if( xClearOnExit != pdFALSE )
 668              	 .loc 1 389 6
 669 017e 7B68     	 ldr r3,[r7,#4]
 670 0180 002B     	 cmp r3,#0
 671 0182 06D0     	 beq .L44
 390:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					{
 391:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 672              	 .loc 1 391 32
 673 0184 7B6B     	 ldr r3,[r7,#52]
 674 0186 1A68     	 ldr r2,[r3]
 675              	 .loc 1 391 35
 676 0188 BB68     	 ldr r3,[r7,#8]
 677 018a DB43     	 mvns r3,r3
 678              	 .loc 1 391 32
 679 018c 1A40     	 ands r2,r2,r3
 680 018e 7B6B     	 ldr r3,[r7,#52]
 681 0190 1A60     	 str r2,[r3]
 682              	.L44:
 392:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					}
 393:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					else
 394:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					{
 395:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 396:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					}
 397:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 398:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				else
 399:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 400:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS   			page 24


 401:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 402:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 403:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			taskEXIT_CRITICAL();
 683              	 .loc 1 403 4
 684 0192 FFF7FEFF 	 bl vPortExitCritical
 404:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 405:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Prevent compiler warnings when trace macros are not used. */
 406:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xTimeoutOccurred = pdFALSE;
 685              	 .loc 1 406 21
 686 0196 0023     	 movs r3,#0
 687 0198 3B63     	 str r3,[r7,#48]
 688              	.L43:
 407:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 408:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 409:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 410:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* The task unblocked because the bits were set. */
 411:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 412:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 413:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* The task blocked so control bits may have been set. */
 414:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 689              	 .loc 1 414 12
 690 019a FB6B     	 ldr r3,[r7,#60]
 691 019c 23F07F43 	 bic r3,r3,#-16777216
 692 01a0 FB63     	 str r3,[r7,#60]
 693              	.L41:
 415:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 416:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 417:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 418:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return uxReturn;
 694              	 .loc 1 418 9
 695 01a2 FB6B     	 ldr r3,[r7,#60]
 419:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 696              	 .loc 1 419 1
 697 01a4 1846     	 mov r0,r3
 698 01a6 4037     	 adds r7,r7,#64
 699              	 .cfi_def_cfa_offset 8
 700 01a8 BD46     	 mov sp,r7
 701              	 .cfi_def_cfa_register 13
 702              	 
 703 01aa 80BD     	 pop {r7,pc}
 704              	.L47:
 705              	 .align 2
 706              	.L46:
 707 01ac 04ED00E0 	 .word -536810236
 708              	 .cfi_endproc
 709              	.LFE13:
 710              	 .fnend
 711              	 .size xEventGroupWaitBits,.-xEventGroupWaitBits
 712              	 .section .text.xEventGroupClearBits,"ax",%progbits
 713              	 .align 1
 714              	 .global xEventGroupClearBits
 715              	 .syntax unified
 716              	 .thumb
 717              	 .thumb_func
 718              	 .type xEventGroupClearBits,%function
 719              	xEventGroupClearBits:
 720              	 .fnstart
ARM GAS   			page 25


 721              	.LFB14:
 420:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 421:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 422:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 423:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 722              	 .loc 1 423 1
 723              	 .cfi_startproc
 724              	 
 725              	 
 726 0000 80B5     	 push {r7,lr}
 727              	 .save {r7,lr}
 728              	 .cfi_def_cfa_offset 8
 729              	 .cfi_offset 7,-8
 730              	 .cfi_offset 14,-4
 731              	 .pad #24
 732 0002 86B0     	 sub sp,sp,#24
 733              	 .cfi_def_cfa_offset 32
 734              	 .setfp r7,sp,#0
 735 0004 00AF     	 add r7,sp,#0
 736              	 .cfi_def_cfa_register 7
 737 0006 7860     	 str r0,[r7,#4]
 738 0008 3960     	 str r1,[r7]
 424:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 739              	 .loc 1 424 15
 740 000a 7B68     	 ldr r3,[r7,#4]
 741 000c 7B61     	 str r3,[r7,#20]
 425:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t uxReturn;
 426:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 427:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 428:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	itself. */
 429:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( xEventGroup );
 742              	 .loc 1 429 2
 743 000e 7B68     	 ldr r3,[r7,#4]
 744 0010 002B     	 cmp r3,#0
 745 0012 0AD1     	 bne .L49
 746              	.LBB46:
 747              	.LBB47:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 748              	 .loc 2 215 2
 749              	 .syntax unified
 750              	
 751 0014 4FF01003 	 mov r3,#16
 752 0018 83F31188 	 msr basepri,r3
 753 001c BFF36F8F 	 isb 
 754 0020 BFF34F8F 	 dsb 
 755              	
 756              	
 757              	 .thumb
 758              	 .syntax unified
 759 0024 FB60     	 str r3,[r7,#12]
 760              	 .loc 2 223 1
 761 0026 00BF     	 nop
 762              	.L50:
 763              	.LBE47:
 764              	.LBE46:
 765              	 .loc 1 429 2 discriminator 1
 766 0028 FEE7     	 b .L50
ARM GAS   			page 26


 767              	.L49:
 430:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 768              	 .loc 1 430 2
 769 002a 3B68     	 ldr r3,[r7]
 770 002c 03F07F43 	 and r3,r3,#-16777216
 771 0030 002B     	 cmp r3,#0
 772 0032 0AD0     	 beq .L51
 773              	.LBB48:
 774              	.LBB49:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 775              	 .loc 2 215 2
 776              	 .syntax unified
 777              	
 778 0034 4FF01003 	 mov r3,#16
 779 0038 83F31188 	 msr basepri,r3
 780 003c BFF36F8F 	 isb 
 781 0040 BFF34F8F 	 dsb 
 782              	
 783              	
 784              	 .thumb
 785              	 .syntax unified
 786 0044 BB60     	 str r3,[r7,#8]
 787              	 .loc 2 223 1
 788 0046 00BF     	 nop
 789              	.L52:
 790              	.LBE49:
 791              	.LBE48:
 792              	 .loc 1 430 2 discriminator 2
 793 0048 FEE7     	 b .L52
 794              	.L51:
 431:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 432:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	taskENTER_CRITICAL();
 795              	 .loc 1 432 2
 796 004a FFF7FEFF 	 bl vPortEnterCritical
 433:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 434:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 435:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 436:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 437:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		cleared. */
 438:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 797              	 .loc 1 438 12
 798 004e 7B69     	 ldr r3,[r7,#20]
 799 0050 1B68     	 ldr r3,[r3]
 800 0052 3B61     	 str r3,[r7,#16]
 439:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 440:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Clear the bits. */
 441:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 801              	 .loc 1 441 28
 802 0054 7B69     	 ldr r3,[r7,#20]
 803 0056 1A68     	 ldr r2,[r3]
 804              	 .loc 1 441 31
 805 0058 3B68     	 ldr r3,[r7]
 806 005a DB43     	 mvns r3,r3
 807              	 .loc 1 441 28
 808 005c 1A40     	 ands r2,r2,r3
 809 005e 7B69     	 ldr r3,[r7,#20]
 810 0060 1A60     	 str r2,[r3]
ARM GAS   			page 27


 442:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 443:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	taskEXIT_CRITICAL();
 811              	 .loc 1 443 2
 812 0062 FFF7FEFF 	 bl vPortExitCritical
 444:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 445:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return uxReturn;
 813              	 .loc 1 445 9
 814 0066 3B69     	 ldr r3,[r7,#16]
 446:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 815              	 .loc 1 446 1
 816 0068 1846     	 mov r0,r3
 817 006a 1837     	 adds r7,r7,#24
 818              	 .cfi_def_cfa_offset 8
 819 006c BD46     	 mov sp,r7
 820              	 .cfi_def_cfa_register 13
 821              	 
 822 006e 80BD     	 pop {r7,pc}
 823              	 .cfi_endproc
 824              	.LFE14:
 825              	 .fnend
 826              	 .size xEventGroupClearBits,.-xEventGroupClearBits
 827              	 .section .text.xEventGroupGetBitsFromISR,"ax",%progbits
 828              	 .align 1
 829              	 .global xEventGroupGetBitsFromISR
 830              	 .syntax unified
 831              	 .thumb
 832              	 .thumb_func
 833              	 .type xEventGroupGetBitsFromISR,%function
 834              	xEventGroupGetBitsFromISR:
 835              	 .fnstart
 836              	.LFB15:
 447:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 448:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 449:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 450:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 451:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 452:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 453:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		BaseType_t xReturn;
 454:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 455:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 456:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 457:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 458:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		return xReturn;
 459:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 460:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 461:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #endif
 462:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 463:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 464:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 465:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 837              	 .loc 1 465 1
 838              	 .cfi_startproc
 839              	 
 840              	 
 841              	 
 842 0000 80B4     	 push {r7}
 843              	 .cfi_def_cfa_offset 4
ARM GAS   			page 28


 844              	 .cfi_offset 7,-4
 845 0002 89B0     	 sub sp,sp,#36
 846              	 .cfi_def_cfa_offset 40
 847 0004 00AF     	 add r7,sp,#0
 848              	 .cfi_def_cfa_register 7
 849 0006 7860     	 str r0,[r7,#4]
 466:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 467:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 850              	 .loc 1 467 15
 851 0008 7B68     	 ldr r3,[r7,#4]
 852 000a FB61     	 str r3,[r7,#28]
 853              	.LBB50:
 854              	.LBB51:
 224:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 225:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 226:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 227:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 228:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 229:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 230:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 231:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 855              	 .loc 2 231 2
 856              	 .syntax unified
 857              	
 858 000c EFF31182 	 mrs r2,basepri
 859 0010 4FF01003 	 mov r3,#16
 860 0014 83F31188 	 msr basepri,r3
 861 0018 BFF36F8F 	 isb 
 862 001c BFF34F8F 	 dsb 
 863              	
 864              	
 865              	 .thumb
 866              	 .syntax unified
 867 0020 FA60     	 str r2,[r7,#12]
 868 0022 BB60     	 str r3,[r7,#8]
 232:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 233:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mrs %0, basepri											\n" \
 234:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	mov %1, %2												\n"	\
 235:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %1											\n" \
 236:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	isb														\n" \
 237:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	dsb														\n" \
 238:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 239:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 240:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 241:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 242:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	warnings. */
 243:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	return ulOriginalBASEPRI;
 869              	 .loc 2 243 9
 870 0024 FB68     	 ldr r3,[r7,#12]
 871              	.LBE51:
 872              	.LBE50:
 468:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t uxReturn;
 469:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 470:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 873              	 .loc 1 470 27
 874 0026 BB61     	 str r3,[r7,#24]
 471:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
ARM GAS   			page 29


 472:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 875              	 .loc 1 472 12
 876 0028 FB69     	 ldr r3,[r7,#28]
 877 002a 1B68     	 ldr r3,[r3]
 878 002c 7B61     	 str r3,[r7,#20]
 879 002e BB69     	 ldr r3,[r7,#24]
 880 0030 3B61     	 str r3,[r7,#16]
 881              	.LBB52:
 882              	.LBB53:
 244:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 245:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** /*-----------------------------------------------------------*/
 246:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 247:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 248:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** {
 249:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	__asm volatile
 883              	 .loc 2 249 2
 884 0032 3B69     	 ldr r3,[r7,#16]
 885              	 .syntax unified
 886              	
 887 0034 83F31188 	 msr basepri,r3
 888              	
 250:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 251:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue )
 252:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	);
 253:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** }
 889              	 .loc 2 253 1
 890              	 .thumb
 891              	 .syntax unified
 892 0038 00BF     	 nop
 893              	.LBE53:
 894              	.LBE52:
 473:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 474:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 475:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 476:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return uxReturn;
 895              	 .loc 1 476 9
 896 003a 7B69     	 ldr r3,[r7,#20]
 477:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 897              	 .loc 1 477 1
 898 003c 1846     	 mov r0,r3
 899 003e 2437     	 adds r7,r7,#36
 900              	 .cfi_def_cfa_offset 4
 901 0040 BD46     	 mov sp,r7
 902              	 .cfi_def_cfa_register 13
 903              	 
 904 0042 5DF8047B 	 ldr r7,[sp],#4
 905              	 .cfi_restore 7
 906              	 .cfi_def_cfa_offset 0
 907 0046 7047     	 bx lr
 908              	 .cfi_endproc
 909              	.LFE15:
 910              	 .cantunwind
 911              	 .fnend
 912              	 .size xEventGroupGetBitsFromISR,.-xEventGroupGetBitsFromISR
 913              	 .section .text.xEventGroupSetBits,"ax",%progbits
 914              	 .align 1
 915              	 .global xEventGroupSetBits
ARM GAS   			page 30


 916              	 .syntax unified
 917              	 .thumb
 918              	 .thumb_func
 919              	 .type xEventGroupSetBits,%function
 920              	xEventGroupSetBits:
 921              	 .fnstart
 922              	.LFB16:
 478:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 479:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 480:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 481:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 923              	 .loc 1 481 1
 924              	 .cfi_startproc
 925              	 
 926              	 
 927 0000 80B5     	 push {r7,lr}
 928              	 .save {r7,lr}
 929              	 .cfi_def_cfa_offset 8
 930              	 .cfi_offset 7,-8
 931              	 .cfi_offset 14,-4
 932              	 .pad #56
 933 0002 8EB0     	 sub sp,sp,#56
 934              	 .cfi_def_cfa_offset 64
 935              	 .setfp r7,sp,#0
 936 0004 00AF     	 add r7,sp,#0
 937              	 .cfi_def_cfa_register 7
 938 0006 7860     	 str r0,[r7,#4]
 939 0008 3960     	 str r1,[r7]
 482:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** ListItem_t *pxListItem, *pxNext;
 483:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** ListItem_t const *pxListEnd;
 484:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** List_t *pxList;
 485:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 940              	 .loc 1 485 13
 941 000a 0023     	 movs r3,#0
 942 000c 3B63     	 str r3,[r7,#48]
 486:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 943              	 .loc 1 486 15
 944 000e 7B68     	 ldr r3,[r7,#4]
 945 0010 BB62     	 str r3,[r7,#40]
 487:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 946              	 .loc 1 487 12
 947 0012 0023     	 movs r3,#0
 948 0014 FB62     	 str r3,[r7,#44]
 488:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 489:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 490:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	itself. */
 491:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( xEventGroup );
 949              	 .loc 1 491 2
 950 0016 7B68     	 ldr r3,[r7,#4]
 951 0018 002B     	 cmp r3,#0
 952 001a 0AD1     	 bne .L58
 953              	.LBB54:
 954              	.LBB55:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 955              	 .loc 2 215 2
 956              	 .syntax unified
 957              	
ARM GAS   			page 31


 958 001c 4FF01003 	 mov r3,#16
 959 0020 83F31188 	 msr basepri,r3
 960 0024 BFF36F8F 	 isb 
 961 0028 BFF34F8F 	 dsb 
 962              	
 963              	
 964              	 .thumb
 965              	 .syntax unified
 966 002c 3B61     	 str r3,[r7,#16]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 967              	 .loc 2 223 1
 968 002e 00BF     	 nop
 969              	.L59:
 970              	.LBE55:
 971              	.LBE54:
 972              	 .loc 1 491 2 discriminator 1
 973 0030 FEE7     	 b .L59
 974              	.L58:
 492:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 975              	 .loc 1 492 2
 976 0032 3B68     	 ldr r3,[r7]
 977 0034 03F07F43 	 and r3,r3,#-16777216
 978 0038 002B     	 cmp r3,#0
 979 003a 0AD0     	 beq .L60
 980              	.LBB56:
 981              	.LBB57:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 982              	 .loc 2 215 2
 983              	 .syntax unified
 984              	
 985 003c 4FF01003 	 mov r3,#16
 986 0040 83F31188 	 msr basepri,r3
 987 0044 BFF36F8F 	 isb 
 988 0048 BFF34F8F 	 dsb 
 989              	
 990              	
 991              	 .thumb
 992              	 .syntax unified
 993 004c FB60     	 str r3,[r7,#12]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 994              	 .loc 2 223 1
 995 004e 00BF     	 nop
 996              	.L61:
 997              	.LBE57:
 998              	.LBE56:
 999              	 .loc 1 492 2 discriminator 2
 1000 0050 FEE7     	 b .L61
 1001              	.L60:
 493:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 494:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 1002              	 .loc 1 494 9
 1003 0052 BB6A     	 ldr r3,[r7,#40]
 1004 0054 0433     	 adds r3,r3,#4
 1005 0056 7B62     	 str r3,[r7,#36]
 495:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 1006              	 .loc 1 495 12
 1007 0058 7B6A     	 ldr r3,[r7,#36]
ARM GAS   			page 32


 1008 005a 0833     	 adds r3,r3,#8
 1009 005c 3B62     	 str r3,[r7,#32]
 496:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	vTaskSuspendAll();
 1010              	 .loc 1 496 17
 1011 005e FFF7FEFF 	 bl vTaskSuspendAll
 497:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 498:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
 499:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 500:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 1012              	 .loc 1 500 14
 1013 0062 7B6A     	 ldr r3,[r7,#36]
 1014 0064 DB68     	 ldr r3,[r3,#12]
 1015 0066 7B63     	 str r3,[r7,#52]
 501:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 502:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Set the bits. */
 503:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 1016              	 .loc 1 503 28
 1017 0068 BB6A     	 ldr r3,[r7,#40]
 1018 006a 1A68     	 ldr r2,[r3]
 1019 006c 3B68     	 ldr r3,[r7]
 1020 006e 1A43     	 orrs r2,r2,r3
 1021 0070 BB6A     	 ldr r3,[r7,#40]
 1022 0072 1A60     	 str r2,[r3]
 1023              	.L67:
 504:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 505:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		while( pxListItem != pxListEnd )
 1024              	 .loc 1 506 21
 1025 0074 7A6B     	 ldr r2,[r7,#52]
 1026 0076 3B6A     	 ldr r3,[r7,#32]
 1027 0078 9A42     	 cmp r2,r3
 1028 007a 3DD0     	 beq .L62
 507:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 508:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 1029              	 .loc 1 508 11
 1030 007c 7B6B     	 ldr r3,[r7,#52]
 1031 007e 5B68     	 ldr r3,[r3,#4]
 1032 0080 FB61     	 str r3,[r7,#28]
 509:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 1033              	 .loc 1 509 20
 1034 0082 7B6B     	 ldr r3,[r7,#52]
 1035 0084 1B68     	 ldr r3,[r3]
 1036 0086 BB61     	 str r3,[r7,#24]
 510:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xMatchFound = pdFALSE;
 1037              	 .loc 1 510 16
 1038 0088 0023     	 movs r3,#0
 1039 008a FB62     	 str r3,[r7,#44]
 511:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 512:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Split the bits waited for from the control bits. */
 513:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 1040              	 .loc 1 513 18
 1041 008c BB69     	 ldr r3,[r7,#24]
 1042 008e 03F07F43 	 and r3,r3,#-16777216
 1043 0092 7B61     	 str r3,[r7,#20]
 514:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 1044              	 .loc 1 514 20
 1045 0094 BB69     	 ldr r3,[r7,#24]
ARM GAS   			page 33


 1046 0096 23F07F43 	 bic r3,r3,#-16777216
 1047 009a BB61     	 str r3,[r7,#24]
 515:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 516:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 1048              	 .loc 1 516 24
 1049 009c 7B69     	 ldr r3,[r7,#20]
 1050 009e 03F08063 	 and r3,r3,#67108864
 1051              	 .loc 1 516 4
 1052 00a2 002B     	 cmp r3,#0
 1053 00a4 08D1     	 bne .L63
 517:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 518:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* Just looking for single bit being set. */
 519:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 1054              	 .loc 1 519 42
 1055 00a6 BB6A     	 ldr r3,[r7,#40]
 1056 00a8 1A68     	 ldr r2,[r3]
 1057              	 .loc 1 519 27
 1058 00aa BB69     	 ldr r3,[r7,#24]
 1059 00ac 1340     	 ands r3,r3,r2
 1060              	 .loc 1 519 5
 1061 00ae 002B     	 cmp r3,#0
 1062 00b0 0BD0     	 beq .L64
 520:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 521:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					xMatchFound = pdTRUE;
 1063              	 .loc 1 521 18
 1064 00b2 0123     	 movs r3,#1
 1065 00b4 FB62     	 str r3,[r7,#44]
 1066 00b6 08E0     	 b .L64
 1067              	.L63:
 522:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 523:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				else
 524:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 525:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 526:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 527:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 528:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 1068              	 .loc 1 528 46
 1069 00b8 BB6A     	 ldr r3,[r7,#40]
 1070 00ba 1A68     	 ldr r2,[r3]
 1071              	 .loc 1 528 31
 1072 00bc BB69     	 ldr r3,[r7,#24]
 1073 00be 1340     	 ands r3,r3,r2
 1074              	 .loc 1 528 9
 1075 00c0 BA69     	 ldr r2,[r7,#24]
 1076 00c2 9A42     	 cmp r2,r3
 1077 00c4 01D1     	 bne .L64
 529:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 530:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* All bits are set. */
 531:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				xMatchFound = pdTRUE;
 1078              	 .loc 1 531 17
 1079 00c6 0123     	 movs r3,#1
 1080 00c8 FB62     	 str r3,[r7,#44]
 1081              	.L64:
 532:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 533:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			else
 534:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 535:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
ARM GAS   			page 34


 536:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 537:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 538:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			if( xMatchFound != pdFALSE )
 1082              	 .loc 1 538 4
 1083 00ca FB6A     	 ldr r3,[r7,#44]
 1084 00cc 002B     	 cmp r3,#0
 1085 00ce 10D0     	 beq .L65
 539:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			{
 540:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 541:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 1086              	 .loc 1 541 25
 1087 00d0 7B69     	 ldr r3,[r7,#20]
 1088 00d2 03F08073 	 and r3,r3,#16777216
 1089              	 .loc 1 541 5
 1090 00d6 002B     	 cmp r3,#0
 1091 00d8 03D0     	 beq .L66
 542:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 543:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 1092              	 .loc 1 543 20
 1093 00da 3A6B     	 ldr r2,[r7,#48]
 1094 00dc BB69     	 ldr r3,[r7,#24]
 1095 00de 1343     	 orrs r3,r3,r2
 1096 00e0 3B63     	 str r3,[r7,#48]
 1097              	.L66:
 544:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 545:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				else
 546:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				{
 547:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 548:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				}
 549:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 550:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				/* Store the actual event flag value in the task's event list
 551:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				item before removing the task from the event list.  The
 552:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 553:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 554:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				than because it timed out. */
 555:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 				( void ) xTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCK
 1098              	 .loc 1 555 74
 1099 00e2 BB6A     	 ldr r3,[r7,#40]
 1100 00e4 1B68     	 ldr r3,[r3]
 1101              	 .loc 1 555 47
 1102 00e6 43F00073 	 orr r3,r3,#33554432
 1103 00ea 1946     	 mov r1,r3
 1104 00ec 786B     	 ldr r0,[r7,#52]
 1105 00ee FFF7FEFF 	 bl xTaskRemoveFromUnorderedEventList
 1106              	.L65:
 556:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			}
 557:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 558:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 559:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			used here as the list item may have been removed from the event list
 560:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			and inserted into the ready/pending reading list. */
 561:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			pxListItem = pxNext;
 1107              	 .loc 1 561 15
 1108 00f2 FB69     	 ldr r3,[r7,#28]
 1109 00f4 7B63     	 str r3,[r7,#52]
 506:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 1110              	 .loc 1 506 3
 1111 00f6 BDE7     	 b .L67
ARM GAS   			page 35


 1112              	.L62:
 562:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 563:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 564:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 565:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		bit was set in the control word. */
 566:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 1113              	 .loc 1 566 28
 1114 00f8 BB6A     	 ldr r3,[r7,#40]
 1115 00fa 1A68     	 ldr r2,[r3]
 1116              	 .loc 1 566 31
 1117 00fc 3B6B     	 ldr r3,[r7,#48]
 1118 00fe DB43     	 mvns r3,r3
 1119              	 .loc 1 566 28
 1120 0100 1A40     	 ands r2,r2,r3
 1121 0102 BB6A     	 ldr r3,[r7,#40]
 1122 0104 1A60     	 str r2,[r3]
 567:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 568:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	( void ) xTaskResumeAll();
 1123              	 .loc 1 568 25
 1124 0106 FFF7FEFF 	 bl xTaskResumeAll
 569:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 570:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return pxEventBits->uxEventBits;
 1125              	 .loc 1 570 22
 1126 010a BB6A     	 ldr r3,[r7,#40]
 1127 010c 1B68     	 ldr r3,[r3]
 571:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 1128              	 .loc 1 571 1
 1129 010e 1846     	 mov r0,r3
 1130 0110 3837     	 adds r7,r7,#56
 1131              	 .cfi_def_cfa_offset 8
 1132 0112 BD46     	 mov sp,r7
 1133              	 .cfi_def_cfa_register 13
 1134              	 
 1135 0114 80BD     	 pop {r7,pc}
 1136              	 .cfi_endproc
 1137              	.LFE16:
 1138              	 .fnend
 1139              	 .size xEventGroupSetBits,.-xEventGroupSetBits
 1140              	 .section .text.vEventGroupDelete,"ax",%progbits
 1141              	 .align 1
 1142              	 .global vEventGroupDelete
 1143              	 .syntax unified
 1144              	 .thumb
 1145              	 .thumb_func
 1146              	 .type vEventGroupDelete,%function
 1147              	vEventGroupDelete:
 1148              	 .fnstart
 1149              	.LFB17:
 572:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 573:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 574:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 575:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 1150              	 .loc 1 575 1
 1151              	 .cfi_startproc
 1152              	 
 1153              	 
 1154 0000 80B5     	 push {r7,lr}
ARM GAS   			page 36


 1155              	 .save {r7,lr}
 1156              	 .cfi_def_cfa_offset 8
 1157              	 .cfi_offset 7,-8
 1158              	 .cfi_offset 14,-4
 1159              	 .pad #24
 1160 0002 86B0     	 sub sp,sp,#24
 1161              	 .cfi_def_cfa_offset 32
 1162              	 .setfp r7,sp,#0
 1163 0004 00AF     	 add r7,sp,#0
 1164              	 .cfi_def_cfa_register 7
 1165 0006 7860     	 str r0,[r7,#4]
 576:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1166              	 .loc 1 576 15
 1167 0008 7B68     	 ldr r3,[r7,#4]
 1168 000a 7B61     	 str r3,[r7,#20]
 577:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 1169              	 .loc 1 577 15
 1170 000c 7B69     	 ldr r3,[r7,#20]
 1171 000e 0433     	 adds r3,r3,#4
 1172 0010 3B61     	 str r3,[r7,#16]
 578:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 579:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	vTaskSuspendAll();
 1173              	 .loc 1 579 17
 1174 0012 FFF7FEFF 	 bl vTaskSuspendAll
 1175              	.L73:
 580:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 581:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 582:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 1176              	 .loc 1 583 10
 1177 0016 3B69     	 ldr r3,[r7,#16]
 1178 0018 1B68     	 ldr r3,[r3]
 1179              	 .loc 1 583 59
 1180 001a 002B     	 cmp r3,#0
 1181 001c 18D0     	 beq .L70
 584:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 585:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 586:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			and	cannot therefore have any bits set. */
 587:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( ListItem_t * ) &( pxTasksWaitingForBit
 1182              	 .loc 1 587 4
 1183 001e 3B69     	 ldr r3,[r7,#16]
 1184 0020 DA68     	 ldr r2,[r3,#12]
 1185 0022 3B69     	 ldr r3,[r7,#16]
 1186 0024 0833     	 adds r3,r3,#8
 1187 0026 9A42     	 cmp r2,r3
 1188 0028 0AD1     	 bne .L71
 1189              	.LBB58:
 1190              	.LBB59:
 215:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 	(
 1191              	 .loc 2 215 2
 1192              	 .syntax unified
 1193              	
 1194 002a 4FF01003 	 mov r3,#16
 1195 002e 83F31188 	 msr basepri,r3
 1196 0032 BFF36F8F 	 isb 
 1197 0036 BFF34F8F 	 dsb 
 1198              	
ARM GAS   			page 37


 1199              	
 1200              	 .thumb
 1201              	 .syntax unified
 1202 003a FB60     	 str r3,[r7,#12]
 223:C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/portable/GCC/ARM_CM4F\portmacro.h **** 
 1203              	 .loc 2 223 1
 1204 003c 00BF     	 nop
 1205              	.L72:
 1206              	.LBE59:
 1207              	.LBE58:
 1208              	 .loc 1 587 4 discriminator 1
 1209 003e FEE7     	 b .L72
 1210              	.L71:
 588:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			( void ) xTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 1211              	 .loc 1 588 80
 1212 0040 3B69     	 ldr r3,[r7,#16]
 1213 0042 DB68     	 ldr r3,[r3,#12]
 1214              	 .loc 1 588 46
 1215 0044 4FF00071 	 mov r1,#33554432
 1216 0048 1846     	 mov r0,r3
 1217 004a FFF7FEFF 	 bl xTaskRemoveFromUnorderedEventList
 583:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 1218              	 .loc 1 583 3
 1219 004e E2E7     	 b .L73
 1220              	.L70:
 589:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 590:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 591:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		vPortFree( pxEventBits );
 1221              	 .loc 1 591 12
 1222 0050 7869     	 ldr r0,[r7,#20]
 1223 0052 FFF7FEFF 	 bl vPortFree
 592:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 593:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	( void ) xTaskResumeAll();
 1224              	 .loc 1 593 25
 1225 0056 FFF7FEFF 	 bl xTaskResumeAll
 594:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 1226              	 .loc 1 594 1
 1227 005a 00BF     	 nop
 1228 005c 1837     	 adds r7,r7,#24
 1229              	 .cfi_def_cfa_offset 8
 1230 005e BD46     	 mov sp,r7
 1231              	 .cfi_def_cfa_register 13
 1232              	 
 1233 0060 80BD     	 pop {r7,pc}
 1234              	 .cfi_endproc
 1235              	.LFE17:
 1236              	 .fnend
 1237              	 .size vEventGroupDelete,.-vEventGroupDelete
 1238              	 .section .text.vEventGroupSetBitsCallback,"ax",%progbits
 1239              	 .align 1
 1240              	 .global vEventGroupSetBitsCallback
 1241              	 .syntax unified
 1242              	 .thumb
 1243              	 .thumb_func
 1244              	 .type vEventGroupSetBitsCallback,%function
 1245              	vEventGroupSetBitsCallback:
 1246              	 .fnstart
ARM GAS   			page 38


 1247              	.LFB18:
 595:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 596:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 597:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 598:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** an interrupt. */
 599:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 600:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 1248              	 .loc 1 600 1
 1249              	 .cfi_startproc
 1250              	 
 1251              	 
 1252 0000 80B5     	 push {r7,lr}
 1253              	 .save {r7,lr}
 1254              	 .cfi_def_cfa_offset 8
 1255              	 .cfi_offset 7,-8
 1256              	 .cfi_offset 14,-4
 1257              	 .pad #8
 1258 0002 82B0     	 sub sp,sp,#8
 1259              	 .cfi_def_cfa_offset 16
 1260              	 .setfp r7,sp,#0
 1261 0004 00AF     	 add r7,sp,#0
 1262              	 .cfi_def_cfa_register 7
 1263 0006 7860     	 str r0,[r7,#4]
 1264 0008 3960     	 str r1,[r7]
 601:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
 1265              	 .loc 1 601 29
 1266 000a 3968     	 ldr r1,[r7]
 1267 000c 7868     	 ldr r0,[r7,#4]
 1268 000e FFF7FEFF 	 bl xEventGroupSetBits
 602:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 1269              	 .loc 1 602 1
 1270 0012 00BF     	 nop
 1271 0014 0837     	 adds r7,r7,#8
 1272              	 .cfi_def_cfa_offset 8
 1273 0016 BD46     	 mov sp,r7
 1274              	 .cfi_def_cfa_register 13
 1275              	 
 1276 0018 80BD     	 pop {r7,pc}
 1277              	 .cfi_endproc
 1278              	.LFE18:
 1279              	 .fnend
 1280              	 .size vEventGroupSetBitsCallback,.-vEventGroupSetBitsCallback
 1281              	 .section .text.vEventGroupClearBitsCallback,"ax",%progbits
 1282              	 .align 1
 1283              	 .global vEventGroupClearBitsCallback
 1284              	 .syntax unified
 1285              	 .thumb
 1286              	 .thumb_func
 1287              	 .type vEventGroupClearBitsCallback,%function
 1288              	vEventGroupClearBitsCallback:
 1289              	 .fnstart
 1290              	.LFB19:
 603:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 604:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 605:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 606:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** an interrupt. */
 607:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
ARM GAS   			page 39


 608:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 1291              	 .loc 1 608 1
 1292              	 .cfi_startproc
 1293              	 
 1294              	 
 1295 0000 80B5     	 push {r7,lr}
 1296              	 .save {r7,lr}
 1297              	 .cfi_def_cfa_offset 8
 1298              	 .cfi_offset 7,-8
 1299              	 .cfi_offset 14,-4
 1300              	 .pad #8
 1301 0002 82B0     	 sub sp,sp,#8
 1302              	 .cfi_def_cfa_offset 16
 1303              	 .setfp r7,sp,#0
 1304 0004 00AF     	 add r7,sp,#0
 1305              	 .cfi_def_cfa_register 7
 1306 0006 7860     	 str r0,[r7,#4]
 1307 0008 3960     	 str r1,[r7]
 609:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 1308              	 .loc 1 609 31
 1309 000a 3968     	 ldr r1,[r7]
 1310 000c 7868     	 ldr r0,[r7,#4]
 1311 000e FFF7FEFF 	 bl xEventGroupClearBits
 610:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 1312              	 .loc 1 610 1
 1313 0012 00BF     	 nop
 1314 0014 0837     	 adds r7,r7,#8
 1315              	 .cfi_def_cfa_offset 8
 1316 0016 BD46     	 mov sp,r7
 1317              	 .cfi_def_cfa_register 13
 1318              	 
 1319 0018 80BD     	 pop {r7,pc}
 1320              	 .cfi_endproc
 1321              	.LFE19:
 1322              	 .fnend
 1323              	 .size vEventGroupClearBitsCallback,.-vEventGroupClearBitsCallback
 1324              	 .section .text._ZL20prvTestWaitConditionmml,"ax",%progbits
 1325              	 .align 1
 1326              	 .syntax unified
 1327              	 .thumb
 1328              	 .thumb_func
 1329              	 .type _ZL20prvTestWaitConditionmml,%function
 1330              	_ZL20prvTestWaitConditionmml:
 1331              	 .fnstart
 1332              	.LFB20:
 611:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 612:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 613:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 614:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** {
 1333              	 .loc 1 614 1
 1334              	 .cfi_startproc
 1335              	 
 1336              	 
 1337              	 
 1338 0000 80B4     	 push {r7}
 1339              	 .cfi_def_cfa_offset 4
 1340              	 .cfi_offset 7,-4
ARM GAS   			page 40


 1341 0002 87B0     	 sub sp,sp,#28
 1342              	 .cfi_def_cfa_offset 32
 1343 0004 00AF     	 add r7,sp,#0
 1344              	 .cfi_def_cfa_register 7
 1345 0006 F860     	 str r0,[r7,#12]
 1346 0008 B960     	 str r1,[r7,#8]
 1347 000a 7A60     	 str r2,[r7,#4]
 615:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 1348              	 .loc 1 615 12
 1349 000c 0023     	 movs r3,#0
 1350 000e 7B61     	 str r3,[r7,#20]
 616:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 617:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 1351              	 .loc 1 617 2
 1352 0010 7B68     	 ldr r3,[r7,#4]
 1353 0012 002B     	 cmp r3,#0
 1354 0014 07D1     	 bne .L77
 618:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 619:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 620:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		set.  Is one already set? */
 621:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 1355              	 .loc 1 621 28
 1356 0016 FA68     	 ldr r2,[r7,#12]
 1357 0018 BB68     	 ldr r3,[r7,#8]
 1358 001a 1340     	 ands r3,r3,r2
 1359              	 .loc 1 621 3
 1360 001c 002B     	 cmp r3,#0
 1361 001e 0AD0     	 beq .L78
 622:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 623:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1362              	 .loc 1 623 22
 1363 0020 0123     	 movs r3,#1
 1364 0022 7B61     	 str r3,[r7,#20]
 1365 0024 07E0     	 b .L78
 1366              	.L77:
 624:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 625:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 626:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 627:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 628:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 629:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 630:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	else
 631:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 632:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 633:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		Are they set already? */
 634:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 1367              	 .loc 1 634 28
 1368 0026 FA68     	 ldr r2,[r7,#12]
 1369 0028 BB68     	 ldr r3,[r7,#8]
 1370 002a 1340     	 ands r3,r3,r2
 1371              	 .loc 1 634 3
 1372 002c BA68     	 ldr r2,[r7,#8]
 1373 002e 9A42     	 cmp r2,r3
 1374 0030 01D1     	 bne .L78
 635:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 636:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1375              	 .loc 1 636 22
ARM GAS   			page 41


 1376 0032 0123     	 movs r3,#1
 1377 0034 7B61     	 str r3,[r7,#20]
 1378              	.L78:
 637:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 638:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 639:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 640:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 641:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 642:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 643:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 644:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	return xWaitConditionMet;
 1379              	 .loc 1 644 9
 1380 0036 7B69     	 ldr r3,[r7,#20]
 645:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** }
 1381              	 .loc 1 645 1
 1382 0038 1846     	 mov r0,r3
 1383 003a 1C37     	 adds r7,r7,#28
 1384              	 .cfi_def_cfa_offset 4
 1385 003c BD46     	 mov sp,r7
 1386              	 .cfi_def_cfa_register 13
 1387              	 
 1388 003e 5DF8047B 	 ldr r7,[sp],#4
 1389              	 .cfi_restore 7
 1390              	 .cfi_def_cfa_offset 0
 1391 0042 7047     	 bx lr
 1392              	 .cfi_endproc
 1393              	.LFE20:
 1394              	 .cantunwind
 1395              	 .fnend
 1396              	 .size _ZL20prvTestWaitConditionmml,.-_ZL20prvTestWaitConditionmml
 1397              	 .section .text.uxEventGroupGetNumber,"ax",%progbits
 1398              	 .align 1
 1399              	 .global uxEventGroupGetNumber
 1400              	 .syntax unified
 1401              	 .thumb
 1402              	 .thumb_func
 1403              	 .type uxEventGroupGetNumber,%function
 1404              	uxEventGroupGetNumber:
 1405              	 .fnstart
 1406              	.LFB21:
 646:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 647:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 648:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 649:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 650:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	BaseType_t xEventGroupSetBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSe
 651:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 652:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	BaseType_t xReturn;
 653:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 654:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		traceEVENT_GROUP_SET_BITS_FROM_ISR( xEventGroup, uxBitsToSet );
 655:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupSetBitsCallback, ( void * ) xEventGroup, ( ui
 656:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 657:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		return xReturn;
 658:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 659:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 660:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #endif
 661:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** /*-----------------------------------------------------------*/
 662:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
ARM GAS   			page 42


 663:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** #if (configUSE_TRACE_FACILITY == 1)
 664:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 665:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	UBaseType_t uxEventGroupGetNumber( void* xEventGroup )
 666:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	{
 1407              	 .loc 1 666 2
 1408              	 .cfi_startproc
 1409              	 
 1410              	 
 1411              	 
 1412 0000 80B4     	 push {r7}
 1413              	 .cfi_def_cfa_offset 4
 1414              	 .cfi_offset 7,-4
 1415 0002 85B0     	 sub sp,sp,#20
 1416              	 .cfi_def_cfa_offset 24
 1417 0004 00AF     	 add r7,sp,#0
 1418              	 .cfi_def_cfa_register 7
 1419 0006 7860     	 str r0,[r7,#4]
 667:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	UBaseType_t xReturn;
 668:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 1420              	 .loc 1 668 16
 1421 0008 7B68     	 ldr r3,[r7,#4]
 1422 000a BB60     	 str r3,[r7,#8]
 669:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 670:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		if( xEventGroup == NULL )
 1423              	 .loc 1 670 3
 1424 000c 7B68     	 ldr r3,[r7,#4]
 1425 000e 002B     	 cmp r3,#0
 1426 0010 02D1     	 bne .L81
 671:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 672:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xReturn = 0;
 1427              	 .loc 1 672 12
 1428 0012 0023     	 movs r3,#0
 1429 0014 FB60     	 str r3,[r7,#12]
 1430 0016 02E0     	 b .L82
 1431              	.L81:
 673:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 674:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		else
 675:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		{
 676:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 			xReturn = pxEventBits->uxEventGroupNumber;
 1432              	 .loc 1 676 12
 1433 0018 BB68     	 ldr r3,[r7,#8]
 1434 001a 9B69     	 ldr r3,[r3,#24]
 1435 001c FB60     	 str r3,[r7,#12]
 1436              	.L82:
 677:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		}
 678:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 
 679:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 		return xReturn;
 1437              	 .loc 1 679 10
 1438 001e FB68     	 ldr r3,[r7,#12]
 680:C:\Users\niels\Documents\Elektrotechniek\Jaar 2\ECS\ECSL\software\STM32\STM32Basis\HAL\gemeenschappelijk\Third_Party\FreeRTOS\Source\event_groups.c **** 	}
 1439              	 .loc 1 680 2
 1440 0020 1846     	 mov r0,r3
 1441 0022 1437     	 adds r7,r7,#20
 1442              	 .cfi_def_cfa_offset 4
 1443 0024 BD46     	 mov sp,r7
 1444              	 .cfi_def_cfa_register 13
 1445              	 
ARM GAS   			page 43


 1446 0026 5DF8047B 	 ldr r7,[sp],#4
 1447              	 .cfi_restore 7
 1448              	 .cfi_def_cfa_offset 0
 1449 002a 7047     	 bx lr
 1450              	 .cfi_endproc
 1451              	.LFE21:
 1452              	 .cantunwind
 1453              	 .fnend
 1454              	 .size uxEventGroupGetNumber,.-uxEventGroupGetNumber
 1455              	 .text
 1456              	.Letext0:
 1457              	 .file 3 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\cstdlib"
 1458              	 .file 4 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\bits\\std_abs.h"
 1459              	 .file 5 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\arm-none-eabi\\thumb\\v7e-m+fp\\hard\\bits\\c++config.h"
 1460              	 .file 6 "c:\\progra~2\\gnuarm~1\\102021~1.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 1461              	 .file 7 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 1462              	 .file 8 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\stdlib.h"
 1463              	 .file 9 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\c++\\10.3.1\\stdlib.h"
 1464              	 .file 10 "c:\\progra~2\\gnuarm~1\\102021~1.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1465              	 .file 11 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/list.h"
 1466              	 .file 12 "C:/Users/niels/DOCUME~1/ELEKTR~1/JAAR2~1/ECS/ECSL/software/STM32/STM32B~1/HAL/GEMEEN~1/THIRD_~1/FreeRTOS/Source/include/event_groups.h"
 1467              	 .file 13 "<built-in>"
 1468              	 .section .debug_info,"",%progbits
 1469              	.Ldebug_info0:
 1470 0000 920F0000 	 .4byte 0xf92
 1471 0004 0400     	 .2byte 0x4
 1472 0006 00000000 	 .4byte .Ldebug_abbrev0
 1473 000a 04       	 .byte 0x4
 1474 000b 01       	 .uleb128 0x1
 1475 000c 72030000 	 .4byte .LASF119
 1476 0010 04       	 .byte 0x4
 1477 0011 0C060000 	 .4byte .LASF120
 1478 0015 E1000000 	 .4byte .LASF121
 1479 0019 00000000 	 .4byte .Ldebug_ranges0+0
 1480 001d 00000000 	 .4byte 0
 1481 0021 00000000 	 .4byte .Ldebug_line0
 1482 0025 02       	 .uleb128 0x2
 1483 0026 73746400 	 .ascii "std\000"
 1484 002a 0D       	 .byte 0xd
 1485 002b 00       	 .byte 0
 1486 002c D0010000 	 .4byte 0x1d0
 1487 0030 03       	 .uleb128 0x3
 1488 0031 F5040000 	 .4byte .LASF5
 1489 0035 05       	 .byte 0x5
 1490 0036 1E01     	 .2byte 0x11e
 1491 0038 41       	 .byte 0x41
 1492 0039 04       	 .uleb128 0x4
 1493 003a 05       	 .byte 0x5
 1494 003b 1E01     	 .2byte 0x11e
 1495 003d 41       	 .byte 0x41
 1496 003e 30000000 	 .4byte 0x30
 1497 0042 05       	 .uleb128 0x5
 1498 0043 03       	 .byte 0x3
 1499 0044 7F       	 .byte 0x7f
 1500 0045 0B       	 .byte 0xb
 1501 0046 F6020000 	 .4byte 0x2f6
 1502 004a 05       	 .uleb128 0x5
ARM GAS   			page 44


 1503 004b 03       	 .byte 0x3
 1504 004c 80       	 .byte 0x80
 1505 004d 0B       	 .byte 0xb
 1506 004e 2A030000 	 .4byte 0x32a
 1507 0052 05       	 .uleb128 0x5
 1508 0053 03       	 .byte 0x3
 1509 0054 86       	 .byte 0x86
 1510 0055 0B       	 .byte 0xb
 1511 0056 97030000 	 .4byte 0x397
 1512 005a 05       	 .uleb128 0x5
 1513 005b 03       	 .byte 0x3
 1514 005c 8C       	 .byte 0x8c
 1515 005d 0B       	 .byte 0xb
 1516 005e AD030000 	 .4byte 0x3ad
 1517 0062 05       	 .uleb128 0x5
 1518 0063 03       	 .byte 0x3
 1519 0064 8D       	 .byte 0x8d
 1520 0065 0B       	 .byte 0xb
 1521 0066 CA030000 	 .4byte 0x3ca
 1522 006a 05       	 .uleb128 0x5
 1523 006b 03       	 .byte 0x3
 1524 006c 8E       	 .byte 0x8e
 1525 006d 0B       	 .byte 0xb
 1526 006e E0030000 	 .4byte 0x3e0
 1527 0072 05       	 .uleb128 0x5
 1528 0073 03       	 .byte 0x3
 1529 0074 8F       	 .byte 0x8f
 1530 0075 0B       	 .byte 0xb
 1531 0076 F6030000 	 .4byte 0x3f6
 1532 007a 05       	 .uleb128 0x5
 1533 007b 03       	 .byte 0x3
 1534 007c 91       	 .byte 0x91
 1535 007d 0B       	 .byte 0xb
 1536 007e 20040000 	 .4byte 0x420
 1537 0082 05       	 .uleb128 0x5
 1538 0083 03       	 .byte 0x3
 1539 0084 94       	 .byte 0x94
 1540 0085 0B       	 .byte 0xb
 1541 0086 3B040000 	 .4byte 0x43b
 1542 008a 05       	 .uleb128 0x5
 1543 008b 03       	 .byte 0x3
 1544 008c 96       	 .byte 0x96
 1545 008d 0B       	 .byte 0xb
 1546 008e 51040000 	 .4byte 0x451
 1547 0092 05       	 .uleb128 0x5
 1548 0093 03       	 .byte 0x3
 1549 0094 99       	 .byte 0x99
 1550 0095 0B       	 .byte 0xb
 1551 0096 6C040000 	 .4byte 0x46c
 1552 009a 05       	 .uleb128 0x5
 1553 009b 03       	 .byte 0x3
 1554 009c 9A       	 .byte 0x9a
 1555 009d 0B       	 .byte 0xb
 1556 009e 87040000 	 .4byte 0x487
 1557 00a2 05       	 .uleb128 0x5
 1558 00a3 03       	 .byte 0x3
 1559 00a4 9B       	 .byte 0x9b
ARM GAS   			page 45


 1560 00a5 0B       	 .byte 0xb
 1561 00a6 B9040000 	 .4byte 0x4b9
 1562 00aa 05       	 .uleb128 0x5
 1563 00ab 03       	 .byte 0x3
 1564 00ac 9D       	 .byte 0x9d
 1565 00ad 0B       	 .byte 0xb
 1566 00ae D9040000 	 .4byte 0x4d9
 1567 00b2 05       	 .uleb128 0x5
 1568 00b3 03       	 .byte 0x3
 1569 00b4 A3       	 .byte 0xa3
 1570 00b5 0B       	 .byte 0xb
 1571 00b6 FA040000 	 .4byte 0x4fa
 1572 00ba 05       	 .uleb128 0x5
 1573 00bb 03       	 .byte 0x3
 1574 00bc A5       	 .byte 0xa5
 1575 00bd 0B       	 .byte 0xb
 1576 00be 06050000 	 .4byte 0x506
 1577 00c2 05       	 .uleb128 0x5
 1578 00c3 03       	 .byte 0x3
 1579 00c4 A6       	 .byte 0xa6
 1580 00c5 0B       	 .byte 0xb
 1581 00c6 18050000 	 .4byte 0x518
 1582 00ca 05       	 .uleb128 0x5
 1583 00cb 03       	 .byte 0x3
 1584 00cc A7       	 .byte 0xa7
 1585 00cd 0B       	 .byte 0xb
 1586 00ce 39050000 	 .4byte 0x539
 1587 00d2 05       	 .uleb128 0x5
 1588 00d3 03       	 .byte 0x3
 1589 00d4 A8       	 .byte 0xa8
 1590 00d5 0B       	 .byte 0xb
 1591 00d6 59050000 	 .4byte 0x559
 1592 00da 05       	 .uleb128 0x5
 1593 00db 03       	 .byte 0x3
 1594 00dc A9       	 .byte 0xa9
 1595 00dd 0B       	 .byte 0xb
 1596 00de 79050000 	 .4byte 0x579
 1597 00e2 05       	 .uleb128 0x5
 1598 00e3 03       	 .byte 0x3
 1599 00e4 AB       	 .byte 0xab
 1600 00e5 0B       	 .byte 0xb
 1601 00e6 8F050000 	 .4byte 0x58f
 1602 00ea 05       	 .uleb128 0x5
 1603 00eb 03       	 .byte 0x3
 1604 00ec AC       	 .byte 0xac
 1605 00ed 0B       	 .byte 0xb
 1606 00ee B5050000 	 .4byte 0x5b5
 1607 00f2 05       	 .uleb128 0x5
 1608 00f3 03       	 .byte 0x3
 1609 00f4 F0       	 .byte 0xf0
 1610 00f5 16       	 .byte 0x16
 1611 00f6 5E030000 	 .4byte 0x35e
 1612 00fa 05       	 .uleb128 0x5
 1613 00fb 03       	 .byte 0x3
 1614 00fc F5       	 .byte 0xf5
 1615 00fd 16       	 .byte 0x16
 1616 00fe 27020000 	 .4byte 0x227
ARM GAS   			page 46


 1617 0102 05       	 .uleb128 0x5
 1618 0103 03       	 .byte 0x3
 1619 0104 F6       	 .byte 0xf6
 1620 0105 16       	 .byte 0x16
 1621 0106 D0050000 	 .4byte 0x5d0
 1622 010a 05       	 .uleb128 0x5
 1623 010b 03       	 .byte 0x3
 1624 010c F8       	 .byte 0xf8
 1625 010d 16       	 .byte 0x16
 1626 010e EC050000 	 .4byte 0x5ec
 1627 0112 05       	 .uleb128 0x5
 1628 0113 03       	 .byte 0x3
 1629 0114 F9       	 .byte 0xf9
 1630 0115 16       	 .byte 0x16
 1631 0116 45060000 	 .4byte 0x645
 1632 011a 05       	 .uleb128 0x5
 1633 011b 03       	 .byte 0x3
 1634 011c FA       	 .byte 0xfa
 1635 011d 16       	 .byte 0x16
 1636 011e 03060000 	 .4byte 0x603
 1637 0122 05       	 .uleb128 0x5
 1638 0123 03       	 .byte 0x3
 1639 0124 FB       	 .byte 0xfb
 1640 0125 16       	 .byte 0x16
 1641 0126 24060000 	 .4byte 0x624
 1642 012a 05       	 .uleb128 0x5
 1643 012b 03       	 .byte 0x3
 1644 012c FC       	 .byte 0xfc
 1645 012d 16       	 .byte 0x16
 1646 012e 67060000 	 .4byte 0x667
 1647 0132 06       	 .uleb128 0x6
 1648 0133 61627300 	 .ascii "abs\000"
 1649 0137 04       	 .byte 0x4
 1650 0138 4F       	 .byte 0x4f
 1651 0139 03       	 .byte 0x3
 1652 013a 70010000 	 .4byte .LASF0
 1653 013e 64020000 	 .4byte 0x264
 1654 0142 4C010000 	 .4byte 0x14c
 1655 0146 07       	 .uleb128 0x7
 1656 0147 64020000 	 .4byte 0x264
 1657 014b 00       	 .byte 0
 1658 014c 06       	 .uleb128 0x6
 1659 014d 61627300 	 .ascii "abs\000"
 1660 0151 04       	 .byte 0x4
 1661 0152 4B       	 .byte 0x4b
 1662 0153 03       	 .byte 0x3
 1663 0154 7A010000 	 .4byte .LASF1
 1664 0158 60060000 	 .4byte 0x660
 1665 015c 66010000 	 .4byte 0x166
 1666 0160 07       	 .uleb128 0x7
 1667 0161 60060000 	 .4byte 0x660
 1668 0165 00       	 .byte 0
 1669 0166 06       	 .uleb128 0x6
 1670 0167 61627300 	 .ascii "abs\000"
 1671 016b 04       	 .byte 0x4
 1672 016c 47       	 .byte 0x47
 1673 016d 03       	 .byte 0x3
ARM GAS   			page 47


 1674 016e 66010000 	 .4byte .LASF2
 1675 0172 C3030000 	 .4byte 0x3c3
 1676 0176 80010000 	 .4byte 0x180
 1677 017a 07       	 .uleb128 0x7
 1678 017b C3030000 	 .4byte 0x3c3
 1679 017f 00       	 .byte 0
 1680 0180 06       	 .uleb128 0x6
 1681 0181 61627300 	 .ascii "abs\000"
 1682 0185 04       	 .byte 0x4
 1683 0186 3D       	 .byte 0x3d
 1684 0187 03       	 .byte 0x3
 1685 0188 A7010000 	 .4byte .LASF3
 1686 018c 5D020000 	 .4byte 0x25d
 1687 0190 9A010000 	 .4byte 0x19a
 1688 0194 07       	 .uleb128 0x7
 1689 0195 5D020000 	 .4byte 0x25d
 1690 0199 00       	 .byte 0
 1691 019a 06       	 .uleb128 0x6
 1692 019b 61627300 	 .ascii "abs\000"
 1693 019f 04       	 .byte 0x4
 1694 01a0 38       	 .byte 0x38
 1695 01a1 03       	 .byte 0x3
 1696 01a2 84010000 	 .4byte .LASF4
 1697 01a6 8C020000 	 .4byte 0x28c
 1698 01aa B4010000 	 .4byte 0x1b4
 1699 01ae 07       	 .uleb128 0x7
 1700 01af 8C020000 	 .4byte 0x28c
 1701 01b3 00       	 .byte 0
 1702 01b4 08       	 .uleb128 0x8
 1703 01b5 64697600 	 .ascii "div\000"
 1704 01b9 03       	 .byte 0x3
 1705 01ba B1       	 .byte 0xb1
 1706 01bb 03       	 .byte 0x3
 1707 01bc 38000000 	 .4byte .LASF6
 1708 01c0 2A030000 	 .4byte 0x32a
 1709 01c4 07       	 .uleb128 0x7
 1710 01c5 8C020000 	 .4byte 0x28c
 1711 01c9 07       	 .uleb128 0x7
 1712 01ca 8C020000 	 .4byte 0x28c
 1713 01ce 00       	 .byte 0
 1714 01cf 00       	 .byte 0
 1715 01d0 09       	 .uleb128 0x9
 1716 01d1 71000000 	 .4byte .LASF122
 1717 01d5 05       	 .byte 0x5
 1718 01d6 2001     	 .2byte 0x120
 1719 01d8 0B       	 .byte 0xb
 1720 01d9 43020000 	 .4byte 0x243
 1721 01dd 03       	 .uleb128 0x3
 1722 01de F5040000 	 .4byte .LASF5
 1723 01e2 05       	 .byte 0x5
 1724 01e3 2201     	 .2byte 0x122
 1725 01e5 41       	 .byte 0x41
 1726 01e6 04       	 .uleb128 0x4
 1727 01e7 05       	 .byte 0x5
 1728 01e8 2201     	 .2byte 0x122
 1729 01ea 41       	 .byte 0x41
 1730 01eb DD010000 	 .4byte 0x1dd
ARM GAS   			page 48


 1731 01ef 05       	 .uleb128 0x5
 1732 01f0 03       	 .byte 0x3
 1733 01f1 C8       	 .byte 0xc8
 1734 01f2 0B       	 .byte 0xb
 1735 01f3 5E030000 	 .4byte 0x35e
 1736 01f7 05       	 .uleb128 0x5
 1737 01f8 03       	 .byte 0x3
 1738 01f9 D8       	 .byte 0xd8
 1739 01fa 0B       	 .byte 0xb
 1740 01fb D0050000 	 .4byte 0x5d0
 1741 01ff 05       	 .uleb128 0x5
 1742 0200 03       	 .byte 0x3
 1743 0201 E3       	 .byte 0xe3
 1744 0202 0B       	 .byte 0xb
 1745 0203 EC050000 	 .4byte 0x5ec
 1746 0207 05       	 .uleb128 0x5
 1747 0208 03       	 .byte 0x3
 1748 0209 E4       	 .byte 0xe4
 1749 020a 0B       	 .byte 0xb
 1750 020b 03060000 	 .4byte 0x603
 1751 020f 05       	 .uleb128 0x5
 1752 0210 03       	 .byte 0x3
 1753 0211 E5       	 .byte 0xe5
 1754 0212 0B       	 .byte 0xb
 1755 0213 24060000 	 .4byte 0x624
 1756 0217 05       	 .uleb128 0x5
 1757 0218 03       	 .byte 0x3
 1758 0219 E7       	 .byte 0xe7
 1759 021a 0B       	 .byte 0xb
 1760 021b 45060000 	 .4byte 0x645
 1761 021f 05       	 .uleb128 0x5
 1762 0220 03       	 .byte 0x3
 1763 0221 E8       	 .byte 0xe8
 1764 0222 0B       	 .byte 0xb
 1765 0223 67060000 	 .4byte 0x667
 1766 0227 08       	 .uleb128 0x8
 1767 0228 64697600 	 .ascii "div\000"
 1768 022c 03       	 .byte 0x3
 1769 022d D5       	 .byte 0xd5
 1770 022e 03       	 .byte 0x3
 1771 022f B3000000 	 .4byte .LASF7
 1772 0233 5E030000 	 .4byte 0x35e
 1773 0237 07       	 .uleb128 0x7
 1774 0238 5D020000 	 .4byte 0x25d
 1775 023c 07       	 .uleb128 0x7
 1776 023d 5D020000 	 .4byte 0x25d
 1777 0241 00       	 .byte 0
 1778 0242 00       	 .byte 0
 1779 0243 0A       	 .uleb128 0xa
 1780 0244 46020000 	 .4byte .LASF16
 1781 0248 06       	 .byte 0x6
 1782 0249 D1       	 .byte 0xd1
 1783 024a 17       	 .byte 0x17
 1784 024b 4F020000 	 .4byte 0x24f
 1785 024f 0B       	 .uleb128 0xb
 1786 0250 04       	 .byte 0x4
 1787 0251 07       	 .byte 0x7
ARM GAS   			page 49


 1788 0252 5C000000 	 .4byte .LASF8
 1789 0256 0C       	 .uleb128 0xc
 1790 0257 04       	 .byte 0x4
 1791 0258 05       	 .byte 0x5
 1792 0259 696E7400 	 .ascii "int\000"
 1793 025d 0B       	 .uleb128 0xb
 1794 025e 08       	 .byte 0x8
 1795 025f 05       	 .byte 0x5
 1796 0260 64030000 	 .4byte .LASF9
 1797 0264 0B       	 .uleb128 0xb
 1798 0265 08       	 .byte 0x8
 1799 0266 04       	 .byte 0x4
 1800 0267 7B050000 	 .4byte .LASF10
 1801 026b 0D       	 .uleb128 0xd
 1802 026c 40070000 	 .4byte .LASF123
 1803 0270 0B       	 .uleb128 0xb
 1804 0271 01       	 .byte 0x1
 1805 0272 06       	 .byte 0x6
 1806 0273 92070000 	 .4byte .LASF11
 1807 0277 0B       	 .uleb128 0xb
 1808 0278 01       	 .byte 0x1
 1809 0279 08       	 .byte 0x8
 1810 027a 1B070000 	 .4byte .LASF12
 1811 027e 0B       	 .uleb128 0xb
 1812 027f 02       	 .byte 0x2
 1813 0280 05       	 .byte 0x5
 1814 0281 A6050000 	 .4byte .LASF13
 1815 0285 0B       	 .uleb128 0xb
 1816 0286 02       	 .byte 0x2
 1817 0287 07       	 .byte 0x7
 1818 0288 9E070000 	 .4byte .LASF14
 1819 028c 0B       	 .uleb128 0xb
 1820 028d 04       	 .byte 0x4
 1821 028e 05       	 .byte 0x5
 1822 028f BB050000 	 .4byte .LASF15
 1823 0293 0A       	 .uleb128 0xa
 1824 0294 35070000 	 .4byte .LASF17
 1825 0298 07       	 .byte 0x7
 1826 0299 4F       	 .byte 0x4f
 1827 029a 19       	 .byte 0x19
 1828 029b 9F020000 	 .4byte 0x29f
 1829 029f 0B       	 .uleb128 0xb
 1830 02a0 04       	 .byte 0x4
 1831 02a1 07       	 .byte 0x7
 1832 02a2 F1060000 	 .4byte .LASF18
 1833 02a6 0B       	 .uleb128 0xb
 1834 02a7 08       	 .byte 0x8
 1835 02a8 07       	 .byte 0x7
 1836 02a9 E2010000 	 .4byte .LASF19
 1837 02ad 0E       	 .uleb128 0xe
 1838 02ae 04       	 .byte 0x4
 1839 02af 0F       	 .uleb128 0xf
 1840 02b0 04       	 .byte 0x4
 1841 02b1 B5020000 	 .4byte 0x2b5
 1842 02b5 10       	 .uleb128 0x10
 1843 02b6 0F       	 .uleb128 0xf
 1844 02b7 04       	 .byte 0x4
ARM GAS   			page 50


 1845 02b8 BC020000 	 .4byte 0x2bc
 1846 02bc 0B       	 .uleb128 0xb
 1847 02bd 01       	 .byte 0x1
 1848 02be 08       	 .byte 0x8
 1849 02bf F0020000 	 .4byte .LASF20
 1850 02c3 11       	 .uleb128 0x11
 1851 02c4 BC020000 	 .4byte 0x2bc
 1852 02c8 0F       	 .uleb128 0xf
 1853 02c9 04       	 .byte 0x4
 1854 02ca C3020000 	 .4byte 0x2c3
 1855 02ce 12       	 .uleb128 0x12
 1856 02cf 08       	 .byte 0x8
 1857 02d0 08       	 .byte 0x8
 1858 02d1 24       	 .byte 0x24
 1859 02d2 01       	 .byte 0x1
 1860 02d3 00030000 	 .4byte .LASF23
 1861 02d7 F6020000 	 .4byte 0x2f6
 1862 02db 13       	 .uleb128 0x13
 1863 02dc 38030000 	 .4byte .LASF21
 1864 02e0 08       	 .byte 0x8
 1865 02e1 25       	 .byte 0x25
 1866 02e2 07       	 .byte 0x7
 1867 02e3 56020000 	 .4byte 0x256
 1868 02e7 00       	 .byte 0
 1869 02e8 14       	 .uleb128 0x14
 1870 02e9 72656D00 	 .ascii "rem\000"
 1871 02ed 08       	 .byte 0x8
 1872 02ee 26       	 .byte 0x26
 1873 02ef 07       	 .byte 0x7
 1874 02f0 56020000 	 .4byte 0x256
 1875 02f4 04       	 .byte 0x4
 1876 02f5 00       	 .byte 0
 1877 02f6 0A       	 .uleb128 0xa
 1878 02f7 15070000 	 .4byte .LASF22
 1879 02fb 08       	 .byte 0x8
 1880 02fc 27       	 .byte 0x27
 1881 02fd 03       	 .byte 0x3
 1882 02fe CE020000 	 .4byte 0x2ce
 1883 0302 12       	 .uleb128 0x12
 1884 0303 08       	 .byte 0x8
 1885 0304 08       	 .byte 0x8
 1886 0305 2A       	 .byte 0x2a
 1887 0306 01       	 .byte 0x1
 1888 0307 81070000 	 .4byte .LASF24
 1889 030b 2A030000 	 .4byte 0x32a
 1890 030f 13       	 .uleb128 0x13
 1891 0310 38030000 	 .4byte .LASF21
 1892 0314 08       	 .byte 0x8
 1893 0315 2B       	 .byte 0x2b
 1894 0316 08       	 .byte 0x8
 1895 0317 8C020000 	 .4byte 0x28c
 1896 031b 00       	 .byte 0
 1897 031c 14       	 .uleb128 0x14
 1898 031d 72656D00 	 .ascii "rem\000"
 1899 0321 08       	 .byte 0x8
 1900 0322 2C       	 .byte 0x2c
 1901 0323 08       	 .byte 0x8
ARM GAS   			page 51


 1902 0324 8C020000 	 .4byte 0x28c
 1903 0328 04       	 .byte 0x4
 1904 0329 00       	 .byte 0
 1905 032a 0A       	 .uleb128 0xa
 1906 032b A0060000 	 .4byte .LASF25
 1907 032f 08       	 .byte 0x8
 1908 0330 2D       	 .byte 0x2d
 1909 0331 03       	 .byte 0x3
 1910 0332 02030000 	 .4byte 0x302
 1911 0336 12       	 .uleb128 0x12
 1912 0337 10       	 .byte 0x10
 1913 0338 08       	 .byte 0x8
 1914 0339 31       	 .byte 0x31
 1915 033a 01       	 .byte 0x1
 1916 033b 89070000 	 .4byte .LASF26
 1917 033f 5E030000 	 .4byte 0x35e
 1918 0343 13       	 .uleb128 0x13
 1919 0344 38030000 	 .4byte .LASF21
 1920 0348 08       	 .byte 0x8
 1921 0349 32       	 .byte 0x32
 1922 034a 11       	 .byte 0x11
 1923 034b 5D020000 	 .4byte 0x25d
 1924 034f 00       	 .byte 0
 1925 0350 14       	 .uleb128 0x14
 1926 0351 72656D00 	 .ascii "rem\000"
 1927 0355 08       	 .byte 0x8
 1928 0356 33       	 .byte 0x33
 1929 0357 11       	 .byte 0x11
 1930 0358 5D020000 	 .4byte 0x25d
 1931 035c 08       	 .byte 0x8
 1932 035d 00       	 .byte 0
 1933 035e 0A       	 .uleb128 0xa
 1934 035f B1070000 	 .4byte .LASF27
 1935 0363 08       	 .byte 0x8
 1936 0364 34       	 .byte 0x34
 1937 0365 03       	 .byte 0x3
 1938 0366 36030000 	 .4byte 0x336
 1939 036a 0A       	 .uleb128 0xa
 1940 036b 09050000 	 .4byte .LASF28
 1941 036f 08       	 .byte 0x8
 1942 0370 39       	 .byte 0x39
 1943 0371 0F       	 .byte 0xf
 1944 0372 76030000 	 .4byte 0x376
 1945 0376 0F       	 .uleb128 0xf
 1946 0377 04       	 .byte 0x4
 1947 0378 7C030000 	 .4byte 0x37c
 1948 037c 15       	 .uleb128 0x15
 1949 037d 56020000 	 .4byte 0x256
 1950 0381 90030000 	 .4byte 0x390
 1951 0385 07       	 .uleb128 0x7
 1952 0386 90030000 	 .4byte 0x390
 1953 038a 07       	 .uleb128 0x7
 1954 038b 90030000 	 .4byte 0x390
 1955 038f 00       	 .byte 0
 1956 0390 0F       	 .uleb128 0xf
 1957 0391 04       	 .byte 0x4
 1958 0392 96030000 	 .4byte 0x396
ARM GAS   			page 52


 1959 0396 16       	 .uleb128 0x16
 1960 0397 17       	 .uleb128 0x17
 1961 0398 EF050000 	 .4byte .LASF29
 1962 039c 08       	 .byte 0x8
 1963 039d 4C       	 .byte 0x4c
 1964 039e 05       	 .byte 0x5
 1965 039f 56020000 	 .4byte 0x256
 1966 03a3 AD030000 	 .4byte 0x3ad
 1967 03a7 07       	 .uleb128 0x7
 1968 03a8 AF020000 	 .4byte 0x2af
 1969 03ac 00       	 .byte 0
 1970 03ad 17       	 .uleb128 0x17
 1971 03ae B9070000 	 .4byte .LASF30
 1972 03b2 08       	 .byte 0x8
 1973 03b3 4D       	 .byte 0x4d
 1974 03b4 08       	 .byte 0x8
 1975 03b5 C3030000 	 .4byte 0x3c3
 1976 03b9 C3030000 	 .4byte 0x3c3
 1977 03bd 07       	 .uleb128 0x7
 1978 03be C8020000 	 .4byte 0x2c8
 1979 03c2 00       	 .byte 0
 1980 03c3 0B       	 .uleb128 0xb
 1981 03c4 08       	 .byte 0x8
 1982 03c5 04       	 .byte 0x4
 1983 03c6 D5070000 	 .4byte .LASF31
 1984 03ca 17       	 .uleb128 0x17
 1985 03cb BE070000 	 .4byte .LASF32
 1986 03cf 08       	 .byte 0x8
 1987 03d0 51       	 .byte 0x51
 1988 03d1 05       	 .byte 0x5
 1989 03d2 56020000 	 .4byte 0x256
 1990 03d6 E0030000 	 .4byte 0x3e0
 1991 03da 07       	 .uleb128 0x7
 1992 03db C8020000 	 .4byte 0x2c8
 1993 03df 00       	 .byte 0
 1994 03e0 17       	 .uleb128 0x17
 1995 03e1 C3070000 	 .4byte .LASF33
 1996 03e5 08       	 .byte 0x8
 1997 03e6 53       	 .byte 0x53
 1998 03e7 06       	 .byte 0x6
 1999 03e8 8C020000 	 .4byte 0x28c
 2000 03ec F6030000 	 .4byte 0x3f6
 2001 03f0 07       	 .uleb128 0x7
 2002 03f1 C8020000 	 .4byte 0x2c8
 2003 03f5 00       	 .byte 0
 2004 03f6 17       	 .uleb128 0x17
 2005 03f7 A0020000 	 .4byte .LASF34
 2006 03fb 08       	 .byte 0x8
 2007 03fc 55       	 .byte 0x55
 2008 03fd 08       	 .byte 0x8
 2009 03fe AD020000 	 .4byte 0x2ad
 2010 0402 20040000 	 .4byte 0x420
 2011 0406 07       	 .uleb128 0x7
 2012 0407 90030000 	 .4byte 0x390
 2013 040b 07       	 .uleb128 0x7
 2014 040c 90030000 	 .4byte 0x390
 2015 0410 07       	 .uleb128 0x7
ARM GAS   			page 53


 2016 0411 43020000 	 .4byte 0x243
 2017 0415 07       	 .uleb128 0x7
 2018 0416 43020000 	 .4byte 0x243
 2019 041a 07       	 .uleb128 0x7
 2020 041b 6A030000 	 .4byte 0x36a
 2021 041f 00       	 .byte 0
 2022 0420 18       	 .uleb128 0x18
 2023 0421 64697600 	 .ascii "div\000"
 2024 0425 08       	 .byte 0x8
 2025 0426 5C       	 .byte 0x5c
 2026 0427 07       	 .byte 0x7
 2027 0428 F6020000 	 .4byte 0x2f6
 2028 042c 3B040000 	 .4byte 0x43b
 2029 0430 07       	 .uleb128 0x7
 2030 0431 56020000 	 .4byte 0x256
 2031 0435 07       	 .uleb128 0x7
 2032 0436 56020000 	 .4byte 0x256
 2033 043a 00       	 .byte 0
 2034 043b 17       	 .uleb128 0x17
 2035 043c 00000000 	 .4byte .LASF35
 2036 0440 08       	 .byte 0x8
 2037 0441 5F       	 .byte 0x5f
 2038 0442 09       	 .byte 0x9
 2039 0443 B6020000 	 .4byte 0x2b6
 2040 0447 51040000 	 .4byte 0x451
 2041 044b 07       	 .uleb128 0x7
 2042 044c C8020000 	 .4byte 0x2c8
 2043 0450 00       	 .byte 0
 2044 0451 17       	 .uleb128 0x17
 2045 0452 04050000 	 .4byte .LASF36
 2046 0456 08       	 .byte 0x8
 2047 0457 6B       	 .byte 0x6b
 2048 0458 08       	 .byte 0x8
 2049 0459 2A030000 	 .4byte 0x32a
 2050 045d 6C040000 	 .4byte 0x46c
 2051 0461 07       	 .uleb128 0x7
 2052 0462 8C020000 	 .4byte 0x28c
 2053 0466 07       	 .uleb128 0x7
 2054 0467 8C020000 	 .4byte 0x28c
 2055 046b 00       	 .byte 0
 2056 046c 17       	 .uleb128 0x17
 2057 046d 56000000 	 .4byte .LASF37
 2058 0471 08       	 .byte 0x8
 2059 0472 6D       	 .byte 0x6d
 2060 0473 05       	 .byte 0x5
 2061 0474 56020000 	 .4byte 0x256
 2062 0478 87040000 	 .4byte 0x487
 2063 047c 07       	 .uleb128 0x7
 2064 047d C8020000 	 .4byte 0x2c8
 2065 0481 07       	 .uleb128 0x7
 2066 0482 43020000 	 .4byte 0x243
 2067 0486 00       	 .byte 0
 2068 0487 17       	 .uleb128 0x17
 2069 0488 48030000 	 .4byte .LASF38
 2070 048c 08       	 .byte 0x8
 2071 048d 73       	 .byte 0x73
 2072 048e 08       	 .byte 0x8
ARM GAS   			page 54


 2073 048f 43020000 	 .4byte 0x243
 2074 0493 A7040000 	 .4byte 0x4a7
 2075 0497 07       	 .uleb128 0x7
 2076 0498 A7040000 	 .4byte 0x4a7
 2077 049c 07       	 .uleb128 0x7
 2078 049d C8020000 	 .4byte 0x2c8
 2079 04a1 07       	 .uleb128 0x7
 2080 04a2 43020000 	 .4byte 0x243
 2081 04a6 00       	 .byte 0
 2082 04a7 0F       	 .uleb128 0xf
 2083 04a8 04       	 .byte 0x4
 2084 04a9 AD040000 	 .4byte 0x4ad
 2085 04ad 0B       	 .uleb128 0xb
 2086 04ae 04       	 .byte 0x4
 2087 04af 07       	 .byte 0x7
 2088 04b0 94000000 	 .4byte .LASF39
 2089 04b4 11       	 .uleb128 0x11
 2090 04b5 AD040000 	 .4byte 0x4ad
 2091 04b9 17       	 .uleb128 0x17
 2092 04ba B1010000 	 .4byte .LASF40
 2093 04be 08       	 .byte 0x8
 2094 04bf 6F       	 .byte 0x6f
 2095 04c0 05       	 .byte 0x5
 2096 04c1 56020000 	 .4byte 0x256
 2097 04c5 D9040000 	 .4byte 0x4d9
 2098 04c9 07       	 .uleb128 0x7
 2099 04ca A7040000 	 .4byte 0x4a7
 2100 04ce 07       	 .uleb128 0x7
 2101 04cf C8020000 	 .4byte 0x2c8
 2102 04d3 07       	 .uleb128 0x7
 2103 04d4 43020000 	 .4byte 0x243
 2104 04d8 00       	 .byte 0
 2105 04d9 19       	 .uleb128 0x19
 2106 04da 02080000 	 .4byte .LASF41
 2107 04de 08       	 .byte 0x8
 2108 04df 8F       	 .byte 0x8f
 2109 04e0 06       	 .byte 0x6
 2110 04e1 FA040000 	 .4byte 0x4fa
 2111 04e5 07       	 .uleb128 0x7
 2112 04e6 AD020000 	 .4byte 0x2ad
 2113 04ea 07       	 .uleb128 0x7
 2114 04eb 43020000 	 .4byte 0x243
 2115 04ef 07       	 .uleb128 0x7
 2116 04f0 43020000 	 .4byte 0x243
 2117 04f4 07       	 .uleb128 0x7
 2118 04f5 6A030000 	 .4byte 0x36a
 2119 04f9 00       	 .byte 0
 2120 04fa 1A       	 .uleb128 0x1a
 2121 04fb 2C000000 	 .4byte .LASF124
 2122 04ff 08       	 .byte 0x8
 2123 0500 90       	 .byte 0x90
 2124 0501 05       	 .byte 0x5
 2125 0502 56020000 	 .4byte 0x256
 2126 0506 19       	 .uleb128 0x19
 2127 0507 54020000 	 .4byte .LASF42
 2128 050b 08       	 .byte 0x8
 2129 050c 9F       	 .byte 0x9f
ARM GAS   			page 55


 2130 050d 06       	 .byte 0x6
 2131 050e 18050000 	 .4byte 0x518
 2132 0512 07       	 .uleb128 0x7
 2133 0513 4F020000 	 .4byte 0x24f
 2134 0517 00       	 .byte 0
 2135 0518 17       	 .uleb128 0x17
 2136 0519 4D020000 	 .4byte .LASF43
 2137 051d 08       	 .byte 0x8
 2138 051e A0       	 .byte 0xa0
 2139 051f 08       	 .byte 0x8
 2140 0520 C3030000 	 .4byte 0x3c3
 2141 0524 33050000 	 .4byte 0x533
 2142 0528 07       	 .uleb128 0x7
 2143 0529 C8020000 	 .4byte 0x2c8
 2144 052d 07       	 .uleb128 0x7
 2145 052e 33050000 	 .4byte 0x533
 2146 0532 00       	 .byte 0
 2147 0533 0F       	 .uleb128 0xf
 2148 0534 04       	 .byte 0x4
 2149 0535 B6020000 	 .4byte 0x2b6
 2150 0539 17       	 .uleb128 0x17
 2151 053a 62070000 	 .4byte .LASF44
 2152 053e 08       	 .byte 0x8
 2153 053f AB       	 .byte 0xab
 2154 0540 06       	 .byte 0x6
 2155 0541 8C020000 	 .4byte 0x28c
 2156 0545 59050000 	 .4byte 0x559
 2157 0549 07       	 .uleb128 0x7
 2158 054a C8020000 	 .4byte 0x2c8
 2159 054e 07       	 .uleb128 0x7
 2160 054f 33050000 	 .4byte 0x533
 2161 0553 07       	 .uleb128 0x7
 2162 0554 56020000 	 .4byte 0x256
 2163 0558 00       	 .byte 0
 2164 0559 17       	 .uleb128 0x17
 2165 055a E9060000 	 .4byte .LASF45
 2166 055e 08       	 .byte 0x8
 2167 055f AD       	 .byte 0xad
 2168 0560 0F       	 .byte 0xf
 2169 0561 9F020000 	 .4byte 0x29f
 2170 0565 79050000 	 .4byte 0x579
 2171 0569 07       	 .uleb128 0x7
 2172 056a C8020000 	 .4byte 0x2c8
 2173 056e 07       	 .uleb128 0x7
 2174 056f 33050000 	 .4byte 0x533
 2175 0573 07       	 .uleb128 0x7
 2176 0574 56020000 	 .4byte 0x256
 2177 0578 00       	 .byte 0
 2178 0579 17       	 .uleb128 0x17
 2179 057a 31000000 	 .4byte .LASF46
 2180 057e 08       	 .byte 0x8
 2181 057f BF       	 .byte 0xbf
 2182 0580 05       	 .byte 0x5
 2183 0581 56020000 	 .4byte 0x256
 2184 0585 8F050000 	 .4byte 0x58f
 2185 0589 07       	 .uleb128 0x7
 2186 058a C8020000 	 .4byte 0x2c8
ARM GAS   			page 56


 2187 058e 00       	 .byte 0
 2188 058f 17       	 .uleb128 0x17
 2189 0590 59070000 	 .4byte .LASF47
 2190 0594 08       	 .byte 0x8
 2191 0595 75       	 .byte 0x75
 2192 0596 08       	 .byte 0x8
 2193 0597 43020000 	 .4byte 0x243
 2194 059b AF050000 	 .4byte 0x5af
 2195 059f 07       	 .uleb128 0x7
 2196 05a0 B6020000 	 .4byte 0x2b6
 2197 05a4 07       	 .uleb128 0x7
 2198 05a5 AF050000 	 .4byte 0x5af
 2199 05a9 07       	 .uleb128 0x7
 2200 05aa 43020000 	 .4byte 0x243
 2201 05ae 00       	 .byte 0
 2202 05af 0F       	 .uleb128 0xf
 2203 05b0 04       	 .byte 0x4
 2204 05b1 B4040000 	 .4byte 0x4b4
 2205 05b5 17       	 .uleb128 0x17
 2206 05b6 12020000 	 .4byte .LASF48
 2207 05ba 08       	 .byte 0x8
 2208 05bb 71       	 .byte 0x71
 2209 05bc 05       	 .byte 0x5
 2210 05bd 56020000 	 .4byte 0x256
 2211 05c1 D0050000 	 .4byte 0x5d0
 2212 05c5 07       	 .uleb128 0x7
 2213 05c6 B6020000 	 .4byte 0x2b6
 2214 05ca 07       	 .uleb128 0x7
 2215 05cb AD040000 	 .4byte 0x4ad
 2216 05cf 00       	 .byte 0
 2217 05d0 1B       	 .uleb128 0x1b
 2218 05d1 19020000 	 .4byte .LASF49
 2219 05d5 08       	 .byte 0x8
 2220 05d6 0C01     	 .2byte 0x10c
 2221 05d8 09       	 .byte 0x9
 2222 05d9 5E030000 	 .4byte 0x35e
 2223 05dd EC050000 	 .4byte 0x5ec
 2224 05e1 07       	 .uleb128 0x7
 2225 05e2 5D020000 	 .4byte 0x25d
 2226 05e6 07       	 .uleb128 0x7
 2227 05e7 5D020000 	 .4byte 0x25d
 2228 05eb 00       	 .byte 0
 2229 05ec 1B       	 .uleb128 0x1b
 2230 05ed 1F020000 	 .4byte .LASF50
 2231 05f1 08       	 .byte 0x8
 2232 05f2 0701     	 .2byte 0x107
 2233 05f4 0B       	 .byte 0xb
 2234 05f5 5D020000 	 .4byte 0x25d
 2235 05f9 03060000 	 .4byte 0x603
 2236 05fd 07       	 .uleb128 0x7
 2237 05fe C8020000 	 .4byte 0x2c8
 2238 0602 00       	 .byte 0
 2239 0603 1B       	 .uleb128 0x1b
 2240 0604 96010000 	 .4byte .LASF51
 2241 0608 08       	 .byte 0x8
 2242 0609 0D01     	 .2byte 0x10d
 2243 060b 0B       	 .byte 0xb
ARM GAS   			page 57


 2244 060c 5D020000 	 .4byte 0x25d
 2245 0610 24060000 	 .4byte 0x624
 2246 0614 07       	 .uleb128 0x7
 2247 0615 C8020000 	 .4byte 0x2c8
 2248 0619 07       	 .uleb128 0x7
 2249 061a 33050000 	 .4byte 0x533
 2250 061e 07       	 .uleb128 0x7
 2251 061f 56020000 	 .4byte 0x256
 2252 0623 00       	 .byte 0
 2253 0624 1B       	 .uleb128 0x1b
 2254 0625 C8000000 	 .4byte .LASF52
 2255 0629 08       	 .byte 0x8
 2256 062a 1101     	 .2byte 0x111
 2257 062c 14       	 .byte 0x14
 2258 062d A6020000 	 .4byte 0x2a6
 2259 0631 45060000 	 .4byte 0x645
 2260 0635 07       	 .uleb128 0x7
 2261 0636 C8020000 	 .4byte 0x2c8
 2262 063a 07       	 .uleb128 0x7
 2263 063b 33050000 	 .4byte 0x533
 2264 063f 07       	 .uleb128 0x7
 2265 0640 56020000 	 .4byte 0x256
 2266 0644 00       	 .byte 0
 2267 0645 17       	 .uleb128 0x17
 2268 0646 52070000 	 .4byte .LASF53
 2269 064a 08       	 .byte 0x8
 2270 064b A3       	 .byte 0xa3
 2271 064c 07       	 .byte 0x7
 2272 064d 60060000 	 .4byte 0x660
 2273 0651 60060000 	 .4byte 0x660
 2274 0655 07       	 .uleb128 0x7
 2275 0656 C8020000 	 .4byte 0x2c8
 2276 065a 07       	 .uleb128 0x7
 2277 065b 33050000 	 .4byte 0x533
 2278 065f 00       	 .byte 0
 2279 0660 0B       	 .uleb128 0xb
 2280 0661 04       	 .byte 0x4
 2281 0662 04       	 .byte 0x4
 2282 0663 CA010000 	 .4byte .LASF54
 2283 0667 1B       	 .uleb128 0x1b
 2284 0668 8E010000 	 .4byte .LASF55
 2285 066c 08       	 .byte 0x8
 2286 066d 4401     	 .2byte 0x144
 2287 066f 14       	 .byte 0x14
 2288 0670 64020000 	 .4byte 0x264
 2289 0674 83060000 	 .4byte 0x683
 2290 0678 07       	 .uleb128 0x7
 2291 0679 C8020000 	 .4byte 0x2c8
 2292 067d 07       	 .uleb128 0x7
 2293 067e 33050000 	 .4byte 0x533
 2294 0682 00       	 .byte 0
 2295 0683 05       	 .uleb128 0x5
 2296 0684 09       	 .byte 0x9
 2297 0685 27       	 .byte 0x27
 2298 0686 0C       	 .byte 0xc
 2299 0687 97030000 	 .4byte 0x397
 2300 068b 05       	 .uleb128 0x5
ARM GAS   			page 58


 2301 068c 09       	 .byte 0x9
 2302 068d 33       	 .byte 0x33
 2303 068e 0C       	 .byte 0xc
 2304 068f F6020000 	 .4byte 0x2f6
 2305 0693 05       	 .uleb128 0x5
 2306 0694 09       	 .byte 0x9
 2307 0695 34       	 .byte 0x34
 2308 0696 0C       	 .byte 0xc
 2309 0697 2A030000 	 .4byte 0x32a
 2310 069b 05       	 .uleb128 0x5
 2311 069c 09       	 .byte 0x9
 2312 069d 36       	 .byte 0x36
 2313 069e 0C       	 .byte 0xc
 2314 069f 32010000 	 .4byte 0x132
 2315 06a3 05       	 .uleb128 0x5
 2316 06a4 09       	 .byte 0x9
 2317 06a5 36       	 .byte 0x36
 2318 06a6 0C       	 .byte 0xc
 2319 06a7 4C010000 	 .4byte 0x14c
 2320 06ab 05       	 .uleb128 0x5
 2321 06ac 09       	 .byte 0x9
 2322 06ad 36       	 .byte 0x36
 2323 06ae 0C       	 .byte 0xc
 2324 06af 66010000 	 .4byte 0x166
 2325 06b3 05       	 .uleb128 0x5
 2326 06b4 09       	 .byte 0x9
 2327 06b5 36       	 .byte 0x36
 2328 06b6 0C       	 .byte 0xc
 2329 06b7 80010000 	 .4byte 0x180
 2330 06bb 05       	 .uleb128 0x5
 2331 06bc 09       	 .byte 0x9
 2332 06bd 36       	 .byte 0x36
 2333 06be 0C       	 .byte 0xc
 2334 06bf 9A010000 	 .4byte 0x19a
 2335 06c3 05       	 .uleb128 0x5
 2336 06c4 09       	 .byte 0x9
 2337 06c5 37       	 .byte 0x37
 2338 06c6 0C       	 .byte 0xc
 2339 06c7 AD030000 	 .4byte 0x3ad
 2340 06cb 05       	 .uleb128 0x5
 2341 06cc 09       	 .byte 0x9
 2342 06cd 38       	 .byte 0x38
 2343 06ce 0C       	 .byte 0xc
 2344 06cf CA030000 	 .4byte 0x3ca
 2345 06d3 05       	 .uleb128 0x5
 2346 06d4 09       	 .byte 0x9
 2347 06d5 39       	 .byte 0x39
 2348 06d6 0C       	 .byte 0xc
 2349 06d7 E0030000 	 .4byte 0x3e0
 2350 06db 05       	 .uleb128 0x5
 2351 06dc 09       	 .byte 0x9
 2352 06dd 3A       	 .byte 0x3a
 2353 06de 0C       	 .byte 0xc
 2354 06df F6030000 	 .4byte 0x3f6
 2355 06e3 05       	 .uleb128 0x5
 2356 06e4 09       	 .byte 0x9
 2357 06e5 3C       	 .byte 0x3c
ARM GAS   			page 59


 2358 06e6 0C       	 .byte 0xc
 2359 06e7 27020000 	 .4byte 0x227
 2360 06eb 05       	 .uleb128 0x5
 2361 06ec 09       	 .byte 0x9
 2362 06ed 3C       	 .byte 0x3c
 2363 06ee 0C       	 .byte 0xc
 2364 06ef B4010000 	 .4byte 0x1b4
 2365 06f3 05       	 .uleb128 0x5
 2366 06f4 09       	 .byte 0x9
 2367 06f5 3C       	 .byte 0x3c
 2368 06f6 0C       	 .byte 0xc
 2369 06f7 20040000 	 .4byte 0x420
 2370 06fb 05       	 .uleb128 0x5
 2371 06fc 09       	 .byte 0x9
 2372 06fd 3E       	 .byte 0x3e
 2373 06fe 0C       	 .byte 0xc
 2374 06ff 3B040000 	 .4byte 0x43b
 2375 0703 05       	 .uleb128 0x5
 2376 0704 09       	 .byte 0x9
 2377 0705 40       	 .byte 0x40
 2378 0706 0C       	 .byte 0xc
 2379 0707 51040000 	 .4byte 0x451
 2380 070b 05       	 .uleb128 0x5
 2381 070c 09       	 .byte 0x9
 2382 070d 43       	 .byte 0x43
 2383 070e 0C       	 .byte 0xc
 2384 070f 6C040000 	 .4byte 0x46c
 2385 0713 05       	 .uleb128 0x5
 2386 0714 09       	 .byte 0x9
 2387 0715 44       	 .byte 0x44
 2388 0716 0C       	 .byte 0xc
 2389 0717 87040000 	 .4byte 0x487
 2390 071b 05       	 .uleb128 0x5
 2391 071c 09       	 .byte 0x9
 2392 071d 45       	 .byte 0x45
 2393 071e 0C       	 .byte 0xc
 2394 071f B9040000 	 .4byte 0x4b9
 2395 0723 05       	 .uleb128 0x5
 2396 0724 09       	 .byte 0x9
 2397 0725 47       	 .byte 0x47
 2398 0726 0C       	 .byte 0xc
 2399 0727 D9040000 	 .4byte 0x4d9
 2400 072b 05       	 .uleb128 0x5
 2401 072c 09       	 .byte 0x9
 2402 072d 48       	 .byte 0x48
 2403 072e 0C       	 .byte 0xc
 2404 072f FA040000 	 .4byte 0x4fa
 2405 0733 05       	 .uleb128 0x5
 2406 0734 09       	 .byte 0x9
 2407 0735 4A       	 .byte 0x4a
 2408 0736 0C       	 .byte 0xc
 2409 0737 06050000 	 .4byte 0x506
 2410 073b 05       	 .uleb128 0x5
 2411 073c 09       	 .byte 0x9
 2412 073d 4B       	 .byte 0x4b
 2413 073e 0C       	 .byte 0xc
 2414 073f 18050000 	 .4byte 0x518
ARM GAS   			page 60


 2415 0743 05       	 .uleb128 0x5
 2416 0744 09       	 .byte 0x9
 2417 0745 4C       	 .byte 0x4c
 2418 0746 0C       	 .byte 0xc
 2419 0747 39050000 	 .4byte 0x539
 2420 074b 05       	 .uleb128 0x5
 2421 074c 09       	 .byte 0x9
 2422 074d 4D       	 .byte 0x4d
 2423 074e 0C       	 .byte 0xc
 2424 074f 59050000 	 .4byte 0x559
 2425 0753 05       	 .uleb128 0x5
 2426 0754 09       	 .byte 0x9
 2427 0755 4E       	 .byte 0x4e
 2428 0756 0C       	 .byte 0xc
 2429 0757 79050000 	 .4byte 0x579
 2430 075b 05       	 .uleb128 0x5
 2431 075c 09       	 .byte 0x9
 2432 075d 50       	 .byte 0x50
 2433 075e 0C       	 .byte 0xc
 2434 075f 8F050000 	 .4byte 0x58f
 2435 0763 05       	 .uleb128 0x5
 2436 0764 09       	 .byte 0x9
 2437 0765 51       	 .byte 0x51
 2438 0766 0C       	 .byte 0xc
 2439 0767 B5050000 	 .4byte 0x5b5
 2440 076b 0A       	 .uleb128 0xa
 2441 076c 9E010000 	 .4byte .LASF56
 2442 0770 0A       	 .byte 0xa
 2443 0771 30       	 .byte 0x30
 2444 0772 14       	 .byte 0x14
 2445 0773 93020000 	 .4byte 0x293
 2446 0777 11       	 .uleb128 0x11
 2447 0778 6B070000 	 .4byte 0x76b
 2448 077c 0A       	 .uleb128 0xa
 2449 077d B7040000 	 .4byte .LASF57
 2450 0781 02       	 .byte 0x2
 2451 0782 62       	 .byte 0x62
 2452 0783 0E       	 .byte 0xe
 2453 0784 8C020000 	 .4byte 0x28c
 2454 0788 11       	 .uleb128 0x11
 2455 0789 7C070000 	 .4byte 0x77c
 2456 078d 0A       	 .uleb128 0xa
 2457 078e 14030000 	 .4byte .LASF58
 2458 0792 02       	 .byte 0x2
 2459 0793 63       	 .byte 0x63
 2460 0794 17       	 .byte 0x17
 2461 0795 9F020000 	 .4byte 0x29f
 2462 0799 0A       	 .uleb128 0xa
 2463 079a 4B050000 	 .4byte .LASF59
 2464 079e 02       	 .byte 0x2
 2465 079f 69       	 .byte 0x69
 2466 07a0 13       	 .byte 0x13
 2467 07a1 6B070000 	 .4byte 0x76b
 2468 07a5 1C       	 .uleb128 0x1c
 2469 07a6 89000000 	 .4byte .LASF66
 2470 07aa 14       	 .byte 0x14
 2471 07ab 0B       	 .byte 0xb
ARM GAS   			page 61


 2472 07ac B5       	 .byte 0xb5
 2473 07ad 08       	 .byte 0x8
 2474 07ae F4070000 	 .4byte 0x7f4
 2475 07b2 13       	 .uleb128 0x13
 2476 07b3 B0050000 	 .4byte .LASF60
 2477 07b7 0B       	 .byte 0xb
 2478 07b8 B8       	 .byte 0xb8
 2479 07b9 21       	 .byte 0x21
 2480 07ba 99070000 	 .4byte 0x799
 2481 07be 00       	 .byte 0
 2482 07bf 13       	 .uleb128 0x13
 2483 07c0 FD040000 	 .4byte .LASF61
 2484 07c4 0B       	 .byte 0xb
 2485 07c5 B9       	 .byte 0xb9
 2486 07c6 2A       	 .byte 0x2a
 2487 07c7 F4070000 	 .4byte 0x7f4
 2488 07cb 04       	 .byte 0x4
 2489 07cc 13       	 .uleb128 0x13
 2490 07cd 07020000 	 .4byte .LASF62
 2491 07d1 0B       	 .byte 0xb
 2492 07d2 BA       	 .byte 0xba
 2493 07d3 2A       	 .byte 0x2a
 2494 07d4 F4070000 	 .4byte 0x7f4
 2495 07d8 08       	 .byte 0x8
 2496 07d9 13       	 .uleb128 0x13
 2497 07da 69070000 	 .4byte .LASF63
 2498 07de 0B       	 .byte 0xb
 2499 07df BB       	 .byte 0xbb
 2500 07e0 09       	 .byte 0x9
 2501 07e1 AD020000 	 .4byte 0x2ad
 2502 07e5 0C       	 .byte 0xc
 2503 07e6 13       	 .uleb128 0x13
 2504 07e7 87050000 	 .4byte .LASF64
 2505 07eb 0B       	 .byte 0xb
 2506 07ec BC       	 .byte 0xbc
 2507 07ed 1D       	 .byte 0x1d
 2508 07ee AD020000 	 .4byte 0x2ad
 2509 07f2 10       	 .byte 0x10
 2510 07f3 00       	 .byte 0
 2511 07f4 0F       	 .uleb128 0xf
 2512 07f5 04       	 .byte 0x4
 2513 07f6 A5070000 	 .4byte 0x7a5
 2514 07fa 0A       	 .uleb128 0xa
 2515 07fb F5020000 	 .4byte .LASF65
 2516 07ff 0B       	 .byte 0xb
 2517 0800 BF       	 .byte 0xbf
 2518 0801 1B       	 .byte 0x1b
 2519 0802 A5070000 	 .4byte 0x7a5
 2520 0806 11       	 .uleb128 0x11
 2521 0807 FA070000 	 .4byte 0x7fa
 2522 080b 1C       	 .uleb128 0x1c
 2523 080c 76020000 	 .4byte .LASF67
 2524 0810 0C       	 .byte 0xc
 2525 0811 0B       	 .byte 0xb
 2526 0812 C1       	 .byte 0xc1
 2527 0813 08       	 .byte 0x8
 2528 0814 40080000 	 .4byte 0x840
ARM GAS   			page 62


 2529 0818 13       	 .uleb128 0x13
 2530 0819 B0050000 	 .4byte .LASF60
 2531 081d 0B       	 .byte 0xb
 2532 081e C4       	 .byte 0xc4
 2533 081f 21       	 .byte 0x21
 2534 0820 99070000 	 .4byte 0x799
 2535 0824 00       	 .byte 0
 2536 0825 13       	 .uleb128 0x13
 2537 0826 FD040000 	 .4byte .LASF61
 2538 082a 0B       	 .byte 0xb
 2539 082b C5       	 .byte 0xc5
 2540 082c 2A       	 .byte 0x2a
 2541 082d F4070000 	 .4byte 0x7f4
 2542 0831 04       	 .byte 0x4
 2543 0832 13       	 .uleb128 0x13
 2544 0833 07020000 	 .4byte .LASF62
 2545 0837 0B       	 .byte 0xb
 2546 0838 C6       	 .byte 0xc6
 2547 0839 2A       	 .byte 0x2a
 2548 083a F4070000 	 .4byte 0x7f4
 2549 083e 08       	 .byte 0x8
 2550 083f 00       	 .byte 0
 2551 0840 0A       	 .uleb128 0xa
 2552 0841 29030000 	 .4byte .LASF68
 2553 0845 0B       	 .byte 0xb
 2554 0846 C8       	 .byte 0xc8
 2555 0847 20       	 .byte 0x20
 2556 0848 0B080000 	 .4byte 0x80b
 2557 084c 1C       	 .uleb128 0x1c
 2558 084d A8020000 	 .4byte .LASF69
 2559 0851 14       	 .byte 0x14
 2560 0852 0B       	 .byte 0xb
 2561 0853 CD       	 .byte 0xcd
 2562 0854 10       	 .byte 0x10
 2563 0855 81080000 	 .4byte 0x881
 2564 0859 13       	 .uleb128 0x13
 2565 085a 1C000000 	 .4byte .LASF70
 2566 085e 0B       	 .byte 0xb
 2567 085f D0       	 .byte 0xd0
 2568 0860 22       	 .byte 0x22
 2569 0861 8D070000 	 .4byte 0x78d
 2570 0865 00       	 .byte 0
 2571 0866 13       	 .uleb128 0x13
 2572 0867 69000000 	 .4byte .LASF71
 2573 086b 0B       	 .byte 0xb
 2574 086c D1       	 .byte 0xd1
 2575 086d 23       	 .byte 0x23
 2576 086e 81080000 	 .4byte 0x881
 2577 0872 04       	 .byte 0x4
 2578 0873 13       	 .uleb128 0x13
 2579 0874 20030000 	 .4byte .LASF72
 2580 0878 0B       	 .byte 0xb
 2581 0879 D2       	 .byte 0xd2
 2582 087a 11       	 .byte 0x11
 2583 087b 40080000 	 .4byte 0x840
 2584 087f 08       	 .byte 0x8
 2585 0880 00       	 .byte 0
ARM GAS   			page 63


 2586 0881 0F       	 .uleb128 0xf
 2587 0882 04       	 .byte 0x4
 2588 0883 FA070000 	 .4byte 0x7fa
 2589 0887 0A       	 .uleb128 0xa
 2590 0888 44050000 	 .4byte .LASF73
 2591 088c 0B       	 .byte 0xb
 2592 088d D4       	 .byte 0xd4
 2593 088e 03       	 .byte 0x3
 2594 088f 4C080000 	 .4byte 0x84c
 2595 0893 11       	 .uleb128 0x11
 2596 0894 87080000 	 .4byte 0x887
 2597 0898 0A       	 .uleb128 0xa
 2598 0899 EF070000 	 .4byte .LASF74
 2599 089d 0C       	 .byte 0xc
 2600 089e 7A       	 .byte 0x7a
 2601 089f 10       	 .byte 0x10
 2602 08a0 AD020000 	 .4byte 0x2ad
 2603 08a4 0A       	 .uleb128 0xa
 2604 08a5 B4060000 	 .4byte .LASF75
 2605 08a9 0C       	 .byte 0xc
 2606 08aa 84       	 .byte 0x84
 2607 08ab 14       	 .byte 0x14
 2608 08ac 99070000 	 .4byte 0x799
 2609 08b0 11       	 .uleb128 0x11
 2610 08b1 A4080000 	 .4byte 0x8a4
 2611 08b5 1C       	 .uleb128 0x1c
 2612 08b6 C2040000 	 .4byte .LASF76
 2613 08ba 1C       	 .byte 0x1c
 2614 08bb 01       	 .byte 0x1
 2615 08bc 71       	 .byte 0x71
 2616 08bd 10       	 .byte 0x10
 2617 08be EA080000 	 .4byte 0x8ea
 2618 08c2 13       	 .uleb128 0x13
 2619 08c3 17050000 	 .4byte .LASF77
 2620 08c7 01       	 .byte 0x1
 2621 08c8 73       	 .byte 0x73
 2622 08c9 0E       	 .byte 0xe
 2623 08ca A4080000 	 .4byte 0x8a4
 2624 08ce 00       	 .byte 0
 2625 08cf 13       	 .uleb128 0x13
 2626 08d0 07000000 	 .4byte .LASF78
 2627 08d4 01       	 .byte 0x1
 2628 08d5 74       	 .byte 0x74
 2629 08d6 09       	 .byte 0x9
 2630 08d7 87080000 	 .4byte 0x887
 2631 08db 04       	 .byte 0x4
 2632 08dc 13       	 .uleb128 0x13
 2633 08dd 43000000 	 .4byte .LASF79
 2634 08e1 01       	 .byte 0x1
 2635 08e2 77       	 .byte 0x77
 2636 08e3 0F       	 .byte 0xf
 2637 08e4 8D070000 	 .4byte 0x78d
 2638 08e8 18       	 .byte 0x18
 2639 08e9 00       	 .byte 0
 2640 08ea 0A       	 .uleb128 0xa
 2641 08eb C0060000 	 .4byte .LASF80
 2642 08ef 01       	 .byte 0x1
ARM GAS   			page 64


 2643 08f0 7A       	 .byte 0x7a
 2644 08f1 03       	 .byte 0x3
 2645 08f2 B5080000 	 .4byte 0x8b5
 2646 08f6 1D       	 .uleb128 0x1d
 2647 08f7 F6050000 	 .4byte .LASF95
 2648 08fb 01       	 .byte 0x1
 2649 08fc 9902     	 .2byte 0x299
 2650 08fe 0E       	 .byte 0xe
 2651 08ff 8D070000 	 .4byte 0x78d
 2652 0903 00000000 	 .4byte .LFB21
 2653 0907 2C000000 	 .4byte .LFE21-.LFB21
 2654 090b 01       	 .uleb128 0x1
 2655 090c 9C       	 .byte 0x9c
 2656 090d 42090000 	 .4byte 0x942
 2657 0911 1E       	 .uleb128 0x1e
 2658 0912 5A020000 	 .4byte .LASF83
 2659 0916 01       	 .byte 0x1
 2660 0917 9902     	 .2byte 0x299
 2661 0919 2B       	 .byte 0x2b
 2662 091a AD020000 	 .4byte 0x2ad
 2663 091e 02       	 .uleb128 0x2
 2664 091f 91       	 .byte 0x91
 2665 0920 6C       	 .sleb128 -20
 2666 0921 1F       	 .uleb128 0x1f
 2667 0922 CF020000 	 .4byte .LASF81
 2668 0926 01       	 .byte 0x1
 2669 0927 9B02     	 .2byte 0x29b
 2670 0929 0E       	 .byte 0xe
 2671 092a 8D070000 	 .4byte 0x78d
 2672 092e 02       	 .uleb128 0x2
 2673 092f 91       	 .byte 0x91
 2674 0930 74       	 .sleb128 -12
 2675 0931 1F       	 .uleb128 0x1f
 2676 0932 D7020000 	 .4byte .LASF82
 2677 0936 01       	 .byte 0x1
 2678 0937 9C02     	 .2byte 0x29c
 2679 0939 10       	 .byte 0x10
 2680 093a 42090000 	 .4byte 0x942
 2681 093e 02       	 .uleb128 0x2
 2682 093f 91       	 .byte 0x91
 2683 0940 70       	 .sleb128 -16
 2684 0941 00       	 .byte 0
 2685 0942 0F       	 .uleb128 0xf
 2686 0943 04       	 .byte 0x4
 2687 0944 EA080000 	 .4byte 0x8ea
 2688 0948 20       	 .uleb128 0x20
 2689 0949 66050000 	 .4byte .LASF125
 2690 094d 01       	 .byte 0x1
 2691 094e 6502     	 .2byte 0x265
 2692 0950 13       	 .byte 0x13
 2693 0951 7C070000 	 .4byte 0x77c
 2694 0955 00000000 	 .4byte .LFB20
 2695 0959 44000000 	 .4byte .LFE20-.LFB20
 2696 095d 01       	 .uleb128 0x1
 2697 095e 9C       	 .byte 0x9c
 2698 095f A4090000 	 .4byte 0x9a4
 2699 0963 1E       	 .uleb128 0x1e
ARM GAS   			page 65


 2700 0964 93050000 	 .4byte .LASF84
 2701 0968 01       	 .byte 0x1
 2702 0969 6502     	 .2byte 0x265
 2703 096b 3B       	 .byte 0x3b
 2704 096c B0080000 	 .4byte 0x8b0
 2705 0970 02       	 .uleb128 0x2
 2706 0971 91       	 .byte 0x91
 2707 0972 6C       	 .sleb128 -20
 2708 0973 1E       	 .uleb128 0x1e
 2709 0974 CD060000 	 .4byte .LASF85
 2710 0978 01       	 .byte 0x1
 2711 0979 6502     	 .2byte 0x265
 2712 097b 61       	 .byte 0x61
 2713 097c B0080000 	 .4byte 0x8b0
 2714 0980 02       	 .uleb128 0x2
 2715 0981 91       	 .byte 0x91
 2716 0982 68       	 .sleb128 -24
 2717 0983 1E       	 .uleb128 0x1e
 2718 0984 66020000 	 .4byte .LASF86
 2719 0988 01       	 .byte 0x1
 2720 0989 6502     	 .2byte 0x265
 2721 098b 83       	 .byte 0x83
 2722 098c 88070000 	 .4byte 0x788
 2723 0990 02       	 .uleb128 0x2
 2724 0991 91       	 .byte 0x91
 2725 0992 64       	 .sleb128 -28
 2726 0993 1F       	 .uleb128 0x1f
 2727 0994 32050000 	 .4byte .LASF87
 2728 0998 01       	 .byte 0x1
 2729 0999 6702     	 .2byte 0x267
 2730 099b 0C       	 .byte 0xc
 2731 099c 7C070000 	 .4byte 0x77c
 2732 09a0 02       	 .uleb128 0x2
 2733 09a1 91       	 .byte 0x91
 2734 09a2 74       	 .sleb128 -12
 2735 09a3 00       	 .byte 0
 2736 09a4 21       	 .uleb128 0x21
 2737 09a5 D8040000 	 .4byte .LASF90
 2738 09a9 01       	 .byte 0x1
 2739 09aa 5F02     	 .2byte 0x25f
 2740 09ac 06       	 .byte 0x6
 2741 09ad 00000000 	 .4byte .LFB19
 2742 09b1 1A000000 	 .4byte .LFE19-.LFB19
 2743 09b5 01       	 .uleb128 0x1
 2744 09b6 9C       	 .byte 0x9c
 2745 09b7 DC090000 	 .4byte 0x9dc
 2746 09bb 1E       	 .uleb128 0x1e
 2747 09bc E3020000 	 .4byte .LASF88
 2748 09c0 01       	 .byte 0x1
 2749 09c1 5F02     	 .2byte 0x25f
 2750 09c3 2A       	 .byte 0x2a
 2751 09c4 AD020000 	 .4byte 0x2ad
 2752 09c8 02       	 .uleb128 0x2
 2753 09c9 91       	 .byte 0x91
 2754 09ca 74       	 .sleb128 -12
 2755 09cb 1E       	 .uleb128 0x1e
 2756 09cc 7B000000 	 .4byte .LASF89
ARM GAS   			page 66


 2757 09d0 01       	 .byte 0x1
 2758 09d1 5F02     	 .2byte 0x25f
 2759 09d3 47       	 .byte 0x47
 2760 09d4 77070000 	 .4byte 0x777
 2761 09d8 02       	 .uleb128 0x2
 2762 09d9 91       	 .byte 0x91
 2763 09da 70       	 .sleb128 -16
 2764 09db 00       	 .byte 0
 2765 09dc 21       	 .uleb128 0x21
 2766 09dd 9C040000 	 .4byte .LASF91
 2767 09e1 01       	 .byte 0x1
 2768 09e2 5702     	 .2byte 0x257
 2769 09e4 06       	 .byte 0x6
 2770 09e5 00000000 	 .4byte .LFB18
 2771 09e9 1A000000 	 .4byte .LFE18-.LFB18
 2772 09ed 01       	 .uleb128 0x1
 2773 09ee 9C       	 .byte 0x9c
 2774 09ef 140A0000 	 .4byte 0xa14
 2775 09f3 1E       	 .uleb128 0x1e
 2776 09f4 E3020000 	 .4byte .LASF88
 2777 09f8 01       	 .byte 0x1
 2778 09f9 5702     	 .2byte 0x257
 2779 09fb 28       	 .byte 0x28
 2780 09fc AD020000 	 .4byte 0x2ad
 2781 0a00 02       	 .uleb128 0x2
 2782 0a01 91       	 .byte 0x91
 2783 0a02 74       	 .sleb128 -12
 2784 0a03 1E       	 .uleb128 0x1e
 2785 0a04 DC070000 	 .4byte .LASF92
 2786 0a08 01       	 .byte 0x1
 2787 0a09 5702     	 .2byte 0x257
 2788 0a0b 45       	 .byte 0x45
 2789 0a0c 77070000 	 .4byte 0x777
 2790 0a10 02       	 .uleb128 0x2
 2791 0a11 91       	 .byte 0x91
 2792 0a12 70       	 .sleb128 -16
 2793 0a13 00       	 .byte 0
 2794 0a14 21       	 .uleb128 0x21
 2795 0a15 76040000 	 .4byte .LASF93
 2796 0a19 01       	 .byte 0x1
 2797 0a1a 3E02     	 .2byte 0x23e
 2798 0a1c 06       	 .byte 0x6
 2799 0a1d 00000000 	 .4byte .LFB17
 2800 0a21 62000000 	 .4byte .LFE17-.LFB17
 2801 0a25 01       	 .uleb128 0x1
 2802 0a26 9C       	 .byte 0x9c
 2803 0a27 760A0000 	 .4byte 0xa76
 2804 0a2b 1E       	 .uleb128 0x1e
 2805 0a2c 5A020000 	 .4byte .LASF83
 2806 0a30 01       	 .byte 0x1
 2807 0a31 3E02     	 .2byte 0x23e
 2808 0a33 2C       	 .byte 0x2c
 2809 0a34 98080000 	 .4byte 0x898
 2810 0a38 02       	 .uleb128 0x2
 2811 0a39 91       	 .byte 0x91
 2812 0a3a 64       	 .sleb128 -28
 2813 0a3b 1F       	 .uleb128 0x1f
ARM GAS   			page 67


 2814 0a3c D7020000 	 .4byte .LASF82
 2815 0a40 01       	 .byte 0x1
 2816 0a41 4002     	 .2byte 0x240
 2817 0a43 0F       	 .byte 0xf
 2818 0a44 42090000 	 .4byte 0x942
 2819 0a48 02       	 .uleb128 0x2
 2820 0a49 91       	 .byte 0x91
 2821 0a4a 74       	 .sleb128 -12
 2822 0a4b 1F       	 .uleb128 0x1f
 2823 0a4c C4050000 	 .4byte .LASF94
 2824 0a50 01       	 .byte 0x1
 2825 0a51 4102     	 .2byte 0x241
 2826 0a53 0F       	 .byte 0xf
 2827 0a54 760A0000 	 .4byte 0xa76
 2828 0a58 02       	 .uleb128 0x2
 2829 0a59 91       	 .byte 0x91
 2830 0a5a 70       	 .sleb128 -16
 2831 0a5b 22       	 .uleb128 0x22
 2832 0a5c 7F0F0000 	 .4byte 0xf7f
 2833 0a60 2A000000 	 .4byte .LBB58
 2834 0a64 14000000 	 .4byte .LBE58-.LBB58
 2835 0a68 01       	 .byte 0x1
 2836 0a69 4B02     	 .2byte 0x24b
 2837 0a6b 04       	 .byte 0x4
 2838 0a6c 23       	 .uleb128 0x23
 2839 0a6d 880F0000 	 .4byte 0xf88
 2840 0a71 02       	 .uleb128 0x2
 2841 0a72 91       	 .byte 0x91
 2842 0a73 6C       	 .sleb128 -20
 2843 0a74 00       	 .byte 0
 2844 0a75 00       	 .byte 0
 2845 0a76 0F       	 .uleb128 0xf
 2846 0a77 04       	 .byte 0x4
 2847 0a78 93080000 	 .4byte 0x893
 2848 0a7c 24       	 .uleb128 0x24
 2849 0a7d BC020000 	 .4byte .LASF96
 2850 0a81 01       	 .byte 0x1
 2851 0a82 E001     	 .2byte 0x1e0
 2852 0a84 0D       	 .byte 0xd
 2853 0a85 A4080000 	 .4byte 0x8a4
 2854 0a89 00000000 	 .4byte .LFB16
 2855 0a8d 16010000 	 .4byte .LFE16-.LFB16
 2856 0a91 01       	 .uleb128 0x1
 2857 0a92 9C       	 .byte 0x9c
 2858 0a93 800B0000 	 .4byte 0xb80
 2859 0a97 1E       	 .uleb128 0x1e
 2860 0a98 5A020000 	 .4byte .LASF83
 2861 0a9c 01       	 .byte 0x1
 2862 0a9d E001     	 .2byte 0x1e0
 2863 0a9f 34       	 .byte 0x34
 2864 0aa0 98080000 	 .4byte 0x898
 2865 0aa4 02       	 .uleb128 0x2
 2866 0aa5 91       	 .byte 0x91
 2867 0aa6 44       	 .sleb128 -60
 2868 0aa7 1E       	 .uleb128 0x1e
 2869 0aa8 DD060000 	 .4byte .LASF97
 2870 0aac 01       	 .byte 0x1
ARM GAS   			page 68


 2871 0aad E001     	 .2byte 0x1e0
 2872 0aaf 53       	 .byte 0x53
 2873 0ab0 B0080000 	 .4byte 0x8b0
 2874 0ab4 02       	 .uleb128 0x2
 2875 0ab5 91       	 .byte 0x91
 2876 0ab6 40       	 .sleb128 -64
 2877 0ab7 1F       	 .uleb128 0x1f
 2878 0ab8 3D030000 	 .4byte .LASF98
 2879 0abc 01       	 .byte 0x1
 2880 0abd E201     	 .2byte 0x1e2
 2881 0abf 0D       	 .byte 0xd
 2882 0ac0 81080000 	 .4byte 0x881
 2883 0ac4 02       	 .uleb128 0x2
 2884 0ac5 91       	 .byte 0x91
 2885 0ac6 74       	 .sleb128 -12
 2886 0ac7 1F       	 .uleb128 0x1f
 2887 0ac8 FD040000 	 .4byte .LASF61
 2888 0acc 01       	 .byte 0x1
 2889 0acd E201     	 .2byte 0x1e2
 2890 0acf 1A       	 .byte 0x1a
 2891 0ad0 81080000 	 .4byte 0x881
 2892 0ad4 02       	 .uleb128 0x2
 2893 0ad5 91       	 .byte 0x91
 2894 0ad6 5C       	 .sleb128 -36
 2895 0ad7 1F       	 .uleb128 0x1f
 2896 0ad8 40010000 	 .4byte .LASF99
 2897 0adc 01       	 .byte 0x1
 2898 0add E301     	 .2byte 0x1e3
 2899 0adf 13       	 .byte 0x13
 2900 0ae0 800B0000 	 .4byte 0xb80
 2901 0ae4 02       	 .uleb128 0x2
 2902 0ae5 91       	 .byte 0x91
 2903 0ae6 60       	 .sleb128 -32
 2904 0ae7 1F       	 .uleb128 0x1f
 2905 0ae8 E8070000 	 .4byte .LASF100
 2906 0aec 01       	 .byte 0x1
 2907 0aed E401     	 .2byte 0x1e4
 2908 0aef 09       	 .byte 0x9
 2909 0af0 860B0000 	 .4byte 0xb86
 2910 0af4 02       	 .uleb128 0x2
 2911 0af5 91       	 .byte 0x91
 2912 0af6 64       	 .sleb128 -28
 2913 0af7 1F       	 .uleb128 0x1f
 2914 0af8 AE020000 	 .4byte .LASF101
 2915 0afc 01       	 .byte 0x1
 2916 0afd E501     	 .2byte 0x1e5
 2917 0aff 0D       	 .byte 0xd
 2918 0b00 A4080000 	 .4byte 0x8a4
 2919 0b04 02       	 .uleb128 0x2
 2920 0b05 91       	 .byte 0x91
 2921 0b06 70       	 .sleb128 -16
 2922 0b07 1F       	 .uleb128 0x1f
 2923 0b08 25020000 	 .4byte .LASF102
 2924 0b0c 01       	 .byte 0x1
 2925 0b0d E501     	 .2byte 0x1e5
 2926 0b0f 20       	 .byte 0x20
 2927 0b10 A4080000 	 .4byte 0x8a4
ARM GAS   			page 69


 2928 0b14 02       	 .uleb128 0x2
 2929 0b15 91       	 .byte 0x91
 2930 0b16 58       	 .sleb128 -40
 2931 0b17 1F       	 .uleb128 0x1f
 2932 0b18 F9010000 	 .4byte .LASF103
 2933 0b1c 01       	 .byte 0x1
 2934 0b1d E501     	 .2byte 0x1e5
 2935 0b1f 31       	 .byte 0x31
 2936 0b20 A4080000 	 .4byte 0x8a4
 2937 0b24 02       	 .uleb128 0x2
 2938 0b25 91       	 .byte 0x91
 2939 0b26 54       	 .sleb128 -44
 2940 0b27 1F       	 .uleb128 0x1f
 2941 0b28 D7020000 	 .4byte .LASF82
 2942 0b2c 01       	 .byte 0x1
 2943 0b2d E601     	 .2byte 0x1e6
 2944 0b2f 0F       	 .byte 0xf
 2945 0b30 42090000 	 .4byte 0x942
 2946 0b34 02       	 .uleb128 0x2
 2947 0b35 91       	 .byte 0x91
 2948 0b36 68       	 .sleb128 -24
 2949 0b37 1F       	 .uleb128 0x1f
 2950 0b38 29070000 	 .4byte .LASF104
 2951 0b3c 01       	 .byte 0x1
 2952 0b3d E701     	 .2byte 0x1e7
 2953 0b3f 0C       	 .byte 0xc
 2954 0b40 7C070000 	 .4byte 0x77c
 2955 0b44 02       	 .uleb128 0x2
 2956 0b45 91       	 .byte 0x91
 2957 0b46 6C       	 .sleb128 -20
 2958 0b47 25       	 .uleb128 0x25
 2959 0b48 7F0F0000 	 .4byte 0xf7f
 2960 0b4c 1C000000 	 .4byte .LBB54
 2961 0b50 14000000 	 .4byte .LBE54-.LBB54
 2962 0b54 01       	 .byte 0x1
 2963 0b55 EB01     	 .2byte 0x1eb
 2964 0b57 02       	 .byte 0x2
 2965 0b58 650B0000 	 .4byte 0xb65
 2966 0b5c 23       	 .uleb128 0x23
 2967 0b5d 880F0000 	 .4byte 0xf88
 2968 0b61 02       	 .uleb128 0x2
 2969 0b62 91       	 .byte 0x91
 2970 0b63 50       	 .sleb128 -48
 2971 0b64 00       	 .byte 0
 2972 0b65 22       	 .uleb128 0x22
 2973 0b66 7F0F0000 	 .4byte 0xf7f
 2974 0b6a 3C000000 	 .4byte .LBB56
 2975 0b6e 14000000 	 .4byte .LBE56-.LBB56
 2976 0b72 01       	 .byte 0x1
 2977 0b73 EC01     	 .2byte 0x1ec
 2978 0b75 02       	 .byte 0x2
 2979 0b76 23       	 .uleb128 0x23
 2980 0b77 880F0000 	 .4byte 0xf88
 2981 0b7b 02       	 .uleb128 0x2
 2982 0b7c 91       	 .byte 0x91
 2983 0b7d 4C       	 .sleb128 -52
 2984 0b7e 00       	 .byte 0
ARM GAS   			page 70


 2985 0b7f 00       	 .byte 0
 2986 0b80 0F       	 .uleb128 0xf
 2987 0b81 04       	 .byte 0x4
 2988 0b82 06080000 	 .4byte 0x806
 2989 0b86 0F       	 .uleb128 0xf
 2990 0b87 04       	 .byte 0x4
 2991 0b88 87080000 	 .4byte 0x887
 2992 0b8c 1D       	 .uleb128 0x1d
 2993 0b8d 86020000 	 .4byte .LASF105
 2994 0b91 01       	 .byte 0x1
 2995 0b92 D001     	 .2byte 0x1d0
 2996 0b94 0D       	 .byte 0xd
 2997 0b95 A4080000 	 .4byte 0x8a4
 2998 0b99 00000000 	 .4byte .LFB15
 2999 0b9d 48000000 	 .4byte .LFE15-.LFB15
 3000 0ba1 01       	 .uleb128 0x1
 3001 0ba2 9C       	 .byte 0x9c
 3002 0ba3 280C0000 	 .4byte 0xc28
 3003 0ba7 1E       	 .uleb128 0x1e
 3004 0ba8 5A020000 	 .4byte .LASF83
 3005 0bac 01       	 .byte 0x1
 3006 0bad D001     	 .2byte 0x1d0
 3007 0baf 3B       	 .byte 0x3b
 3008 0bb0 98080000 	 .4byte 0x898
 3009 0bb4 02       	 .uleb128 0x2
 3010 0bb5 91       	 .byte 0x91
 3011 0bb6 5C       	 .sleb128 -36
 3012 0bb7 1F       	 .uleb128 0x1f
 3013 0bb8 9C000000 	 .4byte .LASF106
 3014 0bbc 01       	 .byte 0x1
 3015 0bbd D201     	 .2byte 0x1d2
 3016 0bbf 0D       	 .byte 0xd
 3017 0bc0 8D070000 	 .4byte 0x78d
 3018 0bc4 02       	 .uleb128 0x2
 3019 0bc5 91       	 .byte 0x91
 3020 0bc6 70       	 .sleb128 -16
 3021 0bc7 1F       	 .uleb128 0x1f
 3022 0bc8 D7020000 	 .4byte .LASF82
 3023 0bcc 01       	 .byte 0x1
 3024 0bcd D301     	 .2byte 0x1d3
 3025 0bcf 0F       	 .byte 0xf
 3026 0bd0 42090000 	 .4byte 0x942
 3027 0bd4 02       	 .uleb128 0x2
 3028 0bd5 91       	 .byte 0x91
 3029 0bd6 74       	 .sleb128 -12
 3030 0bd7 1F       	 .uleb128 0x1f
 3031 0bd8 4A010000 	 .4byte .LASF107
 3032 0bdc 01       	 .byte 0x1
 3033 0bdd D401     	 .2byte 0x1d4
 3034 0bdf 0D       	 .byte 0xd
 3035 0be0 A4080000 	 .4byte 0x8a4
 3036 0be4 02       	 .uleb128 0x2
 3037 0be5 91       	 .byte 0x91
 3038 0be6 6C       	 .sleb128 -20
 3039 0be7 25       	 .uleb128 0x25
 3040 0be8 550F0000 	 .4byte 0xf55
 3041 0bec 0C000000 	 .4byte .LBB50
ARM GAS   			page 71


 3042 0bf0 1A000000 	 .4byte .LBE50-.LBB50
 3043 0bf4 01       	 .byte 0x1
 3044 0bf5 D601     	 .2byte 0x1d6
 3045 0bf7 1B       	 .byte 0x1b
 3046 0bf8 0D0C0000 	 .4byte 0xc0d
 3047 0bfc 23       	 .uleb128 0x23
 3048 0bfd 660F0000 	 .4byte 0xf66
 3049 0c01 02       	 .uleb128 0x2
 3050 0c02 91       	 .byte 0x91
 3051 0c03 64       	 .sleb128 -28
 3052 0c04 23       	 .uleb128 0x23
 3053 0c05 720F0000 	 .4byte 0xf72
 3054 0c09 02       	 .uleb128 0x2
 3055 0c0a 91       	 .byte 0x91
 3056 0c0b 60       	 .sleb128 -32
 3057 0c0c 00       	 .byte 0
 3058 0c0d 22       	 .uleb128 0x22
 3059 0c0e 3B0F0000 	 .4byte 0xf3b
 3060 0c12 32000000 	 .4byte .LBB52
 3061 0c16 08000000 	 .4byte .LBE52-.LBB52
 3062 0c1a 01       	 .byte 0x1
 3063 0c1b DA01     	 .2byte 0x1da
 3064 0c1d 02       	 .byte 0x2
 3065 0c1e 26       	 .uleb128 0x26
 3066 0c1f 480F0000 	 .4byte 0xf48
 3067 0c23 02       	 .uleb128 0x2
 3068 0c24 91       	 .byte 0x91
 3069 0c25 68       	 .sleb128 -24
 3070 0c26 00       	 .byte 0
 3071 0c27 00       	 .byte 0
 3072 0c28 24       	 .uleb128 0x24
 3073 0c29 DA050000 	 .4byte .LASF108
 3074 0c2d 01       	 .byte 0x1
 3075 0c2e A601     	 .2byte 0x1a6
 3076 0c30 0D       	 .byte 0xd
 3077 0c31 A4080000 	 .4byte 0x8a4
 3078 0c35 00000000 	 .4byte .LFB14
 3079 0c39 70000000 	 .4byte .LFE14-.LFB14
 3080 0c3d 01       	 .uleb128 0x1
 3081 0c3e 9C       	 .byte 0x9c
 3082 0c3f BC0C0000 	 .4byte 0xcbc
 3083 0c43 1E       	 .uleb128 0x1e
 3084 0c44 5A020000 	 .4byte .LASF83
 3085 0c48 01       	 .byte 0x1
 3086 0c49 A601     	 .2byte 0x1a6
 3087 0c4b 36       	 .byte 0x36
 3088 0c4c 98080000 	 .4byte 0x898
 3089 0c50 02       	 .uleb128 0x2
 3090 0c51 91       	 .byte 0x91
 3091 0c52 64       	 .sleb128 -28
 3092 0c53 1E       	 .uleb128 0x1e
 3093 0c54 AE020000 	 .4byte .LASF101
 3094 0c58 01       	 .byte 0x1
 3095 0c59 A601     	 .2byte 0x1a6
 3096 0c5b 55       	 .byte 0x55
 3097 0c5c B0080000 	 .4byte 0x8b0
 3098 0c60 02       	 .uleb128 0x2
ARM GAS   			page 72


 3099 0c61 91       	 .byte 0x91
 3100 0c62 60       	 .sleb128 -32
 3101 0c63 1F       	 .uleb128 0x1f
 3102 0c64 D7020000 	 .4byte .LASF82
 3103 0c68 01       	 .byte 0x1
 3104 0c69 A801     	 .2byte 0x1a8
 3105 0c6b 0F       	 .byte 0xf
 3106 0c6c 42090000 	 .4byte 0x942
 3107 0c70 02       	 .uleb128 0x2
 3108 0c71 91       	 .byte 0x91
 3109 0c72 74       	 .sleb128 -12
 3110 0c73 1F       	 .uleb128 0x1f
 3111 0c74 4A010000 	 .4byte .LASF107
 3112 0c78 01       	 .byte 0x1
 3113 0c79 A901     	 .2byte 0x1a9
 3114 0c7b 0D       	 .byte 0xd
 3115 0c7c A4080000 	 .4byte 0x8a4
 3116 0c80 02       	 .uleb128 0x2
 3117 0c81 91       	 .byte 0x91
 3118 0c82 70       	 .sleb128 -16
 3119 0c83 25       	 .uleb128 0x25
 3120 0c84 7F0F0000 	 .4byte 0xf7f
 3121 0c88 14000000 	 .4byte .LBB46
 3122 0c8c 14000000 	 .4byte .LBE46-.LBB46
 3123 0c90 01       	 .byte 0x1
 3124 0c91 AD01     	 .2byte 0x1ad
 3125 0c93 02       	 .byte 0x2
 3126 0c94 A10C0000 	 .4byte 0xca1
 3127 0c98 23       	 .uleb128 0x23
 3128 0c99 880F0000 	 .4byte 0xf88
 3129 0c9d 02       	 .uleb128 0x2
 3130 0c9e 91       	 .byte 0x91
 3131 0c9f 6C       	 .sleb128 -20
 3132 0ca0 00       	 .byte 0
 3133 0ca1 22       	 .uleb128 0x22
 3134 0ca2 7F0F0000 	 .4byte 0xf7f
 3135 0ca6 34000000 	 .4byte .LBB48
 3136 0caa 14000000 	 .4byte .LBE48-.LBB48
 3137 0cae 01       	 .byte 0x1
 3138 0caf AE01     	 .2byte 0x1ae
 3139 0cb1 02       	 .byte 0x2
 3140 0cb2 23       	 .uleb128 0x23
 3141 0cb3 880F0000 	 .4byte 0xf88
 3142 0cb7 02       	 .uleb128 0x2
 3143 0cb8 91       	 .byte 0x91
 3144 0cb9 68       	 .sleb128 -24
 3145 0cba 00       	 .byte 0
 3146 0cbb 00       	 .byte 0
 3147 0cbc 24       	 .uleb128 0x24
 3148 0cbd 88040000 	 .4byte .LASF109
 3149 0cc1 01       	 .byte 0x1
 3150 0cc2 1201     	 .2byte 0x112
 3151 0cc4 0D       	 .byte 0xd
 3152 0cc5 A4080000 	 .4byte 0x8a4
 3153 0cc9 00000000 	 .4byte .LFB13
 3154 0ccd B0010000 	 .4byte .LFE13-.LFB13
 3155 0cd1 01       	 .uleb128 0x1
ARM GAS   			page 73


 3156 0cd2 9C       	 .byte 0x9c
 3157 0cd3 1C0E0000 	 .4byte 0xe1c
 3158 0cd7 1E       	 .uleb128 0x1e
 3159 0cd8 5A020000 	 .4byte .LASF83
 3160 0cdc 01       	 .byte 0x1
 3161 0cdd 1201     	 .2byte 0x112
 3162 0cdf 35       	 .byte 0x35
 3163 0ce0 98080000 	 .4byte 0x898
 3164 0ce4 02       	 .uleb128 0x2
 3165 0ce5 91       	 .byte 0x91
 3166 0ce6 44       	 .sleb128 -60
 3167 0ce7 1E       	 .uleb128 0x1e
 3168 0ce8 CD060000 	 .4byte .LASF85
 3169 0cec 01       	 .byte 0x1
 3170 0ced 1201     	 .2byte 0x112
 3171 0cef 54       	 .byte 0x54
 3172 0cf0 B0080000 	 .4byte 0x8b0
 3173 0cf4 02       	 .uleb128 0x2
 3174 0cf5 91       	 .byte 0x91
 3175 0cf6 40       	 .sleb128 -64
 3176 0cf7 1E       	 .uleb128 0x1e
 3177 0cf8 C8070000 	 .4byte .LASF110
 3178 0cfc 01       	 .byte 0x1
 3179 0cfd 1201     	 .2byte 0x112
 3180 0cff 76       	 .byte 0x76
 3181 0d00 88070000 	 .4byte 0x788
 3182 0d04 03       	 .uleb128 0x3
 3183 0d05 91       	 .byte 0x91
 3184 0d06 BC7F     	 .sleb128 -68
 3185 0d08 1E       	 .uleb128 0x1e
 3186 0d09 66020000 	 .4byte .LASF86
 3187 0d0d 01       	 .byte 0x1
 3188 0d0e 1201     	 .2byte 0x112
 3189 0d10 95       	 .byte 0x95
 3190 0d11 88070000 	 .4byte 0x788
 3191 0d15 03       	 .uleb128 0x3
 3192 0d16 91       	 .byte 0x91
 3193 0d17 B87F     	 .sleb128 -72
 3194 0d19 1E       	 .uleb128 0x1e
 3195 0d1a A7060000 	 .4byte .LASF111
 3196 0d1e 01       	 .byte 0x1
 3197 0d1f 1201     	 .2byte 0x112
 3198 0d21 B1       	 .byte 0xb1
 3199 0d22 99070000 	 .4byte 0x799
 3200 0d26 02       	 .uleb128 0x2
 3201 0d27 91       	 .byte 0x91
 3202 0d28 00       	 .sleb128 0
 3203 0d29 1F       	 .uleb128 0x1f
 3204 0d2a D7020000 	 .4byte .LASF82
 3205 0d2e 01       	 .byte 0x1
 3206 0d2f 1401     	 .2byte 0x114
 3207 0d31 0F       	 .byte 0xf
 3208 0d32 42090000 	 .4byte 0x942
 3209 0d36 02       	 .uleb128 0x2
 3210 0d37 91       	 .byte 0x91
 3211 0d38 6C       	 .sleb128 -20
 3212 0d39 1F       	 .uleb128 0x1f
ARM GAS   			page 74


 3213 0d3a 4A010000 	 .4byte .LASF107
 3214 0d3e 01       	 .byte 0x1
 3215 0d3f 1501     	 .2byte 0x115
 3216 0d41 0D       	 .byte 0xd
 3217 0d42 A4080000 	 .4byte 0x8a4
 3218 0d46 02       	 .uleb128 0x2
 3219 0d47 91       	 .byte 0x91
 3220 0d48 74       	 .sleb128 -12
 3221 0d49 1F       	 .uleb128 0x1f
 3222 0d4a F9010000 	 .4byte .LASF103
 3223 0d4e 01       	 .byte 0x1
 3224 0d4f 1501     	 .2byte 0x115
 3225 0d51 17       	 .byte 0x17
 3226 0d52 A4080000 	 .4byte 0x8a4
 3227 0d56 02       	 .uleb128 0x2
 3228 0d57 91       	 .byte 0x91
 3229 0d58 70       	 .sleb128 -16
 3230 0d59 1F       	 .uleb128 0x1f
 3231 0d5a 32050000 	 .4byte .LASF87
 3232 0d5e 01       	 .byte 0x1
 3233 0d5f 1601     	 .2byte 0x116
 3234 0d61 0C       	 .byte 0xc
 3235 0d62 7C070000 	 .4byte 0x77c
 3236 0d66 02       	 .uleb128 0x2
 3237 0d67 91       	 .byte 0x91
 3238 0d68 60       	 .sleb128 -32
 3239 0d69 1F       	 .uleb128 0x1f
 3240 0d6a 71070000 	 .4byte .LASF112
 3241 0d6e 01       	 .byte 0x1
 3242 0d6f 1601     	 .2byte 0x116
 3243 0d71 1F       	 .byte 0x1f
 3244 0d72 7C070000 	 .4byte 0x77c
 3245 0d76 02       	 .uleb128 0x2
 3246 0d77 91       	 .byte 0x91
 3247 0d78 5C       	 .sleb128 -36
 3248 0d79 1F       	 .uleb128 0x1f
 3249 0d7a 35020000 	 .4byte .LASF113
 3250 0d7e 01       	 .byte 0x1
 3251 0d7f 1701     	 .2byte 0x117
 3252 0d81 0C       	 .byte 0xc
 3253 0d82 7C070000 	 .4byte 0x77c
 3254 0d86 02       	 .uleb128 0x2
 3255 0d87 91       	 .byte 0x91
 3256 0d88 68       	 .sleb128 -24
 3257 0d89 27       	 .uleb128 0x27
 3258 0d8a B0000000 	 .4byte .LBB45
 3259 0d8e 74000000 	 .4byte .LBE45-.LBB45
 3260 0d92 A70D0000 	 .4byte 0xda7
 3261 0d96 1F       	 .uleb128 0x1f
 3262 0d97 93050000 	 .4byte .LASF84
 3263 0d9b 01       	 .byte 0x1
 3264 0d9c 2601     	 .2byte 0x126
 3265 0d9e 15       	 .byte 0x15
 3266 0d9f B0080000 	 .4byte 0x8b0
 3267 0da3 02       	 .uleb128 0x2
 3268 0da4 91       	 .byte 0x91
 3269 0da5 64       	 .sleb128 -28
ARM GAS   			page 75


 3270 0da6 00       	 .byte 0
 3271 0da7 25       	 .uleb128 0x25
 3272 0da8 7F0F0000 	 .4byte 0xf7f
 3273 0dac 20000000 	 .4byte .LBB37
 3274 0db0 14000000 	 .4byte .LBE37-.LBB37
 3275 0db4 01       	 .byte 0x1
 3276 0db5 1B01     	 .2byte 0x11b
 3277 0db7 02       	 .byte 0x2
 3278 0db8 C50D0000 	 .4byte 0xdc5
 3279 0dbc 23       	 .uleb128 0x23
 3280 0dbd 880F0000 	 .4byte 0xf88
 3281 0dc1 02       	 .uleb128 0x2
 3282 0dc2 91       	 .byte 0x91
 3283 0dc3 58       	 .sleb128 -40
 3284 0dc4 00       	 .byte 0
 3285 0dc5 25       	 .uleb128 0x25
 3286 0dc6 7F0F0000 	 .4byte 0xf7f
 3287 0dca 40000000 	 .4byte .LBB39
 3288 0dce 14000000 	 .4byte .LBE39-.LBB39
 3289 0dd2 01       	 .byte 0x1
 3290 0dd3 1C01     	 .2byte 0x11c
 3291 0dd5 02       	 .byte 0x2
 3292 0dd6 E30D0000 	 .4byte 0xde3
 3293 0dda 23       	 .uleb128 0x23
 3294 0ddb 880F0000 	 .4byte 0xf88
 3295 0ddf 02       	 .uleb128 0x2
 3296 0de0 91       	 .byte 0x91
 3297 0de1 54       	 .sleb128 -44
 3298 0de2 00       	 .byte 0
 3299 0de3 25       	 .uleb128 0x25
 3300 0de4 7F0F0000 	 .4byte 0xf7f
 3301 0de8 5C000000 	 .4byte .LBB41
 3302 0dec 14000000 	 .4byte .LBE41-.LBB41
 3303 0df0 01       	 .byte 0x1
 3304 0df1 1D01     	 .2byte 0x11d
 3305 0df3 02       	 .byte 0x2
 3306 0df4 010E0000 	 .4byte 0xe01
 3307 0df8 23       	 .uleb128 0x23
 3308 0df9 880F0000 	 .4byte 0xf88
 3309 0dfd 02       	 .uleb128 0x2
 3310 0dfe 91       	 .byte 0x91
 3311 0dff 50       	 .sleb128 -48
 3312 0e00 00       	 .byte 0
 3313 0e01 22       	 .uleb128 0x22
 3314 0e02 7F0F0000 	 .4byte 0xf7f
 3315 0e06 96000000 	 .4byte .LBB43
 3316 0e0a 14000000 	 .4byte .LBE43-.LBB43
 3317 0e0e 01       	 .byte 0x1
 3318 0e0f 2001     	 .2byte 0x120
 3319 0e11 03       	 .byte 0x3
 3320 0e12 23       	 .uleb128 0x23
 3321 0e13 880F0000 	 .4byte 0xf88
 3322 0e17 02       	 .uleb128 0x2
 3323 0e18 91       	 .byte 0x91
 3324 0e19 4C       	 .sleb128 -52
 3325 0e1a 00       	 .byte 0
 3326 0e1b 00       	 .byte 0
ARM GAS   			page 76


 3327 0e1c 28       	 .uleb128 0x28
 3328 0e1d 56050000 	 .4byte .LASF114
 3329 0e21 01       	 .byte 0x1
 3330 0e22 9E       	 .byte 0x9e
 3331 0e23 0D       	 .byte 0xd
 3332 0e24 A4080000 	 .4byte 0x8a4
 3333 0e28 00000000 	 .4byte .LFB12
 3334 0e2c 68010000 	 .4byte .LFE12-.LFB12
 3335 0e30 01       	 .uleb128 0x1
 3336 0e31 9C       	 .byte 0x9c
 3337 0e32 110F0000 	 .4byte 0xf11
 3338 0e36 29       	 .uleb128 0x29
 3339 0e37 5A020000 	 .4byte .LASF83
 3340 0e3b 01       	 .byte 0x1
 3341 0e3c 9E       	 .byte 0x9e
 3342 0e3d 31       	 .byte 0x31
 3343 0e3e 98080000 	 .4byte 0x898
 3344 0e42 02       	 .uleb128 0x2
 3345 0e43 91       	 .byte 0x91
 3346 0e44 54       	 .sleb128 -44
 3347 0e45 29       	 .uleb128 0x29
 3348 0e46 DD060000 	 .4byte .LASF97
 3349 0e4a 01       	 .byte 0x1
 3350 0e4b 9E       	 .byte 0x9e
 3351 0e4c 50       	 .byte 0x50
 3352 0e4d B0080000 	 .4byte 0x8b0
 3353 0e51 02       	 .uleb128 0x2
 3354 0e52 91       	 .byte 0x91
 3355 0e53 50       	 .sleb128 -48
 3356 0e54 29       	 .uleb128 0x29
 3357 0e55 CD060000 	 .4byte .LASF85
 3358 0e59 01       	 .byte 0x1
 3359 0e5a 9E       	 .byte 0x9e
 3360 0e5b 6F       	 .byte 0x6f
 3361 0e5c B0080000 	 .4byte 0x8b0
 3362 0e60 02       	 .uleb128 0x2
 3363 0e61 91       	 .byte 0x91
 3364 0e62 4C       	 .sleb128 -52
 3365 0e63 29       	 .uleb128 0x29
 3366 0e64 A7060000 	 .4byte .LASF111
 3367 0e68 01       	 .byte 0x1
 3368 0e69 9E       	 .byte 0x9e
 3369 0e6a 8B       	 .byte 0x8b
 3370 0e6b 99070000 	 .4byte 0x799
 3371 0e6f 02       	 .uleb128 0x2
 3372 0e70 91       	 .byte 0x91
 3373 0e71 48       	 .sleb128 -56
 3374 0e72 2A       	 .uleb128 0x2a
 3375 0e73 53010000 	 .4byte .LASF115
 3376 0e77 01       	 .byte 0x1
 3377 0e78 A0       	 .byte 0xa0
 3378 0e79 0D       	 .byte 0xd
 3379 0e7a A4080000 	 .4byte 0x8a4
 3380 0e7e 02       	 .uleb128 0x2
 3381 0e7f 91       	 .byte 0x91
 3382 0e80 68       	 .sleb128 -24
 3383 0e81 2A       	 .uleb128 0x2a
ARM GAS   			page 77


 3384 0e82 4A010000 	 .4byte .LASF107
 3385 0e86 01       	 .byte 0x1
 3386 0e87 A0       	 .byte 0xa0
 3387 0e88 21       	 .byte 0x21
 3388 0e89 A4080000 	 .4byte 0x8a4
 3389 0e8d 02       	 .uleb128 0x2
 3390 0e8e 91       	 .byte 0x91
 3391 0e8f 74       	 .sleb128 -12
 3392 0e90 2A       	 .uleb128 0x2a
 3393 0e91 D7020000 	 .4byte .LASF82
 3394 0e95 01       	 .byte 0x1
 3395 0e96 A1       	 .byte 0xa1
 3396 0e97 0F       	 .byte 0xf
 3397 0e98 42090000 	 .4byte 0x942
 3398 0e9c 02       	 .uleb128 0x2
 3399 0e9d 91       	 .byte 0x91
 3400 0e9e 70       	 .sleb128 -16
 3401 0e9f 2A       	 .uleb128 0x2a
 3402 0ea0 71070000 	 .4byte .LASF112
 3403 0ea4 01       	 .byte 0x1
 3404 0ea5 A2       	 .byte 0xa2
 3405 0ea6 0C       	 .byte 0xc
 3406 0ea7 7C070000 	 .4byte 0x77c
 3407 0eab 02       	 .uleb128 0x2
 3408 0eac 91       	 .byte 0x91
 3409 0ead 64       	 .sleb128 -28
 3410 0eae 2A       	 .uleb128 0x2a
 3411 0eaf 35020000 	 .4byte .LASF113
 3412 0eb3 01       	 .byte 0x1
 3413 0eb4 A3       	 .byte 0xa3
 3414 0eb5 0C       	 .byte 0xc
 3415 0eb6 7C070000 	 .4byte 0x77c
 3416 0eba 02       	 .uleb128 0x2
 3417 0ebb 91       	 .byte 0x91
 3418 0ebc 6C       	 .sleb128 -20
 3419 0ebd 2B       	 .uleb128 0x2b
 3420 0ebe 7F0F0000 	 .4byte 0xf7f
 3421 0ec2 20000000 	 .4byte .LBB31
 3422 0ec6 14000000 	 .4byte .LBE31-.LBB31
 3423 0eca 01       	 .byte 0x1
 3424 0ecb A5       	 .byte 0xa5
 3425 0ecc 02       	 .byte 0x2
 3426 0ecd DA0E0000 	 .4byte 0xeda
 3427 0ed1 23       	 .uleb128 0x23
 3428 0ed2 880F0000 	 .4byte 0xf88
 3429 0ed6 02       	 .uleb128 0x2
 3430 0ed7 91       	 .byte 0x91
 3431 0ed8 60       	 .sleb128 -32
 3432 0ed9 00       	 .byte 0
 3433 0eda 2B       	 .uleb128 0x2b
 3434 0edb 7F0F0000 	 .4byte 0xf7f
 3435 0edf 3C000000 	 .4byte .LBB33
 3436 0ee3 14000000 	 .4byte .LBE33-.LBB33
 3437 0ee7 01       	 .byte 0x1
 3438 0ee8 A6       	 .byte 0xa6
 3439 0ee9 02       	 .byte 0x2
 3440 0eea F70E0000 	 .4byte 0xef7
ARM GAS   			page 78


 3441 0eee 23       	 .uleb128 0x23
 3442 0eef 880F0000 	 .4byte 0xf88
 3443 0ef3 02       	 .uleb128 0x2
 3444 0ef4 91       	 .byte 0x91
 3445 0ef5 5C       	 .sleb128 -36
 3446 0ef6 00       	 .byte 0
 3447 0ef7 2C       	 .uleb128 0x2c
 3448 0ef8 7F0F0000 	 .4byte 0xf7f
 3449 0efc 76000000 	 .4byte .LBB35
 3450 0f00 14000000 	 .4byte .LBE35-.LBB35
 3451 0f04 01       	 .byte 0x1
 3452 0f05 A9       	 .byte 0xa9
 3453 0f06 03       	 .byte 0x3
 3454 0f07 23       	 .uleb128 0x23
 3455 0f08 880F0000 	 .4byte 0xf88
 3456 0f0c 02       	 .uleb128 0x2
 3457 0f0d 91       	 .byte 0x91
 3458 0f0e 58       	 .sleb128 -40
 3459 0f0f 00       	 .byte 0
 3460 0f10 00       	 .byte 0
 3461 0f11 28       	 .uleb128 0x28
 3462 0f12 D0010000 	 .4byte .LASF116
 3463 0f16 01       	 .byte 0x1
 3464 0f17 8A       	 .byte 0x8a
 3465 0f18 14       	 .byte 0x14
 3466 0f19 98080000 	 .4byte 0x898
 3467 0f1d 00000000 	 .4byte .LFB11
 3468 0f21 30000000 	 .4byte .LFE11-.LFB11
 3469 0f25 01       	 .uleb128 0x1
 3470 0f26 9C       	 .byte 0x9c
 3471 0f27 3B0F0000 	 .4byte 0xf3b
 3472 0f2b 2A       	 .uleb128 0x2a
 3473 0f2c D7020000 	 .4byte .LASF82
 3474 0f30 01       	 .byte 0x1
 3475 0f31 8C       	 .byte 0x8c
 3476 0f32 0F       	 .byte 0xf
 3477 0f33 42090000 	 .4byte 0x942
 3478 0f37 02       	 .uleb128 0x2
 3479 0f38 91       	 .byte 0x91
 3480 0f39 74       	 .sleb128 -12
 3481 0f3a 00       	 .byte 0
 3482 0f3b 2D       	 .uleb128 0x2d
 3483 0f3c D1000000 	 .4byte .LASF126
 3484 0f40 02       	 .byte 0x2
 3485 0f41 F7       	 .byte 0xf7
 3486 0f42 1E       	 .byte 0x1e
 3487 0f43 03       	 .byte 0x3
 3488 0f44 550F0000 	 .4byte 0xf55
 3489 0f48 2E       	 .uleb128 0x2e
 3490 0f49 23050000 	 .4byte .LASF127
 3491 0f4d 02       	 .byte 0x2
 3492 0f4e F7       	 .byte 0xf7
 3493 0f4f 38       	 .byte 0x38
 3494 0f50 6B070000 	 .4byte 0x76b
 3495 0f54 00       	 .byte 0
 3496 0f55 2F       	 .uleb128 0x2f
 3497 0f56 51030000 	 .4byte .LASF128
ARM GAS   			page 79


 3498 0f5a 02       	 .byte 0x2
 3499 0f5b E3       	 .byte 0xe3
 3500 0f5c 22       	 .byte 0x22
 3501 0f5d 6B070000 	 .4byte 0x76b
 3502 0f61 03       	 .byte 0x3
 3503 0f62 7F0F0000 	 .4byte 0xf7f
 3504 0f66 30       	 .uleb128 0x30
 3505 0f67 B8010000 	 .4byte .LASF117
 3506 0f6b 02       	 .byte 0x2
 3507 0f6c E5       	 .byte 0xe5
 3508 0f6d 0A       	 .byte 0xa
 3509 0f6e 6B070000 	 .4byte 0x76b
 3510 0f72 30       	 .uleb128 0x30
 3511 0f73 07030000 	 .4byte .LASF118
 3512 0f77 02       	 .byte 0x2
 3513 0f78 E5       	 .byte 0xe5
 3514 0f79 1D       	 .byte 0x1d
 3515 0f7a 6B070000 	 .4byte 0x76b
 3516 0f7e 00       	 .byte 0
 3517 0f7f 31       	 .uleb128 0x31
 3518 0f80 03070000 	 .4byte .LASF129
 3519 0f84 02       	 .byte 0x2
 3520 0f85 D3       	 .byte 0xd3
 3521 0f86 1E       	 .byte 0x1e
 3522 0f87 03       	 .byte 0x3
 3523 0f88 30       	 .uleb128 0x30
 3524 0f89 07030000 	 .4byte .LASF118
 3525 0f8d 02       	 .byte 0x2
 3526 0f8e D5       	 .byte 0xd5
 3527 0f8f 0A       	 .byte 0xa
 3528 0f90 6B070000 	 .4byte 0x76b
 3529 0f94 00       	 .byte 0
 3530 0f95 00       	 .byte 0
 3531              	 .section .debug_abbrev,"",%progbits
 3532              	.Ldebug_abbrev0:
 3533 0000 01       	 .uleb128 0x1
 3534 0001 11       	 .uleb128 0x11
 3535 0002 01       	 .byte 0x1
 3536 0003 25       	 .uleb128 0x25
 3537 0004 0E       	 .uleb128 0xe
 3538 0005 13       	 .uleb128 0x13
 3539 0006 0B       	 .uleb128 0xb
 3540 0007 03       	 .uleb128 0x3
 3541 0008 0E       	 .uleb128 0xe
 3542 0009 1B       	 .uleb128 0x1b
 3543 000a 0E       	 .uleb128 0xe
 3544 000b 55       	 .uleb128 0x55
 3545 000c 17       	 .uleb128 0x17
 3546 000d 11       	 .uleb128 0x11
 3547 000e 01       	 .uleb128 0x1
 3548 000f 10       	 .uleb128 0x10
 3549 0010 17       	 .uleb128 0x17
 3550 0011 00       	 .byte 0
 3551 0012 00       	 .byte 0
 3552 0013 02       	 .uleb128 0x2
 3553 0014 39       	 .uleb128 0x39
 3554 0015 01       	 .byte 0x1
ARM GAS   			page 80


 3555 0016 03       	 .uleb128 0x3
 3556 0017 08       	 .uleb128 0x8
 3557 0018 3A       	 .uleb128 0x3a
 3558 0019 0B       	 .uleb128 0xb
 3559 001a 3B       	 .uleb128 0x3b
 3560 001b 0B       	 .uleb128 0xb
 3561 001c 01       	 .uleb128 0x1
 3562 001d 13       	 .uleb128 0x13
 3563 001e 00       	 .byte 0
 3564 001f 00       	 .byte 0
 3565 0020 03       	 .uleb128 0x3
 3566 0021 39       	 .uleb128 0x39
 3567 0022 00       	 .byte 0
 3568 0023 03       	 .uleb128 0x3
 3569 0024 0E       	 .uleb128 0xe
 3570 0025 3A       	 .uleb128 0x3a
 3571 0026 0B       	 .uleb128 0xb
 3572 0027 3B       	 .uleb128 0x3b
 3573 0028 05       	 .uleb128 0x5
 3574 0029 39       	 .uleb128 0x39
 3575 002a 0B       	 .uleb128 0xb
 3576 002b 8901     	 .uleb128 0x89
 3577 002d 19       	 .uleb128 0x19
 3578 002e 00       	 .byte 0
 3579 002f 00       	 .byte 0
 3580 0030 04       	 .uleb128 0x4
 3581 0031 3A       	 .uleb128 0x3a
 3582 0032 00       	 .byte 0
 3583 0033 3A       	 .uleb128 0x3a
 3584 0034 0B       	 .uleb128 0xb
 3585 0035 3B       	 .uleb128 0x3b
 3586 0036 05       	 .uleb128 0x5
 3587 0037 39       	 .uleb128 0x39
 3588 0038 0B       	 .uleb128 0xb
 3589 0039 18       	 .uleb128 0x18
 3590 003a 13       	 .uleb128 0x13
 3591 003b 00       	 .byte 0
 3592 003c 00       	 .byte 0
 3593 003d 05       	 .uleb128 0x5
 3594 003e 08       	 .uleb128 0x8
 3595 003f 00       	 .byte 0
 3596 0040 3A       	 .uleb128 0x3a
 3597 0041 0B       	 .uleb128 0xb
 3598 0042 3B       	 .uleb128 0x3b
 3599 0043 0B       	 .uleb128 0xb
 3600 0044 39       	 .uleb128 0x39
 3601 0045 0B       	 .uleb128 0xb
 3602 0046 18       	 .uleb128 0x18
 3603 0047 13       	 .uleb128 0x13
 3604 0048 00       	 .byte 0
 3605 0049 00       	 .byte 0
 3606 004a 06       	 .uleb128 0x6
 3607 004b 2E       	 .uleb128 0x2e
 3608 004c 01       	 .byte 0x1
 3609 004d 3F       	 .uleb128 0x3f
 3610 004e 19       	 .uleb128 0x19
 3611 004f 03       	 .uleb128 0x3
ARM GAS   			page 81


 3612 0050 08       	 .uleb128 0x8
 3613 0051 3A       	 .uleb128 0x3a
 3614 0052 0B       	 .uleb128 0xb
 3615 0053 3B       	 .uleb128 0x3b
 3616 0054 0B       	 .uleb128 0xb
 3617 0055 39       	 .uleb128 0x39
 3618 0056 0B       	 .uleb128 0xb
 3619 0057 6E       	 .uleb128 0x6e
 3620 0058 0E       	 .uleb128 0xe
 3621 0059 49       	 .uleb128 0x49
 3622 005a 13       	 .uleb128 0x13
 3623 005b 3C       	 .uleb128 0x3c
 3624 005c 19       	 .uleb128 0x19
 3625 005d 01       	 .uleb128 0x1
 3626 005e 13       	 .uleb128 0x13
 3627 005f 00       	 .byte 0
 3628 0060 00       	 .byte 0
 3629 0061 07       	 .uleb128 0x7
 3630 0062 05       	 .uleb128 0x5
 3631 0063 00       	 .byte 0
 3632 0064 49       	 .uleb128 0x49
 3633 0065 13       	 .uleb128 0x13
 3634 0066 00       	 .byte 0
 3635 0067 00       	 .byte 0
 3636 0068 08       	 .uleb128 0x8
 3637 0069 2E       	 .uleb128 0x2e
 3638 006a 01       	 .byte 0x1
 3639 006b 3F       	 .uleb128 0x3f
 3640 006c 19       	 .uleb128 0x19
 3641 006d 03       	 .uleb128 0x3
 3642 006e 08       	 .uleb128 0x8
 3643 006f 3A       	 .uleb128 0x3a
 3644 0070 0B       	 .uleb128 0xb
 3645 0071 3B       	 .uleb128 0x3b
 3646 0072 0B       	 .uleb128 0xb
 3647 0073 39       	 .uleb128 0x39
 3648 0074 0B       	 .uleb128 0xb
 3649 0075 6E       	 .uleb128 0x6e
 3650 0076 0E       	 .uleb128 0xe
 3651 0077 49       	 .uleb128 0x49
 3652 0078 13       	 .uleb128 0x13
 3653 0079 3C       	 .uleb128 0x3c
 3654 007a 19       	 .uleb128 0x19
 3655 007b 00       	 .byte 0
 3656 007c 00       	 .byte 0
 3657 007d 09       	 .uleb128 0x9
 3658 007e 39       	 .uleb128 0x39
 3659 007f 01       	 .byte 0x1
 3660 0080 03       	 .uleb128 0x3
 3661 0081 0E       	 .uleb128 0xe
 3662 0082 3A       	 .uleb128 0x3a
 3663 0083 0B       	 .uleb128 0xb
 3664 0084 3B       	 .uleb128 0x3b
 3665 0085 05       	 .uleb128 0x5
 3666 0086 39       	 .uleb128 0x39
 3667 0087 0B       	 .uleb128 0xb
 3668 0088 01       	 .uleb128 0x1
ARM GAS   			page 82


 3669 0089 13       	 .uleb128 0x13
 3670 008a 00       	 .byte 0
 3671 008b 00       	 .byte 0
 3672 008c 0A       	 .uleb128 0xa
 3673 008d 16       	 .uleb128 0x16
 3674 008e 00       	 .byte 0
 3675 008f 03       	 .uleb128 0x3
 3676 0090 0E       	 .uleb128 0xe
 3677 0091 3A       	 .uleb128 0x3a
 3678 0092 0B       	 .uleb128 0xb
 3679 0093 3B       	 .uleb128 0x3b
 3680 0094 0B       	 .uleb128 0xb
 3681 0095 39       	 .uleb128 0x39
 3682 0096 0B       	 .uleb128 0xb
 3683 0097 49       	 .uleb128 0x49
 3684 0098 13       	 .uleb128 0x13
 3685 0099 00       	 .byte 0
 3686 009a 00       	 .byte 0
 3687 009b 0B       	 .uleb128 0xb
 3688 009c 24       	 .uleb128 0x24
 3689 009d 00       	 .byte 0
 3690 009e 0B       	 .uleb128 0xb
 3691 009f 0B       	 .uleb128 0xb
 3692 00a0 3E       	 .uleb128 0x3e
 3693 00a1 0B       	 .uleb128 0xb
 3694 00a2 03       	 .uleb128 0x3
 3695 00a3 0E       	 .uleb128 0xe
 3696 00a4 00       	 .byte 0
 3697 00a5 00       	 .byte 0
 3698 00a6 0C       	 .uleb128 0xc
 3699 00a7 24       	 .uleb128 0x24
 3700 00a8 00       	 .byte 0
 3701 00a9 0B       	 .uleb128 0xb
 3702 00aa 0B       	 .uleb128 0xb
 3703 00ab 3E       	 .uleb128 0x3e
 3704 00ac 0B       	 .uleb128 0xb
 3705 00ad 03       	 .uleb128 0x3
 3706 00ae 08       	 .uleb128 0x8
 3707 00af 00       	 .byte 0
 3708 00b0 00       	 .byte 0
 3709 00b1 0D       	 .uleb128 0xd
 3710 00b2 3B       	 .uleb128 0x3b
 3711 00b3 00       	 .byte 0
 3712 00b4 03       	 .uleb128 0x3
 3713 00b5 0E       	 .uleb128 0xe
 3714 00b6 00       	 .byte 0
 3715 00b7 00       	 .byte 0
 3716 00b8 0E       	 .uleb128 0xe
 3717 00b9 0F       	 .uleb128 0xf
 3718 00ba 00       	 .byte 0
 3719 00bb 0B       	 .uleb128 0xb
 3720 00bc 0B       	 .uleb128 0xb
 3721 00bd 00       	 .byte 0
 3722 00be 00       	 .byte 0
 3723 00bf 0F       	 .uleb128 0xf
 3724 00c0 0F       	 .uleb128 0xf
 3725 00c1 00       	 .byte 0
ARM GAS   			page 83


 3726 00c2 0B       	 .uleb128 0xb
 3727 00c3 0B       	 .uleb128 0xb
 3728 00c4 49       	 .uleb128 0x49
 3729 00c5 13       	 .uleb128 0x13
 3730 00c6 00       	 .byte 0
 3731 00c7 00       	 .byte 0
 3732 00c8 10       	 .uleb128 0x10
 3733 00c9 15       	 .uleb128 0x15
 3734 00ca 00       	 .byte 0
 3735 00cb 00       	 .byte 0
 3736 00cc 00       	 .byte 0
 3737 00cd 11       	 .uleb128 0x11
 3738 00ce 26       	 .uleb128 0x26
 3739 00cf 00       	 .byte 0
 3740 00d0 49       	 .uleb128 0x49
 3741 00d1 13       	 .uleb128 0x13
 3742 00d2 00       	 .byte 0
 3743 00d3 00       	 .byte 0
 3744 00d4 12       	 .uleb128 0x12
 3745 00d5 13       	 .uleb128 0x13
 3746 00d6 01       	 .byte 0x1
 3747 00d7 0B       	 .uleb128 0xb
 3748 00d8 0B       	 .uleb128 0xb
 3749 00d9 3A       	 .uleb128 0x3a
 3750 00da 0B       	 .uleb128 0xb
 3751 00db 3B       	 .uleb128 0x3b
 3752 00dc 0B       	 .uleb128 0xb
 3753 00dd 39       	 .uleb128 0x39
 3754 00de 0B       	 .uleb128 0xb
 3755 00df 6E       	 .uleb128 0x6e
 3756 00e0 0E       	 .uleb128 0xe
 3757 00e1 01       	 .uleb128 0x1
 3758 00e2 13       	 .uleb128 0x13
 3759 00e3 00       	 .byte 0
 3760 00e4 00       	 .byte 0
 3761 00e5 13       	 .uleb128 0x13
 3762 00e6 0D       	 .uleb128 0xd
 3763 00e7 00       	 .byte 0
 3764 00e8 03       	 .uleb128 0x3
 3765 00e9 0E       	 .uleb128 0xe
 3766 00ea 3A       	 .uleb128 0x3a
 3767 00eb 0B       	 .uleb128 0xb
 3768 00ec 3B       	 .uleb128 0x3b
 3769 00ed 0B       	 .uleb128 0xb
 3770 00ee 39       	 .uleb128 0x39
 3771 00ef 0B       	 .uleb128 0xb
 3772 00f0 49       	 .uleb128 0x49
 3773 00f1 13       	 .uleb128 0x13
 3774 00f2 38       	 .uleb128 0x38
 3775 00f3 0B       	 .uleb128 0xb
 3776 00f4 00       	 .byte 0
 3777 00f5 00       	 .byte 0
 3778 00f6 14       	 .uleb128 0x14
 3779 00f7 0D       	 .uleb128 0xd
 3780 00f8 00       	 .byte 0
 3781 00f9 03       	 .uleb128 0x3
 3782 00fa 08       	 .uleb128 0x8
ARM GAS   			page 84


 3783 00fb 3A       	 .uleb128 0x3a
 3784 00fc 0B       	 .uleb128 0xb
 3785 00fd 3B       	 .uleb128 0x3b
 3786 00fe 0B       	 .uleb128 0xb
 3787 00ff 39       	 .uleb128 0x39
 3788 0100 0B       	 .uleb128 0xb
 3789 0101 49       	 .uleb128 0x49
 3790 0102 13       	 .uleb128 0x13
 3791 0103 38       	 .uleb128 0x38
 3792 0104 0B       	 .uleb128 0xb
 3793 0105 00       	 .byte 0
 3794 0106 00       	 .byte 0
 3795 0107 15       	 .uleb128 0x15
 3796 0108 15       	 .uleb128 0x15
 3797 0109 01       	 .byte 0x1
 3798 010a 49       	 .uleb128 0x49
 3799 010b 13       	 .uleb128 0x13
 3800 010c 01       	 .uleb128 0x1
 3801 010d 13       	 .uleb128 0x13
 3802 010e 00       	 .byte 0
 3803 010f 00       	 .byte 0
 3804 0110 16       	 .uleb128 0x16
 3805 0111 26       	 .uleb128 0x26
 3806 0112 00       	 .byte 0
 3807 0113 00       	 .byte 0
 3808 0114 00       	 .byte 0
 3809 0115 17       	 .uleb128 0x17
 3810 0116 2E       	 .uleb128 0x2e
 3811 0117 01       	 .byte 0x1
 3812 0118 3F       	 .uleb128 0x3f
 3813 0119 19       	 .uleb128 0x19
 3814 011a 03       	 .uleb128 0x3
 3815 011b 0E       	 .uleb128 0xe
 3816 011c 3A       	 .uleb128 0x3a
 3817 011d 0B       	 .uleb128 0xb
 3818 011e 3B       	 .uleb128 0x3b
 3819 011f 0B       	 .uleb128 0xb
 3820 0120 39       	 .uleb128 0x39
 3821 0121 0B       	 .uleb128 0xb
 3822 0122 49       	 .uleb128 0x49
 3823 0123 13       	 .uleb128 0x13
 3824 0124 3C       	 .uleb128 0x3c
 3825 0125 19       	 .uleb128 0x19
 3826 0126 01       	 .uleb128 0x1
 3827 0127 13       	 .uleb128 0x13
 3828 0128 00       	 .byte 0
 3829 0129 00       	 .byte 0
 3830 012a 18       	 .uleb128 0x18
 3831 012b 2E       	 .uleb128 0x2e
 3832 012c 01       	 .byte 0x1
 3833 012d 3F       	 .uleb128 0x3f
 3834 012e 19       	 .uleb128 0x19
 3835 012f 03       	 .uleb128 0x3
 3836 0130 08       	 .uleb128 0x8
 3837 0131 3A       	 .uleb128 0x3a
 3838 0132 0B       	 .uleb128 0xb
 3839 0133 3B       	 .uleb128 0x3b
ARM GAS   			page 85


 3840 0134 0B       	 .uleb128 0xb
 3841 0135 39       	 .uleb128 0x39
 3842 0136 0B       	 .uleb128 0xb
 3843 0137 49       	 .uleb128 0x49
 3844 0138 13       	 .uleb128 0x13
 3845 0139 3C       	 .uleb128 0x3c
 3846 013a 19       	 .uleb128 0x19
 3847 013b 01       	 .uleb128 0x1
 3848 013c 13       	 .uleb128 0x13
 3849 013d 00       	 .byte 0
 3850 013e 00       	 .byte 0
 3851 013f 19       	 .uleb128 0x19
 3852 0140 2E       	 .uleb128 0x2e
 3853 0141 01       	 .byte 0x1
 3854 0142 3F       	 .uleb128 0x3f
 3855 0143 19       	 .uleb128 0x19
 3856 0144 03       	 .uleb128 0x3
 3857 0145 0E       	 .uleb128 0xe
 3858 0146 3A       	 .uleb128 0x3a
 3859 0147 0B       	 .uleb128 0xb
 3860 0148 3B       	 .uleb128 0x3b
 3861 0149 0B       	 .uleb128 0xb
 3862 014a 39       	 .uleb128 0x39
 3863 014b 0B       	 .uleb128 0xb
 3864 014c 3C       	 .uleb128 0x3c
 3865 014d 19       	 .uleb128 0x19
 3866 014e 01       	 .uleb128 0x1
 3867 014f 13       	 .uleb128 0x13
 3868 0150 00       	 .byte 0
 3869 0151 00       	 .byte 0
 3870 0152 1A       	 .uleb128 0x1a
 3871 0153 2E       	 .uleb128 0x2e
 3872 0154 00       	 .byte 0
 3873 0155 3F       	 .uleb128 0x3f
 3874 0156 19       	 .uleb128 0x19
 3875 0157 03       	 .uleb128 0x3
 3876 0158 0E       	 .uleb128 0xe
 3877 0159 3A       	 .uleb128 0x3a
 3878 015a 0B       	 .uleb128 0xb
 3879 015b 3B       	 .uleb128 0x3b
 3880 015c 0B       	 .uleb128 0xb
 3881 015d 39       	 .uleb128 0x39
 3882 015e 0B       	 .uleb128 0xb
 3883 015f 49       	 .uleb128 0x49
 3884 0160 13       	 .uleb128 0x13
 3885 0161 3C       	 .uleb128 0x3c
 3886 0162 19       	 .uleb128 0x19
 3887 0163 00       	 .byte 0
 3888 0164 00       	 .byte 0
 3889 0165 1B       	 .uleb128 0x1b
 3890 0166 2E       	 .uleb128 0x2e
 3891 0167 01       	 .byte 0x1
 3892 0168 3F       	 .uleb128 0x3f
 3893 0169 19       	 .uleb128 0x19
 3894 016a 03       	 .uleb128 0x3
 3895 016b 0E       	 .uleb128 0xe
 3896 016c 3A       	 .uleb128 0x3a
ARM GAS   			page 86


 3897 016d 0B       	 .uleb128 0xb
 3898 016e 3B       	 .uleb128 0x3b
 3899 016f 05       	 .uleb128 0x5
 3900 0170 39       	 .uleb128 0x39
 3901 0171 0B       	 .uleb128 0xb
 3902 0172 49       	 .uleb128 0x49
 3903 0173 13       	 .uleb128 0x13
 3904 0174 3C       	 .uleb128 0x3c
 3905 0175 19       	 .uleb128 0x19
 3906 0176 01       	 .uleb128 0x1
 3907 0177 13       	 .uleb128 0x13
 3908 0178 00       	 .byte 0
 3909 0179 00       	 .byte 0
 3910 017a 1C       	 .uleb128 0x1c
 3911 017b 13       	 .uleb128 0x13
 3912 017c 01       	 .byte 0x1
 3913 017d 03       	 .uleb128 0x3
 3914 017e 0E       	 .uleb128 0xe
 3915 017f 0B       	 .uleb128 0xb
 3916 0180 0B       	 .uleb128 0xb
 3917 0181 3A       	 .uleb128 0x3a
 3918 0182 0B       	 .uleb128 0xb
 3919 0183 3B       	 .uleb128 0x3b
 3920 0184 0B       	 .uleb128 0xb
 3921 0185 39       	 .uleb128 0x39
 3922 0186 0B       	 .uleb128 0xb
 3923 0187 01       	 .uleb128 0x1
 3924 0188 13       	 .uleb128 0x13
 3925 0189 00       	 .byte 0
 3926 018a 00       	 .byte 0
 3927 018b 1D       	 .uleb128 0x1d
 3928 018c 2E       	 .uleb128 0x2e
 3929 018d 01       	 .byte 0x1
 3930 018e 3F       	 .uleb128 0x3f
 3931 018f 19       	 .uleb128 0x19
 3932 0190 03       	 .uleb128 0x3
 3933 0191 0E       	 .uleb128 0xe
 3934 0192 3A       	 .uleb128 0x3a
 3935 0193 0B       	 .uleb128 0xb
 3936 0194 3B       	 .uleb128 0x3b
 3937 0195 05       	 .uleb128 0x5
 3938 0196 39       	 .uleb128 0x39
 3939 0197 0B       	 .uleb128 0xb
 3940 0198 49       	 .uleb128 0x49
 3941 0199 13       	 .uleb128 0x13
 3942 019a 11       	 .uleb128 0x11
 3943 019b 01       	 .uleb128 0x1
 3944 019c 12       	 .uleb128 0x12
 3945 019d 06       	 .uleb128 0x6
 3946 019e 40       	 .uleb128 0x40
 3947 019f 18       	 .uleb128 0x18
 3948 01a0 9742     	 .uleb128 0x2117
 3949 01a2 19       	 .uleb128 0x19
 3950 01a3 01       	 .uleb128 0x1
 3951 01a4 13       	 .uleb128 0x13
 3952 01a5 00       	 .byte 0
 3953 01a6 00       	 .byte 0
ARM GAS   			page 87


 3954 01a7 1E       	 .uleb128 0x1e
 3955 01a8 05       	 .uleb128 0x5
 3956 01a9 00       	 .byte 0
 3957 01aa 03       	 .uleb128 0x3
 3958 01ab 0E       	 .uleb128 0xe
 3959 01ac 3A       	 .uleb128 0x3a
 3960 01ad 0B       	 .uleb128 0xb
 3961 01ae 3B       	 .uleb128 0x3b
 3962 01af 05       	 .uleb128 0x5
 3963 01b0 39       	 .uleb128 0x39
 3964 01b1 0B       	 .uleb128 0xb
 3965 01b2 49       	 .uleb128 0x49
 3966 01b3 13       	 .uleb128 0x13
 3967 01b4 02       	 .uleb128 0x2
 3968 01b5 18       	 .uleb128 0x18
 3969 01b6 00       	 .byte 0
 3970 01b7 00       	 .byte 0
 3971 01b8 1F       	 .uleb128 0x1f
 3972 01b9 34       	 .uleb128 0x34
 3973 01ba 00       	 .byte 0
 3974 01bb 03       	 .uleb128 0x3
 3975 01bc 0E       	 .uleb128 0xe
 3976 01bd 3A       	 .uleb128 0x3a
 3977 01be 0B       	 .uleb128 0xb
 3978 01bf 3B       	 .uleb128 0x3b
 3979 01c0 05       	 .uleb128 0x5
 3980 01c1 39       	 .uleb128 0x39
 3981 01c2 0B       	 .uleb128 0xb
 3982 01c3 49       	 .uleb128 0x49
 3983 01c4 13       	 .uleb128 0x13
 3984 01c5 02       	 .uleb128 0x2
 3985 01c6 18       	 .uleb128 0x18
 3986 01c7 00       	 .byte 0
 3987 01c8 00       	 .byte 0
 3988 01c9 20       	 .uleb128 0x20
 3989 01ca 2E       	 .uleb128 0x2e
 3990 01cb 01       	 .byte 0x1
 3991 01cc 03       	 .uleb128 0x3
 3992 01cd 0E       	 .uleb128 0xe
 3993 01ce 3A       	 .uleb128 0x3a
 3994 01cf 0B       	 .uleb128 0xb
 3995 01d0 3B       	 .uleb128 0x3b
 3996 01d1 05       	 .uleb128 0x5
 3997 01d2 39       	 .uleb128 0x39
 3998 01d3 0B       	 .uleb128 0xb
 3999 01d4 49       	 .uleb128 0x49
 4000 01d5 13       	 .uleb128 0x13
 4001 01d6 11       	 .uleb128 0x11
 4002 01d7 01       	 .uleb128 0x1
 4003 01d8 12       	 .uleb128 0x12
 4004 01d9 06       	 .uleb128 0x6
 4005 01da 40       	 .uleb128 0x40
 4006 01db 18       	 .uleb128 0x18
 4007 01dc 9742     	 .uleb128 0x2117
 4008 01de 19       	 .uleb128 0x19
 4009 01df 01       	 .uleb128 0x1
 4010 01e0 13       	 .uleb128 0x13
ARM GAS   			page 88


 4011 01e1 00       	 .byte 0
 4012 01e2 00       	 .byte 0
 4013 01e3 21       	 .uleb128 0x21
 4014 01e4 2E       	 .uleb128 0x2e
 4015 01e5 01       	 .byte 0x1
 4016 01e6 3F       	 .uleb128 0x3f
 4017 01e7 19       	 .uleb128 0x19
 4018 01e8 03       	 .uleb128 0x3
 4019 01e9 0E       	 .uleb128 0xe
 4020 01ea 3A       	 .uleb128 0x3a
 4021 01eb 0B       	 .uleb128 0xb
 4022 01ec 3B       	 .uleb128 0x3b
 4023 01ed 05       	 .uleb128 0x5
 4024 01ee 39       	 .uleb128 0x39
 4025 01ef 0B       	 .uleb128 0xb
 4026 01f0 11       	 .uleb128 0x11
 4027 01f1 01       	 .uleb128 0x1
 4028 01f2 12       	 .uleb128 0x12
 4029 01f3 06       	 .uleb128 0x6
 4030 01f4 40       	 .uleb128 0x40
 4031 01f5 18       	 .uleb128 0x18
 4032 01f6 9642     	 .uleb128 0x2116
 4033 01f8 19       	 .uleb128 0x19
 4034 01f9 01       	 .uleb128 0x1
 4035 01fa 13       	 .uleb128 0x13
 4036 01fb 00       	 .byte 0
 4037 01fc 00       	 .byte 0
 4038 01fd 22       	 .uleb128 0x22
 4039 01fe 1D       	 .uleb128 0x1d
 4040 01ff 01       	 .byte 0x1
 4041 0200 31       	 .uleb128 0x31
 4042 0201 13       	 .uleb128 0x13
 4043 0202 11       	 .uleb128 0x11
 4044 0203 01       	 .uleb128 0x1
 4045 0204 12       	 .uleb128 0x12
 4046 0205 06       	 .uleb128 0x6
 4047 0206 58       	 .uleb128 0x58
 4048 0207 0B       	 .uleb128 0xb
 4049 0208 59       	 .uleb128 0x59
 4050 0209 05       	 .uleb128 0x5
 4051 020a 57       	 .uleb128 0x57
 4052 020b 0B       	 .uleb128 0xb
 4053 020c 00       	 .byte 0
 4054 020d 00       	 .byte 0
 4055 020e 23       	 .uleb128 0x23
 4056 020f 34       	 .uleb128 0x34
 4057 0210 00       	 .byte 0
 4058 0211 31       	 .uleb128 0x31
 4059 0212 13       	 .uleb128 0x13
 4060 0213 02       	 .uleb128 0x2
 4061 0214 18       	 .uleb128 0x18
 4062 0215 00       	 .byte 0
 4063 0216 00       	 .byte 0
 4064 0217 24       	 .uleb128 0x24
 4065 0218 2E       	 .uleb128 0x2e
 4066 0219 01       	 .byte 0x1
 4067 021a 3F       	 .uleb128 0x3f
ARM GAS   			page 89


 4068 021b 19       	 .uleb128 0x19
 4069 021c 03       	 .uleb128 0x3
 4070 021d 0E       	 .uleb128 0xe
 4071 021e 3A       	 .uleb128 0x3a
 4072 021f 0B       	 .uleb128 0xb
 4073 0220 3B       	 .uleb128 0x3b
 4074 0221 05       	 .uleb128 0x5
 4075 0222 39       	 .uleb128 0x39
 4076 0223 0B       	 .uleb128 0xb
 4077 0224 49       	 .uleb128 0x49
 4078 0225 13       	 .uleb128 0x13
 4079 0226 11       	 .uleb128 0x11
 4080 0227 01       	 .uleb128 0x1
 4081 0228 12       	 .uleb128 0x12
 4082 0229 06       	 .uleb128 0x6
 4083 022a 40       	 .uleb128 0x40
 4084 022b 18       	 .uleb128 0x18
 4085 022c 9642     	 .uleb128 0x2116
 4086 022e 19       	 .uleb128 0x19
 4087 022f 01       	 .uleb128 0x1
 4088 0230 13       	 .uleb128 0x13
 4089 0231 00       	 .byte 0
 4090 0232 00       	 .byte 0
 4091 0233 25       	 .uleb128 0x25
 4092 0234 1D       	 .uleb128 0x1d
 4093 0235 01       	 .byte 0x1
 4094 0236 31       	 .uleb128 0x31
 4095 0237 13       	 .uleb128 0x13
 4096 0238 11       	 .uleb128 0x11
 4097 0239 01       	 .uleb128 0x1
 4098 023a 12       	 .uleb128 0x12
 4099 023b 06       	 .uleb128 0x6
 4100 023c 58       	 .uleb128 0x58
 4101 023d 0B       	 .uleb128 0xb
 4102 023e 59       	 .uleb128 0x59
 4103 023f 05       	 .uleb128 0x5
 4104 0240 57       	 .uleb128 0x57
 4105 0241 0B       	 .uleb128 0xb
 4106 0242 01       	 .uleb128 0x1
 4107 0243 13       	 .uleb128 0x13
 4108 0244 00       	 .byte 0
 4109 0245 00       	 .byte 0
 4110 0246 26       	 .uleb128 0x26
 4111 0247 05       	 .uleb128 0x5
 4112 0248 00       	 .byte 0
 4113 0249 31       	 .uleb128 0x31
 4114 024a 13       	 .uleb128 0x13
 4115 024b 02       	 .uleb128 0x2
 4116 024c 18       	 .uleb128 0x18
 4117 024d 00       	 .byte 0
 4118 024e 00       	 .byte 0
 4119 024f 27       	 .uleb128 0x27
 4120 0250 0B       	 .uleb128 0xb
 4121 0251 01       	 .byte 0x1
 4122 0252 11       	 .uleb128 0x11
 4123 0253 01       	 .uleb128 0x1
 4124 0254 12       	 .uleb128 0x12
ARM GAS   			page 90


 4125 0255 06       	 .uleb128 0x6
 4126 0256 01       	 .uleb128 0x1
 4127 0257 13       	 .uleb128 0x13
 4128 0258 00       	 .byte 0
 4129 0259 00       	 .byte 0
 4130 025a 28       	 .uleb128 0x28
 4131 025b 2E       	 .uleb128 0x2e
 4132 025c 01       	 .byte 0x1
 4133 025d 3F       	 .uleb128 0x3f
 4134 025e 19       	 .uleb128 0x19
 4135 025f 03       	 .uleb128 0x3
 4136 0260 0E       	 .uleb128 0xe
 4137 0261 3A       	 .uleb128 0x3a
 4138 0262 0B       	 .uleb128 0xb
 4139 0263 3B       	 .uleb128 0x3b
 4140 0264 0B       	 .uleb128 0xb
 4141 0265 39       	 .uleb128 0x39
 4142 0266 0B       	 .uleb128 0xb
 4143 0267 49       	 .uleb128 0x49
 4144 0268 13       	 .uleb128 0x13
 4145 0269 11       	 .uleb128 0x11
 4146 026a 01       	 .uleb128 0x1
 4147 026b 12       	 .uleb128 0x12
 4148 026c 06       	 .uleb128 0x6
 4149 026d 40       	 .uleb128 0x40
 4150 026e 18       	 .uleb128 0x18
 4151 026f 9642     	 .uleb128 0x2116
 4152 0271 19       	 .uleb128 0x19
 4153 0272 01       	 .uleb128 0x1
 4154 0273 13       	 .uleb128 0x13
 4155 0274 00       	 .byte 0
 4156 0275 00       	 .byte 0
 4157 0276 29       	 .uleb128 0x29
 4158 0277 05       	 .uleb128 0x5
 4159 0278 00       	 .byte 0
 4160 0279 03       	 .uleb128 0x3
 4161 027a 0E       	 .uleb128 0xe
 4162 027b 3A       	 .uleb128 0x3a
 4163 027c 0B       	 .uleb128 0xb
 4164 027d 3B       	 .uleb128 0x3b
 4165 027e 0B       	 .uleb128 0xb
 4166 027f 39       	 .uleb128 0x39
 4167 0280 0B       	 .uleb128 0xb
 4168 0281 49       	 .uleb128 0x49
 4169 0282 13       	 .uleb128 0x13
 4170 0283 02       	 .uleb128 0x2
 4171 0284 18       	 .uleb128 0x18
 4172 0285 00       	 .byte 0
 4173 0286 00       	 .byte 0
 4174 0287 2A       	 .uleb128 0x2a
 4175 0288 34       	 .uleb128 0x34
 4176 0289 00       	 .byte 0
 4177 028a 03       	 .uleb128 0x3
 4178 028b 0E       	 .uleb128 0xe
 4179 028c 3A       	 .uleb128 0x3a
 4180 028d 0B       	 .uleb128 0xb
 4181 028e 3B       	 .uleb128 0x3b
ARM GAS   			page 91


 4182 028f 0B       	 .uleb128 0xb
 4183 0290 39       	 .uleb128 0x39
 4184 0291 0B       	 .uleb128 0xb
 4185 0292 49       	 .uleb128 0x49
 4186 0293 13       	 .uleb128 0x13
 4187 0294 02       	 .uleb128 0x2
 4188 0295 18       	 .uleb128 0x18
 4189 0296 00       	 .byte 0
 4190 0297 00       	 .byte 0
 4191 0298 2B       	 .uleb128 0x2b
 4192 0299 1D       	 .uleb128 0x1d
 4193 029a 01       	 .byte 0x1
 4194 029b 31       	 .uleb128 0x31
 4195 029c 13       	 .uleb128 0x13
 4196 029d 11       	 .uleb128 0x11
 4197 029e 01       	 .uleb128 0x1
 4198 029f 12       	 .uleb128 0x12
 4199 02a0 06       	 .uleb128 0x6
 4200 02a1 58       	 .uleb128 0x58
 4201 02a2 0B       	 .uleb128 0xb
 4202 02a3 59       	 .uleb128 0x59
 4203 02a4 0B       	 .uleb128 0xb
 4204 02a5 57       	 .uleb128 0x57
 4205 02a6 0B       	 .uleb128 0xb
 4206 02a7 01       	 .uleb128 0x1
 4207 02a8 13       	 .uleb128 0x13
 4208 02a9 00       	 .byte 0
 4209 02aa 00       	 .byte 0
 4210 02ab 2C       	 .uleb128 0x2c
 4211 02ac 1D       	 .uleb128 0x1d
 4212 02ad 01       	 .byte 0x1
 4213 02ae 31       	 .uleb128 0x31
 4214 02af 13       	 .uleb128 0x13
 4215 02b0 11       	 .uleb128 0x11
 4216 02b1 01       	 .uleb128 0x1
 4217 02b2 12       	 .uleb128 0x12
 4218 02b3 06       	 .uleb128 0x6
 4219 02b4 58       	 .uleb128 0x58
 4220 02b5 0B       	 .uleb128 0xb
 4221 02b6 59       	 .uleb128 0x59
 4222 02b7 0B       	 .uleb128 0xb
 4223 02b8 57       	 .uleb128 0x57
 4224 02b9 0B       	 .uleb128 0xb
 4225 02ba 00       	 .byte 0
 4226 02bb 00       	 .byte 0
 4227 02bc 2D       	 .uleb128 0x2d
 4228 02bd 2E       	 .uleb128 0x2e
 4229 02be 01       	 .byte 0x1
 4230 02bf 03       	 .uleb128 0x3
 4231 02c0 0E       	 .uleb128 0xe
 4232 02c1 3A       	 .uleb128 0x3a
 4233 02c2 0B       	 .uleb128 0xb
 4234 02c3 3B       	 .uleb128 0x3b
 4235 02c4 0B       	 .uleb128 0xb
 4236 02c5 39       	 .uleb128 0x39
 4237 02c6 0B       	 .uleb128 0xb
 4238 02c7 20       	 .uleb128 0x20
ARM GAS   			page 92


 4239 02c8 0B       	 .uleb128 0xb
 4240 02c9 01       	 .uleb128 0x1
 4241 02ca 13       	 .uleb128 0x13
 4242 02cb 00       	 .byte 0
 4243 02cc 00       	 .byte 0
 4244 02cd 2E       	 .uleb128 0x2e
 4245 02ce 05       	 .uleb128 0x5
 4246 02cf 00       	 .byte 0
 4247 02d0 03       	 .uleb128 0x3
 4248 02d1 0E       	 .uleb128 0xe
 4249 02d2 3A       	 .uleb128 0x3a
 4250 02d3 0B       	 .uleb128 0xb
 4251 02d4 3B       	 .uleb128 0x3b
 4252 02d5 0B       	 .uleb128 0xb
 4253 02d6 39       	 .uleb128 0x39
 4254 02d7 0B       	 .uleb128 0xb
 4255 02d8 49       	 .uleb128 0x49
 4256 02d9 13       	 .uleb128 0x13
 4257 02da 00       	 .byte 0
 4258 02db 00       	 .byte 0
 4259 02dc 2F       	 .uleb128 0x2f
 4260 02dd 2E       	 .uleb128 0x2e
 4261 02de 01       	 .byte 0x1
 4262 02df 03       	 .uleb128 0x3
 4263 02e0 0E       	 .uleb128 0xe
 4264 02e1 3A       	 .uleb128 0x3a
 4265 02e2 0B       	 .uleb128 0xb
 4266 02e3 3B       	 .uleb128 0x3b
 4267 02e4 0B       	 .uleb128 0xb
 4268 02e5 39       	 .uleb128 0x39
 4269 02e6 0B       	 .uleb128 0xb
 4270 02e7 49       	 .uleb128 0x49
 4271 02e8 13       	 .uleb128 0x13
 4272 02e9 20       	 .uleb128 0x20
 4273 02ea 0B       	 .uleb128 0xb
 4274 02eb 01       	 .uleb128 0x1
 4275 02ec 13       	 .uleb128 0x13
 4276 02ed 00       	 .byte 0
 4277 02ee 00       	 .byte 0
 4278 02ef 30       	 .uleb128 0x30
 4279 02f0 34       	 .uleb128 0x34
 4280 02f1 00       	 .byte 0
 4281 02f2 03       	 .uleb128 0x3
 4282 02f3 0E       	 .uleb128 0xe
 4283 02f4 3A       	 .uleb128 0x3a
 4284 02f5 0B       	 .uleb128 0xb
 4285 02f6 3B       	 .uleb128 0x3b
 4286 02f7 0B       	 .uleb128 0xb
 4287 02f8 39       	 .uleb128 0x39
 4288 02f9 0B       	 .uleb128 0xb
 4289 02fa 49       	 .uleb128 0x49
 4290 02fb 13       	 .uleb128 0x13
 4291 02fc 00       	 .byte 0
 4292 02fd 00       	 .byte 0
 4293 02fe 31       	 .uleb128 0x31
 4294 02ff 2E       	 .uleb128 0x2e
 4295 0300 01       	 .byte 0x1
ARM GAS   			page 93


 4296 0301 03       	 .uleb128 0x3
 4297 0302 0E       	 .uleb128 0xe
 4298 0303 3A       	 .uleb128 0x3a
 4299 0304 0B       	 .uleb128 0xb
 4300 0305 3B       	 .uleb128 0x3b
 4301 0306 0B       	 .uleb128 0xb
 4302 0307 39       	 .uleb128 0x39
 4303 0308 0B       	 .uleb128 0xb
 4304 0309 20       	 .uleb128 0x20
 4305 030a 0B       	 .uleb128 0xb
 4306 030b 00       	 .byte 0
 4307 030c 00       	 .byte 0
 4308 030d 00       	 .byte 0
 4309              	 .section .debug_aranges,"",%progbits
 4310 0000 6C000000 	 .4byte 0x6c
 4311 0004 0200     	 .2byte 0x2
 4312 0006 00000000 	 .4byte .Ldebug_info0
 4313 000a 04       	 .byte 0x4
 4314 000b 00       	 .byte 0
 4315 000c 0000     	 .2byte 0
 4316 000e 0000     	 .2byte 0
 4317 0010 00000000 	 .4byte .LFB11
 4318 0014 30000000 	 .4byte .LFE11-.LFB11
 4319 0018 00000000 	 .4byte .LFB12
 4320 001c 68010000 	 .4byte .LFE12-.LFB12
 4321 0020 00000000 	 .4byte .LFB13
 4322 0024 B0010000 	 .4byte .LFE13-.LFB13
 4323 0028 00000000 	 .4byte .LFB14
 4324 002c 70000000 	 .4byte .LFE14-.LFB14
 4325 0030 00000000 	 .4byte .LFB15
 4326 0034 48000000 	 .4byte .LFE15-.LFB15
 4327 0038 00000000 	 .4byte .LFB16
 4328 003c 16010000 	 .4byte .LFE16-.LFB16
 4329 0040 00000000 	 .4byte .LFB17
 4330 0044 62000000 	 .4byte .LFE17-.LFB17
 4331 0048 00000000 	 .4byte .LFB18
 4332 004c 1A000000 	 .4byte .LFE18-.LFB18
 4333 0050 00000000 	 .4byte .LFB19
 4334 0054 1A000000 	 .4byte .LFE19-.LFB19
 4335 0058 00000000 	 .4byte .LFB20
 4336 005c 44000000 	 .4byte .LFE20-.LFB20
 4337 0060 00000000 	 .4byte .LFB21
 4338 0064 2C000000 	 .4byte .LFE21-.LFB21
 4339 0068 00000000 	 .4byte 0
 4340 006c 00000000 	 .4byte 0
 4341              	 .section .debug_ranges,"",%progbits
 4342              	.Ldebug_ranges0:
 4343 0000 00000000 	 .4byte .LFB11
 4344 0004 30000000 	 .4byte .LFE11
 4345 0008 00000000 	 .4byte .LFB12
 4346 000c 68010000 	 .4byte .LFE12
 4347 0010 00000000 	 .4byte .LFB13
 4348 0014 B0010000 	 .4byte .LFE13
 4349 0018 00000000 	 .4byte .LFB14
 4350 001c 70000000 	 .4byte .LFE14
 4351 0020 00000000 	 .4byte .LFB15
 4352 0024 48000000 	 .4byte .LFE15
ARM GAS   			page 94


 4353 0028 00000000 	 .4byte .LFB16
 4354 002c 16010000 	 .4byte .LFE16
 4355 0030 00000000 	 .4byte .LFB17
 4356 0034 62000000 	 .4byte .LFE17
 4357 0038 00000000 	 .4byte .LFB18
 4358 003c 1A000000 	 .4byte .LFE18
 4359 0040 00000000 	 .4byte .LFB19
 4360 0044 1A000000 	 .4byte .LFE19
 4361 0048 00000000 	 .4byte .LFB20
 4362 004c 44000000 	 .4byte .LFE20
 4363 0050 00000000 	 .4byte .LFB21
 4364 0054 2C000000 	 .4byte .LFE21
 4365 0058 00000000 	 .4byte 0
 4366 005c 00000000 	 .4byte 0
 4367              	 .section .debug_line,"",%progbits
 4368              	.Ldebug_line0:
 4369 0000 60080000 	 .section .debug_str,"MS",%progbits,1
 4369      03003604 
 4369      00000201 
 4369      FB0E0D00 
 4369      01010101 
 4370              	.LASF35:
 4371 0000 67657465 	 .ascii "getenv\000"
 4371      6E7600
 4372              	.LASF78:
 4373 0007 78546173 	 .ascii "xTasksWaitingForBits\000"
 4373      6B735761 
 4373      6974696E 
 4373      67466F72 
 4373      42697473 
 4374              	.LASF70:
 4375 001c 75784E75 	 .ascii "uxNumberOfItems\000"
 4375      6D626572 
 4375      4F664974 
 4375      656D7300 
 4376              	.LASF124:
 4377 002c 72616E64 	 .ascii "rand\000"
 4377      00
 4378              	.LASF46:
 4379 0031 73797374 	 .ascii "system\000"
 4379      656D00
 4380              	.LASF6:
 4381 0038 5F5A5374 	 .ascii "_ZSt3divll\000"
 4381      33646976 
 4381      6C6C00
 4382              	.LASF79:
 4383 0043 75784576 	 .ascii "uxEventGroupNumber\000"
 4383      656E7447 
 4383      726F7570 
 4383      4E756D62 
 4383      657200
 4384              	.LASF37:
 4385 0056 6D626C65 	 .ascii "mblen\000"
 4385      6E00
 4386              	.LASF8:
 4387 005c 756E7369 	 .ascii "unsigned int\000"
 4387      676E6564 
ARM GAS   			page 95


 4387      20696E74 
 4387      00
 4388              	.LASF71:
 4389 0069 7078496E 	 .ascii "pxIndex\000"
 4389      64657800 
 4390              	.LASF122:
 4391 0071 5F5F676E 	 .ascii "__gnu_cxx\000"
 4391      755F6378 
 4391      7800
 4392              	.LASF89:
 4393 007b 756C4269 	 .ascii "ulBitsToClear\000"
 4393      7473546F 
 4393      436C6561 
 4393      7200
 4394              	.LASF66:
 4395 0089 784C4953 	 .ascii "xLIST_ITEM\000"
 4395      545F4954 
 4395      454D00
 4396              	.LASF39:
 4397 0094 77636861 	 .ascii "wchar_t\000"
 4397      725F7400 
 4398              	.LASF106:
 4399 009c 75785361 	 .ascii "uxSavedInterruptStatus\000"
 4399      76656449 
 4399      6E746572 
 4399      72757074 
 4399      53746174 
 4400              	.LASF7:
 4401 00b3 5F5A4E39 	 .ascii "_ZN9__gnu_cxx3divExx\000"
 4401      5F5F676E 
 4401      755F6378 
 4401      78336469 
 4401      76457878 
 4402              	.LASF52:
 4403 00c8 73747274 	 .ascii "strtoull\000"
 4403      6F756C6C 
 4403      00
 4404              	.LASF126:
 4405 00d1 76506F72 	 .ascii "vPortSetBASEPRI\000"
 4405      74536574 
 4405      42415345 
 4405      50524900 
 4406              	.LASF121:
 4407 00e1 433A5C55 	 .ascii "C:\\Users\\niels\\DOCUME~1\\ELEKTR~1\\JAAR2~1\\ECS\\"
 4407      73657273 
 4407      5C6E6965 
 4407      6C735C44 
 4407      4F43554D 
 4408 010e 4543534C 	 .ascii "ECSL\\software\\STM32\\PRACTI~1\\CLion\\Debug\\Free"
 4408      5C736F66 
 4408      74776172 
 4408      655C5354 
 4408      4D33325C 
 4409 013b 52544F53 	 .ascii "RTOS\000"
 4409      00
 4410              	.LASF99:
 4411 0140 70784C69 	 .ascii "pxListEnd\000"
ARM GAS   			page 96


 4411      7374456E 
 4411      6400
 4412              	.LASF107:
 4413 014a 75785265 	 .ascii "uxReturn\000"
 4413      7475726E 
 4413      00
 4414              	.LASF115:
 4415 0153 75784F72 	 .ascii "uxOriginalBitValue\000"
 4415      6967696E 
 4415      616C4269 
 4415      7456616C 
 4415      756500
 4416              	.LASF2:
 4417 0166 5F5A5374 	 .ascii "_ZSt3absd\000"
 4417      33616273 
 4417      6400
 4418              	.LASF0:
 4419 0170 5F5A5374 	 .ascii "_ZSt3abse\000"
 4419      33616273 
 4419      6500
 4420              	.LASF1:
 4421 017a 5F5A5374 	 .ascii "_ZSt3absf\000"
 4421      33616273 
 4421      6600
 4422              	.LASF4:
 4423 0184 5F5A5374 	 .ascii "_ZSt3absl\000"
 4423      33616273 
 4423      6C00
 4424              	.LASF55:
 4425 018e 73747274 	 .ascii "strtold\000"
 4425      6F6C6400 
 4426              	.LASF51:
 4427 0196 73747274 	 .ascii "strtoll\000"
 4427      6F6C6C00 
 4428              	.LASF56:
 4429 019e 75696E74 	 .ascii "uint32_t\000"
 4429      33325F74 
 4429      00
 4430              	.LASF3:
 4431 01a7 5F5A5374 	 .ascii "_ZSt3absx\000"
 4431      33616273 
 4431      7800
 4432              	.LASF40:
 4433 01b1 6D62746F 	 .ascii "mbtowc\000"
 4433      776300
 4434              	.LASF117:
 4435 01b8 756C4F72 	 .ascii "ulOriginalBASEPRI\000"
 4435      6967696E 
 4435      616C4241 
 4435      53455052 
 4435      4900
 4436              	.LASF54:
 4437 01ca 666C6F61 	 .ascii "float\000"
 4437      7400
 4438              	.LASF116:
 4439 01d0 78457665 	 .ascii "xEventGroupCreate\000"
 4439      6E744772 
ARM GAS   			page 97


 4439      6F757043 
 4439      72656174 
 4439      6500
 4440              	.LASF19:
 4441 01e2 6C6F6E67 	 .ascii "long long unsigned int\000"
 4441      206C6F6E 
 4441      6720756E 
 4441      7369676E 
 4441      65642069 
 4442              	.LASF103:
 4443 01f9 7578436F 	 .ascii "uxControlBits\000"
 4443      6E74726F 
 4443      6C426974 
 4443      7300
 4444              	.LASF62:
 4445 0207 70785072 	 .ascii "pxPrevious\000"
 4445      6576696F 
 4445      757300
 4446              	.LASF48:
 4447 0212 7763746F 	 .ascii "wctomb\000"
 4447      6D6200
 4448              	.LASF49:
 4449 0219 6C6C6469 	 .ascii "lldiv\000"
 4449      7600
 4450              	.LASF50:
 4451 021f 61746F6C 	 .ascii "atoll\000"
 4451      6C00
 4452              	.LASF102:
 4453 0225 75784269 	 .ascii "uxBitsWaitedFor\000"
 4453      74735761 
 4453      69746564 
 4453      466F7200 
 4454              	.LASF113:
 4455 0235 7854696D 	 .ascii "xTimeoutOccurred\000"
 4455      656F7574 
 4455      4F636375 
 4455      72726564 
 4455      00
 4456              	.LASF16:
 4457 0246 73697A65 	 .ascii "size_t\000"
 4457      5F7400
 4458              	.LASF43:
 4459 024d 73747274 	 .ascii "strtod\000"
 4459      6F6400
 4460              	.LASF42:
 4461 0254 7372616E 	 .ascii "srand\000"
 4461      6400
 4462              	.LASF83:
 4463 025a 78457665 	 .ascii "xEventGroup\000"
 4463      6E744772 
 4463      6F757000 
 4464              	.LASF86:
 4465 0266 78576169 	 .ascii "xWaitForAllBits\000"
 4465      74466F72 
 4465      416C6C42 
 4465      69747300 
 4466              	.LASF67:
ARM GAS   			page 98


 4467 0276 784D494E 	 .ascii "xMINI_LIST_ITEM\000"
 4467      495F4C49 
 4467      53545F49 
 4467      54454D00 
 4468              	.LASF105:
 4469 0286 78457665 	 .ascii "xEventGroupGetBitsFromISR\000"
 4469      6E744772 
 4469      6F757047 
 4469      65744269 
 4469      74734672 
 4470              	.LASF34:
 4471 02a0 62736561 	 .ascii "bsearch\000"
 4471      72636800 
 4472              	.LASF69:
 4473 02a8 784C4953 	 .ascii "xLIST\000"
 4473      5400
 4474              	.LASF101:
 4475 02ae 75784269 	 .ascii "uxBitsToClear\000"
 4475      7473546F 
 4475      436C6561 
 4475      7200
 4476              	.LASF96:
 4477 02bc 78457665 	 .ascii "xEventGroupSetBits\000"
 4477      6E744772 
 4477      6F757053 
 4477      65744269 
 4477      747300
 4478              	.LASF81:
 4479 02cf 78526574 	 .ascii "xReturn\000"
 4479      75726E00 
 4480              	.LASF82:
 4481 02d7 70784576 	 .ascii "pxEventBits\000"
 4481      656E7442 
 4481      69747300 
 4482              	.LASF88:
 4483 02e3 70764576 	 .ascii "pvEventGroup\000"
 4483      656E7447 
 4483      726F7570 
 4483      00
 4484              	.LASF20:
 4485 02f0 63686172 	 .ascii "char\000"
 4485      00
 4486              	.LASF65:
 4487 02f5 4C697374 	 .ascii "ListItem_t\000"
 4487      4974656D 
 4487      5F7400
 4488              	.LASF23:
 4489 0300 35646976 	 .ascii "5div_t\000"
 4489      5F7400
 4490              	.LASF118:
 4491 0307 756C4E65 	 .ascii "ulNewBASEPRI\000"
 4491      77424153 
 4491      45505249 
 4491      00
 4492              	.LASF58:
 4493 0314 55426173 	 .ascii "UBaseType_t\000"
 4493      65547970 
ARM GAS   			page 99


 4493      655F7400 
 4494              	.LASF72:
 4495 0320 784C6973 	 .ascii "xListEnd\000"
 4495      74456E64 
 4495      00
 4496              	.LASF68:
 4497 0329 4D696E69 	 .ascii "MiniListItem_t\000"
 4497      4C697374 
 4497      4974656D 
 4497      5F7400
 4498              	.LASF21:
 4499 0338 71756F74 	 .ascii "quot\000"
 4499      00
 4500              	.LASF98:
 4501 033d 70784C69 	 .ascii "pxListItem\000"
 4501      73744974 
 4501      656D00
 4502              	.LASF38:
 4503 0348 6D627374 	 .ascii "mbstowcs\000"
 4503      6F776373 
 4503      00
 4504              	.LASF128:
 4505 0351 756C506F 	 .ascii "ulPortRaiseBASEPRI\000"
 4505      72745261 
 4505      69736542 
 4505      41534550 
 4505      524900
 4506              	.LASF9:
 4507 0364 6C6F6E67 	 .ascii "long long int\000"
 4507      206C6F6E 
 4507      6720696E 
 4507      7400
 4508              	.LASF119:
 4509 0372 474E5520 	 .ascii "GNU C++14 10.3.1 20210824 (release) -mcpu=cortex-m4"
 4509      432B2B31 
 4509      34203130 
 4509      2E332E31 
 4509      20323032 
 4510 03a5 202D6D66 	 .ascii " -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mfix-cortex-m3"
 4510      6C6F6174 
 4510      2D616269 
 4510      3D686172 
 4510      64202D6D 
 4511 03d8 2D6C6472 	 .ascii "-ldrd -mthumb -mno-unaligned-access -mapcs-frame -m"
 4511      64202D6D 
 4511      7468756D 
 4511      62202D6D 
 4511      6E6F2D75 
 4512 040b 61726368 	 .ascii "arch=armv7e-m+fp -g -g -O0 -fsingle-precision-const"
 4512      3D61726D 
 4512      7637652D 
 4512      6D2B6670 
 4512      202D6720 
 4513 043e 616E7420 	 .ascii "ant -funsigned-char -ffunction-sections -fdata-sect"
 4513      2D66756E 
 4513      7369676E 
 4513      65642D63 
ARM GAS   			page 100


 4513      68617220 
 4514 0471 696F6E73 	 .ascii "ions\000"
 4514      00
 4515              	.LASF93:
 4516 0476 76457665 	 .ascii "vEventGroupDelete\000"
 4516      6E744772 
 4516      6F757044 
 4516      656C6574 
 4516      6500
 4517              	.LASF109:
 4518 0488 78457665 	 .ascii "xEventGroupWaitBits\000"
 4518      6E744772 
 4518      6F757057 
 4518      61697442 
 4518      69747300 
 4519              	.LASF91:
 4520 049c 76457665 	 .ascii "vEventGroupSetBitsCallback\000"
 4520      6E744772 
 4520      6F757053 
 4520      65744269 
 4520      74734361 
 4521              	.LASF57:
 4522 04b7 42617365 	 .ascii "BaseType_t\000"
 4522      54797065 
 4522      5F7400
 4523              	.LASF76:
 4524 04c2 78457665 	 .ascii "xEventGroupDefinition\000"
 4524      6E744772 
 4524      6F757044 
 4524      6566696E 
 4524      6974696F 
 4525              	.LASF90:
 4526 04d8 76457665 	 .ascii "vEventGroupClearBitsCallback\000"
 4526      6E744772 
 4526      6F757043 
 4526      6C656172 
 4526      42697473 
 4527              	.LASF5:
 4528 04f5 5F5F6378 	 .ascii "__cxx11\000"
 4528      78313100 
 4529              	.LASF61:
 4530 04fd 70784E65 	 .ascii "pxNext\000"
 4530      787400
 4531              	.LASF36:
 4532 0504 6C646976 	 .ascii "ldiv\000"
 4532      00
 4533              	.LASF28:
 4534 0509 5F5F636F 	 .ascii "__compar_fn_t\000"
 4534      6D706172 
 4534      5F666E5F 
 4534      7400
 4535              	.LASF77:
 4536 0517 75784576 	 .ascii "uxEventBits\000"
 4536      656E7442 
 4536      69747300 
 4537              	.LASF127:
 4538 0523 756C4E65 	 .ascii "ulNewMaskValue\000"
ARM GAS   			page 101


 4538      774D6173 
 4538      6B56616C 
 4538      756500
 4539              	.LASF87:
 4540 0532 78576169 	 .ascii "xWaitConditionMet\000"
 4540      74436F6E 
 4540      64697469 
 4540      6F6E4D65 
 4540      7400
 4541              	.LASF73:
 4542 0544 4C697374 	 .ascii "List_t\000"
 4542      5F7400
 4543              	.LASF59:
 4544 054b 5469636B 	 .ascii "TickType_t\000"
 4544      54797065 
 4544      5F7400
 4545              	.LASF114:
 4546 0556 78457665 	 .ascii "xEventGroupSync\000"
 4546      6E744772 
 4546      6F757053 
 4546      796E6300 
 4547              	.LASF125:
 4548 0566 70727654 	 .ascii "prvTestWaitCondition\000"
 4548      65737457 
 4548      61697443 
 4548      6F6E6469 
 4548      74696F6E 
 4549              	.LASF10:
 4550 057b 6C6F6E67 	 .ascii "long double\000"
 4550      20646F75 
 4550      626C6500 
 4551              	.LASF64:
 4552 0587 7076436F 	 .ascii "pvContainer\000"
 4552      6E746169 
 4552      6E657200 
 4553              	.LASF84:
 4554 0593 75784375 	 .ascii "uxCurrentEventBits\000"
 4554      7272656E 
 4554      74457665 
 4554      6E744269 
 4554      747300
 4555              	.LASF13:
 4556 05a6 73686F72 	 .ascii "short int\000"
 4556      7420696E 
 4556      7400
 4557              	.LASF60:
 4558 05b0 78497465 	 .ascii "xItemValue\000"
 4558      6D56616C 
 4558      756500
 4559              	.LASF15:
 4560 05bb 6C6F6E67 	 .ascii "long int\000"
 4560      20696E74 
 4560      00
 4561              	.LASF94:
 4562 05c4 70785461 	 .ascii "pxTasksWaitingForBits\000"
 4562      736B7357 
 4562      61697469 
ARM GAS   			page 102


 4562      6E67466F 
 4562      72426974 
 4563              	.LASF108:
 4564 05da 78457665 	 .ascii "xEventGroupClearBits\000"
 4564      6E744772 
 4564      6F757043 
 4564      6C656172 
 4564      42697473 
 4565              	.LASF29:
 4566 05ef 61746578 	 .ascii "atexit\000"
 4566      697400
 4567              	.LASF95:
 4568 05f6 75784576 	 .ascii "uxEventGroupGetNumber\000"
 4568      656E7447 
 4568      726F7570 
 4568      4765744E 
 4568      756D6265 
 4569              	.LASF120:
 4570 060c 433A5C55 	 .ascii "C:\\Users\\niels\\Documents\\Elektrotechniek\\Jaar "
 4570      73657273 
 4570      5C6E6965 
 4570      6C735C44 
 4570      6F63756D 
 4571 063a 325C4543 	 .ascii "2\\ECS\\ECSL\\software\\STM32\\STM32Basis\\HAL\\gem"
 4571      535C4543 
 4571      534C5C73 
 4571      6F667477 
 4571      6172655C 
 4572 0666 65656E73 	 .ascii "eenschappelijk\\Third_Party\\FreeRTOS\\Source\\even"
 4572      63686170 
 4572      70656C69 
 4572      6A6B5C54 
 4572      68697264 
 4573 0695 745F6772 	 .ascii "t_groups.c\000"
 4573      6F757073 
 4573      2E6300
 4574              	.LASF25:
 4575 06a0 6C646976 	 .ascii "ldiv_t\000"
 4575      5F7400
 4576              	.LASF111:
 4577 06a7 78546963 	 .ascii "xTicksToWait\000"
 4577      6B73546F 
 4577      57616974 
 4577      00
 4578              	.LASF75:
 4579 06b4 4576656E 	 .ascii "EventBits_t\000"
 4579      74426974 
 4579      735F7400 
 4580              	.LASF80:
 4581 06c0 4576656E 	 .ascii "EventGroup_t\000"
 4581      7447726F 
 4581      75705F74 
 4581      00
 4582              	.LASF85:
 4583 06cd 75784269 	 .ascii "uxBitsToWaitFor\000"
 4583      7473546F 
 4583      57616974 
ARM GAS   			page 103


 4583      466F7200 
 4584              	.LASF97:
 4585 06dd 75784269 	 .ascii "uxBitsToSet\000"
 4585      7473546F 
 4585      53657400 
 4586              	.LASF45:
 4587 06e9 73747274 	 .ascii "strtoul\000"
 4587      6F756C00 
 4588              	.LASF18:
 4589 06f1 6C6F6E67 	 .ascii "long unsigned int\000"
 4589      20756E73 
 4589      69676E65 
 4589      6420696E 
 4589      7400
 4590              	.LASF129:
 4591 0703 76506F72 	 .ascii "vPortRaiseBASEPRI\000"
 4591      74526169 
 4591      73654241 
 4591      53455052 
 4591      4900
 4592              	.LASF22:
 4593 0715 6469765F 	 .ascii "div_t\000"
 4593      7400
 4594              	.LASF12:
 4595 071b 756E7369 	 .ascii "unsigned char\000"
 4595      676E6564 
 4595      20636861 
 4595      7200
 4596              	.LASF104:
 4597 0729 784D6174 	 .ascii "xMatchFound\000"
 4597      6368466F 
 4597      756E6400 
 4598              	.LASF17:
 4599 0735 5F5F7569 	 .ascii "__uint32_t\000"
 4599      6E743332 
 4599      5F7400
 4600              	.LASF123:
 4601 0740 6465636C 	 .ascii "decltype(nullptr)\000"
 4601      74797065 
 4601      286E756C 
 4601      6C707472 
 4601      2900
 4602              	.LASF53:
 4603 0752 73747274 	 .ascii "strtof\000"
 4603      6F6600
 4604              	.LASF47:
 4605 0759 77637374 	 .ascii "wcstombs\000"
 4605      6F6D6273 
 4605      00
 4606              	.LASF44:
 4607 0762 73747274 	 .ascii "strtol\000"
 4607      6F6C00
 4608              	.LASF63:
 4609 0769 70764F77 	 .ascii "pvOwner\000"
 4609      6E657200 
 4610              	.LASF112:
 4611 0771 78416C72 	 .ascii "xAlreadyYielded\000"
ARM GAS   			page 104


 4611      65616479 
 4611      5969656C 
 4611      64656400 
 4612              	.LASF24:
 4613 0781 366C6469 	 .ascii "6ldiv_t\000"
 4613      765F7400 
 4614              	.LASF26:
 4615 0789 376C6C64 	 .ascii "7lldiv_t\000"
 4615      69765F74 
 4615      00
 4616              	.LASF11:
 4617 0792 7369676E 	 .ascii "signed char\000"
 4617      65642063 
 4617      68617200 
 4618              	.LASF14:
 4619 079e 73686F72 	 .ascii "short unsigned int\000"
 4619      7420756E 
 4619      7369676E 
 4619      65642069 
 4619      6E7400
 4620              	.LASF27:
 4621 07b1 6C6C6469 	 .ascii "lldiv_t\000"
 4621      765F7400 
 4622              	.LASF30:
 4623 07b9 61746F66 	 .ascii "atof\000"
 4623      00
 4624              	.LASF32:
 4625 07be 61746F69 	 .ascii "atoi\000"
 4625      00
 4626              	.LASF33:
 4627 07c3 61746F6C 	 .ascii "atol\000"
 4627      00
 4628              	.LASF110:
 4629 07c8 78436C65 	 .ascii "xClearOnExit\000"
 4629      61724F6E 
 4629      45786974 
 4629      00
 4630              	.LASF31:
 4631 07d5 646F7562 	 .ascii "double\000"
 4631      6C6500
 4632              	.LASF92:
 4633 07dc 756C4269 	 .ascii "ulBitsToSet\000"
 4633      7473546F 
 4633      53657400 
 4634              	.LASF100:
 4635 07e8 70784C69 	 .ascii "pxList\000"
 4635      737400
 4636              	.LASF74:
 4637 07ef 4576656E 	 .ascii "EventGroupHandle_t\000"
 4637      7447726F 
 4637      75704861 
 4637      6E646C65 
 4637      5F7400
 4638              	.LASF41:
 4639 0802 71736F72 	 .ascii "qsort\000"
 4639      7400
 4640              	 .ident "GCC: (GNU Arm Embedded Toolchain 10.3-2021.10) 10.3.1 20210824 (release)"
ARM GAS   			page 105


